[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/202635244",
    "html_url": "https://github.com/electron/electron/pull/4909#issuecomment-202635244",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/4909",
    "id": 202635244,
    "user": {
      "login": "ungoldman",
      "id": 427322,
      "avatar_url": "https://avatars3.githubusercontent.com/u/427322?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ungoldman",
      "html_url": "https://github.com/ungoldman",
      "followers_url": "https://api.github.com/users/ungoldman/followers",
      "following_url": "https://api.github.com/users/ungoldman/following{/other_user}",
      "gists_url": "https://api.github.com/users/ungoldman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ungoldman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ungoldman/subscriptions",
      "organizations_url": "https://api.github.com/users/ungoldman/orgs",
      "repos_url": "https://api.github.com/users/ungoldman/repos",
      "events_url": "https://api.github.com/users/ungoldman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ungoldman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-29T00:10:03Z",
    "updated_at": "2016-03-29T00:10:03Z",
    "body": "Woo cool!\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/203031402",
    "html_url": "https://github.com/electron/electron/pull/4909#issuecomment-203031402",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/4909",
    "id": 203031402,
    "user": {
      "login": "zeke",
      "id": 2289,
      "avatar_url": "https://avatars2.githubusercontent.com/u/2289?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zeke",
      "html_url": "https://github.com/zeke",
      "followers_url": "https://api.github.com/users/zeke/followers",
      "following_url": "https://api.github.com/users/zeke/following{/other_user}",
      "gists_url": "https://api.github.com/users/zeke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zeke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zeke/subscriptions",
      "organizations_url": "https://api.github.com/users/zeke/orgs",
      "repos_url": "https://api.github.com/users/zeke/repos",
      "events_url": "https://api.github.com/users/zeke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zeke/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2016-03-29T18:09:00Z",
    "updated_at": "2016-03-29T18:09:00Z",
    "body": "This is ready for review!\n\n@jlord @kevinsawicki @zcbenz @simurai\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/203044617",
    "html_url": "https://github.com/electron/electron/pull/4909#issuecomment-203044617",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/4909",
    "id": 203044617,
    "user": {
      "login": "paulcbetts",
      "id": 1396,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1396?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulcbetts",
      "html_url": "https://github.com/paulcbetts",
      "followers_url": "https://api.github.com/users/paulcbetts/followers",
      "following_url": "https://api.github.com/users/paulcbetts/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulcbetts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulcbetts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulcbetts/subscriptions",
      "organizations_url": "https://api.github.com/users/paulcbetts/orgs",
      "repos_url": "https://api.github.com/users/paulcbetts/repos",
      "events_url": "https://api.github.com/users/paulcbetts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulcbetts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-29T18:45:31Z",
    "updated_at": "2016-03-29T18:45:31Z",
    "body": "@zeke You're doin' the Lord's work, :+1:\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/203211301",
    "html_url": "https://github.com/electron/electron/pull/4909#issuecomment-203211301",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/4909",
    "id": 203211301,
    "user": {
      "login": "kevinsawicki",
      "id": 671378,
      "avatar_url": "https://avatars0.githubusercontent.com/u/671378?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kevinsawicki",
      "html_url": "https://github.com/kevinsawicki",
      "followers_url": "https://api.github.com/users/kevinsawicki/followers",
      "following_url": "https://api.github.com/users/kevinsawicki/following{/other_user}",
      "gists_url": "https://api.github.com/users/kevinsawicki/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kevinsawicki/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kevinsawicki/subscriptions",
      "organizations_url": "https://api.github.com/users/kevinsawicki/orgs",
      "repos_url": "https://api.github.com/users/kevinsawicki/repos",
      "events_url": "https://api.github.com/users/kevinsawicki/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kevinsawicki/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2016-03-30T02:43:17Z",
    "updated_at": "2016-03-30T02:43:17Z",
    "body": "> The test suite contains a number of global variables, mostly from mocha\n\nIs it possible to configure the mocha globals as only available inside the `spec/` folder? So that using `it` in a spec doesn't throw a `standard` error, but doing so in `lib/` would.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/203212279",
    "html_url": "https://github.com/electron/electron/pull/4909#issuecomment-203212279",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/4909",
    "id": 203212279,
    "user": {
      "login": "paulcbetts",
      "id": 1396,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1396?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulcbetts",
      "html_url": "https://github.com/paulcbetts",
      "followers_url": "https://api.github.com/users/paulcbetts/followers",
      "following_url": "https://api.github.com/users/paulcbetts/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulcbetts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulcbetts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulcbetts/subscriptions",
      "organizations_url": "https://api.github.com/users/paulcbetts/orgs",
      "repos_url": "https://api.github.com/users/paulcbetts/repos",
      "events_url": "https://api.github.com/users/paulcbetts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulcbetts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-30T02:45:39Z",
    "updated_at": "2016-03-30T02:45:39Z",
    "body": "> Is it possible to configure the mocha globals as only available inside the spec/ folder? So that using it in a spec doesn't throw a standard error, but doing so in lib/ would.\n\nJust include a `.eslintrc` in that folder with `mocha: true` in the env\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/203212778",
    "html_url": "https://github.com/electron/electron/pull/4909#issuecomment-203212778",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/4909",
    "id": 203212778,
    "user": {
      "login": "kevinsawicki",
      "id": 671378,
      "avatar_url": "https://avatars0.githubusercontent.com/u/671378?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kevinsawicki",
      "html_url": "https://github.com/kevinsawicki",
      "followers_url": "https://api.github.com/users/kevinsawicki/followers",
      "following_url": "https://api.github.com/users/kevinsawicki/following{/other_user}",
      "gists_url": "https://api.github.com/users/kevinsawicki/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kevinsawicki/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kevinsawicki/subscriptions",
      "organizations_url": "https://api.github.com/users/kevinsawicki/orgs",
      "repos_url": "https://api.github.com/users/kevinsawicki/repos",
      "events_url": "https://api.github.com/users/kevinsawicki/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kevinsawicki/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2016-03-30T02:47:07Z",
    "updated_at": "2016-03-30T02:47:07Z",
    "body": "> To ignore a few lines of code, wrap them in these comments:\n\n@zeke do you think it is possible to avoid these completely in this PR? It would seem ideal to not have any pollution of standard/eslint comments like previously.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/203227437",
    "html_url": "https://github.com/electron/electron/pull/4909#issuecomment-203227437",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/4909",
    "id": 203227437,
    "user": {
      "login": "zeke",
      "id": 2289,
      "avatar_url": "https://avatars2.githubusercontent.com/u/2289?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zeke",
      "html_url": "https://github.com/zeke",
      "followers_url": "https://api.github.com/users/zeke/followers",
      "following_url": "https://api.github.com/users/zeke/following{/other_user}",
      "gists_url": "https://api.github.com/users/zeke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zeke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zeke/subscriptions",
      "organizations_url": "https://api.github.com/users/zeke/orgs",
      "repos_url": "https://api.github.com/users/zeke/repos",
      "events_url": "https://api.github.com/users/zeke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zeke/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2016-03-30T03:16:38Z",
    "updated_at": "2016-03-30T03:16:38Z",
    "body": "> Just include a `.eslintrc` in that folder with `mocha: true` in the env\n\n@paulcbetts are you sure that works with `standard`? I just created an rc file per the [eslint.org docs](http://eslint.org/docs/user-guide/configuring#configuration-file-formats), but it doesn't seem to be respected. Am I doing this right?\n\n```\n❯ cat spec/.eslintrc.js \nmodule.exports = {\n  env: {\n    mocha: true\n  }\n}\n\n~/electron/electron standard*\n❯ standard | head -5 \n\nspec/api-app-spec.js:9:1: 'describe' is not defined.\nspec/api-app-spec.js:10:3: 'it' is not defined.\nspec/api-app-spec.js:14:3: 'it' is not defined.\nspec/api-app-spec.js:28:1: 'describe' is not defined.\nspec/api-app-spec.js:29:3: 'describe' is not defined.\n```\n\n>  It would seem ideal to not have any pollution of standard/eslint comments\n\n@kevinsawicki I agree. There were just a handful of spots in the code where I couldn't easily figure out how to refactor it without breaking the test suite. Perhaps we can pair tomorrow and try to knock them out?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/203228133",
    "html_url": "https://github.com/electron/electron/pull/4909#issuecomment-203228133",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/4909",
    "id": 203228133,
    "user": {
      "login": "kevinsawicki",
      "id": 671378,
      "avatar_url": "https://avatars0.githubusercontent.com/u/671378?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kevinsawicki",
      "html_url": "https://github.com/kevinsawicki",
      "followers_url": "https://api.github.com/users/kevinsawicki/followers",
      "following_url": "https://api.github.com/users/kevinsawicki/following{/other_user}",
      "gists_url": "https://api.github.com/users/kevinsawicki/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kevinsawicki/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kevinsawicki/subscriptions",
      "organizations_url": "https://api.github.com/users/kevinsawicki/orgs",
      "repos_url": "https://api.github.com/users/kevinsawicki/repos",
      "events_url": "https://api.github.com/users/kevinsawicki/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kevinsawicki/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2016-03-30T03:23:02Z",
    "updated_at": "2016-03-30T03:23:02Z",
    "body": "> Perhaps we can pair tomorrow and try to knock them out?\n\nSounds great :+1: :heavy_multiplication_x: :100: \n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/203228332",
    "html_url": "https://github.com/electron/electron/pull/4909#issuecomment-203228332",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/4909",
    "id": 203228332,
    "user": {
      "login": "kevinsawicki",
      "id": 671378,
      "avatar_url": "https://avatars0.githubusercontent.com/u/671378?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kevinsawicki",
      "html_url": "https://github.com/kevinsawicki",
      "followers_url": "https://api.github.com/users/kevinsawicki/followers",
      "following_url": "https://api.github.com/users/kevinsawicki/following{/other_user}",
      "gists_url": "https://api.github.com/users/kevinsawicki/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kevinsawicki/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kevinsawicki/subscriptions",
      "organizations_url": "https://api.github.com/users/kevinsawicki/orgs",
      "repos_url": "https://api.github.com/users/kevinsawicki/repos",
      "events_url": "https://api.github.com/users/kevinsawicki/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kevinsawicki/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2016-03-30T03:24:22Z",
    "updated_at": "2016-03-30T03:24:22Z",
    "body": "> are you sure that works with standard? \n\nYeah, I wasn't clear if it did either.\n\nSince there is a `spec/package.json`, perhaps the globals config could go directly in there?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/203228533",
    "html_url": "https://github.com/electron/electron/pull/4909#issuecomment-203228533",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/4909",
    "id": 203228533,
    "user": {
      "login": "paulcbetts",
      "id": 1396,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1396?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulcbetts",
      "html_url": "https://github.com/paulcbetts",
      "followers_url": "https://api.github.com/users/paulcbetts/followers",
      "following_url": "https://api.github.com/users/paulcbetts/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulcbetts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulcbetts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulcbetts/subscriptions",
      "organizations_url": "https://api.github.com/users/paulcbetts/orgs",
      "repos_url": "https://api.github.com/users/paulcbetts/repos",
      "events_url": "https://api.github.com/users/paulcbetts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulcbetts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-30T03:26:08Z",
    "updated_at": "2016-03-30T03:27:56Z",
    "body": "> spec/.eslintrc.js\n\n_Edit:_ Hm, I have no idea if it works with standard, just copy-paste their eslintrc if it doesn't\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/203230185",
    "html_url": "https://github.com/electron/electron/pull/4909#issuecomment-203230185",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/4909",
    "id": 203230185,
    "user": {
      "login": "zeke",
      "id": 2289,
      "avatar_url": "https://avatars2.githubusercontent.com/u/2289?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zeke",
      "html_url": "https://github.com/zeke",
      "followers_url": "https://api.github.com/users/zeke/followers",
      "following_url": "https://api.github.com/users/zeke/following{/other_user}",
      "gists_url": "https://api.github.com/users/zeke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zeke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zeke/subscriptions",
      "organizations_url": "https://api.github.com/users/zeke/orgs",
      "repos_url": "https://api.github.com/users/zeke/repos",
      "events_url": "https://api.github.com/users/zeke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zeke/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2016-03-30T03:35:09Z",
    "updated_at": "2016-03-30T03:35:09Z",
    "body": "@paulcbetts:\n\n> It doesn't end with .js, just .eslintrc\n\nI actually tried that format first, then tried the [javascript format described in the eslint.org docs](http://eslint.org/docs/user-guide/configuring#configuration-file-formats):\n\n> JavaScript - use .eslintrc.js and export an object containing your configuration.\n\n@kevinsawicki:\n\n> Since there is a spec/package.json, perhaps the globals config could go directly in there?\n\nGood idea, but it didn't work. Perhaps @feross can give us some pointers?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/203283345",
    "html_url": "https://github.com/electron/electron/pull/4909#issuecomment-203283345",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/4909",
    "id": 203283345,
    "user": {
      "login": "feross",
      "id": 121766,
      "avatar_url": "https://avatars1.githubusercontent.com/u/121766?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/feross",
      "html_url": "https://github.com/feross",
      "followers_url": "https://api.github.com/users/feross/followers",
      "following_url": "https://api.github.com/users/feross/following{/other_user}",
      "gists_url": "https://api.github.com/users/feross/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/feross/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/feross/subscriptions",
      "organizations_url": "https://api.github.com/users/feross/orgs",
      "repos_url": "https://api.github.com/users/feross/repos",
      "events_url": "https://api.github.com/users/feross/events{/privacy}",
      "received_events_url": "https://api.github.com/users/feross/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-30T07:10:19Z",
    "updated_at": "2016-03-30T07:10:40Z",
    "body": "There's currently no way use `.eslintrc` files in subfolders to override the default rule set. This was an intentional design decision. I'm sorry that it's causing trouble for you in this situtation :cry:\n\nIf setting `mocha: true` at the top-level is not acceptable, here's an alternate solution:\n\nAdd your globals to `spec/package.json`, change the top-level `package.json` script to ignore `spec/` and run standard separately for the `spec/` folder, like this:\n\n``` json\n{\n  \"lint\": \"standard && standard spec && python ./script/cpplint.py\",\n}\n```\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/203616026",
    "html_url": "https://github.com/electron/electron/pull/4909#issuecomment-203616026",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/4909",
    "id": 203616026,
    "user": {
      "login": "zeke",
      "id": 2289,
      "avatar_url": "https://avatars2.githubusercontent.com/u/2289?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zeke",
      "html_url": "https://github.com/zeke",
      "followers_url": "https://api.github.com/users/zeke/followers",
      "following_url": "https://api.github.com/users/zeke/following{/other_user}",
      "gists_url": "https://api.github.com/users/zeke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zeke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zeke/subscriptions",
      "organizations_url": "https://api.github.com/users/zeke/orgs",
      "repos_url": "https://api.github.com/users/zeke/repos",
      "events_url": "https://api.github.com/users/zeke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zeke/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2016-03-30T20:23:14Z",
    "updated_at": "2016-03-30T20:23:14Z",
    "body": "I tested the `standard && standard spec` approach and it works. It's implemented in a separate branch. Here's the commit: https://github.com/atom/electron/commit/525f3cc12656902baf949bfe44588131faf2c7f4\n\nMy personal preference would be to keep all the config in the top-level package.json for the sake of discoverability/simplicity, and for the composability of running one command to lint all the javascript, instead of two. See https://github.com/atom/electron/blob/e342d65abb9d4df85fd508b55669b9eaf2c77681/package.json#L13-L24\n\nThe difference are subtle though. Either approach works for me.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/203673536",
    "html_url": "https://github.com/electron/electron/pull/4909#issuecomment-203673536",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/4909",
    "id": 203673536,
    "user": {
      "login": "zeke",
      "id": 2289,
      "avatar_url": "https://avatars2.githubusercontent.com/u/2289?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zeke",
      "html_url": "https://github.com/zeke",
      "followers_url": "https://api.github.com/users/zeke/followers",
      "following_url": "https://api.github.com/users/zeke/following{/other_user}",
      "gists_url": "https://api.github.com/users/zeke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zeke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zeke/subscriptions",
      "organizations_url": "https://api.github.com/users/zeke/orgs",
      "repos_url": "https://api.github.com/users/zeke/repos",
      "events_url": "https://api.github.com/users/zeke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zeke/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2016-03-30T22:56:27Z",
    "updated_at": "2016-03-30T22:56:27Z",
    "body": "@kevinsawicki and I paired on this for a bit today. Here's what we got done:\n- Removed [all but one](https://github.com/atom/electron/blob/f62a9c84e4e16d480a9f532f00cc99f364dc1e6b/spec/static/main.js#L51) eslint style exception. (`eval`)\n- Split out the standard configuration into `/package.json` and `/spec/package.json`\n- Removed all inline `/* globals ... */` comments in favor of [`standard.env` declarations in `/spec/package.json`](https://github.com/atom/electron/blob/f62a9c84e4e16d480a9f532f00cc99f364dc1e6b/spec/package.json#L22-L32)\n- Got the CI builds passing! (Except for Windows 64, which timed out; Kevin says it's flaky)\n\nKevin said he'll review the outstanding pull requests and merge any that seem like they need to land first. Barring any other feedback or concerns from the rest of the team, this is ready to :sheep:!\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/203699202",
    "html_url": "https://github.com/electron/electron/pull/4909#issuecomment-203699202",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/4909",
    "id": 203699202,
    "user": {
      "login": "kevinsawicki",
      "id": 671378,
      "avatar_url": "https://avatars0.githubusercontent.com/u/671378?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kevinsawicki",
      "html_url": "https://github.com/kevinsawicki",
      "followers_url": "https://api.github.com/users/kevinsawicki/followers",
      "following_url": "https://api.github.com/users/kevinsawicki/following{/other_user}",
      "gists_url": "https://api.github.com/users/kevinsawicki/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kevinsawicki/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kevinsawicki/subscriptions",
      "organizations_url": "https://api.github.com/users/kevinsawicki/orgs",
      "repos_url": "https://api.github.com/users/kevinsawicki/repos",
      "events_url": "https://api.github.com/users/kevinsawicki/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kevinsawicki/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2016-03-31T00:51:22Z",
    "updated_at": "2016-03-31T00:51:22Z",
    "body": "> Kevin said he'll review the outstanding pull requests and merge any that seem like they need to land first. \n\nI landed one and rebased this branch, no plans to merge any others before this lands.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/204209410",
    "html_url": "https://github.com/electron/electron/pull/4909#issuecomment-204209410",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/4909",
    "id": 204209410,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2016-04-01T02:13:49Z",
    "updated_at": "2016-04-01T02:13:49Z",
    "body": "Let's merge this so we can merge other PRs.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/204254256",
    "html_url": "https://github.com/electron/electron/pull/4909#issuecomment-204254256",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/4909",
    "id": 204254256,
    "user": {
      "login": "ichpuchtli",
      "id": 1134912,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1134912?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ichpuchtli",
      "html_url": "https://github.com/ichpuchtli",
      "followers_url": "https://api.github.com/users/ichpuchtli/followers",
      "following_url": "https://api.github.com/users/ichpuchtli/following{/other_user}",
      "gists_url": "https://api.github.com/users/ichpuchtli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ichpuchtli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ichpuchtli/subscriptions",
      "organizations_url": "https://api.github.com/users/ichpuchtli/orgs",
      "repos_url": "https://api.github.com/users/ichpuchtli/repos",
      "events_url": "https://api.github.com/users/ichpuchtli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ichpuchtli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-01T05:32:03Z",
    "updated_at": "2016-04-01T05:32:03Z",
    "body": "RIP git blame functionality\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/204254517",
    "html_url": "https://github.com/electron/electron/pull/4909#issuecomment-204254517",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/4909",
    "id": 204254517,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2016-04-01T05:34:34Z",
    "updated_at": "2016-04-01T05:34:34Z",
    "body": "We have lost him long time ago when converting coffee to js.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/204400778",
    "html_url": "https://github.com/electron/electron/pull/4909#issuecomment-204400778",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/4909",
    "id": 204400778,
    "user": {
      "login": "bbondy",
      "id": 831718,
      "avatar_url": "https://avatars1.githubusercontent.com/u/831718?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bbondy",
      "html_url": "https://github.com/bbondy",
      "followers_url": "https://api.github.com/users/bbondy/followers",
      "following_url": "https://api.github.com/users/bbondy/following{/other_user}",
      "gists_url": "https://api.github.com/users/bbondy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bbondy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bbondy/subscriptions",
      "organizations_url": "https://api.github.com/users/bbondy/orgs",
      "repos_url": "https://api.github.com/users/bbondy/repos",
      "events_url": "https://api.github.com/users/bbondy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bbondy/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-01T13:43:42Z",
    "updated_at": "2016-04-01T13:43:42Z",
    "body": "@ichpuchtli you can git blame more than one level deep. \n@zeke nice work!\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/206712805",
    "html_url": "https://github.com/electron/electron/pull/4909#issuecomment-206712805",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/4909",
    "id": 206712805,
    "user": {
      "login": "joeytwiddle",
      "id": 911799,
      "avatar_url": "https://avatars0.githubusercontent.com/u/911799?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/joeytwiddle",
      "html_url": "https://github.com/joeytwiddle",
      "followers_url": "https://api.github.com/users/joeytwiddle/followers",
      "following_url": "https://api.github.com/users/joeytwiddle/following{/other_user}",
      "gists_url": "https://api.github.com/users/joeytwiddle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/joeytwiddle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/joeytwiddle/subscriptions",
      "organizations_url": "https://api.github.com/users/joeytwiddle/orgs",
      "repos_url": "https://api.github.com/users/joeytwiddle/repos",
      "events_url": "https://api.github.com/users/joeytwiddle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/joeytwiddle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-07T06:25:50Z",
    "updated_at": "2016-04-07T06:25:50Z",
    "body": "I was curious what @bbondy meant regard multi-level git blame.\n\nSo far I found [`git log -L`](http://stackoverflow.com/a/32396682/99777), [`git gui`](http://stackoverflow.com/a/11027841/99777), the [recursive-blame](https://www.npmjs.com/package/recursive-blame) package, and [`git log -S`](http://stackoverflow.com/a/8436006/99777).\n"
  }
]