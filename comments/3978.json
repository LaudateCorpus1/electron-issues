[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/168585635",
    "html_url": "https://github.com/electron/electron/issues/3978#issuecomment-168585635",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/3978",
    "id": 168585635,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2016-01-04T05:21:17Z",
    "updated_at": "2016-01-04T05:21:17Z",
    "body": "If the crash reporter can not catch the crash, then I'm afraid you are on your own. You can probably try using a debugger to a get stack trace, or you can try to work around this by forking a script to do the heavy file operations.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/168595848",
    "html_url": "https://github.com/electron/electron/issues/3978#issuecomment-168595848",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/3978",
    "id": 168595848,
    "user": {
      "login": "jorangreef",
      "id": 413206,
      "avatar_url": "https://avatars3.githubusercontent.com/u/413206?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorangreef",
      "html_url": "https://github.com/jorangreef",
      "followers_url": "https://api.github.com/users/jorangreef/followers",
      "following_url": "https://api.github.com/users/jorangreef/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorangreef/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorangreef/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorangreef/subscriptions",
      "organizations_url": "https://api.github.com/users/jorangreef/orgs",
      "repos_url": "https://api.github.com/users/jorangreef/repos",
      "events_url": "https://api.github.com/users/jorangreef/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorangreef/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-04T06:39:48Z",
    "updated_at": "2016-01-04T06:40:03Z",
    "body": "It's definitely a bug in Electron. It started happening after the major Chrome upgrade. I also understand that the crash reporter has missed reports on Windows in the past.\n\nI will try and produce a reproducible test case for you. I can't fork a script to do the fs operations. Electron v0.30.4 handled it fine, and it's not actually that heavy, just long-running. It's not as if we are using any native 3rd party modules. There's no reason Electron should be crashing like this. It seems to have been unstable in many respects lately.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/168597346",
    "html_url": "https://github.com/electron/electron/issues/3978#issuecomment-168597346",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/3978",
    "id": 168597346,
    "user": {
      "login": "paulcbetts",
      "id": 1396,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1396?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulcbetts",
      "html_url": "https://github.com/paulcbetts",
      "followers_url": "https://api.github.com/users/paulcbetts/followers",
      "following_url": "https://api.github.com/users/paulcbetts/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulcbetts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulcbetts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulcbetts/subscriptions",
      "organizations_url": "https://api.github.com/users/paulcbetts/orgs",
      "repos_url": "https://api.github.com/users/paulcbetts/repos",
      "events_url": "https://api.github.com/users/paulcbetts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulcbetts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-04T06:54:06Z",
    "updated_at": "2016-01-04T06:54:06Z",
    "body": "I suspect that ASSERTs don't actually issue a crash report, they seem to call MSVCRT's `_exit` which usually just makes them disappear. Not a terribly useful implementation :-/ \n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/168598684",
    "html_url": "https://github.com/electron/electron/issues/3978#issuecomment-168598684",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/3978",
    "id": 168598684,
    "user": {
      "login": "jorangreef",
      "id": 413206,
      "avatar_url": "https://avatars3.githubusercontent.com/u/413206?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorangreef",
      "html_url": "https://github.com/jorangreef",
      "followers_url": "https://api.github.com/users/jorangreef/followers",
      "following_url": "https://api.github.com/users/jorangreef/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorangreef/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorangreef/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorangreef/subscriptions",
      "organizations_url": "https://api.github.com/users/jorangreef/orgs",
      "repos_url": "https://api.github.com/users/jorangreef/repos",
      "events_url": "https://api.github.com/users/jorangreef/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorangreef/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-04T07:02:23Z",
    "updated_at": "2016-01-04T07:02:23Z",
    "body": "Would a crash in a renderer be caught by the reporter on Windows, if the reporter is only started in the browser process? I understand that on Mac the reporter needs to be started in every browser and renderer process.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/169261460",
    "html_url": "https://github.com/electron/electron/issues/3978#issuecomment-169261460",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/3978",
    "id": 169261460,
    "user": {
      "login": "jorangreef",
      "id": 413206,
      "avatar_url": "https://avatars3.githubusercontent.com/u/413206?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorangreef",
      "html_url": "https://github.com/jorangreef",
      "followers_url": "https://api.github.com/users/jorangreef/followers",
      "following_url": "https://api.github.com/users/jorangreef/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorangreef/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorangreef/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorangreef/subscriptions",
      "organizations_url": "https://api.github.com/users/jorangreef/orgs",
      "repos_url": "https://api.github.com/users/jorangreef/repos",
      "events_url": "https://api.github.com/users/jorangreef/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorangreef/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-06T07:56:48Z",
    "updated_at": "2016-01-06T07:56:48Z",
    "body": "Could it be anything to do with Electron's setImmediate getting in the way of the event loop?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/169261684",
    "html_url": "https://github.com/electron/electron/issues/3978#issuecomment-169261684",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/3978",
    "id": 169261684,
    "user": {
      "login": "Ivshti",
      "id": 1247629,
      "avatar_url": "https://avatars0.githubusercontent.com/u/1247629?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Ivshti",
      "html_url": "https://github.com/Ivshti",
      "followers_url": "https://api.github.com/users/Ivshti/followers",
      "following_url": "https://api.github.com/users/Ivshti/following{/other_user}",
      "gists_url": "https://api.github.com/users/Ivshti/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Ivshti/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Ivshti/subscriptions",
      "organizations_url": "https://api.github.com/users/Ivshti/orgs",
      "repos_url": "https://api.github.com/users/Ivshti/repos",
      "events_url": "https://api.github.com/users/Ivshti/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Ivshti/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-06T07:58:51Z",
    "updated_at": "2016-01-06T07:59:02Z",
    "body": "@jorangreef what makes you think so?\n\nI've experienced this issue with the 32 bit version of electron, not sure if it's related to your issue. Have you tested with 32 bit?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/169264358",
    "html_url": "https://github.com/electron/electron/issues/3978#issuecomment-169264358",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/3978",
    "id": 169264358,
    "user": {
      "login": "jorangreef",
      "id": 413206,
      "avatar_url": "https://avatars3.githubusercontent.com/u/413206?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorangreef",
      "html_url": "https://github.com/jorangreef",
      "followers_url": "https://api.github.com/users/jorangreef/followers",
      "following_url": "https://api.github.com/users/jorangreef/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorangreef/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorangreef/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorangreef/subscriptions",
      "organizations_url": "https://api.github.com/users/jorangreef/orgs",
      "repos_url": "https://api.github.com/users/jorangreef/repos",
      "events_url": "https://api.github.com/users/jorangreef/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorangreef/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-06T08:18:38Z",
    "updated_at": "2016-01-06T08:18:38Z",
    "body": "@Ivshti The crash seems to happen while statting a large number of directories and files, in batches of 40 concurrent stat calls. This statting activity may be triggered from within a setImmediate call so I thought perhaps Electron's setImmediate call is getting the event loop on the wrong foot and affecting the concurrency of the libuv callbacks or something like that. I'm not clued up on how exactly setImmediate is different in Electron, but I understand there have been some crashes related to it.\n\nWith crash reporter not catching the crash it's just a hunch though, perhaps it's something else. It could also be something in Chrome that changed after the last major Chromium update, which is interacting badly with Electron or Node. The recent set of crash-fixes in Electron haven't helped as I hoped they would.\n\nIt's definitely a bug somewhere, I can roll back to v0.30.4 and there's no problem. If I go to the next major Electron release, it crashes every time like clockwork. Because of the long-running nature of the test (20 minutes) it's difficult to get a reproducible test case.\n\nI think the 32-bit Electron may also be involved in this issue (I will test it later today), so it's probably not just win-x64.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/169383347",
    "html_url": "https://github.com/electron/electron/issues/3978#issuecomment-169383347",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/3978",
    "id": 169383347,
    "user": {
      "login": "jorangreef",
      "id": 413206,
      "avatar_url": "https://avatars3.githubusercontent.com/u/413206?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorangreef",
      "html_url": "https://github.com/jorangreef",
      "followers_url": "https://api.github.com/users/jorangreef/followers",
      "following_url": "https://api.github.com/users/jorangreef/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorangreef/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorangreef/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorangreef/subscriptions",
      "organizations_url": "https://api.github.com/users/jorangreef/orgs",
      "repos_url": "https://api.github.com/users/jorangreef/repos",
      "events_url": "https://api.github.com/users/jorangreef/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorangreef/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-06T16:42:31Z",
    "updated_at": "2016-01-06T16:42:31Z",
    "body": "32-bit Electron also crashes, although not every time as in the case of x64, but roughly 50% of the time.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/169393581",
    "html_url": "https://github.com/electron/electron/issues/3978#issuecomment-169393581",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/3978",
    "id": 169393581,
    "user": {
      "login": "Ivshti",
      "id": 1247629,
      "avatar_url": "https://avatars0.githubusercontent.com/u/1247629?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Ivshti",
      "html_url": "https://github.com/Ivshti",
      "followers_url": "https://api.github.com/users/Ivshti/followers",
      "following_url": "https://api.github.com/users/Ivshti/following{/other_user}",
      "gists_url": "https://api.github.com/users/Ivshti/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Ivshti/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Ivshti/subscriptions",
      "organizations_url": "https://api.github.com/users/Ivshti/orgs",
      "repos_url": "https://api.github.com/users/Ivshti/repos",
      "events_url": "https://api.github.com/users/Ivshti/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Ivshti/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-06T17:17:06Z",
    "updated_at": "2016-01-06T17:19:43Z",
    "body": "Cool, that's actually very helpful.\n\nDid you try what happens with process.nextTick?\n\nAlso, as a workaround I can suggest to you to run your fs stats in the main process vs the renderer process and communicate results with ipc, if that works.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/169400392",
    "html_url": "https://github.com/electron/electron/issues/3978#issuecomment-169400392",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/3978",
    "id": 169400392,
    "user": {
      "login": "jorangreef",
      "id": 413206,
      "avatar_url": "https://avatars3.githubusercontent.com/u/413206?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorangreef",
      "html_url": "https://github.com/jorangreef",
      "followers_url": "https://api.github.com/users/jorangreef/followers",
      "following_url": "https://api.github.com/users/jorangreef/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorangreef/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorangreef/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorangreef/subscriptions",
      "organizations_url": "https://api.github.com/users/jorangreef/orgs",
      "repos_url": "https://api.github.com/users/jorangreef/repos",
      "events_url": "https://api.github.com/users/jorangreef/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorangreef/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-06T17:42:47Z",
    "updated_at": "2016-01-06T17:42:47Z",
    "body": "Thanks, I will try replacing setImmediate with process.nextTick and also setTimeout and will let you know.\n\nAll fs operations are already running in the main process. There is a renderer process but this is used as a simple tray.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/169408364",
    "html_url": "https://github.com/electron/electron/issues/3978#issuecomment-169408364",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/3978",
    "id": 169408364,
    "user": {
      "login": "jorangreef",
      "id": 413206,
      "avatar_url": "https://avatars3.githubusercontent.com/u/413206?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorangreef",
      "html_url": "https://github.com/jorangreef",
      "followers_url": "https://api.github.com/users/jorangreef/followers",
      "following_url": "https://api.github.com/users/jorangreef/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorangreef/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorangreef/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorangreef/subscriptions",
      "organizations_url": "https://api.github.com/users/jorangreef/orgs",
      "repos_url": "https://api.github.com/users/jorangreef/repos",
      "events_url": "https://api.github.com/users/jorangreef/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorangreef/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-06T18:15:11Z",
    "updated_at": "2016-01-06T18:26:27Z",
    "body": "I replaced all setImmediate calls with setTimeout(fn, 0) but it's still crashing on win-x64 and win-ia32. The same test on Mac passes fine.\n\n@zcbenz I noticed in https://github.com/atom/electron/blob/3a5160f79968998ef214eb1d81c00993b0737637/atom/common/lib/init.coffee that `clearTimeout` is not wrapped with `wrapWithActivateUvLoop` whereas `setTimeout` is. And where `setImmediate` is wrapped, `clearImmediate` is also wrapped, so it looks like `clearTimeout` should also be wrapped? The test covers code which calls `setTimeout` and `clearTimeout` quite often so perhaps it could be this? v0.30.4 has similar code but perhaps timers.js has changed since then?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/169410302",
    "html_url": "https://github.com/electron/electron/issues/3978#issuecomment-169410302",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/3978",
    "id": 169410302,
    "user": {
      "login": "Ivshti",
      "id": 1247629,
      "avatar_url": "https://avatars0.githubusercontent.com/u/1247629?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Ivshti",
      "html_url": "https://github.com/Ivshti",
      "followers_url": "https://api.github.com/users/Ivshti/followers",
      "following_url": "https://api.github.com/users/Ivshti/following{/other_user}",
      "gists_url": "https://api.github.com/users/Ivshti/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Ivshti/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Ivshti/subscriptions",
      "organizations_url": "https://api.github.com/users/Ivshti/orgs",
      "repos_url": "https://api.github.com/users/Ivshti/repos",
      "events_url": "https://api.github.com/users/Ivshti/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Ivshti/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-06T18:23:31Z",
    "updated_at": "2016-01-06T18:26:30Z",
    "body": "You should directly tag @zcbenz (look up ^) with this question.\n\nSo you're running code in the main process and it's still causing crashes? This is scary.\n\n> I replaced all setImmediate calls with setTimeout(fn, 0) but it's still crashing on win-x64 and win-ia32. The same test on Mac passes fine.\n\nI presume `process.nextTick` crashes too?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/169411904",
    "html_url": "https://github.com/electron/electron/issues/3978#issuecomment-169411904",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/3978",
    "id": 169411904,
    "user": {
      "login": "jorangreef",
      "id": 413206,
      "avatar_url": "https://avatars3.githubusercontent.com/u/413206?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorangreef",
      "html_url": "https://github.com/jorangreef",
      "followers_url": "https://api.github.com/users/jorangreef/followers",
      "following_url": "https://api.github.com/users/jorangreef/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorangreef/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorangreef/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorangreef/subscriptions",
      "organizations_url": "https://api.github.com/users/jorangreef/orgs",
      "repos_url": "https://api.github.com/users/jorangreef/repos",
      "events_url": "https://api.github.com/users/jorangreef/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorangreef/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-06T18:29:46Z",
    "updated_at": "2016-01-06T18:29:46Z",
    "body": "> So you're running code in the main process and it's still causing crashes? This is scary.\n\nYes, I can go back to v0.30.4 and it works without crashing on Windows, so I don't think it's an application crash (not using any native modules besides Electron). I've been trying most Electron releases since the release which upgraded to Chromium 45 and they all crash so I have kept going back to v0.30.4.\n\nI will try `process.nextTick` tomorrow and let you know.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/172065063",
    "html_url": "https://github.com/electron/electron/issues/3978#issuecomment-172065063",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/3978",
    "id": 172065063,
    "user": {
      "login": "Ivshti",
      "id": 1247629,
      "avatar_url": "https://avatars0.githubusercontent.com/u/1247629?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Ivshti",
      "html_url": "https://github.com/Ivshti",
      "followers_url": "https://api.github.com/users/Ivshti/followers",
      "following_url": "https://api.github.com/users/Ivshti/following{/other_user}",
      "gists_url": "https://api.github.com/users/Ivshti/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Ivshti/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Ivshti/subscriptions",
      "organizations_url": "https://api.github.com/users/Ivshti/orgs",
      "repos_url": "https://api.github.com/users/Ivshti/repos",
      "events_url": "https://api.github.com/users/Ivshti/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Ivshti/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-15T19:45:41Z",
    "updated_at": "2016-01-15T19:45:41Z",
    "body": "@jorangreef did you test it? It seems that I may be fighting the same issue, as on our application it happens in event-heavy cases, but only on certain PCs. I've never seen it happen myself, even though I tested on 3 systems.\n\nit also happens in the main process and brings the whole app down\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/172171010",
    "html_url": "https://github.com/electron/electron/issues/3978#issuecomment-172171010",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/3978",
    "id": 172171010,
    "user": {
      "login": "jorangreef",
      "id": 413206,
      "avatar_url": "https://avatars3.githubusercontent.com/u/413206?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorangreef",
      "html_url": "https://github.com/jorangreef",
      "followers_url": "https://api.github.com/users/jorangreef/followers",
      "following_url": "https://api.github.com/users/jorangreef/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorangreef/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorangreef/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorangreef/subscriptions",
      "organizations_url": "https://api.github.com/users/jorangreef/orgs",
      "repos_url": "https://api.github.com/users/jorangreef/repos",
      "events_url": "https://api.github.com/users/jorangreef/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorangreef/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-16T08:07:23Z",
    "updated_at": "2016-01-16T08:08:48Z",
    "body": "@Ivshti I spent several hours testing further and haven't tried using process.nextTick instead of setTimeout yet.\n\n**I did notice that if I don't use fs.watch at all to trigger the stats immediately after fs activity then it doesn't crash. And if I use fs.watch but don't trigger a series of stats when fs.watch gives an event then it also doesn't crash.**\n\nSo I don't think the problem is with fs.watch, but rather when calling stat or readdir on files or folders which have recently been changed. I tried bisecting it further but couldn't get anything more than that.\n\n@zcbenz if crash reporter could catch clean exits due to asserts, then this should be much easier to figure out.\n\nI can consistently reproduce the issue every single time I run the fuzz test, it just takes about 20 minutes.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/172217291",
    "html_url": "https://github.com/electron/electron/issues/3978#issuecomment-172217291",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/3978",
    "id": 172217291,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2016-01-16T15:40:20Z",
    "updated_at": "2016-01-16T15:40:20Z",
    "body": "@jorangreef You can probably try setting the `ELECTRON_DEFAULT_ERROR_MODE` environment value to `1`, which will bring up the system crash dialog when program is crashed, and then you can use a debugger to catch the stack trace. The crash reporter needs to be disabled when using this env.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/172252040",
    "html_url": "https://github.com/electron/electron/issues/3978#issuecomment-172252040",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/3978",
    "id": 172252040,
    "user": {
      "login": "Ivshti",
      "id": 1247629,
      "avatar_url": "https://avatars0.githubusercontent.com/u/1247629?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Ivshti",
      "html_url": "https://github.com/Ivshti",
      "followers_url": "https://api.github.com/users/Ivshti/followers",
      "following_url": "https://api.github.com/users/Ivshti/following{/other_user}",
      "gists_url": "https://api.github.com/users/Ivshti/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Ivshti/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Ivshti/subscriptions",
      "organizations_url": "https://api.github.com/users/Ivshti/orgs",
      "repos_url": "https://api.github.com/users/Ivshti/repos",
      "events_url": "https://api.github.com/users/Ivshti/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Ivshti/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-16T20:10:43Z",
    "updated_at": "2016-01-16T20:10:43Z",
    "body": "@jorangreef I think it's a great lead suspecting setTimeout / setImmediate / nextTick. We rolled out an update of our application that makes a critical part use more process.nextTick, and immediately got complaints of crashes on Win 10. Also, I know that the crashes are in the main process (where process.nextTick is called) because BrowserWindow process crash would result an automatic restart of said BrowserWindow.\n\n Unfortunately, I have never been able to reproduce a crash.\n\nWhy exactly do you think `process.nextTick` / `setTimeout` may be causing the issue?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/172432030",
    "html_url": "https://github.com/electron/electron/issues/3978#issuecomment-172432030",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/3978",
    "id": 172432030,
    "user": {
      "login": "jorangreef",
      "id": 413206,
      "avatar_url": "https://avatars3.githubusercontent.com/u/413206?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorangreef",
      "html_url": "https://github.com/jorangreef",
      "followers_url": "https://api.github.com/users/jorangreef/followers",
      "following_url": "https://api.github.com/users/jorangreef/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorangreef/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorangreef/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorangreef/subscriptions",
      "organizations_url": "https://api.github.com/users/jorangreef/orgs",
      "repos_url": "https://api.github.com/users/jorangreef/repos",
      "events_url": "https://api.github.com/users/jorangreef/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorangreef/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-18T05:47:28Z",
    "updated_at": "2016-01-18T05:47:28Z",
    "body": "@zcbenz Thanks very much, for the debugger should I use Visual Studio or anything else on Windows or should I follow the instructions at https://github.com/atom/electron/blob/master/docs/tutorial/debugging-main-process.md? Also, would you mind checking if https://github.com/atom/electron/issues/3978#issuecomment-169408364 could be a problem?\n\n@Ivshti I suspected `nextTick` and friends only because of some previous issues with `setImmediate` in Electron.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/172449506",
    "html_url": "https://github.com/electron/electron/issues/3978#issuecomment-172449506",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/3978",
    "id": 172449506,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2016-01-18T07:26:12Z",
    "updated_at": "2016-01-18T07:26:12Z",
    "body": "@jorangreef I think you can see whether the crash dialog would show first, and if it shows, both WinDbg or Visual Studio can be used as debugger.\n\nAnd `clearTimeout` doesn't need to be wrapped in `wrapWithActivateUvLoop`, it is related to how the node integration is implemented.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/172485493",
    "html_url": "https://github.com/electron/electron/issues/3978#issuecomment-172485493",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/3978",
    "id": 172485493,
    "user": {
      "login": "jorangreef",
      "id": 413206,
      "avatar_url": "https://avatars3.githubusercontent.com/u/413206?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorangreef",
      "html_url": "https://github.com/jorangreef",
      "followers_url": "https://api.github.com/users/jorangreef/followers",
      "following_url": "https://api.github.com/users/jorangreef/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorangreef/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorangreef/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorangreef/subscriptions",
      "organizations_url": "https://api.github.com/users/jorangreef/orgs",
      "repos_url": "https://api.github.com/users/jorangreef/repos",
      "events_url": "https://api.github.com/users/jorangreef/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorangreef/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-18T10:07:12Z",
    "updated_at": "2016-01-18T10:07:12Z",
    "body": "Thanks @zcbenz.\n\nIn that case can I use just electron-v0.36.4.zip or must I use electron-v0.36.4-win32-x64-symbols.zip? The last time I tried to debug in Visual Studio it asked me to locate the symbols or something to that effect.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/172492289",
    "html_url": "https://github.com/electron/electron/issues/3978#issuecomment-172492289",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/3978",
    "id": 172492289,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2016-01-18T10:32:17Z",
    "updated_at": "2016-01-18T10:32:17Z",
    "body": "@jorangreef Visual Studio requires PDB symbols which we didn't provide, the `-symbols.zip` file can only be used to symbolize the crash reports generated by crash-reporter. But even without the symbols you should still be able to get a meaningful stack trace, or you can choose to compile Electron in Release mode, so you can get the symbols locally. \n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/173515438",
    "html_url": "https://github.com/electron/electron/issues/3978#issuecomment-173515438",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/3978",
    "id": 173515438,
    "user": {
      "login": "jorangreef",
      "id": 413206,
      "avatar_url": "https://avatars3.githubusercontent.com/u/413206?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorangreef",
      "html_url": "https://github.com/jorangreef",
      "followers_url": "https://api.github.com/users/jorangreef/followers",
      "following_url": "https://api.github.com/users/jorangreef/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorangreef/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorangreef/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorangreef/subscriptions",
      "organizations_url": "https://api.github.com/users/jorangreef/orgs",
      "repos_url": "https://api.github.com/users/jorangreef/repos",
      "events_url": "https://api.github.com/users/jorangreef/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorangreef/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-21T09:33:06Z",
    "updated_at": "2016-01-21T09:33:06Z",
    "body": "@zcbenz \n\nI set `ELECTRON_DEFAULT_ERROR_MODE=1`, verified it via `process.env` and disabled the crash reporter, but when Electron crashed, the crash dialog did not show. **I have verified that the crash is only happening on Windows 10 and not on Windows 7.**\n\nSince it's only happening on Windows 10 and not on Windows 7, could it have something to do with https://github.com/nodejs/node/issues/3718? This was fixed for Windows 10 in libuv v1.8.0 but the latest Electron release is still using libuv v1.7.5.\n\nOr could it be related to https://github.com/atom/electron/issues/1968 which is not yet fixed on Windows 10 according to https://github.com/atom/electron/issues/1968#issuecomment-165136343?\n\nAny other leads I can look into for you?\n\nOtherwise, do you have any tips on compiling Electron v0.30.4 from source using newer versions of Node and NPM so I can backport some changes to libuv, and stick with v0.30.4 until this is fixed? I tried but it seems the build process for v0.30.4 no longer works with newer versions of Node and NPM. Would it be better to uninstall these and use the io.js or node.js binary version that v0.30.4 expects?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/173549469",
    "html_url": "https://github.com/electron/electron/issues/3978#issuecomment-173549469",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/3978",
    "id": 173549469,
    "user": {
      "login": "Ivshti",
      "id": 1247629,
      "avatar_url": "https://avatars0.githubusercontent.com/u/1247629?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Ivshti",
      "html_url": "https://github.com/Ivshti",
      "followers_url": "https://api.github.com/users/Ivshti/followers",
      "following_url": "https://api.github.com/users/Ivshti/following{/other_user}",
      "gists_url": "https://api.github.com/users/Ivshti/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Ivshti/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Ivshti/subscriptions",
      "organizations_url": "https://api.github.com/users/Ivshti/orgs",
      "repos_url": "https://api.github.com/users/Ivshti/repos",
      "events_url": "https://api.github.com/users/Ivshti/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Ivshti/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-21T11:59:44Z",
    "updated_at": "2016-01-21T12:00:42Z",
    "body": "@jorangreef @zcbenz not sure if related, but I've noticed some issues with using I/O in the main process on Windows.\n\nMaybe if we restrict I/O in the main process, the issue will disappear?\n\nAlso question to @zcbenz : what makes the main process so different from the browser process, and what is the logic in node.js parts working better in the browser process than in the main process?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/173596367",
    "html_url": "https://github.com/electron/electron/issues/3978#issuecomment-173596367",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/3978",
    "id": 173596367,
    "user": {
      "login": "jorangreef",
      "id": 413206,
      "avatar_url": "https://avatars3.githubusercontent.com/u/413206?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorangreef",
      "html_url": "https://github.com/jorangreef",
      "followers_url": "https://api.github.com/users/jorangreef/followers",
      "following_url": "https://api.github.com/users/jorangreef/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorangreef/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorangreef/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorangreef/subscriptions",
      "organizations_url": "https://api.github.com/users/jorangreef/orgs",
      "repos_url": "https://api.github.com/users/jorangreef/repos",
      "events_url": "https://api.github.com/users/jorangreef/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorangreef/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-21T14:58:31Z",
    "updated_at": "2016-01-21T14:58:31Z",
    "body": "@Ivshti and @zcbenz \n\nI think the culprit is fs-event.c in libuv, when using a recursive fs.watch on Windows 10. I created a gist which reliably reproduces the issue using Node 5.5.0 on Windows 10 (not on Windows 7): https://gist.github.com/jorangreef/c9d9014abf53ae6d5ec4\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/173733123",
    "html_url": "https://github.com/electron/electron/issues/3978#issuecomment-173733123",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/3978",
    "id": 173733123,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2016-01-21T22:22:00Z",
    "updated_at": "2016-01-21T22:22:00Z",
    "body": "@jorangreef I didn't know it can be a bug of libuv, awesome job!\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/173821679",
    "html_url": "https://github.com/electron/electron/issues/3978#issuecomment-173821679",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/3978",
    "id": 173821679,
    "user": {
      "login": "jorangreef",
      "id": 413206,
      "avatar_url": "https://avatars3.githubusercontent.com/u/413206?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorangreef",
      "html_url": "https://github.com/jorangreef",
      "followers_url": "https://api.github.com/users/jorangreef/followers",
      "following_url": "https://api.github.com/users/jorangreef/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorangreef/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorangreef/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorangreef/subscriptions",
      "organizations_url": "https://api.github.com/users/jorangreef/orgs",
      "repos_url": "https://api.github.com/users/jorangreef/repos",
      "events_url": "https://api.github.com/users/jorangreef/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorangreef/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-22T06:11:20Z",
    "updated_at": "2016-01-22T06:11:20Z",
    "body": "Thanks for your help @zcbenz.\n\nThe recursive fs.watch for Windows came through in libuv v1.7.0, which came into Electron in v0.32.0.\n\nIf you have time would you be able take a quick look at https://github.com/libuv/libuv/blob/v1.x/src/win/fs-event.c to see how it handles changes to paths which are fairly long and which contain both Unicode characters in NFC form and also Unicode characters in NFD form? That's what the gist is using to reproduce the crash. I think something might have changed in Windows 10 with regards to WCHAR or something like that, because fs-event.c works fine on Windows 7.\n\nMy C is not that good, but if you could help spot the exact lines, I might be able to do the rest from there.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/174577188",
    "html_url": "https://github.com/electron/electron/issues/3978#issuecomment-174577188",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/3978",
    "id": 174577188,
    "user": {
      "login": "jorangreef",
      "id": 413206,
      "avatar_url": "https://avatars3.githubusercontent.com/u/413206?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorangreef",
      "html_url": "https://github.com/jorangreef",
      "followers_url": "https://api.github.com/users/jorangreef/followers",
      "following_url": "https://api.github.com/users/jorangreef/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorangreef/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorangreef/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorangreef/subscriptions",
      "organizations_url": "https://api.github.com/users/jorangreef/orgs",
      "repos_url": "https://api.github.com/users/jorangreef/repos",
      "events_url": "https://api.github.com/users/jorangreef/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorangreef/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-25T16:46:38Z",
    "updated_at": "2016-01-25T16:46:38Z",
    "body": "It's a buffer overflow in `fs-event.c` when converting an absolute path to a relative path. The buffer allocated for the relative path is limited to `MAX_PATH` (260 UTF-16 characters). In some circumstances however, the relative path can exceed that and overflow the buffer. It affects all versions of Windows, not just Windows 10.\n\nRead the libuv issue for more details: https://github.com/libuv/libuv/issues/693#issuecomment-174447197\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/200393824",
    "html_url": "https://github.com/electron/electron/issues/3978#issuecomment-200393824",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/3978",
    "id": 200393824,
    "user": {
      "login": "jorangreef",
      "id": 413206,
      "avatar_url": "https://avatars3.githubusercontent.com/u/413206?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorangreef",
      "html_url": "https://github.com/jorangreef",
      "followers_url": "https://api.github.com/users/jorangreef/followers",
      "following_url": "https://api.github.com/users/jorangreef/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorangreef/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorangreef/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorangreef/subscriptions",
      "organizations_url": "https://api.github.com/users/jorangreef/orgs",
      "repos_url": "https://api.github.com/users/jorangreef/repos",
      "events_url": "https://api.github.com/users/jorangreef/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorangreef/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-23T15:27:21Z",
    "updated_at": "2016-03-23T15:27:21Z",
    "body": "Fixed in https://github.com/libuv/libuv/commit/b44abe20ef359aff1d0054fbf69c240642bf0bf1\n"
  }
]