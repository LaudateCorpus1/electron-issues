[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/232832741",
    "html_url": "https://github.com/electron/electron/issues/6496#issuecomment-232832741",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/6496",
    "id": 232832741,
    "user": {
      "login": "MarshallOfSound",
      "id": 6634592,
      "avatar_url": "https://avatars0.githubusercontent.com/u/6634592?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarshallOfSound",
      "html_url": "https://github.com/MarshallOfSound",
      "followers_url": "https://api.github.com/users/MarshallOfSound/followers",
      "following_url": "https://api.github.com/users/MarshallOfSound/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarshallOfSound/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarshallOfSound/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarshallOfSound/subscriptions",
      "organizations_url": "https://api.github.com/users/MarshallOfSound/orgs",
      "repos_url": "https://api.github.com/users/MarshallOfSound/repos",
      "events_url": "https://api.github.com/users/MarshallOfSound/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarshallOfSound/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-15T00:49:02Z",
    "updated_at": "2016-07-15T00:49:02Z",
    "body": "By definition I don't feel an `uncaughtException` is a crash.  I get quite a few `uncaughtException` error reports on GitHub (I catch and ask the user to raise an issue) and they report the app runs perfectly fine ever after the `uncaughtException`.\n\nYou should be able to handle this yourself if you want the a report to end up in the same place with simple code like this.\n\n``` js\nimport electron, { app } from 'electron';\nimport request from 'request';\n\nconst packageJSON = require('./package.json');\nconst deps = packageJSON.dependencies;\n\nprocess.on('uncaughtException', (err) => {\n  request.post('http://localhost:1127/post', {\n    form: {\n      ver: deps['electron-prebuilt'],\n      platform: process.platform,\n      process_type: electron.remote ? 'renderer' : 'main',\n      _version: packageJSON.version,\n      _productName: packageJSON.productName,\n      prod: 'Electron',\n      _companyName: 'Your Company Name Here',\n      upload_file_minidump: err.stack,\n    }\n  });\n});\n```\n\nJust FYI that code is untested but it should do the job\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/232832955",
    "html_url": "https://github.com/electron/electron/issues/6496#issuecomment-232832955",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/6496",
    "id": 232832955,
    "user": {
      "login": "kevinsawicki",
      "id": 671378,
      "avatar_url": "https://avatars0.githubusercontent.com/u/671378?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kevinsawicki",
      "html_url": "https://github.com/kevinsawicki",
      "followers_url": "https://api.github.com/users/kevinsawicki/followers",
      "following_url": "https://api.github.com/users/kevinsawicki/following{/other_user}",
      "gists_url": "https://api.github.com/users/kevinsawicki/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kevinsawicki/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kevinsawicki/subscriptions",
      "organizations_url": "https://api.github.com/users/kevinsawicki/orgs",
      "repos_url": "https://api.github.com/users/kevinsawicki/repos",
      "events_url": "https://api.github.com/users/kevinsawicki/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kevinsawicki/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2016-07-15T00:50:49Z",
    "updated_at": "2016-07-15T00:50:49Z",
    "body": "Yup, @MarshallOfSound is right, the crash reporter API is for crashes, not uncaught exceptions.\n\nYou can use `process.on('uncaughtException', function () {})` or `window.onerror` to get uncaught JavaScript exceptions.\n\nClosing this out.\n"
  }
]