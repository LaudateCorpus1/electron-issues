[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/170902703",
    "html_url": "https://github.com/electron/electron/issues/4068#issuecomment-170902703",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/4068",
    "id": 170902703,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2016-01-12T12:52:30Z",
    "updated_at": "2016-01-12T12:52:30Z",
    "body": "Only devtools has context menu by default in Electron, for all other elements you have to implement the menus on your own. It would be nice to have default context menu for native input elements though.\n\nRefs #3210.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/170905407",
    "html_url": "https://github.com/electron/electron/issues/4068#issuecomment-170905407",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/4068",
    "id": 170905407,
    "user": {
      "login": "parro-it",
      "id": 11197111,
      "avatar_url": "https://avatars1.githubusercontent.com/u/11197111?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/parro-it",
      "html_url": "https://github.com/parro-it",
      "followers_url": "https://api.github.com/users/parro-it/followers",
      "following_url": "https://api.github.com/users/parro-it/following{/other_user}",
      "gists_url": "https://api.github.com/users/parro-it/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/parro-it/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/parro-it/subscriptions",
      "organizations_url": "https://api.github.com/users/parro-it/orgs",
      "repos_url": "https://api.github.com/users/parro-it/repos",
      "events_url": "https://api.github.com/users/parro-it/events{/privacy}",
      "received_events_url": "https://api.github.com/users/parro-it/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-12T13:03:18Z",
    "updated_at": "2016-01-12T13:03:18Z",
    "body": "It would be useful to have a userland module that implement this. @alexandrudima if you'll write one, you can find my [debug-menu](https://github.com/parro-it/debug-menu) module useful as an example. Otherwise, I could develop it...\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/170911307",
    "html_url": "https://github.com/electron/electron/issues/4068#issuecomment-170911307",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/4068",
    "id": 170911307,
    "user": {
      "login": "raleksandar",
      "id": 33291,
      "avatar_url": "https://avatars2.githubusercontent.com/u/33291?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/raleksandar",
      "html_url": "https://github.com/raleksandar",
      "followers_url": "https://api.github.com/users/raleksandar/followers",
      "following_url": "https://api.github.com/users/raleksandar/following{/other_user}",
      "gists_url": "https://api.github.com/users/raleksandar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/raleksandar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/raleksandar/subscriptions",
      "organizations_url": "https://api.github.com/users/raleksandar/orgs",
      "repos_url": "https://api.github.com/users/raleksandar/repos",
      "events_url": "https://api.github.com/users/raleksandar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/raleksandar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-12T13:27:20Z",
    "updated_at": "2016-09-28T17:13:17Z",
    "body": "Adding context menus to all inputs/textarea's is simple:\n\n``` js\n'use strict';\n\nconst electron = require('electron');\nconst remote = electron.remote;\nconst Menu = remote.Menu;\n\nconst InputMenu = Menu.buildFromTemplate([{\n        label: 'Undo',\n        role: 'undo',\n    }, {\n        label: 'Redo',\n        role: 'redo',\n    }, {\n        type: 'separator',\n    }, {\n        label: 'Cut',\n        role: 'cut',\n    }, {\n        label: 'Copy',\n        role: 'copy',\n    }, {\n        label: 'Paste',\n        role: 'paste',\n    }, {\n        type: 'separator',\n    }, {\n        label: 'Select all',\n        role: 'selectall',\n    },\n]);\n\ndocument.body.addEventListener('contextmenu', (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    let node = e.target;\n\n    while (node) {\n        if (node.nodeName.match(/^(input|textarea)$/i) || node.isContentEditable) {\n            InputMenu.popup(remote.getCurrentWindow());\n            break;\n        }\n        node = node.parentNode;\n    }\n});\n```\n\nJust put that in render process somewhere.\n\nAlthough I agree that it would be nice to have this by default.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/192252693",
    "html_url": "https://github.com/electron/electron/issues/4068#issuecomment-192252693",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/4068",
    "id": 192252693,
    "user": {
      "login": "adv0r",
      "id": 776957,
      "avatar_url": "https://avatars3.githubusercontent.com/u/776957?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adv0r",
      "html_url": "https://github.com/adv0r",
      "followers_url": "https://api.github.com/users/adv0r/followers",
      "following_url": "https://api.github.com/users/adv0r/following{/other_user}",
      "gists_url": "https://api.github.com/users/adv0r/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adv0r/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adv0r/subscriptions",
      "organizations_url": "https://api.github.com/users/adv0r/orgs",
      "repos_url": "https://api.github.com/users/adv0r/repos",
      "events_url": "https://api.github.com/users/adv0r/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adv0r/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-04T11:52:38Z",
    "updated_at": "2016-03-04T11:52:38Z",
    "body": "@raleksandar thanks for the snippet. FYI :  A closing parenthesis is missing in the condition for the nodeName\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/196803793",
    "html_url": "https://github.com/electron/electron/issues/4068#issuecomment-196803793",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/4068",
    "id": 196803793,
    "user": {
      "login": "NielsLeenheer",
      "id": 233230,
      "avatar_url": "https://avatars0.githubusercontent.com/u/233230?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/NielsLeenheer",
      "html_url": "https://github.com/NielsLeenheer",
      "followers_url": "https://api.github.com/users/NielsLeenheer/followers",
      "following_url": "https://api.github.com/users/NielsLeenheer/following{/other_user}",
      "gists_url": "https://api.github.com/users/NielsLeenheer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/NielsLeenheer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/NielsLeenheer/subscriptions",
      "organizations_url": "https://api.github.com/users/NielsLeenheer/orgs",
      "repos_url": "https://api.github.com/users/NielsLeenheer/repos",
      "events_url": "https://api.github.com/users/NielsLeenheer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/NielsLeenheer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-15T12:48:16Z",
    "updated_at": "2016-03-15T12:48:28Z",
    "body": "Showing a default context menu on native input elements is something that should be enabled by default. Manually scripting this behaviour is not always possible. For example, when loading external content such as an OAuth login from an external service.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/197546497",
    "html_url": "https://github.com/electron/electron/issues/4068#issuecomment-197546497",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/4068",
    "id": 197546497,
    "user": {
      "login": "vulture",
      "id": 216979,
      "avatar_url": "https://avatars3.githubusercontent.com/u/216979?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vulture",
      "html_url": "https://github.com/vulture",
      "followers_url": "https://api.github.com/users/vulture/followers",
      "following_url": "https://api.github.com/users/vulture/following{/other_user}",
      "gists_url": "https://api.github.com/users/vulture/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vulture/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vulture/subscriptions",
      "organizations_url": "https://api.github.com/users/vulture/orgs",
      "repos_url": "https://api.github.com/users/vulture/repos",
      "events_url": "https://api.github.com/users/vulture/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vulture/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-16T20:57:30Z",
    "updated_at": "2016-03-16T20:57:30Z",
    "body": "The suggested workaround is a nice stopgap, but it's useless as a fix. The native OS context menu has vitally important options especially for internationalized versions of Windows, like RTL ordering, IME options, etc. This really needs to get fixed.\n\nThis also appears to be a systemic problem (not showing native context menus) in other places in Electron. For example, the taskbar context menu (right click in vista-, shift+right click on w7+) does not work at all (nothing shows up).\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/198076638",
    "html_url": "https://github.com/electron/electron/issues/4068#issuecomment-198076638",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/4068",
    "id": 198076638,
    "user": {
      "login": "parro-it",
      "id": 11197111,
      "avatar_url": "https://avatars1.githubusercontent.com/u/11197111?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/parro-it",
      "html_url": "https://github.com/parro-it",
      "followers_url": "https://api.github.com/users/parro-it/followers",
      "following_url": "https://api.github.com/users/parro-it/following{/other_user}",
      "gists_url": "https://api.github.com/users/parro-it/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/parro-it/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/parro-it/subscriptions",
      "organizations_url": "https://api.github.com/users/parro-it/orgs",
      "repos_url": "https://api.github.com/users/parro-it/repos",
      "events_url": "https://api.github.com/users/parro-it/events{/privacy}",
      "received_events_url": "https://api.github.com/users/parro-it/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-17T20:48:29Z",
    "updated_at": "2016-03-17T20:48:29Z",
    "body": "I just published a module that provide input menu, originally based on @raleksandar example code. You give it a shot here: https://github.com/parro-it/electron-input-menu.\n\nIt work as a context menu middleware for [electron-contextmenu-middleware](https://github.com/parro-it/electron-contextmenu-middleware).\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/250170068",
    "html_url": "https://github.com/electron/electron/issues/4068#issuecomment-250170068",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/4068",
    "id": 250170068,
    "user": {
      "login": "odedhb",
      "id": 5231236,
      "avatar_url": "https://avatars3.githubusercontent.com/u/5231236?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/odedhb",
      "html_url": "https://github.com/odedhb",
      "followers_url": "https://api.github.com/users/odedhb/followers",
      "following_url": "https://api.github.com/users/odedhb/following{/other_user}",
      "gists_url": "https://api.github.com/users/odedhb/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/odedhb/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/odedhb/subscriptions",
      "organizations_url": "https://api.github.com/users/odedhb/orgs",
      "repos_url": "https://api.github.com/users/odedhb/repos",
      "events_url": "https://api.github.com/users/odedhb/events{/privacy}",
      "received_events_url": "https://api.github.com/users/odedhb/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-28T13:43:02Z",
    "updated_at": "2016-09-28T13:43:02Z",
    "body": "Use this nifty trick:\n\n```\nconst {remote} = require('electron');\nconst {Menu} = remote;\n\nwindow.addEventListener('contextmenu', (e) => {\n    e.preventDefault();\n    Menu.getApplicationMenu().popup(remote.getCurrentWindow());\n}, false);\n```\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/251896721",
    "html_url": "https://github.com/electron/electron/issues/4068#issuecomment-251896721",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/4068",
    "id": 251896721,
    "user": {
      "login": "dogrocker",
      "id": 8379027,
      "avatar_url": "https://avatars3.githubusercontent.com/u/8379027?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dogrocker",
      "html_url": "https://github.com/dogrocker",
      "followers_url": "https://api.github.com/users/dogrocker/followers",
      "following_url": "https://api.github.com/users/dogrocker/following{/other_user}",
      "gists_url": "https://api.github.com/users/dogrocker/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dogrocker/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dogrocker/subscriptions",
      "organizations_url": "https://api.github.com/users/dogrocker/orgs",
      "repos_url": "https://api.github.com/users/dogrocker/repos",
      "events_url": "https://api.github.com/users/dogrocker/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dogrocker/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-06T08:18:50Z",
    "updated_at": "2016-10-06T08:18:50Z",
    "body": "Adding context menu to textField based on @raleksandar reply.\n\nDifference is use this on main process.\n\n```\nmainWindow.webContents.on('context-menu', (e, props) => {\n    const InputMenu = Menu.buildFromTemplate([{\n        label: 'Undo',\n        role: 'undo',\n    }, {\n        label: 'Redo',\n        role: 'redo',\n    }, {\n        type: 'separator',\n    }, {\n        label: 'Cut',\n        role: 'cut',\n    }, {\n        label: 'Copy',\n        role: 'copy',\n    }, {\n        label: 'Paste',\n        role: 'paste',\n    }, {\n        type: 'separator',\n    }, {\n        label: 'Select all',\n        role: 'selectall',\n    },\n    ]);\n    const { inputFieldType } = props;\n    if (inputFieldType === 'plainText') {\n      InputMenu.popup(mainWindow);\n    }\n  });\n```\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/269823314",
    "html_url": "https://github.com/electron/electron/issues/4068#issuecomment-269823314",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/4068",
    "id": 269823314,
    "user": {
      "login": "mobitar",
      "id": 3277844,
      "avatar_url": "https://avatars1.githubusercontent.com/u/3277844?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mobitar",
      "html_url": "https://github.com/mobitar",
      "followers_url": "https://api.github.com/users/mobitar/followers",
      "following_url": "https://api.github.com/users/mobitar/following{/other_user}",
      "gists_url": "https://api.github.com/users/mobitar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mobitar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mobitar/subscriptions",
      "organizations_url": "https://api.github.com/users/mobitar/orgs",
      "repos_url": "https://api.github.com/users/mobitar/repos",
      "events_url": "https://api.github.com/users/mobitar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mobitar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-30T21:20:21Z",
    "updated_at": "2016-12-30T21:20:21Z",
    "body": "Building on @odedhb's answer, you can trigger just the Edit menu of the main window's menu using:\r\n\r\n```\r\n<script>\r\n\r\nconst {remote} = window.nodeRequire('electron')\r\nconst {Menu, MenuItem} = remote\r\n\r\nwindow.addEventListener('contextmenu', (e) => {\r\n    e.preventDefault();\r\n    var mainMenu = Menu.getApplicationMenu().items.filter(function(item){\r\n      return item.label == \"Edit\";\r\n    })[0].submenu;\r\n    mainMenu.popup(remote.getCurrentWindow());\r\n}, false);\r\n\r\n</script>\r\n```"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/273253797",
    "html_url": "https://github.com/electron/electron/issues/4068#issuecomment-273253797",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/4068",
    "id": 273253797,
    "user": {
      "login": "swampthang",
      "id": 428757,
      "avatar_url": "https://avatars0.githubusercontent.com/u/428757?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/swampthang",
      "html_url": "https://github.com/swampthang",
      "followers_url": "https://api.github.com/users/swampthang/followers",
      "following_url": "https://api.github.com/users/swampthang/following{/other_user}",
      "gists_url": "https://api.github.com/users/swampthang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/swampthang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/swampthang/subscriptions",
      "organizations_url": "https://api.github.com/users/swampthang/orgs",
      "repos_url": "https://api.github.com/users/swampthang/repos",
      "events_url": "https://api.github.com/users/swampthang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/swampthang/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-17T18:22:45Z",
    "updated_at": "2017-01-17T18:22:45Z",
    "body": "Hi, mobitar. Thanks for the tip. This works but after executing one of the resulting menu options, the contextmenu doesn't go away. I have to use the esc key to get rid of it. Any ideas?"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/274159726",
    "html_url": "https://github.com/electron/electron/issues/4068#issuecomment-274159726",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/4068",
    "id": 274159726,
    "user": {
      "login": "gabriel",
      "id": 2669,
      "avatar_url": "https://avatars1.githubusercontent.com/u/2669?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gabriel",
      "html_url": "https://github.com/gabriel",
      "followers_url": "https://api.github.com/users/gabriel/followers",
      "following_url": "https://api.github.com/users/gabriel/following{/other_user}",
      "gists_url": "https://api.github.com/users/gabriel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gabriel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gabriel/subscriptions",
      "organizations_url": "https://api.github.com/users/gabriel/orgs",
      "repos_url": "https://api.github.com/users/gabriel/repos",
      "events_url": "https://api.github.com/users/gabriel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gabriel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-20T19:34:27Z",
    "updated_at": "2017-01-20T19:35:03Z",
    "body": "FYI, I used the following to show an input menu if editable, otherwise a selection menu if there was selected text, but your behavior may vary. More details on the context-menu event are here: https://github.com/electron/electron/blob/master/docs/api/web-contents.md#event-context-menu\r\n\r\n```js\r\n  const selectionMenu = Menu.buildFromTemplate([\r\n    {role: 'copy'},\r\n    {type: 'separator'},\r\n    {role: 'selectall'},\r\n  ])\r\n\r\n  const inputMenu = Menu.buildFromTemplate([\r\n    {role: 'undo'},\r\n    {role: 'redo'},\r\n    {type: 'separator'},\r\n    {role: 'cut'},\r\n    {role: 'copy'},\r\n    {role: 'paste'},\r\n    {type: 'separator'},\r\n    {role: 'selectall'},\r\n  ])\r\n\r\n  window.webContents.on('context-menu', (e, props) => {\r\n    const { selectionText, isEditable } = props;\r\n    if (isEditable) {\r\n      inputMenu.popup(window);\r\n    } else if (selectionText && selectionText.trim() !== '') {\r\n      selectionMenu.popup(window);\r\n    }\r\n  })\r\n```"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/283342419",
    "html_url": "https://github.com/electron/electron/issues/4068#issuecomment-283342419",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/4068",
    "id": 283342419,
    "user": {
      "login": "Srivatsa-M-Hegde",
      "id": 21984275,
      "avatar_url": "https://avatars1.githubusercontent.com/u/21984275?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Srivatsa-M-Hegde",
      "html_url": "https://github.com/Srivatsa-M-Hegde",
      "followers_url": "https://api.github.com/users/Srivatsa-M-Hegde/followers",
      "following_url": "https://api.github.com/users/Srivatsa-M-Hegde/following{/other_user}",
      "gists_url": "https://api.github.com/users/Srivatsa-M-Hegde/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Srivatsa-M-Hegde/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Srivatsa-M-Hegde/subscriptions",
      "organizations_url": "https://api.github.com/users/Srivatsa-M-Hegde/orgs",
      "repos_url": "https://api.github.com/users/Srivatsa-M-Hegde/repos",
      "events_url": "https://api.github.com/users/Srivatsa-M-Hegde/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Srivatsa-M-Hegde/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-01T13:42:05Z",
    "updated_at": "2017-03-01T13:42:05Z",
    "body": "@raleksandar in the snippet taken from the code you have given above:-\r\ndocument.body.addEventListener('contextmenu', (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n\r\n    let node = e.target;\r\n\r\n    while (node) {\r\n        if (node.nodeName.match(/^(input|textarea)$/i) || node.isContentEditable) {\r\n            InputMenu.popup(remote.getCurrentWindow());\r\n            break;\r\n        }\r\n        node = node.parentNode;\r\n    }\r\n\r\nthe \"node.nodeName\", \"node.parentNode\" and \"node.isContentEditable\" all throw up errors saying these don't exist on the object \"node\". Anything I might be missing to get this error ?"
  }
]