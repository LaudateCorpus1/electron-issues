[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/305545365",
    "html_url": "https://github.com/electron/electron/pull/9648#issuecomment-305545365",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/9648",
    "id": 305545365,
    "user": {
      "login": "MarshallOfSound",
      "id": 6634592,
      "avatar_url": "https://avatars0.githubusercontent.com/u/6634592?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarshallOfSound",
      "html_url": "https://github.com/MarshallOfSound",
      "followers_url": "https://api.github.com/users/MarshallOfSound/followers",
      "following_url": "https://api.github.com/users/MarshallOfSound/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarshallOfSound/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarshallOfSound/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarshallOfSound/subscriptions",
      "organizations_url": "https://api.github.com/users/MarshallOfSound/orgs",
      "repos_url": "https://api.github.com/users/MarshallOfSound/repos",
      "events_url": "https://api.github.com/users/MarshallOfSound/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarshallOfSound/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-01T16:20:34Z",
    "updated_at": "2017-06-01T16:20:54Z",
    "body": "This looks pretty cool, will be interested to see how much you can mess with the `Info.plist` before macOS refuses to launch the app.\r\n\r\nQuick question though, will this validate any `.asar` file you load against the checksum in the `Info.plist`?  Or only the `app.asar` file, I want to be sure that any other asar file we might want to load won't be rejected for not matching the checksum of the main `app.asar` file."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/305547680",
    "html_url": "https://github.com/electron/electron/pull/9648#issuecomment-305547680",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/9648",
    "id": 305547680,
    "user": {
      "login": "develar",
      "id": 350686,
      "avatar_url": "https://avatars3.githubusercontent.com/u/350686?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/develar",
      "html_url": "https://github.com/develar",
      "followers_url": "https://api.github.com/users/develar/followers",
      "following_url": "https://api.github.com/users/develar/following{/other_user}",
      "gists_url": "https://api.github.com/users/develar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/develar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/develar/subscriptions",
      "organizations_url": "https://api.github.com/users/develar/orgs",
      "repos_url": "https://api.github.com/users/develar/repos",
      "events_url": "https://api.github.com/users/develar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/develar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-01T16:29:02Z",
    "updated_at": "2017-06-01T16:31:20Z",
    "body": "> see how much you can mess with the Info.plist before macOS refuses to launch the app.\r\n\r\nAs soon as Info.plist is modified, code signature is broken and app marked as damaged. It worked so yesterday, but doesn't work today... See \" Under some conditions app is marked as damaged\" Because it doesn't invalidates the whole idea of this PR, I will continue investigation (using other macs / user and so on) a little bit later.\r\n\r\n> will this validate any .asar file you load against the checksum in the Info.plist\r\n\r\nAny. Any required asar file is validated and search path is limited to ensure that check is not bypassed. If asar file is not listed in the checksums — error is thrown.\r\n\r\n```xml\r\n<key>AsarChecksums</key>\r\n<string>{\"electron.asar\": \"512hash\", \"app.asar\": \"512hash\"}</string>\r\n```"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/305549928",
    "html_url": "https://github.com/electron/electron/pull/9648#issuecomment-305549928",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/9648",
    "id": 305549928,
    "user": {
      "login": "MarshallOfSound",
      "id": 6634592,
      "avatar_url": "https://avatars0.githubusercontent.com/u/6634592?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarshallOfSound",
      "html_url": "https://github.com/MarshallOfSound",
      "followers_url": "https://api.github.com/users/MarshallOfSound/followers",
      "following_url": "https://api.github.com/users/MarshallOfSound/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarshallOfSound/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarshallOfSound/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarshallOfSound/subscriptions",
      "organizations_url": "https://api.github.com/users/MarshallOfSound/orgs",
      "repos_url": "https://api.github.com/users/MarshallOfSound/repos",
      "events_url": "https://api.github.com/users/MarshallOfSound/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarshallOfSound/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-01T16:37:40Z",
    "updated_at": "2017-06-01T16:37:40Z",
    "body": "@develar What if the app requires an ASAR file outside of it's own package.  For instance I'm working on something at the moment that implements plugin support in an app I'm working on.  The current implementation ships ASAR files for each plugin and the plugin manager internally does public/private key validation of the plugin ASAR files.\r\n\r\nWith this implementation AFAIK this would stop working because it would attempt to validate the plugin ASAR files against the `AsarChecksums` key and it wouldn't exist in that key even though `app.asar` would.\r\n\r\nCan we set this up so any ASAR file not in that `AsarChecksums` object isn't validated.  Removing an entry from the object would still cause the `Info.plist` to be invalidated so I think it's safe."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/305552057",
    "html_url": "https://github.com/electron/electron/pull/9648#issuecomment-305552057",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/9648",
    "id": 305552057,
    "user": {
      "login": "develar",
      "id": 350686,
      "avatar_url": "https://avatars3.githubusercontent.com/u/350686?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/develar",
      "html_url": "https://github.com/develar",
      "followers_url": "https://api.github.com/users/develar/followers",
      "following_url": "https://api.github.com/users/develar/following{/other_user}",
      "gists_url": "https://api.github.com/users/develar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/develar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/develar/subscriptions",
      "organizations_url": "https://api.github.com/users/develar/orgs",
      "repos_url": "https://api.github.com/users/develar/repos",
      "events_url": "https://api.github.com/users/develar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/develar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-01T16:45:19Z",
    "updated_at": "2017-06-01T16:45:19Z",
    "body": "> Can we set this up so any ASAR file not in that AsarChecksums object isn't validated. Removing an entry from the object would still cause the Info.plist to be invalidated so I think it's safe.\r\n\r\nI want to avoid any possible effects if some asar file is added. But we don't need to relax requirements, — such plugin ASAR files are located outside of application bundle, right? So, we can skip this validation for external asar files. "
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/305553464",
    "html_url": "https://github.com/electron/electron/pull/9648#issuecomment-305553464",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/9648",
    "id": 305553464,
    "user": {
      "login": "MarshallOfSound",
      "id": 6634592,
      "avatar_url": "https://avatars0.githubusercontent.com/u/6634592?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarshallOfSound",
      "html_url": "https://github.com/MarshallOfSound",
      "followers_url": "https://api.github.com/users/MarshallOfSound/followers",
      "following_url": "https://api.github.com/users/MarshallOfSound/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarshallOfSound/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarshallOfSound/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarshallOfSound/subscriptions",
      "organizations_url": "https://api.github.com/users/MarshallOfSound/orgs",
      "repos_url": "https://api.github.com/users/MarshallOfSound/repos",
      "events_url": "https://api.github.com/users/MarshallOfSound/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarshallOfSound/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-01T16:50:38Z",
    "updated_at": "2017-06-01T16:50:38Z",
    "body": "Having read through this, isn't bypassing this as simple as generating your own `electron.asar` file without the validation JS and swapping it in to the `resources` folder?  For this to be effective I think all the logic for validation needs to be on the native side of things. "
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/305554887",
    "html_url": "https://github.com/electron/electron/pull/9648#issuecomment-305554887",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/9648",
    "id": 305554887,
    "user": {
      "login": "develar",
      "id": 350686,
      "avatar_url": "https://avatars3.githubusercontent.com/u/350686?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/develar",
      "html_url": "https://github.com/develar",
      "followers_url": "https://api.github.com/users/develar/followers",
      "following_url": "https://api.github.com/users/develar/following{/other_user}",
      "gists_url": "https://api.github.com/users/develar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/develar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/develar/subscriptions",
      "organizations_url": "https://api.github.com/users/develar/orgs",
      "repos_url": "https://api.github.com/users/develar/repos",
      "events_url": "https://api.github.com/users/develar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/develar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-01T16:56:00Z",
    "updated_at": "2017-06-01T16:56:00Z",
    "body": "> all the logic for validation needs to be on the native side of things.\r\n\r\nNo doubt, that's why it is fixed in the Electron and not in the userland. It is on the native side. Not in the `electron.asar` Processed and embedded into the executable by `js2c`."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/305557620",
    "html_url": "https://github.com/electron/electron/pull/9648#issuecomment-305557620",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/9648",
    "id": 305557620,
    "user": {
      "login": "MarshallOfSound",
      "id": 6634592,
      "avatar_url": "https://avatars0.githubusercontent.com/u/6634592?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarshallOfSound",
      "html_url": "https://github.com/MarshallOfSound",
      "followers_url": "https://api.github.com/users/MarshallOfSound/followers",
      "following_url": "https://api.github.com/users/MarshallOfSound/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarshallOfSound/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarshallOfSound/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarshallOfSound/subscriptions",
      "organizations_url": "https://api.github.com/users/MarshallOfSound/orgs",
      "repos_url": "https://api.github.com/users/MarshallOfSound/repos",
      "events_url": "https://api.github.com/users/MarshallOfSound/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarshallOfSound/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-01T17:06:06Z",
    "updated_at": "2017-06-01T17:06:06Z",
    "body": "Dope, forgot we did that for the asar js files 😆 There goes all my questions then 😄 Will defer to others for opinions / review 👍 "
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/305993605",
    "html_url": "https://github.com/electron/electron/pull/9648#issuecomment-305993605",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/9648",
    "id": 305993605,
    "user": {
      "login": "develar",
      "id": 350686,
      "avatar_url": "https://avatars3.githubusercontent.com/u/350686?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/develar",
      "html_url": "https://github.com/develar",
      "followers_url": "https://api.github.com/users/develar/followers",
      "following_url": "https://api.github.com/users/develar/following{/other_user}",
      "gists_url": "https://api.github.com/users/develar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/develar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/develar/subscriptions",
      "organizations_url": "https://api.github.com/users/develar/orgs",
      "repos_url": "https://api.github.com/users/develar/repos",
      "events_url": "https://api.github.com/users/develar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/develar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-03T18:39:10Z",
    "updated_at": "2017-06-03T18:41:45Z",
    "body": "`externalAllowed` option is added. By default `false`. If `false`, external asar files (outside of resources directory) are forbidden.  if `true`, integrity for external files are not checked.\r\n\r\nThanks @MarshallOfSound for review and comment about external files.\r\n\r\n `asar-integrity` 0.1.0 published. electron-builder with this support not yet released."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/306087686",
    "html_url": "https://github.com/electron/electron/pull/9648#issuecomment-306087686",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/9648",
    "id": 306087686,
    "user": {
      "login": "rsaccon",
      "id": 16122,
      "avatar_url": "https://avatars2.githubusercontent.com/u/16122?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rsaccon",
      "html_url": "https://github.com/rsaccon",
      "followers_url": "https://api.github.com/users/rsaccon/followers",
      "following_url": "https://api.github.com/users/rsaccon/following{/other_user}",
      "gists_url": "https://api.github.com/users/rsaccon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rsaccon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rsaccon/subscriptions",
      "organizations_url": "https://api.github.com/users/rsaccon/orgs",
      "repos_url": "https://api.github.com/users/rsaccon/repos",
      "events_url": "https://api.github.com/users/rsaccon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rsaccon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-05T02:18:11Z",
    "updated_at": "2017-06-05T02:18:11Z",
    "body": "Great feature, thanks for implementing this. But what exactly happens on Electron at startup, if the asar integrity is corrupt ? I looked through the sources, but couldn't find the answer."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/306116637",
    "html_url": "https://github.com/electron/electron/pull/9648#issuecomment-306116637",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/9648",
    "id": 306116637,
    "user": {
      "login": "develar",
      "id": 350686,
      "avatar_url": "https://avatars3.githubusercontent.com/u/350686?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/develar",
      "html_url": "https://github.com/develar",
      "followers_url": "https://api.github.com/users/develar/followers",
      "following_url": "https://api.github.com/users/develar/following{/other_user}",
      "gists_url": "https://api.github.com/users/develar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/develar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/develar/subscriptions",
      "organizations_url": "https://api.github.com/users/develar/orgs",
      "repos_url": "https://api.github.com/users/develar/repos",
      "events_url": "https://api.github.com/users/develar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/develar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-05T06:51:34Z",
    "updated_at": "2017-06-05T06:51:34Z",
    "body": "Error printed to stderr, process exit. If only user asar file corrupted (not electron.asar), you will get also error dialog."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/307121097",
    "html_url": "https://github.com/electron/electron/pull/9648#issuecomment-307121097",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/9648",
    "id": 307121097,
    "user": {
      "login": "seanzer",
      "id": 489755,
      "avatar_url": "https://avatars0.githubusercontent.com/u/489755?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/seanzer",
      "html_url": "https://github.com/seanzer",
      "followers_url": "https://api.github.com/users/seanzer/followers",
      "following_url": "https://api.github.com/users/seanzer/following{/other_user}",
      "gists_url": "https://api.github.com/users/seanzer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/seanzer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/seanzer/subscriptions",
      "organizations_url": "https://api.github.com/users/seanzer/orgs",
      "repos_url": "https://api.github.com/users/seanzer/repos",
      "events_url": "https://api.github.com/users/seanzer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/seanzer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-08T14:29:53Z",
    "updated_at": "2017-06-08T14:29:53Z",
    "body": "Are there changes to support validation on Windows? I read through this discussion and looked at the PR, but I don't see any Windows support. Maybe I'm missing it?"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/307122361",
    "html_url": "https://github.com/electron/electron/pull/9648#issuecomment-307122361",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/9648",
    "id": 307122361,
    "user": {
      "login": "develar",
      "id": 350686,
      "avatar_url": "https://avatars3.githubusercontent.com/u/350686?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/develar",
      "html_url": "https://github.com/develar",
      "followers_url": "https://api.github.com/users/develar/followers",
      "following_url": "https://api.github.com/users/develar/following{/other_user}",
      "gists_url": "https://api.github.com/users/develar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/develar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/develar/subscriptions",
      "organizations_url": "https://api.github.com/users/develar/orgs",
      "repos_url": "https://api.github.com/users/develar/repos",
      "events_url": "https://api.github.com/users/develar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/develar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-08T14:33:59Z",
    "updated_at": "2017-06-08T14:33:59Z",
    "body": "@seanzer Please note \"Implemented for macOS only for now, I want to hear your feedback.\"\r\n\r\nI am going to add Windows support as soon as Electron maintainers will approve my idea."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/307126992",
    "html_url": "https://github.com/electron/electron/pull/9648#issuecomment-307126992",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/9648",
    "id": 307126992,
    "user": {
      "login": "seanzer",
      "id": 489755,
      "avatar_url": "https://avatars0.githubusercontent.com/u/489755?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/seanzer",
      "html_url": "https://github.com/seanzer",
      "followers_url": "https://api.github.com/users/seanzer/followers",
      "following_url": "https://api.github.com/users/seanzer/following{/other_user}",
      "gists_url": "https://api.github.com/users/seanzer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/seanzer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/seanzer/subscriptions",
      "organizations_url": "https://api.github.com/users/seanzer/orgs",
      "repos_url": "https://api.github.com/users/seanzer/repos",
      "events_url": "https://api.github.com/users/seanzer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/seanzer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-08T14:49:25Z",
    "updated_at": "2017-06-08T14:49:39Z",
    "body": "Oh, thanks for the clarification. I wonder how this change can be improved to support the *unpacked files* feature described here: https://electron.atom.io/docs/tutorial/application-packaging/#adding-unpacked-files-in-asar-archive\r\n\r\nAdding the ability to validate native node modules might not make sense with this PR, but I'm curious if anyone had given it any thought. In my opinion, I don't think this is a general \"node\" problem, since electron apps are typically prebuilt and distributed. "
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/307133468",
    "html_url": "https://github.com/electron/electron/pull/9648#issuecomment-307133468",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/9648",
    "id": 307133468,
    "user": {
      "login": "develar",
      "id": 350686,
      "avatar_url": "https://avatars3.githubusercontent.com/u/350686?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/develar",
      "html_url": "https://github.com/develar",
      "followers_url": "https://api.github.com/users/develar/followers",
      "following_url": "https://api.github.com/users/develar/following{/other_user}",
      "gists_url": "https://api.github.com/users/develar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/develar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/develar/subscriptions",
      "organizations_url": "https://api.github.com/users/develar/orgs",
      "repos_url": "https://api.github.com/users/develar/repos",
      "events_url": "https://api.github.com/users/develar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/develar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-08T15:10:09Z",
    "updated_at": "2017-06-08T15:11:35Z",
    "body": "> Adding the ability to validate native node modules might not make sense with this PR\r\n\r\nI am author of electron-builder. To provide the best results, asar is enabled by default. I did my best to reduce user's pain. electron-builder automatically detects files that should be unpacked and provide very handy [asarUnpack](https://github.com/electron-userland/electron-builder/wiki/Options#Config-asarUnpack) option if you need to tweak automatic resolution.\r\n\r\nSo, according to my experience, electron-builder smart unpack algo doesn't unpack native node modules. It is part of ASAR file. And, so, this PR protects native node modules also.\r\n\r\nIn the future electron-builder can also produce integrity data for all unpacked files as well.\r\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/307690838",
    "html_url": "https://github.com/electron/electron/pull/9648#issuecomment-307690838",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/9648",
    "id": 307690838,
    "user": {
      "login": "develar",
      "id": 350686,
      "avatar_url": "https://avatars3.githubusercontent.com/u/350686?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/develar",
      "html_url": "https://github.com/develar",
      "followers_url": "https://api.github.com/users/develar/followers",
      "following_url": "https://api.github.com/users/develar/following{/other_user}",
      "gists_url": "https://api.github.com/users/develar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/develar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/develar/subscriptions",
      "organizations_url": "https://api.github.com/users/develar/orgs",
      "repos_url": "https://api.github.com/users/develar/repos",
      "events_url": "https://api.github.com/users/develar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/develar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-12T05:06:59Z",
    "updated_at": "2017-06-12T05:06:59Z",
    "body": "@kevinsawicki could you please review?"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/307856720",
    "html_url": "https://github.com/electron/electron/pull/9648#issuecomment-307856720",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/9648",
    "id": 307856720,
    "user": {
      "login": "groundwater",
      "id": 538488,
      "avatar_url": "https://avatars3.githubusercontent.com/u/538488?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/groundwater",
      "html_url": "https://github.com/groundwater",
      "followers_url": "https://api.github.com/users/groundwater/followers",
      "following_url": "https://api.github.com/users/groundwater/following{/other_user}",
      "gists_url": "https://api.github.com/users/groundwater/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/groundwater/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/groundwater/subscriptions",
      "organizations_url": "https://api.github.com/users/groundwater/orgs",
      "repos_url": "https://api.github.com/users/groundwater/repos",
      "events_url": "https://api.github.com/users/groundwater/events{/privacy}",
      "received_events_url": "https://api.github.com/users/groundwater/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2017-06-12T17:19:47Z",
    "updated_at": "2017-06-12T17:19:47Z",
    "body": "There is an effort worth watching https://github.com/WICG/webpackage that may eventually bring signed-packages into node.\r\n\r\n* Node has documented their use-case here https://github.com/WICG/webpackage/issues/33\r\n* I threw down some example users stories here https://github.com/WICG/webpackage/issues/35\r\n\r\nNow might be a great time to give input into that project. If node can natively support a signed bundling format, that would make our lives easier, and could potentially serve as an ASAR replacement."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/307876063",
    "html_url": "https://github.com/electron/electron/pull/9648#issuecomment-307876063",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/9648",
    "id": 307876063,
    "user": {
      "login": "develar",
      "id": 350686,
      "avatar_url": "https://avatars3.githubusercontent.com/u/350686?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/develar",
      "html_url": "https://github.com/develar",
      "followers_url": "https://api.github.com/users/develar/followers",
      "following_url": "https://api.github.com/users/develar/following{/other_user}",
      "gists_url": "https://api.github.com/users/develar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/develar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/develar/subscriptions",
      "organizations_url": "https://api.github.com/users/develar/orgs",
      "repos_url": "https://api.github.com/users/develar/repos",
      "events_url": "https://api.github.com/users/develar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/develar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-12T18:24:18Z",
    "updated_at": "2017-06-12T18:24:18Z",
    "body": "@groundwater thanks for links. Adobe AIR is dead. For users self-contained app is better — no dependency on some extra app manager. Ok, it is another story.\r\n\r\nTechnically, generic implementation of code signing requires identity validation. It can increase app start time and will duplicate OS implementation (as result, can lead to some extra sources of bugs). It will also complicate build tools (now we just compute sha512 checksum)."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/308486431",
    "html_url": "https://github.com/electron/electron/pull/9648#issuecomment-308486431",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/9648",
    "id": 308486431,
    "user": {
      "login": "kevinsawicki",
      "id": 671378,
      "avatar_url": "https://avatars0.githubusercontent.com/u/671378?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kevinsawicki",
      "html_url": "https://github.com/kevinsawicki",
      "followers_url": "https://api.github.com/users/kevinsawicki/followers",
      "following_url": "https://api.github.com/users/kevinsawicki/following{/other_user}",
      "gists_url": "https://api.github.com/users/kevinsawicki/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kevinsawicki/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kevinsawicki/subscriptions",
      "organizations_url": "https://api.github.com/users/kevinsawicki/orgs",
      "repos_url": "https://api.github.com/users/kevinsawicki/repos",
      "events_url": "https://api.github.com/users/kevinsawicki/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kevinsawicki/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2017-06-14T16:31:17Z",
    "updated_at": "2017-06-14T16:31:17Z",
    "body": "> could you please review?\r\n\r\nAdded this to the project board to queue up review of this next week, thanks."
  }
]