[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/281989406",
    "html_url": "https://github.com/electron/electron/issues/8737#issuecomment-281989406",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/8737",
    "id": 281989406,
    "user": {
      "login": "deepak1556",
      "id": 964386,
      "avatar_url": "https://avatars2.githubusercontent.com/u/964386?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/deepak1556",
      "html_url": "https://github.com/deepak1556",
      "followers_url": "https://api.github.com/users/deepak1556/followers",
      "following_url": "https://api.github.com/users/deepak1556/following{/other_user}",
      "gists_url": "https://api.github.com/users/deepak1556/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/deepak1556/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/deepak1556/subscriptions",
      "organizations_url": "https://api.github.com/users/deepak1556/orgs",
      "repos_url": "https://api.github.com/users/deepak1556/repos",
      "events_url": "https://api.github.com/users/deepak1556/events{/privacy}",
      "received_events_url": "https://api.github.com/users/deepak1556/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-23T13:19:53Z",
    "updated_at": "2017-02-23T13:19:53Z",
    "body": "Can you provide a test case of what you are trying to achieve, Thanks!"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/282095347",
    "html_url": "https://github.com/electron/electron/issues/8737#issuecomment-282095347",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/8737",
    "id": 282095347,
    "user": {
      "login": "sltam",
      "id": 51615,
      "avatar_url": "https://avatars3.githubusercontent.com/u/51615?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sltam",
      "html_url": "https://github.com/sltam",
      "followers_url": "https://api.github.com/users/sltam/followers",
      "following_url": "https://api.github.com/users/sltam/following{/other_user}",
      "gists_url": "https://api.github.com/users/sltam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sltam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sltam/subscriptions",
      "organizations_url": "https://api.github.com/users/sltam/orgs",
      "repos_url": "https://api.github.com/users/sltam/repos",
      "events_url": "https://api.github.com/users/sltam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sltam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-23T19:30:29Z",
    "updated_at": "2017-02-23T19:30:29Z",
    "body": "I want to implement the TODO such that all the 4 user actions work like what a browser would.\r\n\r\n```\r\nRandom=<script>document.write(0^1000*Math.random())</script>\r\n<hr>\r\n<a href=\"http://www.example.com\">1. visitng a link</a>\r\n<button onclick=\"location.reload()\">2. reload (or ctrl-R/cmd-R)</button>\r\n<button onclick=\"history.back()\">3. back (or alt-leftarrow/cmd-leftarrow)</button>\r\n<button onclick=\"window.close()\">4. close (or alt-F4/cmd-W)</button>\r\n<script>\r\nif (!location.search) {\r\n    // make sure history has something to go back\r\n    location.search += '?next-page'\r\n} else {\r\n    window.onbeforeunload = (e) => {\r\n        if (/Electron/.test(navigator.userAgent)) {\r\n            const electron = require('electron')\r\n            const { dialog } = electron.remote\r\n            dialog.showMessageBox(electron.remote.getCurrentWindow(), {\r\n                message: 'Do you want to leave this page?',\r\n                buttons: ['Cancel', 'Proceed'],\r\n            }, (button) => {\r\n                if (button === 1) {\r\n                    // TODO\r\n                    dialog.showMessageBox(null, { message: \"Now I want to visit the link or reload or close depending on what the user triggered, but I don't know what it is.\" })\r\n                }\r\n            })\r\n            return true // preventDefault\r\n        } else {\r\n            // ask user for permission the cross-browser way\r\n            return e.returnValue = 'dialog text (deprecated)'\r\n        }\r\n    }\r\n}\r\n</script>\r\n```"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/286080082",
    "html_url": "https://github.com/electron/electron/issues/8737#issuecomment-286080082",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/8737",
    "id": 286080082,
    "user": {
      "login": "deepak1556",
      "id": 964386,
      "avatar_url": "https://avatars2.githubusercontent.com/u/964386?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/deepak1556",
      "html_url": "https://github.com/deepak1556",
      "followers_url": "https://api.github.com/users/deepak1556/followers",
      "following_url": "https://api.github.com/users/deepak1556/following{/other_user}",
      "gists_url": "https://api.github.com/users/deepak1556/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/deepak1556/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/deepak1556/subscriptions",
      "organizations_url": "https://api.github.com/users/deepak1556/orgs",
      "repos_url": "https://api.github.com/users/deepak1556/repos",
      "events_url": "https://api.github.com/users/deepak1556/events{/privacy}",
      "received_events_url": "https://api.github.com/users/deepak1556/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-13T11:19:26Z",
    "updated_at": "2017-03-13T11:19:26Z",
    "body": "Sorry for the delay and thanks for the test case!\r\n\r\nWe can do two things here, either patch blink https://cs.chromium.org/chromium/src/third_party/WebKit/Source/core/page/ChromeClient.cpp?l=116 and bring back the old Electron behavior to determine the result of `AtomJavaScriptDialogManager::RunBeforeUnloadDialog` based on the `event.returnvalue` or the second version would be to implement the confirmation dialog as a part of Electron and use its result. The second choice sounds better and its what chrome does, but I am not sure why we weren't doing it from the beginning.\r\n\r\n/cc @zcbenz @kevinsawicki "
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/290273265",
    "html_url": "https://github.com/electron/electron/issues/8737#issuecomment-290273265",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/8737",
    "id": 290273265,
    "user": {
      "login": "pfrazee",
      "id": 1270099,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1270099?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pfrazee",
      "html_url": "https://github.com/pfrazee",
      "followers_url": "https://api.github.com/users/pfrazee/followers",
      "following_url": "https://api.github.com/users/pfrazee/following{/other_user}",
      "gists_url": "https://api.github.com/users/pfrazee/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pfrazee/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pfrazee/subscriptions",
      "organizations_url": "https://api.github.com/users/pfrazee/orgs",
      "repos_url": "https://api.github.com/users/pfrazee/repos",
      "events_url": "https://api.github.com/users/pfrazee/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pfrazee/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-30T01:16:22Z",
    "updated_at": "2017-03-30T01:16:22Z",
    "body": "I'm +1 emulating the Chrome behavior for Webviews. It looks like, right now, a webpage can block navigations away using:\r\n\r\n```js\r\nwindow.onbeforeunload = function() {\r\n  return true;\r\n};\r\n```"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/294315583",
    "html_url": "https://github.com/electron/electron/issues/8737#issuecomment-294315583",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/8737",
    "id": 294315583,
    "user": {
      "login": "pfrazee",
      "id": 1270099,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1270099?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pfrazee",
      "html_url": "https://github.com/pfrazee",
      "followers_url": "https://api.github.com/users/pfrazee/followers",
      "following_url": "https://api.github.com/users/pfrazee/following{/other_user}",
      "gists_url": "https://api.github.com/users/pfrazee/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pfrazee/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pfrazee/subscriptions",
      "organizations_url": "https://api.github.com/users/pfrazee/orgs",
      "repos_url": "https://api.github.com/users/pfrazee/repos",
      "events_url": "https://api.github.com/users/pfrazee/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pfrazee/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-15T20:17:00Z",
    "updated_at": "2017-04-15T20:17:00Z",
    "body": "I ended up solving this with https://github.com/beakerbrowser/beaker/commit/2b722936280c1f16e5bab92eafaabc7ca040a567."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/294316094",
    "html_url": "https://github.com/electron/electron/issues/8737#issuecomment-294316094",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/8737",
    "id": 294316094,
    "user": {
      "login": "pfrazee",
      "id": 1270099,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1270099?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pfrazee",
      "html_url": "https://github.com/pfrazee",
      "followers_url": "https://api.github.com/users/pfrazee/followers",
      "following_url": "https://api.github.com/users/pfrazee/following{/other_user}",
      "gists_url": "https://api.github.com/users/pfrazee/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pfrazee/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pfrazee/subscriptions",
      "organizations_url": "https://api.github.com/users/pfrazee/orgs",
      "repos_url": "https://api.github.com/users/pfrazee/repos",
      "events_url": "https://api.github.com/users/pfrazee/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pfrazee/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-15T20:28:18Z",
    "updated_at": "2017-04-15T20:28:18Z",
    "body": "^ Note that I had to\r\n\r\n 1. Turn `window.onbeforeunload` into a setter, to capture what the sites set it to\r\n 2. Wrap `window.addEventListener` (oof)\r\n\r\nSo it would really be preferable to get the default Chromium behaviors.\r\n\r\nThat said, one thing that wasn't happening at all was, the `onbeforeunload` wasn't getting called when a webview is *closed*, which is unsurprising when you think about it. But, that's obviously something I need. If Electron were to provide standard behaviors for onbeforeunload, I'd need it to support the close event too, otherwise I'm still up a creek and will still need my hacks."
  }
]