[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/277169707",
    "html_url": "https://github.com/electron/electron/issues/8575#issuecomment-277169707",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/8575",
    "id": 277169707,
    "user": {
      "login": "groundwater",
      "id": 538488,
      "avatar_url": "https://avatars3.githubusercontent.com/u/538488?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/groundwater",
      "html_url": "https://github.com/groundwater",
      "followers_url": "https://api.github.com/users/groundwater/followers",
      "following_url": "https://api.github.com/users/groundwater/following{/other_user}",
      "gists_url": "https://api.github.com/users/groundwater/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/groundwater/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/groundwater/subscriptions",
      "organizations_url": "https://api.github.com/users/groundwater/orgs",
      "repos_url": "https://api.github.com/users/groundwater/repos",
      "events_url": "https://api.github.com/users/groundwater/events{/privacy}",
      "received_events_url": "https://api.github.com/users/groundwater/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2017-02-03T05:46:00Z",
    "updated_at": "2017-02-03T05:46:00Z",
    "body": "Thanks @fijiwebdesign will check it out.\r\n\r\nCan you try on the latest version of electron, version 1.4.15, available with `npm install electron@latest`."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/277185743",
    "html_url": "https://github.com/electron/electron/issues/8575#issuecomment-277185743",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/8575",
    "id": 277185743,
    "user": {
      "login": "deepak1556",
      "id": 964386,
      "avatar_url": "https://avatars2.githubusercontent.com/u/964386?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/deepak1556",
      "html_url": "https://github.com/deepak1556",
      "followers_url": "https://api.github.com/users/deepak1556/followers",
      "following_url": "https://api.github.com/users/deepak1556/following{/other_user}",
      "gists_url": "https://api.github.com/users/deepak1556/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/deepak1556/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/deepak1556/subscriptions",
      "organizations_url": "https://api.github.com/users/deepak1556/orgs",
      "repos_url": "https://api.github.com/users/deepak1556/repos",
      "events_url": "https://api.github.com/users/deepak1556/events{/privacy}",
      "received_events_url": "https://api.github.com/users/deepak1556/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-03T07:53:38Z",
    "updated_at": "2017-02-03T07:53:38Z",
    "body": "@fijiwebdesign at any point only one debugger sessio can be attached to a webContents, this is currently a limitation of chromium https://bugs.chromium.org/p/chromium/issues/detail?id=129539. So `webContents,debugger` session and `openDevtools` are two different debugging sessions and hence breakpoints wont appear.\r\n\r\nAside from that there are a few issues in your chrome RDP usage.\r\n\r\n* Any Debugger domain commands should be used only after completion of `Debugger.enable` command. https://chromedevtools.github.io/debugger-protocol-viewer/tot/Debugger/#method-enable\r\n\r\n```\r\nfunction setBreakpoint(win) {\r\n  win.webContents.debugger.sendCommand('Debugger.enable', function () {\r\n    win.webContents.debugger.sendCommand(\r\n      'Debugger.setBreakpointByUrl', {\r\n        lineNumber: 0,\r\n        url: <absolute URL to file> // should be absolute, not relative\r\n      },\r\n      function (err, result){\r\n        console.log('breakpoint set')\r\n        if(err){\r\n          console.error('Error:', err)\r\n        }\r\n        console.log('Result: ', result)\r\n      })\r\n  })\r\n}\r\n```\r\n\r\n* In your example, `setBreakPoint` is being called before the `webContents` finishes loading. At this point even though the debugger is attached it has no clue to a file named test.js, since its not available. You can call it after `did-finish-load` event of `webContents`."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/277496876",
    "html_url": "https://github.com/electron/electron/issues/8575#issuecomment-277496876",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/8575",
    "id": 277496876,
    "user": {
      "login": "fijiwebdesign",
      "id": 809011,
      "avatar_url": "https://avatars2.githubusercontent.com/u/809011?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fijiwebdesign",
      "html_url": "https://github.com/fijiwebdesign",
      "followers_url": "https://api.github.com/users/fijiwebdesign/followers",
      "following_url": "https://api.github.com/users/fijiwebdesign/following{/other_user}",
      "gists_url": "https://api.github.com/users/fijiwebdesign/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fijiwebdesign/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fijiwebdesign/subscriptions",
      "organizations_url": "https://api.github.com/users/fijiwebdesign/orgs",
      "repos_url": "https://api.github.com/users/fijiwebdesign/repos",
      "events_url": "https://api.github.com/users/fijiwebdesign/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fijiwebdesign/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-05T04:30:34Z",
    "updated_at": "2017-02-05T04:32:55Z",
    "body": "@groundwater I've updated to Electron v1.4.15\r\n\r\n@deepak1556 Thanks. It appears `win.webContents.openDevTools()` will attach without errors to the debug session and close the open session of `win.webContents.debugger`. \r\n\r\nI think it should throw an exception just like `win.webContents.debugger.attach()` if there is already a session for `win.webContents.openDevTools()`. That would make it easier to bridge the understanding that it's a separate debug session from both ends. I will try and write a PR for this if my understanding is correct here - unless this is intended behavior. \r\n\r\nFor setting the breakpoint there are some issues: \r\n\r\n1) I never got it to work if I first call: `win.webContents.debugger.sendCommand('Debugger.enable', function () {` \r\n\r\n2) The same code seems to work and then not work any more without changes. I suspect it has to do with the devtools persisting state even after closing electron. I can't figure out what changed to have stopped the breakpoints altogether. \r\n\r\n3) Even if breakpoints are set, chrome debugger doesn't process them unless you reload the page. Both manual and reloading with `win.webContents.reload()` will work. This is true even for `debugger;` statements in code. I never got it to attach a breakpoint without reload even if the breakpoint is set before or after `did-finish-load` event or with a `setTimeout`. \r\nSame as these issues:\r\nhttps://github.com/electron/electron/issues/7361\r\nhttps://github.com/electron/electron/issues/4842\r\nAnd this workaround: https://github.com/JamesKyburz/electron-breakpoint/blob/master/index.js#L14\r\n\r\n4) I had to add 'file://' before the URL of script to set the breakpoint. \r\n```\r\n'Debugger.setBreakpointByUrl', {\r\n\t\t\t\tlineNumber: 0,\r\n\t\t\t\turl: 'file://' + url\r\n\t\t\t}\r\n```\r\nDevtools sometimes resolves the file to a domain and `file:///absolute/path/to/script.js` would work. But if it resolved to \"no domain\" then `/absolute/path/to/script.js` would work. I can't find the correlation between this resolution of domains. \r\n\r\nThis is the code that worked at one point: \r\n\r\n```\r\n// debugClient = win.webContents.debugger\r\n// debug = console.log.bind(console)\r\nfunction setBreakpoint(debugClient, url, callback) {\r\n\turl = require('path').resolve(url)\r\n\tdebug('setting breakpoint', url)\r\n\ttry {\r\n\t\tdebugClient.attach()\r\n\t} catch(e) {\r\n\t\tdebug('error attaching debugger', e)\r\n\t}\r\n\r\n\t//debugClient.sendCommand('Debugger.enable', (err) => {\r\n\t\t//debug('enabed debugger', err)\r\n\tsetTimeout(() => {\r\n\t\tdebugClient.sendCommand(\r\n\t\t\t'Debugger.setBreakpointByUrl', {\r\n\t\t\t\tlineNumber: 0,\r\n\t\t\t\turl: 'file://' + url\r\n\t\t\t},\r\n\t\t\t(err, result) => {\r\n\t\t\t\tif(err && err.msg){\r\n\t\t\t\t\tconsole.error('Error:', err)\r\n\t\t\t\t}\r\n\t\t\t\tdebug('Breakpoint: ', result)\r\n\t\t\t\tdebugClient.detach()\r\n\t\t\t\tif (typeof callback == 'function') {\r\n\t\t\t\t\tcallback(result)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t}, 500)\r\n\t//})\r\n}\r\n```\r\n\r\nI will write a set of tests for this and post it here so it is more clear. \r\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/306388272",
    "html_url": "https://github.com/electron/electron/issues/8575#issuecomment-306388272",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/8575",
    "id": 306388272,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2017-06-06T05:47:12Z",
    "updated_at": "2017-06-06T05:47:12Z",
    "body": "I'm closing this since it is a limitation of the `win.webContents.debugger` API, to make it work with the devtools is another story and we don't have plans for that."
  }
]