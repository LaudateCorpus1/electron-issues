[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/220197196",
    "html_url": "https://github.com/electron/electron/issues/5599#issuecomment-220197196",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/5599",
    "id": 220197196,
    "user": {
      "login": "kevinsawicki",
      "id": 671378,
      "avatar_url": "https://avatars0.githubusercontent.com/u/671378?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kevinsawicki",
      "html_url": "https://github.com/kevinsawicki",
      "followers_url": "https://api.github.com/users/kevinsawicki/followers",
      "following_url": "https://api.github.com/users/kevinsawicki/following{/other_user}",
      "gists_url": "https://api.github.com/users/kevinsawicki/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kevinsawicki/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kevinsawicki/subscriptions",
      "organizations_url": "https://api.github.com/users/kevinsawicki/orgs",
      "repos_url": "https://api.github.com/users/kevinsawicki/repos",
      "events_url": "https://api.github.com/users/kevinsawicki/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kevinsawicki/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2016-05-19T00:32:08Z",
    "updated_at": "2016-05-19T00:32:08Z",
    "body": "Hmm, this appears to be working in 1.1.0 for me:\n\n``` js\nrequire('electron').remote.getCurrentWebContents().id\n1\n```\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/220197468",
    "html_url": "https://github.com/electron/electron/issues/5599#issuecomment-220197468",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/5599",
    "id": 220197468,
    "user": {
      "login": "bengotow",
      "id": 1037212,
      "avatar_url": "https://avatars0.githubusercontent.com/u/1037212?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bengotow",
      "html_url": "https://github.com/bengotow",
      "followers_url": "https://api.github.com/users/bengotow/followers",
      "following_url": "https://api.github.com/users/bengotow/following{/other_user}",
      "gists_url": "https://api.github.com/users/bengotow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bengotow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bengotow/subscriptions",
      "organizations_url": "https://api.github.com/users/bengotow/orgs",
      "repos_url": "https://api.github.com/users/bengotow/repos",
      "events_url": "https://api.github.com/users/bengotow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bengotow/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-19T00:34:08Z",
    "updated_at": "2016-05-19T00:34:19Z",
    "body": "Ahh yeah - I realized that example was a separate issue actually. I was reading the docs, but that `id` property was only added 18 hours ago, so it was undefined in our older version of Electron :-). Will try to put together a test case for this real quick.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/220198598",
    "html_url": "https://github.com/electron/electron/issues/5599#issuecomment-220198598",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/5599",
    "id": 220198598,
    "user": {
      "login": "bengotow",
      "id": 1037212,
      "avatar_url": "https://avatars0.githubusercontent.com/u/1037212?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bengotow",
      "html_url": "https://github.com/bengotow",
      "followers_url": "https://api.github.com/users/bengotow/followers",
      "following_url": "https://api.github.com/users/bengotow/following{/other_user}",
      "gists_url": "https://api.github.com/users/bengotow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bengotow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bengotow/subscriptions",
      "organizations_url": "https://api.github.com/users/bengotow/orgs",
      "repos_url": "https://api.github.com/users/bengotow/repos",
      "events_url": "https://api.github.com/users/bengotow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bengotow/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-19T00:42:10Z",
    "updated_at": "2016-05-19T00:42:10Z",
    "body": "It looks like this problem might be caused by caching of remote objects. Here's an example that reproduces the issue:\n\nmain process:\n\n```\nclass Application {\n  constructor() {\n    setTimeout(() => {\n      this.quitting = true;\n    }, 4000);\n  }\n}\n\nglobal.application = new Application();\n```\n\nrenderer process:\n\n```\nsetInterval(()=> {\n  console.log(\"Quitting is \" + remote.getGlobal('application').quitting);\n}, 1000);\n```\n\nIf you watch the console, the value never becomes `true` as expected.\n\n(See entire demo app attached)\n\n[test-remote-prop.zip](https://github.com/electron/electron/files/271661/test-remote-prop.zip)\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/220305264",
    "html_url": "https://github.com/electron/electron/issues/5599#issuecomment-220305264",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/5599",
    "id": 220305264,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2016-05-19T12:08:04Z",
    "updated_at": "2016-05-19T12:08:04Z",
    "body": "The remote objects returned by `remote` module is not aware of the new properties added to the original object, so if you add a new property to the object in the main process after calling `remote.getGlobal`, you can not read it with the remote object.\n\nYou didn't encounter this problem before probably because you were always using `remote.getGlobal` to access the remote object, which generated a new object for every call before we cached the remote objects.\n\nIt is possible to solve this by implementing `remote` module with Proxy, but it will introduce huge performance problems since many basic operations would involve sending synchronous messages, like iterating the object.\n\nI'm closing since this is expected behavior with current implementation of `remote` module.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/220379072",
    "html_url": "https://github.com/electron/electron/issues/5599#issuecomment-220379072",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/5599",
    "id": 220379072,
    "user": {
      "login": "bengotow",
      "id": 1037212,
      "avatar_url": "https://avatars0.githubusercontent.com/u/1037212?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bengotow",
      "html_url": "https://github.com/bengotow",
      "followers_url": "https://api.github.com/users/bengotow/followers",
      "following_url": "https://api.github.com/users/bengotow/following{/other_user}",
      "gists_url": "https://api.github.com/users/bengotow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bengotow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bengotow/subscriptions",
      "organizations_url": "https://api.github.com/users/bengotow/orgs",
      "repos_url": "https://api.github.com/users/bengotow/repos",
      "events_url": "https://api.github.com/users/bengotow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bengotow/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-19T16:28:35Z",
    "updated_at": "2016-05-19T16:28:35Z",
    "body": "Thanks for the explanation - I'd definitely expected calling `getGlobal` to give me a fresh copy of the global with the updated `quitting` value. I think it'd be worth mentioning this in the docs because the expected behavior of the implementation may not be the expected behavior in general.\n"
  }
]