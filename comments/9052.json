[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/290078926",
    "html_url": "https://github.com/electron/electron/pull/9052#issuecomment-290078926",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/9052",
    "id": 290078926,
    "user": {
      "login": "bpasero",
      "id": 900690,
      "avatar_url": "https://avatars0.githubusercontent.com/u/900690?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bpasero",
      "html_url": "https://github.com/bpasero",
      "followers_url": "https://api.github.com/users/bpasero/followers",
      "following_url": "https://api.github.com/users/bpasero/following{/other_user}",
      "gists_url": "https://api.github.com/users/bpasero/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bpasero/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bpasero/subscriptions",
      "organizations_url": "https://api.github.com/users/bpasero/orgs",
      "repos_url": "https://api.github.com/users/bpasero/repos",
      "events_url": "https://api.github.com/users/bpasero/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bpasero/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-29T12:47:11Z",
    "updated_at": "2017-03-29T12:47:11Z",
    "body": "@tonyganch very cool!"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/290415882",
    "html_url": "https://github.com/electron/electron/pull/9052#issuecomment-290415882",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/9052",
    "id": 290415882,
    "user": {
      "login": "tonyganch",
      "id": 872004,
      "avatar_url": "https://avatars0.githubusercontent.com/u/872004?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tonyganch",
      "html_url": "https://github.com/tonyganch",
      "followers_url": "https://api.github.com/users/tonyganch/followers",
      "following_url": "https://api.github.com/users/tonyganch/following{/other_user}",
      "gists_url": "https://api.github.com/users/tonyganch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tonyganch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tonyganch/subscriptions",
      "organizations_url": "https://api.github.com/users/tonyganch/orgs",
      "repos_url": "https://api.github.com/users/tonyganch/repos",
      "events_url": "https://api.github.com/users/tonyganch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tonyganch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-30T13:48:03Z",
    "updated_at": "2017-03-30T13:48:03Z",
    "body": "@kevinsawicki, thank you for helpful review!\r\nI added declarations for the methods that I use plus added checks with `respondsToSelector`.\r\nI checked the changes locally with older SDK and ran the build on Travis, it's green now:\r\nhttps://travis-ci.org/electron/electron/jobs/216753155\r\n\r\nDo you think I should leave `base::mac::IsAtLeastOS10_12` check or it's not necessary anymore because of `respondsToSelector` and I'd better remove it?"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/290491026",
    "html_url": "https://github.com/electron/electron/pull/9052#issuecomment-290491026",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/9052",
    "id": 290491026,
    "user": {
      "login": "kevinsawicki",
      "id": 671378,
      "avatar_url": "https://avatars0.githubusercontent.com/u/671378?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kevinsawicki",
      "html_url": "https://github.com/kevinsawicki",
      "followers_url": "https://api.github.com/users/kevinsawicki/followers",
      "following_url": "https://api.github.com/users/kevinsawicki/following{/other_user}",
      "gists_url": "https://api.github.com/users/kevinsawicki/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kevinsawicki/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kevinsawicki/subscriptions",
      "organizations_url": "https://api.github.com/users/kevinsawicki/orgs",
      "repos_url": "https://api.github.com/users/kevinsawicki/repos",
      "events_url": "https://api.github.com/users/kevinsawicki/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kevinsawicki/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2017-03-30T17:55:52Z",
    "updated_at": "2017-03-30T17:55:52Z",
    "body": "> Do you think I should leave base::mac::IsAtLeastOS10_12 check or it's not necessary anymore because of respondsToSelector and I'd better remove it?\r\n\r\n I think we should be good without the `IsAtLeastOS10_12` check.\r\n\r\nI'll add a test that exercises it and remove the check and we'll see if it passes on CI which is pre-10.12"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/290544002",
    "html_url": "https://github.com/electron/electron/pull/9052#issuecomment-290544002",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/9052",
    "id": 290544002,
    "user": {
      "login": "kevinsawicki",
      "id": 671378,
      "avatar_url": "https://avatars0.githubusercontent.com/u/671378?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kevinsawicki",
      "html_url": "https://github.com/kevinsawicki",
      "followers_url": "https://api.github.com/users/kevinsawicki/followers",
      "following_url": "https://api.github.com/users/kevinsawicki/following{/other_user}",
      "gists_url": "https://api.github.com/users/kevinsawicki/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kevinsawicki/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kevinsawicki/subscriptions",
      "organizations_url": "https://api.github.com/users/kevinsawicki/orgs",
      "repos_url": "https://api.github.com/users/kevinsawicki/repos",
      "events_url": "https://api.github.com/users/kevinsawicki/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kevinsawicki/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2017-03-30T21:02:32Z",
    "updated_at": "2017-03-30T21:02:32Z",
    "body": "Thanks for this @tonyganch, awesome work üëç üìë üéÜ "
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/290870235",
    "html_url": "https://github.com/electron/electron/pull/9052#issuecomment-290870235",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/9052",
    "id": 290870235,
    "user": {
      "login": "bpasero",
      "id": 900690,
      "avatar_url": "https://avatars0.githubusercontent.com/u/900690?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bpasero",
      "html_url": "https://github.com/bpasero",
      "followers_url": "https://api.github.com/users/bpasero/followers",
      "following_url": "https://api.github.com/users/bpasero/following{/other_user}",
      "gists_url": "https://api.github.com/users/bpasero/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bpasero/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bpasero/subscriptions",
      "organizations_url": "https://api.github.com/users/bpasero/orgs",
      "repos_url": "https://api.github.com/users/bpasero/repos",
      "events_url": "https://api.github.com/users/bpasero/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bpasero/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-31T23:52:46Z",
    "updated_at": "2017-04-03T11:29:06Z",
    "body": "@tonyganch seems to work nicely!\r\n\r\nOne thing I am wondering is: if you have a window with tab bar to the top and you open a new window, it will open as separate window. But if you are in fullscreen mode, that new window will be attached as tab. Would it make sense to have API to force a window to open into an existing tab group or not? This would make it possible to give the user the choice of wether a window should open as tab or not independent from being in fullscreen mode or not.\r\n\r\nNot even sure such API exists on macOS though.\r\n\r\nUpdate: extracted this into https://github.com/electron/electron/issues/9094"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/299306095",
    "html_url": "https://github.com/electron/electron/pull/9052#issuecomment-299306095",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/9052",
    "id": 299306095,
    "user": {
      "login": "russelldc",
      "id": 5100126,
      "avatar_url": "https://avatars3.githubusercontent.com/u/5100126?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/russelldc",
      "html_url": "https://github.com/russelldc",
      "followers_url": "https://api.github.com/users/russelldc/followers",
      "following_url": "https://api.github.com/users/russelldc/following{/other_user}",
      "gists_url": "https://api.github.com/users/russelldc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/russelldc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/russelldc/subscriptions",
      "organizations_url": "https://api.github.com/users/russelldc/orgs",
      "repos_url": "https://api.github.com/users/russelldc/repos",
      "events_url": "https://api.github.com/users/russelldc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/russelldc/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-04T20:54:00Z",
    "updated_at": "2017-05-04T21:12:19Z",
    "body": "@tonyganch The video looks great, but when I try your sample locally (with Electron 1.6.6) on MacOS 10.12.4, all of the buttons open new windows rather than tabs.\r\n\r\nEdit: I tried downgrading to Electron 1.6.3 and matching the Node version in your video, but it's still not working."
  }
]