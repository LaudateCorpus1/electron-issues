[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/229231651",
    "html_url": "https://github.com/electron/electron/issues/6258#issuecomment-229231651",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/6258",
    "id": 229231651,
    "user": {
      "login": "kevinsawicki",
      "id": 671378,
      "avatar_url": "https://avatars0.githubusercontent.com/u/671378?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kevinsawicki",
      "html_url": "https://github.com/kevinsawicki",
      "followers_url": "https://api.github.com/users/kevinsawicki/followers",
      "following_url": "https://api.github.com/users/kevinsawicki/following{/other_user}",
      "gists_url": "https://api.github.com/users/kevinsawicki/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kevinsawicki/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kevinsawicki/subscriptions",
      "organizations_url": "https://api.github.com/users/kevinsawicki/orgs",
      "repos_url": "https://api.github.com/users/kevinsawicki/repos",
      "events_url": "https://api.github.com/users/kevinsawicki/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kevinsawicki/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2016-06-29T01:26:01Z",
    "updated_at": "2016-06-29T01:26:01Z",
    "body": "Can you include a reproduction app that demonstrates this behavior? Thanks.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/229473181",
    "html_url": "https://github.com/electron/electron/issues/6258#issuecomment-229473181",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/6258",
    "id": 229473181,
    "user": {
      "login": "kjlaw89",
      "id": 4183007,
      "avatar_url": "https://avatars3.githubusercontent.com/u/4183007?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kjlaw89",
      "html_url": "https://github.com/kjlaw89",
      "followers_url": "https://api.github.com/users/kjlaw89/followers",
      "following_url": "https://api.github.com/users/kjlaw89/following{/other_user}",
      "gists_url": "https://api.github.com/users/kjlaw89/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kjlaw89/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kjlaw89/subscriptions",
      "organizations_url": "https://api.github.com/users/kjlaw89/orgs",
      "repos_url": "https://api.github.com/users/kjlaw89/repos",
      "events_url": "https://api.github.com/users/kjlaw89/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kjlaw89/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-29T20:09:41Z",
    "updated_at": "2016-06-29T20:12:34Z",
    "body": "I can't get it to duplicate with my test application, but I did find _some_ sort of cause in my main application. It appears that me loading in AWS-SDK and initializing it at any point (before or after registering my protocol) seems to cause the problem. Unfortunately it doesn't duplicate in the test application despite my best attempt to duplicate how everything was loading.\n\nThe process in my main application works like this:\n1. app.on (\"ready\") occurs, which calls App.Ready\n2. App.Ready loads in all application modules, starting with update first (in case a critical problem occurs in the application I want the update process to start before everything else)\n3. Update initializes AWS.S3 (which causes issues on main app), then checks for updates\n4. After update check is done, it calls App.Begin, which setups up the \"res://\" protocol and then creates the main window to start displaying things\n\nThere's a lot of fluff in this test application, sorry about that. I was trying all sorts of different things that our application does or has setup to duplicate it, but nothing would...\n\n[test.zip](https://github.com/electron/electron/files/340104/test.zip)\n\nJust to re-iterate, this does work perfectly fine in 1.2.4 - it only breaks in 1.2.5.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/229920694",
    "html_url": "https://github.com/electron/electron/issues/6258#issuecomment-229920694",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/6258",
    "id": 229920694,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2016-07-01T11:07:20Z",
    "updated_at": "2016-07-01T11:07:20Z",
    "body": "I'm unable to reproduce with your app, I saw lots of `Failed to load resource: net::ERR_FILE_NOT_FOUND` errors but they are expected.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/230963693",
    "html_url": "https://github.com/electron/electron/issues/6258#issuecomment-230963693",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/6258",
    "id": 230963693,
    "user": {
      "login": "jwu",
      "id": 174891,
      "avatar_url": "https://avatars2.githubusercontent.com/u/174891?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jwu",
      "html_url": "https://github.com/jwu",
      "followers_url": "https://api.github.com/users/jwu/followers",
      "following_url": "https://api.github.com/users/jwu/following{/other_user}",
      "gists_url": "https://api.github.com/users/jwu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jwu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jwu/subscriptions",
      "organizations_url": "https://api.github.com/users/jwu/orgs",
      "repos_url": "https://api.github.com/users/jwu/repos",
      "events_url": "https://api.github.com/users/jwu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jwu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-07T02:33:59Z",
    "updated_at": "2016-07-07T02:33:59Z",
    "body": "I can confirm this problem in both 1.2.5 and 1.2.6 in one of my app. But strangely it doesn't happen in my other projects. The thing is it needs the App to be as complicate as it can before it running a window. I am trying to write simple code to reproduce the problem.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/230978669",
    "html_url": "https://github.com/electron/electron/issues/6258#issuecomment-230978669",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/6258",
    "id": 230978669,
    "user": {
      "login": "paulcbetts",
      "id": 1396,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1396?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulcbetts",
      "html_url": "https://github.com/paulcbetts",
      "followers_url": "https://api.github.com/users/paulcbetts/followers",
      "following_url": "https://api.github.com/users/paulcbetts/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulcbetts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulcbetts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulcbetts/subscriptions",
      "organizations_url": "https://api.github.com/users/paulcbetts/orgs",
      "repos_url": "https://api.github.com/users/paulcbetts/repos",
      "events_url": "https://api.github.com/users/paulcbetts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulcbetts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-07T04:51:44Z",
    "updated_at": "2016-07-07T04:52:16Z",
    "body": "Loading aws-s3 is probably big enough that it will finish post-ready on some machines - anything that has to be done pre-ready has to be done really really early, like, first line early\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/231072557",
    "html_url": "https://github.com/electron/electron/issues/6258#issuecomment-231072557",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/6258",
    "id": 231072557,
    "user": {
      "login": "kjlaw89",
      "id": 4183007,
      "avatar_url": "https://avatars3.githubusercontent.com/u/4183007?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kjlaw89",
      "html_url": "https://github.com/kjlaw89",
      "followers_url": "https://api.github.com/users/kjlaw89/followers",
      "following_url": "https://api.github.com/users/kjlaw89/following{/other_user}",
      "gists_url": "https://api.github.com/users/kjlaw89/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kjlaw89/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kjlaw89/subscriptions",
      "organizations_url": "https://api.github.com/users/kjlaw89/orgs",
      "repos_url": "https://api.github.com/users/kjlaw89/repos",
      "events_url": "https://api.github.com/users/kjlaw89/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kjlaw89/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-07T13:09:57Z",
    "updated_at": "2016-07-07T13:09:57Z",
    "body": "Post-ready as in after app \"ready\" fires? In the example app I provided I only attempt to load the aws-sdk post-ready, but everything appears to load fine in that case. It's been a few days, but I don't think the aws-sdk require was even the problem - it was creating a new instances of aws.s3.\n\nI'll try to move both of those to the very beginning of my application today and see if that helps. I can tell you if I keep restarting the application eventually everything will load once. Like 1/20 attempts will work.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/235884857",
    "html_url": "https://github.com/electron/electron/issues/6258#issuecomment-235884857",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/6258",
    "id": 235884857,
    "user": {
      "login": "jwu",
      "id": 174891,
      "avatar_url": "https://avatars2.githubusercontent.com/u/174891?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jwu",
      "html_url": "https://github.com/jwu",
      "followers_url": "https://api.github.com/users/jwu/followers",
      "following_url": "https://api.github.com/users/jwu/following{/other_user}",
      "gists_url": "https://api.github.com/users/jwu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jwu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jwu/subscriptions",
      "organizations_url": "https://api.github.com/users/jwu/orgs",
      "repos_url": "https://api.github.com/users/jwu/repos",
      "events_url": "https://api.github.com/users/jwu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jwu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-28T12:50:31Z",
    "updated_at": "2016-07-28T12:57:08Z",
    "body": "Hi @zcbenz, @kevinsawicki,\n\nI finally find a way to 100% reproduce this problem. Here is the repo for this bug: https://github.com/jwu/electron-custom-protocol-bug, just follow the README in this repo you will see the error.\n\nActually I reproduce this problem by using Chokidar to watch the node_modules, which in this example I add React as dependency, so lots of directories and files in it, which make Chokidar may run a little bit longer than before.\n\nIt seems like a large amount of calculation during init phase of Electron will broke the custom protocol registry. And if you switch to v1.1.3 of Electron in my code, the error will disappear.\n\nAnyway, hope this code can help you locate the problem.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/236068719",
    "html_url": "https://github.com/electron/electron/issues/6258#issuecomment-236068719",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/6258",
    "id": 236068719,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2016-07-29T01:05:53Z",
    "updated_at": "2016-07-29T01:05:53Z",
    "body": "@jwu I can reproduce with it, thanks for working out the test case.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/236386306",
    "html_url": "https://github.com/electron/electron/issues/6258#issuecomment-236386306",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/6258",
    "id": 236386306,
    "user": {
      "login": "Aerlinger",
      "id": 604138,
      "avatar_url": "https://avatars2.githubusercontent.com/u/604138?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Aerlinger",
      "html_url": "https://github.com/Aerlinger",
      "followers_url": "https://api.github.com/users/Aerlinger/followers",
      "following_url": "https://api.github.com/users/Aerlinger/following{/other_user}",
      "gists_url": "https://api.github.com/users/Aerlinger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Aerlinger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Aerlinger/subscriptions",
      "organizations_url": "https://api.github.com/users/Aerlinger/orgs",
      "repos_url": "https://api.github.com/users/Aerlinger/repos",
      "events_url": "https://api.github.com/users/Aerlinger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Aerlinger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-30T19:44:59Z",
    "updated_at": "2016-07-30T20:29:24Z",
    "body": "I've been trying to narrow the source of the bug down using a \"bisect\" approach with different versions of Electron. It looks like the bug in question was first introduced in version v1.2.5, most likely as an unexpected side-effect resulting from a fix for a prior bug introduced in v1.2.3 as described here: https://github.com/electron/electron/pull/6095.\n\n**Electron v1.2.2** and earlier: Works fine\n**Electron v1.2.3** => Launching Electron fails with following error:\n![image](https://cloud.githubusercontent.com/assets/604138/17272692/4e054414-566b-11e6-8536-949e5462385b.png)\n**Electron v1.2.4** Custom protocol Wworks, but getting warning: \"Unable to register chrome-extension protocol: Error: The scheme has been registred\"\n**Electron v1.2.5** Fails with error described in original post\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/236388461",
    "html_url": "https://github.com/electron/electron/issues/6258#issuecomment-236388461",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/6258",
    "id": 236388461,
    "user": {
      "login": "Aerlinger",
      "id": 604138,
      "avatar_url": "https://avatars2.githubusercontent.com/u/604138?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Aerlinger",
      "html_url": "https://github.com/Aerlinger",
      "followers_url": "https://api.github.com/users/Aerlinger/followers",
      "following_url": "https://api.github.com/users/Aerlinger/following{/other_user}",
      "gists_url": "https://api.github.com/users/Aerlinger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Aerlinger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Aerlinger/subscriptions",
      "organizations_url": "https://api.github.com/users/Aerlinger/orgs",
      "repos_url": "https://api.github.com/users/Aerlinger/repos",
      "events_url": "https://api.github.com/users/Aerlinger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Aerlinger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-30T20:32:28Z",
    "updated_at": "2016-07-30T21:04:02Z",
    "body": "Could it be related this this addition https://github.com/electron/electron/pull/6195? This is the only change between v1.2.4 and 1.2.5 that seem to change anything related to protocol handlers.\n\nIs it possible that user-defined protocols in the \"ready\" event aren't loaded because the `setupProtocol` function has been called prematurely?\n\nIn other words, it seems like a race condition where the app ready completes before the user defined protocol finishes loading.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/236392334",
    "html_url": "https://github.com/electron/electron/issues/6258#issuecomment-236392334",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/6258",
    "id": 236392334,
    "user": {
      "login": "Aerlinger",
      "id": 604138,
      "avatar_url": "https://avatars2.githubusercontent.com/u/604138?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Aerlinger",
      "html_url": "https://github.com/Aerlinger",
      "followers_url": "https://api.github.com/users/Aerlinger/followers",
      "following_url": "https://api.github.com/users/Aerlinger/following{/other_user}",
      "gists_url": "https://api.github.com/users/Aerlinger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Aerlinger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Aerlinger/subscriptions",
      "organizations_url": "https://api.github.com/users/Aerlinger/orgs",
      "repos_url": "https://api.github.com/users/Aerlinger/repos",
      "events_url": "https://api.github.com/users/Aerlinger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Aerlinger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-30T22:03:58Z",
    "updated_at": "2016-07-30T22:04:10Z",
    "body": "It seems to be a race condition where the protocol is called before it's registered with Electron. Interestingly, if I modify your example to define the window outside of the watcher callback, it works:\n\nDemo App: https://github.com/jwu/electron-custom-protocol-bug\n\n**This works: (main.js)**\n\n``` javascript\nElectron.app.on('ready', () => {\n\n  // register protocol app://\n  Electron.protocol.registerFileProtocol('app', (request, cb) => {\n    if ( !request.url ) {\n      cb (-3); // ABORTED\n      return;\n    }\n\n    let url = decodeURIComponent(request.url);\n    let uri = Url.parse(url);\n\n    let relativePath = uri.hostname;\n    if ( uri.pathname ) {\n      relativePath = Path.join( relativePath, uri.pathname );\n    }\n\n    let file = Path.join( __dirname, relativePath );\n    cb ( { path: file } );\n  }, err => {\n    if ( err ) {\n      console.log( 'Failed to register protocol app, %s', err.message );\n      return;\n    }\n    console.log( 'protocol app registered' );\n  });\n\n  // If this is defined within the `watcher.on('ready')` the error will return\n  let mainWindow = new Electron.BrowserWindow({\n    title: 'Main',\n    width: 800,\n    height: 600,\n  });\n\n  // Defined outside the chokidoar callback\n  let watcher = Chokidar.watch([__dirname], {\n    ignoreInitial: true,\n    persistent: true,\n  });\n\n  watcher.on('ready', () => {\n    // create main window and show it\n    mainWindow = new Electron.BrowserWindow({\n      title: 'Main',\n      width: 800,\n      height: 600,\n    });\n\n    mainWindow.loadURL(`file://${__dirname}/index.html`);\n    mainWindow.show();\n    mainWindow.openDevTools();\n  });\n});\n\n```\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/238070657",
    "html_url": "https://github.com/electron/electron/issues/6258#issuecomment-238070657",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/6258",
    "id": 238070657,
    "user": {
      "login": "TimNZ",
      "id": 1051701,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1051701?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TimNZ",
      "html_url": "https://github.com/TimNZ",
      "followers_url": "https://api.github.com/users/TimNZ/followers",
      "following_url": "https://api.github.com/users/TimNZ/following{/other_user}",
      "gists_url": "https://api.github.com/users/TimNZ/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TimNZ/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TimNZ/subscriptions",
      "organizations_url": "https://api.github.com/users/TimNZ/orgs",
      "repos_url": "https://api.github.com/users/TimNZ/repos",
      "events_url": "https://api.github.com/users/TimNZ/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TimNZ/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-07T08:34:39Z",
    "updated_at": "2016-08-07T08:44:34Z",
    "body": "Has this been verified as fixed?  I'm getting  ERR_UNKNOWN_URL_SCHEME in a webview\n\nmain.js\n\n```\napp.on('ready', async() => {\n\n    protocol.registerFileProtocol('ext', (request, callback) => {\n        const url = request.url.substr(6)\n        let callbackPath = path.normalize(`${appOptions.approotpath}/external/${url}`)\n        console.log(callbackPath)\n        callback({path: callbackPath })\n    }, (error) => {\n        if (error)\n            console.error('Failed to register protocol')\n        else\n            console.log('EXT scheme registered')\n    })\n   ....\n```\n\nwebview preload script, nodeintegration NOT ENABLED.\nthe webview is pointing to an external HTTPS that I'm wrapping around.\n\n```\nwindow.onload = function() {\n    const {webFrame,remote} = require('electron')\n    webFrame.registerURLSchemeAsSecure('ext')\n    var appOptions = remote.getGlobal('app_options')\n    var script = document.createElement(\"script\");\n    script.src = \"ext://jquery/jquery-3.1.0.min.js\";\n    script.onload = script.onreadystatechange = function() {\n        jq = $.noConflict(true)\n        console.log(jq)\n        jq(document).ready(function() {\n            setInterval(() => {\n                console.log('Searching for Dashboard link')\n                var a = jq('a[id=Dashboard]')\n                if (a.length)\n                    a.text('Tim')\n\n            },1000)\n        });\n    };\n    document.body.appendChild(script);\n};\n```\n\nError in webview dev tools console:\n\n<img width=\"751\" alt=\"google chrome - - screen shot 7-08-2016 8 32 42 pm\" src=\"https://cloud.githubusercontent.com/assets/1051701/17461357/1c5ea242-5cde-11e6-8f4c-ed211002024a.png\">\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/239603257",
    "html_url": "https://github.com/electron/electron/issues/6258#issuecomment-239603257",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/6258",
    "id": 239603257,
    "user": {
      "login": "Aerlinger",
      "id": 604138,
      "avatar_url": "https://avatars2.githubusercontent.com/u/604138?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Aerlinger",
      "html_url": "https://github.com/Aerlinger",
      "followers_url": "https://api.github.com/users/Aerlinger/followers",
      "following_url": "https://api.github.com/users/Aerlinger/following{/other_user}",
      "gists_url": "https://api.github.com/users/Aerlinger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Aerlinger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Aerlinger/subscriptions",
      "organizations_url": "https://api.github.com/users/Aerlinger/orgs",
      "repos_url": "https://api.github.com/users/Aerlinger/repos",
      "events_url": "https://api.github.com/users/Aerlinger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Aerlinger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-13T05:23:35Z",
    "updated_at": "2016-08-13T05:23:35Z",
    "body": "The issue as I encountered it (described above) was fixed on Electron 1.3.2\n"
  }
]