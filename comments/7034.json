[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/243457216",
    "html_url": "https://github.com/electron/electron/issues/7034#issuecomment-243457216",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7034",
    "id": 243457216,
    "user": {
      "login": "MarshallOfSound",
      "id": 6634592,
      "avatar_url": "https://avatars0.githubusercontent.com/u/6634592?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarshallOfSound",
      "html_url": "https://github.com/MarshallOfSound",
      "followers_url": "https://api.github.com/users/MarshallOfSound/followers",
      "following_url": "https://api.github.com/users/MarshallOfSound/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarshallOfSound/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarshallOfSound/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarshallOfSound/subscriptions",
      "organizations_url": "https://api.github.com/users/MarshallOfSound/orgs",
      "repos_url": "https://api.github.com/users/MarshallOfSound/repos",
      "events_url": "https://api.github.com/users/MarshallOfSound/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarshallOfSound/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-30T14:27:40Z",
    "updated_at": "2016-08-30T14:27:40Z",
    "body": "I can't confirm how it works on macOS (not familiar enough with Squirrel.Mac\n\nBut on Windows this is achieved through Squirrel.Windows and the **only** way it is possible is launching a separate process (in this case Squirrel's `Update.exe` that handles the actual updating process.  On macOS I'm assuming there is some kind of Squirrel daemon that is launched to perform the update in place.\n\nBasically my point is, we have a workable solution on macOS and linux and I'm reasonably sure the standpoint on Linux is that users should be updating their apps through an package repository not through the app itself.\n\nAnd in answer to your overall question:\n\n>  How we can execute code after the app was closed?\n\nAs far as I am aware this is impossible, it would be equivalent to me wanting to uplug my speakers but still hear the music.  Once the app has closed (I.e. has no processes left running) it can't do anything.\n\nThe best I can suggest is to do something Similar to Squirrel.Windows where you make a separate utility for each OS that handles the upgrade.  Spawn the OS specific utility, close the app and then the utility can reopen the app once it has done what it needs to do.\n\nI'll leave this open RE: the ASAR unlocking question, but I think I've covered everything else 👍 \n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/243464179",
    "html_url": "https://github.com/electron/electron/issues/7034#issuecomment-243464179",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7034",
    "id": 243464179,
    "user": {
      "login": "lordminor",
      "id": 17415565,
      "avatar_url": "https://avatars0.githubusercontent.com/u/17415565?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lordminor",
      "html_url": "https://github.com/lordminor",
      "followers_url": "https://api.github.com/users/lordminor/followers",
      "following_url": "https://api.github.com/users/lordminor/following{/other_user}",
      "gists_url": "https://api.github.com/users/lordminor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lordminor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lordminor/subscriptions",
      "organizations_url": "https://api.github.com/users/lordminor/orgs",
      "repos_url": "https://api.github.com/users/lordminor/repos",
      "events_url": "https://api.github.com/users/lordminor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lordminor/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-30T14:45:57Z",
    "updated_at": "2016-08-30T14:45:57Z",
    "body": "> As far as I am aware this is impossible, it would be equivalent to me wanting to uplug my speakers but still hear the music. Once the app has closed (I.e. has no processes left running) it can't do anything.\n\nAhaha. yes , I know. I was thinking in a background service called if for example I used a callback like : quitAndUpdate().\n\nI though a similar solution, make an application to handle the updates..but the problem is the language to use to make that app, and to make it works on mac/linux :(\n\nThanks for your quick reply :) \n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/243644621",
    "html_url": "https://github.com/electron/electron/issues/7034#issuecomment-243644621",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7034",
    "id": 243644621,
    "user": {
      "login": "paulcbetts",
      "id": 1396,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1396?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulcbetts",
      "html_url": "https://github.com/paulcbetts",
      "followers_url": "https://api.github.com/users/paulcbetts/followers",
      "following_url": "https://api.github.com/users/paulcbetts/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulcbetts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulcbetts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulcbetts/subscriptions",
      "organizations_url": "https://api.github.com/users/paulcbetts/orgs",
      "repos_url": "https://api.github.com/users/paulcbetts/repos",
      "events_url": "https://api.github.com/users/paulcbetts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulcbetts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-31T02:58:42Z",
    "updated_at": "2016-08-31T02:58:42Z",
    "body": "Squirrel.Windows does this by using a private NT API to determine the parent process's PID then waits for it to exit, Squirrel.Mac does something similar. Trying to edit an ASAR while it's live is a non-starter, sorry\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/243741938",
    "html_url": "https://github.com/electron/electron/issues/7034#issuecomment-243741938",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7034",
    "id": 243741938,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2016-08-31T11:57:28Z",
    "updated_at": "2016-08-31T11:57:28Z",
    "body": "The only portable solution is to ship a separate program and run it before the app is closed, it is impossible for us to provide a builtin solution since we are not able to run JavaScript code after the app is closed.\n"
  }
]