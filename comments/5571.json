[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/219900665",
    "html_url": "https://github.com/electron/electron/issues/5571#issuecomment-219900665",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/5571",
    "id": 219900665,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2016-05-18T01:23:32Z",
    "updated_at": "2016-05-18T01:23:32Z",
    "body": "> Error: Invalid package /usr/bin/sudo -n -E /Users/jviotti/Projects/playground/electron-elevate-asar/node_modules/electron-prebuilt/dist/Electron.app/Contents/MacOS/Electron /Users/jviotti/Projects/playground/electron-elevate-asar/app.asar\n\nFrom the error information the whole command `/usr/bin/sudo -n -E ...` is passed to `child_process.execFile`, instead of just the file. After looking into the implementation of `child_process.exec`, I found it just passes the whole command as file path to `child_process.execFile`.\n\nBefore this is fixed you have to modify the module to use `execFile` directly instead of `exec` to work around it.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/219910152",
    "html_url": "https://github.com/electron/electron/issues/5571#issuecomment-219910152",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/5571",
    "id": 219910152,
    "user": {
      "login": "jviotti",
      "id": 2192773,
      "avatar_url": "https://avatars3.githubusercontent.com/u/2192773?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jviotti",
      "html_url": "https://github.com/jviotti",
      "followers_url": "https://api.github.com/users/jviotti/followers",
      "following_url": "https://api.github.com/users/jviotti/following{/other_user}",
      "gists_url": "https://api.github.com/users/jviotti/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jviotti/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jviotti/subscriptions",
      "organizations_url": "https://api.github.com/users/jviotti/orgs",
      "repos_url": "https://api.github.com/users/jviotti/repos",
      "events_url": "https://api.github.com/users/jviotti/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jviotti/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-18T02:37:58Z",
    "updated_at": "2016-05-18T02:37:58Z",
    "body": "Hi @zcbenz ,\n\nThanks for your input. Using `execFile` indeed works correctly, and I can see how node passes the whole command to `execFile` in `child_process.js`.\n\nBy looking at Electron's `child_process.execFile` API override, I see that the whole command is detected to be an asar by the `splitPath()` function, causing `getOrCreateArchive()` to be called on the whole command. \n\nWhat do you think could be a real solution to this issue? Happy to work on it myself if you want. I can think of the following options right now:\n1. Override `child_process.exec` in `lib/common/asar.js` to split the command by white spaces, and call `execFile` by providing the first argument as the executable, although simply splitting the command might cause issues with paths including spaces (we could cover escaped white spaces though), and modifying the default `child_process.exec` behaviour might break existing code.\n2. Add a check to `splitPath()` to perform the splitting as mentioned before, and potentially return another parameter in the resulting array containing the array of arguments, omitting the executable. This means that `overrideAPI` should be changed to handle the new array of arguments accordingly.\n3. Add a check to `splitPath` to return `isAsar == false` if the command contains `.asar`, but the file path is part of a larger command, so the command is executable normally, without the `asar` layer.\n\nThe solution number 3 sounds like the most elegant one IMHO.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/219910342",
    "html_url": "https://github.com/electron/electron/issues/5571#issuecomment-219910342",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/5571",
    "id": 219910342,
    "user": {
      "login": "jviotti",
      "id": 2192773,
      "avatar_url": "https://avatars3.githubusercontent.com/u/2192773?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jviotti",
      "html_url": "https://github.com/jviotti",
      "followers_url": "https://api.github.com/users/jviotti/followers",
      "following_url": "https://api.github.com/users/jviotti/following{/other_user}",
      "gists_url": "https://api.github.com/users/jviotti/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jviotti/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jviotti/subscriptions",
      "organizations_url": "https://api.github.com/users/jviotti/orgs",
      "repos_url": "https://api.github.com/users/jviotti/repos",
      "events_url": "https://api.github.com/users/jviotti/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jviotti/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-18T02:39:46Z",
    "updated_at": "2016-05-18T02:39:46Z",
    "body": "Another potential workaround is to set `process.noAsar = true` right before the `child_process.exec` in `sudo-prompt`, and unset it afterwards.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/220168462",
    "html_url": "https://github.com/electron/electron/issues/5571#issuecomment-220168462",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/5571",
    "id": 220168462,
    "user": {
      "login": "jviotti",
      "id": 2192773,
      "avatar_url": "https://avatars3.githubusercontent.com/u/2192773?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jviotti",
      "html_url": "https://github.com/jviotti",
      "followers_url": "https://api.github.com/users/jviotti/followers",
      "following_url": "https://api.github.com/users/jviotti/following{/other_user}",
      "gists_url": "https://api.github.com/users/jviotti/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jviotti/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jviotti/subscriptions",
      "organizations_url": "https://api.github.com/users/jviotti/orgs",
      "repos_url": "https://api.github.com/users/jviotti/repos",
      "events_url": "https://api.github.com/users/jviotti/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jviotti/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-18T21:48:15Z",
    "updated_at": "2016-05-18T21:48:45Z",
    "body": "@zcbenz I'm working on the patch by following the third mentioned approach, but identifying the parts of the command is not something we could accurately do, since splitting by white spaces doesn't consider cases like paths containing spaces.\n\nSome thoughts:\n- We can split by whitespace and document a warning that commands containing white spaces lose asar support by default, which is of course not nice, and might break existing code.\n- Split by absolute paths. We can split the command using a RegExp to only consider absolute paths as separate parts of the command. For example `echo /path/to/my/asar with spaces.asar` would be split into `[ echo, /path/to/my/asar with spaces.asar ]` but `echo my/asar with spaces.asar` would not be split at all. Finding a RegExp that covers all cases, Windows included could be a bit tricky to get right.\n- We could be smarter in the way we detect something before or after the asar path. For example, if there is a space after `.asar`, which can very safely conclude there is something else afterwards. We could also check for an indicator of the beginning of an absolute or relative path before the `.asar` (for example: `./`, `/`, `<letter>:\\`, etc), and check if its index is `0` or `-1`. If that fails, we can assume there is something before.\n\nWhat do you think?\n\nI'm wondering if a better solution would be to accept a custom `child_process.exec` option to manually disable the asar support (e.g: `electronNoAsar: true`, or `electronDisableOverride: true`) and document it, since trying to make clever assumptions on the command mostly based on heuristics doesn't feel right, there are too many edge cases and ambiguities.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/220227244",
    "html_url": "https://github.com/electron/electron/issues/5571#issuecomment-220227244",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/5571",
    "id": 220227244,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2016-05-19T04:52:46Z",
    "updated_at": "2016-05-19T04:52:46Z",
    "body": "I think we can probably patch `child_process.exec` so it calls Node's original `execFile` instead of Electron's node.\n"
  }
]