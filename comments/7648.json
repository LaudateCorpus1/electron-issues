[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/255655792",
    "html_url": "https://github.com/electron/electron/pull/7648#issuecomment-255655792",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7648",
    "id": 255655792,
    "user": {
      "login": "kevinsawicki",
      "id": 671378,
      "avatar_url": "https://avatars0.githubusercontent.com/u/671378?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kevinsawicki",
      "html_url": "https://github.com/kevinsawicki",
      "followers_url": "https://api.github.com/users/kevinsawicki/followers",
      "following_url": "https://api.github.com/users/kevinsawicki/following{/other_user}",
      "gists_url": "https://api.github.com/users/kevinsawicki/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kevinsawicki/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kevinsawicki/subscriptions",
      "organizations_url": "https://api.github.com/users/kevinsawicki/orgs",
      "repos_url": "https://api.github.com/users/kevinsawicki/repos",
      "events_url": "https://api.github.com/users/kevinsawicki/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kevinsawicki/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2016-10-24T06:11:43Z",
    "updated_at": "2016-10-24T06:11:43Z",
    "body": "> There is literally nothing I can do about this as I can't \"unbind\" a callback.\n\nThis sounds like something we should address in Electron, not deliver dialog (and possibly other) callbacks that will trigger these errors, have you been able to reproduce this locally ever?\n\n>  I don't want random webContents crashes or race conditions to throw errors at my users that I can't catch in a sensible way\n\nWhat about if we set a `code` on the Error that would allow you to easily differentiate these errors and ignore them when you want? That way you wouldn't have to regex the error message which feels brittle.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/255658179",
    "html_url": "https://github.com/electron/electron/pull/7648#issuecomment-255658179",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7648",
    "id": 255658179,
    "user": {
      "login": "MarshallOfSound",
      "id": 6634592,
      "avatar_url": "https://avatars0.githubusercontent.com/u/6634592?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarshallOfSound",
      "html_url": "https://github.com/MarshallOfSound",
      "followers_url": "https://api.github.com/users/MarshallOfSound/followers",
      "following_url": "https://api.github.com/users/MarshallOfSound/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarshallOfSound/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarshallOfSound/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarshallOfSound/subscriptions",
      "organizations_url": "https://api.github.com/users/MarshallOfSound/orgs",
      "repos_url": "https://api.github.com/users/MarshallOfSound/repos",
      "events_url": "https://api.github.com/users/MarshallOfSound/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarshallOfSound/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-24T06:29:29Z",
    "updated_at": "2016-10-24T06:29:29Z",
    "body": "> have you been able to reproduce this locally ever?\n\nNope, I tried but I can't get the timing right (I assume it's a timing issue).  Across my X thousand installs the error has only made it's way back to Sentry 12 times each time on a different machine.  Admittedly the feature that uses this code is not heavily used so 12 isn't a fair assessment of how frequent the error is.  But the point is the error is **extremely** rare.\n\n> What about if we set a code on the Error that would allow you to easily differentiate these errors and ignore them when you want? That way you wouldn't have to regex the error message which feels brittle.\n\nYeah, as long as it was unique enough for me to put through a filter on raven that would do the job as well. 👍 \n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/260714909",
    "html_url": "https://github.com/electron/electron/pull/7648#issuecomment-260714909",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7648",
    "id": 260714909,
    "user": {
      "login": "kevinsawicki",
      "id": 671378,
      "avatar_url": "https://avatars0.githubusercontent.com/u/671378?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kevinsawicki",
      "html_url": "https://github.com/kevinsawicki",
      "followers_url": "https://api.github.com/users/kevinsawicki/followers",
      "following_url": "https://api.github.com/users/kevinsawicki/following{/other_user}",
      "gists_url": "https://api.github.com/users/kevinsawicki/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kevinsawicki/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kevinsawicki/subscriptions",
      "organizations_url": "https://api.github.com/users/kevinsawicki/orgs",
      "repos_url": "https://api.github.com/users/kevinsawicki/repos",
      "events_url": "https://api.github.com/users/kevinsawicki/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kevinsawicki/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2016-11-15T17:52:20Z",
    "updated_at": "2016-11-15T17:52:20Z",
    "body": "> Yeah, as long as it was unique enough for me to put through a filter on raven that would do the job as well. \n\nClosing out, lets go with custom error codes and/or error subclasses for all errors explicitly thrown in Electron to make filtering/ignoring easier.\n"
  }
]