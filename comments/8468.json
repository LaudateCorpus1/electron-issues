[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/274307534",
    "html_url": "https://github.com/electron/electron/issues/8468#issuecomment-274307534",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/8468",
    "id": 274307534,
    "user": {
      "login": "MarshallOfSound",
      "id": 6634592,
      "avatar_url": "https://avatars0.githubusercontent.com/u/6634592?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarshallOfSound",
      "html_url": "https://github.com/MarshallOfSound",
      "followers_url": "https://api.github.com/users/MarshallOfSound/followers",
      "following_url": "https://api.github.com/users/MarshallOfSound/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarshallOfSound/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarshallOfSound/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarshallOfSound/subscriptions",
      "organizations_url": "https://api.github.com/users/MarshallOfSound/orgs",
      "repos_url": "https://api.github.com/users/MarshallOfSound/repos",
      "events_url": "https://api.github.com/users/MarshallOfSound/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarshallOfSound/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-22T04:27:48Z",
    "updated_at": "2017-01-22T04:27:48Z",
    "body": "Merging into #2579\r\n\r\nAs a work around for now can't you run your code\r\n\r\n```js\r\nwindow.getEventListeners(window).beforeunload.forEach(function (listener) {\r\n  listener.remove();\r\n});\r\n```\r\n\r\nIn a preload script to disable GPM's unload blockers?  If you execute that code during the `exit` event on the BrowserWindow it should remove the listeners before they are called.\r\n\r\nhttps://github.com/electron/electron/blob/master/docs/api/browser-window.md#event-close\r\n\r\n> Emitted when the window is going to be closed. It's emitted before the beforeunload and unload event of the DOM. "
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/274308700",
    "html_url": "https://github.com/electron/electron/issues/8468#issuecomment-274308700",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/8468",
    "id": 274308700,
    "user": {
      "login": "twolfson",
      "id": 902488,
      "avatar_url": "https://avatars0.githubusercontent.com/u/902488?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/twolfson",
      "html_url": "https://github.com/twolfson",
      "followers_url": "https://api.github.com/users/twolfson/followers",
      "following_url": "https://api.github.com/users/twolfson/following{/other_user}",
      "gists_url": "https://api.github.com/users/twolfson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/twolfson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/twolfson/subscriptions",
      "organizations_url": "https://api.github.com/users/twolfson/orgs",
      "repos_url": "https://api.github.com/users/twolfson/repos",
      "events_url": "https://api.github.com/users/twolfson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/twolfson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-22T04:54:33Z",
    "updated_at": "2017-01-22T04:54:33Z",
    "body": "Unfortunately `window.getEventListeners` is only accessible within Dev Tools.\r\n\r\nhttps://developers.google.com/web/tools/chrome-devtools/console/command-line-reference#geteventlistenersobject\r\n\r\nWe have a couple of workaround options but they are more hacks than appropriate behavior as they're specific to our application:\r\n\r\n- Add our own `beforeunload` listener to pause music and then re-run `window.close()` in case of race conditions\r\n    - Specific to our application because of music bindings\r\n- Use `BrowserWindow.on('close')` with `process.exit()` which ignores BrowserWindow requests (unlike `app.quit()`)\r\n    - Specific to our application because some apps could have multiple windows"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/274309389",
    "html_url": "https://github.com/electron/electron/issues/8468#issuecomment-274309389",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/8468",
    "id": 274309389,
    "user": {
      "login": "MarshallOfSound",
      "id": 6634592,
      "avatar_url": "https://avatars0.githubusercontent.com/u/6634592?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarshallOfSound",
      "html_url": "https://github.com/MarshallOfSound",
      "followers_url": "https://api.github.com/users/MarshallOfSound/followers",
      "following_url": "https://api.github.com/users/MarshallOfSound/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarshallOfSound/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarshallOfSound/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarshallOfSound/subscriptions",
      "organizations_url": "https://api.github.com/users/MarshallOfSound/orgs",
      "repos_url": "https://api.github.com/users/MarshallOfSound/repos",
      "events_url": "https://api.github.com/users/MarshallOfSound/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarshallOfSound/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-22T05:05:51Z",
    "updated_at": "2017-01-22T05:05:51Z",
    "body": "@twolfson There is a way to execute devtools only JS from within Electron (I can't find it right now but will continue looking).\r\n\r\nYou could potentially use a spy technique on `window.addEventListener` and simply not allow the website to add listeners for `beforeunload`.  The pattern I refer to would look something like.\r\n\r\n```js\r\nconst originalAddEventListener = window.addEventListener;\r\nwindow.addEventListener = (eventName, ...args) => {\r\n  if (eventName === 'beforeunload') return;\r\n  return originalAddEventListener(eventName, ...args);\r\n};\r\n```\r\n\r\nEDIT:\r\n```js\r\nrequire('electron').remote.getCurrentWindow().devToolsWebContents.executeJavaScript\r\n```"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/274309660",
    "html_url": "https://github.com/electron/electron/issues/8468#issuecomment-274309660",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/8468",
    "id": 274309660,
    "user": {
      "login": "twolfson",
      "id": 902488,
      "avatar_url": "https://avatars0.githubusercontent.com/u/902488?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/twolfson",
      "html_url": "https://github.com/twolfson",
      "followers_url": "https://api.github.com/users/twolfson/followers",
      "following_url": "https://api.github.com/users/twolfson/following{/other_user}",
      "gists_url": "https://api.github.com/users/twolfson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/twolfson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/twolfson/subscriptions",
      "organizations_url": "https://api.github.com/users/twolfson/orgs",
      "repos_url": "https://api.github.com/users/twolfson/repos",
      "events_url": "https://api.github.com/users/twolfson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/twolfson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-22T05:12:03Z",
    "updated_at": "2017-01-22T05:12:03Z",
    "body": "Yea, I thought about stubbing/spying but it's even dirtier and could cause unexpected breakages if implemented improperly.\r\n\r\nWith respect to executing the DevTools context, neat and TIL. I think I always assumed that you had to have DevTools to run them but good to know you don't :+1: \r\n\r\nI think if push comes to shove I'll prob do the \"music pause\" workaround as it's targeted and won't break other intended functionality. However before doing that I wanted to get Electron's official plans for `beforeunload` before taking action to prevent doing unnecessary work"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/274309941",
    "html_url": "https://github.com/electron/electron/issues/8468#issuecomment-274309941",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/8468",
    "id": 274309941,
    "user": {
      "login": "MarshallOfSound",
      "id": 6634592,
      "avatar_url": "https://avatars0.githubusercontent.com/u/6634592?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarshallOfSound",
      "html_url": "https://github.com/MarshallOfSound",
      "followers_url": "https://api.github.com/users/MarshallOfSound/followers",
      "following_url": "https://api.github.com/users/MarshallOfSound/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarshallOfSound/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarshallOfSound/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarshallOfSound/subscriptions",
      "organizations_url": "https://api.github.com/users/MarshallOfSound/orgs",
      "repos_url": "https://api.github.com/users/MarshallOfSound/repos",
      "events_url": "https://api.github.com/users/MarshallOfSound/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarshallOfSound/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-22T05:20:28Z",
    "updated_at": "2017-01-22T05:20:28Z",
    "body": "Official plans and such for `beforeunload` will go through #2579"
  }
]