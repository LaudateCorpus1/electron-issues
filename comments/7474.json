[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/251436851",
    "html_url": "https://github.com/electron/electron/issues/7474#issuecomment-251436851",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7474",
    "id": 251436851,
    "user": {
      "login": "kevinsawicki",
      "id": 671378,
      "avatar_url": "https://avatars0.githubusercontent.com/u/671378?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kevinsawicki",
      "html_url": "https://github.com/kevinsawicki",
      "followers_url": "https://api.github.com/users/kevinsawicki/followers",
      "following_url": "https://api.github.com/users/kevinsawicki/following{/other_user}",
      "gists_url": "https://api.github.com/users/kevinsawicki/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kevinsawicki/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kevinsawicki/subscriptions",
      "organizations_url": "https://api.github.com/users/kevinsawicki/orgs",
      "repos_url": "https://api.github.com/users/kevinsawicki/repos",
      "events_url": "https://api.github.com/users/kevinsawicki/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kevinsawicki/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2016-10-04T16:17:14Z",
    "updated_at": "2016-10-04T16:17:14Z",
    "body": "> Electron version: 0.37.6\n\nThis is quite an old version of Electron, are you able to reproduce it as well on the latest release, 1.4.2?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/251518257",
    "html_url": "https://github.com/electron/electron/issues/7474#issuecomment-251518257",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7474",
    "id": 251518257,
    "user": {
      "login": "ramya-rao-a",
      "id": 16890566,
      "avatar_url": "https://avatars2.githubusercontent.com/u/16890566?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ramya-rao-a",
      "html_url": "https://github.com/ramya-rao-a",
      "followers_url": "https://api.github.com/users/ramya-rao-a/followers",
      "following_url": "https://api.github.com/users/ramya-rao-a/following{/other_user}",
      "gists_url": "https://api.github.com/users/ramya-rao-a/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ramya-rao-a/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ramya-rao-a/subscriptions",
      "organizations_url": "https://api.github.com/users/ramya-rao-a/orgs",
      "repos_url": "https://api.github.com/users/ramya-rao-a/repos",
      "events_url": "https://api.github.com/users/ramya-rao-a/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ramya-rao-a/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-04T21:24:44Z",
    "updated_at": "2016-10-04T21:24:44Z",
    "body": "We only recently upgraded to 1.3.7 It would still take a week or 2 for most of our users to upgrade as well. \nI can circle back to this thread by then with the numbers we see.\n\nI was curious to see if anyone else had seen similar issues.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/252086971",
    "html_url": "https://github.com/electron/electron/issues/7474#issuecomment-252086971",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7474",
    "id": 252086971,
    "user": {
      "login": "kevinsawicki",
      "id": 671378,
      "avatar_url": "https://avatars0.githubusercontent.com/u/671378?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kevinsawicki",
      "html_url": "https://github.com/kevinsawicki",
      "followers_url": "https://api.github.com/users/kevinsawicki/followers",
      "following_url": "https://api.github.com/users/kevinsawicki/following{/other_user}",
      "gists_url": "https://api.github.com/users/kevinsawicki/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kevinsawicki/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kevinsawicki/subscriptions",
      "organizations_url": "https://api.github.com/users/kevinsawicki/orgs",
      "repos_url": "https://api.github.com/users/kevinsawicki/repos",
      "events_url": "https://api.github.com/users/kevinsawicki/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kevinsawicki/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2016-10-06T20:59:40Z",
    "updated_at": "2016-10-06T20:59:40Z",
    "body": "> I can circle back to this thread by then with the numbers we see.\n\nSounds good, I'm going to close this out until more information is available then. If you still see this on newer versions, please comment here and include any reproduction steps you have as well and we can reopen this.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/258547502",
    "html_url": "https://github.com/electron/electron/issues/7474#issuecomment-258547502",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7474",
    "id": 258547502,
    "user": {
      "login": "fridgerator",
      "id": 2133368,
      "avatar_url": "https://avatars0.githubusercontent.com/u/2133368?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fridgerator",
      "html_url": "https://github.com/fridgerator",
      "followers_url": "https://api.github.com/users/fridgerator/followers",
      "following_url": "https://api.github.com/users/fridgerator/following{/other_user}",
      "gists_url": "https://api.github.com/users/fridgerator/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fridgerator/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fridgerator/subscriptions",
      "organizations_url": "https://api.github.com/users/fridgerator/orgs",
      "repos_url": "https://api.github.com/users/fridgerator/repos",
      "events_url": "https://api.github.com/users/fridgerator/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fridgerator/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-04T21:06:33Z",
    "updated_at": "2016-11-04T21:06:33Z",
    "body": "I am seeing this issue on MacOS Sierra.\n\nI have a server listening for POST requests.  I see the request come through but it is empty, no request body or form data.\n\nI was using Electron v1.3.5, updated to 1.4.5 and same issue.\n\nNot doing anything special outside of the documentation:\n\n```\nvar crashReportUrl = 'http://localhost:3001/crashreporter/report/';\n\ncrashReporter.start({\n    productName: 'Test',\n    companyName: 'Test Company',\n    submitURL: crashReportUrl,\n    autoSubmit: true,\n})\n```\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/259207365",
    "html_url": "https://github.com/electron/electron/issues/7474#issuecomment-259207365",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7474",
    "id": 259207365,
    "user": {
      "login": "ramya-rao-a",
      "id": 16890566,
      "avatar_url": "https://avatars2.githubusercontent.com/u/16890566?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ramya-rao-a",
      "html_url": "https://github.com/ramya-rao-a",
      "followers_url": "https://api.github.com/users/ramya-rao-a/followers",
      "following_url": "https://api.github.com/users/ramya-rao-a/following{/other_user}",
      "gists_url": "https://api.github.com/users/ramya-rao-a/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ramya-rao-a/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ramya-rao-a/subscriptions",
      "organizations_url": "https://api.github.com/users/ramya-rao-a/orgs",
      "repos_url": "https://api.github.com/users/ramya-rao-a/repos",
      "events_url": "https://api.github.com/users/ramya-rao-a/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ramya-rao-a/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-08T17:47:14Z",
    "updated_at": "2016-11-08T17:47:14Z",
    "body": "@kevinsawicki I have a repro!\n\nhttps://github.com/ramya-rao-a/electron-quick-start/tree/crash-testing is a modified version of the `electron-quick-start` example. The main process creates 2 instances of BrowserWindow, thus creating 2 renderer processes. Crash Reporter is initialized in the main process. \n- First Window\n  Buttons are available to initialize crash reporter, create a crash and get last crash. \n- Second Window\n  Buttons to crash without initializing the crash reporter.\n\nSteps\n- On the first window, click on the button that initializes crash reporter, then click on \"Crash\"\n- Crash Report gets submitted with crash dump, product and company info\n- On the second window, click on the \"Crash\" button\n- Crash Report gets submitted with crash dump only in Mac. No Crash report gets submitted in Windows.\n\nNow according to the docs\n\n> Note: On macOS, Electron uses a new crashpad client, which is different from breakpad on Windows and Linux. To enable the crash collection feature, you are required to call the crashReporter.start API to initialize crashpad in the main process and in each renderer process from which you wish to collect crash reports.\n\nBut looks like, crash reports get submitted (only the dump) on Mac but none on Windows when crash reporter is not initialized from each renderer process. \n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/259894604",
    "html_url": "https://github.com/electron/electron/issues/7474#issuecomment-259894604",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7474",
    "id": 259894604,
    "user": {
      "login": "ramya-rao-a",
      "id": 16890566,
      "avatar_url": "https://avatars2.githubusercontent.com/u/16890566?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ramya-rao-a",
      "html_url": "https://github.com/ramya-rao-a",
      "followers_url": "https://api.github.com/users/ramya-rao-a/followers",
      "following_url": "https://api.github.com/users/ramya-rao-a/following{/other_user}",
      "gists_url": "https://api.github.com/users/ramya-rao-a/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ramya-rao-a/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ramya-rao-a/subscriptions",
      "organizations_url": "https://api.github.com/users/ramya-rao-a/orgs",
      "repos_url": "https://api.github.com/users/ramya-rao-a/repos",
      "events_url": "https://api.github.com/users/ramya-rao-a/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ramya-rao-a/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-11T07:01:35Z",
    "updated_at": "2016-11-11T07:04:45Z",
    "body": "@kevinsawicki I have an update.\n\nIn my example (https://github.com/ramya-rao-a/electron-quick-start/tree/crash-testing), I have changed the 3rd button from \"Last Crash\" to \"Crash in a child process\". Clicking on this will run a crashing C program.\nThis again results in the crash reporter sending just the dump in the crash report (without any other info) in Mac. In Windows, nothing is sent\n\nI believe this might be the reason for the mysterious crashes we have been seeing as mentioned here https://github.com/electron/electron/issues/7474#issue-180790198.\nCrash Reporter is initialized in all of our renderer processes. These renderer processes fork new process to do certain work. If the forked processes crash, then the electron crash reporter ends up submitting crash reports with just the dump and only in Mac\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/260086483",
    "html_url": "https://github.com/electron/electron/issues/7474#issuecomment-260086483",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7474",
    "id": 260086483,
    "user": {
      "login": "ramya-rao-a",
      "id": 16890566,
      "avatar_url": "https://avatars2.githubusercontent.com/u/16890566?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ramya-rao-a",
      "html_url": "https://github.com/ramya-rao-a",
      "followers_url": "https://api.github.com/users/ramya-rao-a/followers",
      "following_url": "https://api.github.com/users/ramya-rao-a/following{/other_user}",
      "gists_url": "https://api.github.com/users/ramya-rao-a/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ramya-rao-a/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ramya-rao-a/subscriptions",
      "organizations_url": "https://api.github.com/users/ramya-rao-a/orgs",
      "repos_url": "https://api.github.com/users/ramya-rao-a/repos",
      "events_url": "https://api.github.com/users/ramya-rao-a/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ramya-rao-a/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-12T00:25:34Z",
    "updated_at": "2016-11-12T00:29:51Z",
    "body": "Added 2 more examples\n- Create a forked process from where the crashing C program is executed using child_process.exec\n- Create a forked process that runs a native module which crashes.\n\nSame results.\nMac - Just the crash dump is submitted in the crash report\nWindows - Nothing\n\n**Summary:**\nCrashes in a process (electron and node both) where crash reporter is not initialized get reported with just the dump and no metadata in Mac. In Windows, such crashes are ignored.\n\nWe are particularly interested in the crashes in the node processes forked from a renderer process. We would like to send different metadata from such crashes so as to identify which of our process are crashing. And this should work across platforms.\n\nThe comments at [electron/crash_reporter_mac.mm](https://github.com/electron/electron/blob/91591f37e6798d63b5a638f0f39b85359f25dcb0/atom/common/crash_reporter/crash_reporter_mac.mm#L37) look interesting\n\n```\n// check whether crashpad has been initialized.\n// Only need to initialize once.\n```\n\n Also it looks like the url for where the crashes get reported is set only if the current process is the main process.\n\nPlease let me know if I can help in any way\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/260717246",
    "html_url": "https://github.com/electron/electron/issues/7474#issuecomment-260717246",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7474",
    "id": 260717246,
    "user": {
      "login": "ramya-rao-a",
      "id": 16890566,
      "avatar_url": "https://avatars2.githubusercontent.com/u/16890566?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ramya-rao-a",
      "html_url": "https://github.com/ramya-rao-a",
      "followers_url": "https://api.github.com/users/ramya-rao-a/followers",
      "following_url": "https://api.github.com/users/ramya-rao-a/following{/other_user}",
      "gists_url": "https://api.github.com/users/ramya-rao-a/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ramya-rao-a/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ramya-rao-a/subscriptions",
      "organizations_url": "https://api.github.com/users/ramya-rao-a/orgs",
      "repos_url": "https://api.github.com/users/ramya-rao-a/repos",
      "events_url": "https://api.github.com/users/ramya-rao-a/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ramya-rao-a/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-15T18:01:11Z",
    "updated_at": "2016-11-15T18:01:11Z",
    "body": "@fridgerator Not at all, the issue is still open. We do need a fix where we can send metadata for crashes from child processes\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/260717583",
    "html_url": "https://github.com/electron/electron/issues/7474#issuecomment-260717583",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7474",
    "id": 260717583,
    "user": {
      "login": "fridgerator",
      "id": 2133368,
      "avatar_url": "https://avatars0.githubusercontent.com/u/2133368?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fridgerator",
      "html_url": "https://github.com/fridgerator",
      "followers_url": "https://api.github.com/users/fridgerator/followers",
      "following_url": "https://api.github.com/users/fridgerator/following{/other_user}",
      "gists_url": "https://api.github.com/users/fridgerator/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fridgerator/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fridgerator/subscriptions",
      "organizations_url": "https://api.github.com/users/fridgerator/orgs",
      "repos_url": "https://api.github.com/users/fridgerator/repos",
      "events_url": "https://api.github.com/users/fridgerator/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fridgerator/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-15T18:02:30Z",
    "updated_at": "2016-11-15T18:02:30Z",
    "body": "@ramya-rao-a I was mistaken I thought the issue was closed.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/260721140",
    "html_url": "https://github.com/electron/electron/issues/7474#issuecomment-260721140",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7474",
    "id": 260721140,
    "user": {
      "login": "kevinsawicki",
      "id": 671378,
      "avatar_url": "https://avatars0.githubusercontent.com/u/671378?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kevinsawicki",
      "html_url": "https://github.com/kevinsawicki",
      "followers_url": "https://api.github.com/users/kevinsawicki/followers",
      "following_url": "https://api.github.com/users/kevinsawicki/following{/other_user}",
      "gists_url": "https://api.github.com/users/kevinsawicki/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kevinsawicki/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kevinsawicki/subscriptions",
      "organizations_url": "https://api.github.com/users/kevinsawicki/orgs",
      "repos_url": "https://api.github.com/users/kevinsawicki/repos",
      "events_url": "https://api.github.com/users/kevinsawicki/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kevinsawicki/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2016-11-15T18:15:38Z",
    "updated_at": "2016-11-15T18:15:38Z",
    "body": "@ramya-rao-a Thanks for all the great investigatory work, super super helpful. It seems like there are several issues that need to be addressed to get the crash reporter behavior consistent across platforms and to ideally support crashed forked processes.\n\nAre you interested in working further on this and fixing this in core Electron?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/262116104",
    "html_url": "https://github.com/electron/electron/issues/7474#issuecomment-262116104",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7474",
    "id": 262116104,
    "user": {
      "login": "ramya-rao-a",
      "id": 16890566,
      "avatar_url": "https://avatars2.githubusercontent.com/u/16890566?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ramya-rao-a",
      "html_url": "https://github.com/ramya-rao-a",
      "followers_url": "https://api.github.com/users/ramya-rao-a/followers",
      "following_url": "https://api.github.com/users/ramya-rao-a/following{/other_user}",
      "gists_url": "https://api.github.com/users/ramya-rao-a/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ramya-rao-a/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ramya-rao-a/subscriptions",
      "organizations_url": "https://api.github.com/users/ramya-rao-a/orgs",
      "repos_url": "https://api.github.com/users/ramya-rao-a/repos",
      "events_url": "https://api.github.com/users/ramya-rao-a/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ramya-rao-a/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-22T00:58:04Z",
    "updated_at": "2016-11-22T01:00:35Z",
    "body": "@kevinsawicki Sorry it took a while to get back.\r\nYes, I am interested in working on a fix for this in core Electron.\r\n\r\nI found a few more interesting cases. Created a separate issue #8045 for them. Mac is using the submit-url from the main process to report crashes coming from the renderer process. Windows doesn't. \r\n\r\nWe can use the current issue to track crash reporting in forked process across platforms.\r\nIs that ok?\r\n\r\nI'll first start working on #8045.\r\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/262432128",
    "html_url": "https://github.com/electron/electron/issues/7474#issuecomment-262432128",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7474",
    "id": 262432128,
    "user": {
      "login": "ramya-rao-a",
      "id": 16890566,
      "avatar_url": "https://avatars2.githubusercontent.com/u/16890566?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ramya-rao-a",
      "html_url": "https://github.com/ramya-rao-a",
      "followers_url": "https://api.github.com/users/ramya-rao-a/followers",
      "following_url": "https://api.github.com/users/ramya-rao-a/following{/other_user}",
      "gists_url": "https://api.github.com/users/ramya-rao-a/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ramya-rao-a/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ramya-rao-a/subscriptions",
      "organizations_url": "https://api.github.com/users/ramya-rao-a/orgs",
      "repos_url": "https://api.github.com/users/ramya-rao-a/repos",
      "events_url": "https://api.github.com/users/ramya-rao-a/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ramya-rao-a/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-23T04:21:26Z",
    "updated_at": "2016-11-23T04:21:26Z",
    "body": "@kevinsawicki As you mentioned in the other issue, the below from the [docs](https://cs.chromium.org/chromium/src/third_party/crashpad/crashpad/client/crashpad_client.h?q=crashpad::CrashpadClient&sq=package:chromium&dr=Ss&l=57) explain the crashes being reported from the child processes in Mac\r\n\r\n>Exception ports are inherited, so a Crashpad handler started here will remain the handler for any child processes created after StartHandler() is called. Child processes do not need to call StartHandler() or be aware of Crashpad in any way. \r\n\r\nWe would want each child process to call `crashReporter.start()` to set up the module annotations (metadata) to be reported along with the crash. For this to happen, the electron API should be accessible by the child processes.\r\n\r\nAs far as I could gather there is no way for a node process to access electron APIs. Do you have any insights on this?\r\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/262434962",
    "html_url": "https://github.com/electron/electron/issues/7474#issuecomment-262434962",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7474",
    "id": 262434962,
    "user": {
      "login": "MarshallOfSound",
      "id": 6634592,
      "avatar_url": "https://avatars0.githubusercontent.com/u/6634592?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarshallOfSound",
      "html_url": "https://github.com/MarshallOfSound",
      "followers_url": "https://api.github.com/users/MarshallOfSound/followers",
      "following_url": "https://api.github.com/users/MarshallOfSound/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarshallOfSound/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarshallOfSound/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarshallOfSound/subscriptions",
      "organizations_url": "https://api.github.com/users/MarshallOfSound/orgs",
      "repos_url": "https://api.github.com/users/MarshallOfSound/repos",
      "events_url": "https://api.github.com/users/MarshallOfSound/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarshallOfSound/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-23T04:59:42Z",
    "updated_at": "2016-11-23T04:59:42Z",
    "body": "@ramya-rao-a I've never tried this but theoretically you could set up your application to work like node does.  I.e. When it has a path to a JS file it runs that JS file.  Then instead of forking with `ELECTRON_RUN_AS_NODE` just spawn your executable with a path to your node JS script.  Then you have full Electron API access.\r\n\r\n^^ Untested and may not work but it's an idea 😆 "
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/262448580",
    "html_url": "https://github.com/electron/electron/issues/7474#issuecomment-262448580",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7474",
    "id": 262448580,
    "user": {
      "login": "ramya-rao-a",
      "id": 16890566,
      "avatar_url": "https://avatars2.githubusercontent.com/u/16890566?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ramya-rao-a",
      "html_url": "https://github.com/ramya-rao-a",
      "followers_url": "https://api.github.com/users/ramya-rao-a/followers",
      "following_url": "https://api.github.com/users/ramya-rao-a/following{/other_user}",
      "gists_url": "https://api.github.com/users/ramya-rao-a/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ramya-rao-a/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ramya-rao-a/subscriptions",
      "organizations_url": "https://api.github.com/users/ramya-rao-a/orgs",
      "repos_url": "https://api.github.com/users/ramya-rao-a/repos",
      "events_url": "https://api.github.com/users/ramya-rao-a/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ramya-rao-a/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-23T07:28:17Z",
    "updated_at": "2016-11-23T07:39:36Z",
    "body": "@MarshallOfSound When you say \"spawn your executable\" do you mean spawn electron?\r\n\r\nThe below worked in Mac. Will test in Windows and circle back\r\n\r\n`spawn('./node_modules/.bin/electron', ['forkedProcess1.js'])`\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/262455376",
    "html_url": "https://github.com/electron/electron/issues/7474#issuecomment-262455376",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7474",
    "id": 262455376,
    "user": {
      "login": "bpasero",
      "id": 900690,
      "avatar_url": "https://avatars0.githubusercontent.com/u/900690?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bpasero",
      "html_url": "https://github.com/bpasero",
      "followers_url": "https://api.github.com/users/bpasero/followers",
      "following_url": "https://api.github.com/users/bpasero/following{/other_user}",
      "gists_url": "https://api.github.com/users/bpasero/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bpasero/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bpasero/subscriptions",
      "organizations_url": "https://api.github.com/users/bpasero/orgs",
      "repos_url": "https://api.github.com/users/bpasero/repos",
      "events_url": "https://api.github.com/users/bpasero/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bpasero/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-23T08:21:13Z",
    "updated_at": "2016-11-23T08:21:13Z",
    "body": "I do not see how spawning a full blown electron helps in this case. Our use case is to specifically run node.js through electron and not spawn a full instance of electron."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/262561496",
    "html_url": "https://github.com/electron/electron/issues/7474#issuecomment-262561496",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7474",
    "id": 262561496,
    "user": {
      "login": "ramya-rao-a",
      "id": 16890566,
      "avatar_url": "https://avatars2.githubusercontent.com/u/16890566?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ramya-rao-a",
      "html_url": "https://github.com/ramya-rao-a",
      "followers_url": "https://api.github.com/users/ramya-rao-a/followers",
      "following_url": "https://api.github.com/users/ramya-rao-a/following{/other_user}",
      "gists_url": "https://api.github.com/users/ramya-rao-a/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ramya-rao-a/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ramya-rao-a/subscriptions",
      "organizations_url": "https://api.github.com/users/ramya-rao-a/orgs",
      "repos_url": "https://api.github.com/users/ramya-rao-a/repos",
      "events_url": "https://api.github.com/users/ramya-rao-a/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ramya-rao-a/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-23T16:20:45Z",
    "updated_at": "2016-11-23T16:20:45Z",
    "body": "@bpasero True, using a full blown electron is an overkill for us, but looks like thats the only way to access electron apis at the moment.\r\n\r\nThis has been discussed a few times. See #6656 and #4520\r\n\r\nOur scenario is to be able to use the `crashReporter` module from each of the child node processes.\r\n\r\nWhat do you think about using a stripped down version of electron (with just the modules we want) to spawn the child processes?\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/262594110",
    "html_url": "https://github.com/electron/electron/issues/7474#issuecomment-262594110",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7474",
    "id": 262594110,
    "user": {
      "login": "bpasero",
      "id": 900690,
      "avatar_url": "https://avatars0.githubusercontent.com/u/900690?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bpasero",
      "html_url": "https://github.com/bpasero",
      "followers_url": "https://api.github.com/users/bpasero/followers",
      "following_url": "https://api.github.com/users/bpasero/following{/other_user}",
      "gists_url": "https://api.github.com/users/bpasero/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bpasero/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bpasero/subscriptions",
      "organizations_url": "https://api.github.com/users/bpasero/orgs",
      "repos_url": "https://api.github.com/users/bpasero/repos",
      "events_url": "https://api.github.com/users/bpasero/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bpasero/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-23T18:24:34Z",
    "updated_at": "2016-11-23T18:24:34Z",
    "body": "I know it might not be a popular topic but what about adding a module that is available from the node.js side? https://github.com/electron/electron/pull/7578/files demonstrates how new methods can be added to the node.js context easily. I would prefer such a solution over spawning electron. I do not see how spawning electron is actually possible for us, so I would not think this is a direction we should push forward."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/262601813",
    "html_url": "https://github.com/electron/electron/issues/7474#issuecomment-262601813",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7474",
    "id": 262601813,
    "user": {
      "login": "ramya-rao-a",
      "id": 16890566,
      "avatar_url": "https://avatars2.githubusercontent.com/u/16890566?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ramya-rao-a",
      "html_url": "https://github.com/ramya-rao-a",
      "followers_url": "https://api.github.com/users/ramya-rao-a/followers",
      "following_url": "https://api.github.com/users/ramya-rao-a/following{/other_user}",
      "gists_url": "https://api.github.com/users/ramya-rao-a/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ramya-rao-a/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ramya-rao-a/subscriptions",
      "organizations_url": "https://api.github.com/users/ramya-rao-a/orgs",
      "repos_url": "https://api.github.com/users/ramya-rao-a/repos",
      "events_url": "https://api.github.com/users/ramya-rao-a/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ramya-rao-a/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-23T18:55:57Z",
    "updated_at": "2016-11-23T18:55:57Z",
    "body": "@bpasero That opens up a whole new world of possibilities!\r\n\r\n@kevinsawicki Thoughts on @bpasero's idea? I see that you had worked on adding the `log` method to the node.js context."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/264039076",
    "html_url": "https://github.com/electron/electron/issues/7474#issuecomment-264039076",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7474",
    "id": 264039076,
    "user": {
      "login": "ramya-rao-a",
      "id": 16890566,
      "avatar_url": "https://avatars2.githubusercontent.com/u/16890566?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ramya-rao-a",
      "html_url": "https://github.com/ramya-rao-a",
      "followers_url": "https://api.github.com/users/ramya-rao-a/followers",
      "following_url": "https://api.github.com/users/ramya-rao-a/following{/other_user}",
      "gists_url": "https://api.github.com/users/ramya-rao-a/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ramya-rao-a/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ramya-rao-a/subscriptions",
      "organizations_url": "https://api.github.com/users/ramya-rao-a/orgs",
      "repos_url": "https://api.github.com/users/ramya-rao-a/repos",
      "events_url": "https://api.github.com/users/ramya-rao-a/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ramya-rao-a/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-01T00:14:58Z",
    "updated_at": "2016-12-01T00:14:58Z",
    "body": "PR #8109  is the first draft of the fix based on @bpasero 's suggestion. \r\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/265510216",
    "html_url": "https://github.com/electron/electron/issues/7474#issuecomment-265510216",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7474",
    "id": 265510216,
    "user": {
      "login": "kevinsawicki",
      "id": 671378,
      "avatar_url": "https://avatars0.githubusercontent.com/u/671378?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kevinsawicki",
      "html_url": "https://github.com/kevinsawicki",
      "followers_url": "https://api.github.com/users/kevinsawicki/followers",
      "following_url": "https://api.github.com/users/kevinsawicki/following{/other_user}",
      "gists_url": "https://api.github.com/users/kevinsawicki/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kevinsawicki/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kevinsawicki/subscriptions",
      "organizations_url": "https://api.github.com/users/kevinsawicki/orgs",
      "repos_url": "https://api.github.com/users/kevinsawicki/repos",
      "events_url": "https://api.github.com/users/kevinsawicki/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kevinsawicki/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2016-12-07T17:16:58Z",
    "updated_at": "2016-12-07T17:16:58Z",
    "body": "> Thoughts on @bpasero's idea? I see that you had worked on adding the log method to the node.js context.\r\n\r\nSorry for the delayed response, this pattern sounds good to me."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/267387032",
    "html_url": "https://github.com/electron/electron/issues/7474#issuecomment-267387032",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7474",
    "id": 267387032,
    "user": {
      "login": "gerges",
      "id": 320654,
      "avatar_url": "https://avatars0.githubusercontent.com/u/320654?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gerges",
      "html_url": "https://github.com/gerges",
      "followers_url": "https://api.github.com/users/gerges/followers",
      "following_url": "https://api.github.com/users/gerges/following{/other_user}",
      "gists_url": "https://api.github.com/users/gerges/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gerges/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gerges/subscriptions",
      "organizations_url": "https://api.github.com/users/gerges/orgs",
      "repos_url": "https://api.github.com/users/gerges/repos",
      "events_url": "https://api.github.com/users/gerges/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gerges/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-15T17:21:25Z",
    "updated_at": "2016-12-15T17:21:25Z",
    "body": "While this ticket is open, it seems like in the crashpad impl `reporter.id` is the entire response-body from the server, instead of `crash_id`"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/274972520",
    "html_url": "https://github.com/electron/electron/issues/7474#issuecomment-274972520",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7474",
    "id": 274972520,
    "user": {
      "login": "kevinsawicki",
      "id": 671378,
      "avatar_url": "https://avatars0.githubusercontent.com/u/671378?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kevinsawicki",
      "html_url": "https://github.com/kevinsawicki",
      "followers_url": "https://api.github.com/users/kevinsawicki/followers",
      "following_url": "https://api.github.com/users/kevinsawicki/following{/other_user}",
      "gists_url": "https://api.github.com/users/kevinsawicki/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kevinsawicki/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kevinsawicki/subscriptions",
      "organizations_url": "https://api.github.com/users/kevinsawicki/orgs",
      "repos_url": "https://api.github.com/users/kevinsawicki/repos",
      "events_url": "https://api.github.com/users/kevinsawicki/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kevinsawicki/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2017-01-24T23:26:23Z",
    "updated_at": "2017-01-24T23:26:23Z",
    "body": "Closing this out, #8109  has been merged."
  }
]