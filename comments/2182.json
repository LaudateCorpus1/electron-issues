[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/120655653",
    "html_url": "https://github.com/electron/electron/issues/2182#issuecomment-120655653",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2182",
    "id": 120655653,
    "user": {
      "login": "paulcbetts",
      "id": 1396,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1396?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulcbetts",
      "html_url": "https://github.com/paulcbetts",
      "followers_url": "https://api.github.com/users/paulcbetts/followers",
      "following_url": "https://api.github.com/users/paulcbetts/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulcbetts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulcbetts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulcbetts/subscriptions",
      "organizations_url": "https://api.github.com/users/paulcbetts/orgs",
      "repos_url": "https://api.github.com/users/paulcbetts/repos",
      "events_url": "https://api.github.com/users/paulcbetts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulcbetts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-11T19:56:20Z",
    "updated_at": "2015-07-11T19:56:20Z",
    "body": "If you want to intercept HTTP requests, a Service Worker might work for your scenario\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/120749359",
    "html_url": "https://github.com/electron/electron/issues/2182#issuecomment-120749359",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2182",
    "id": 120749359,
    "user": {
      "login": "paulcbetts",
      "id": 1396,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1396?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulcbetts",
      "html_url": "https://github.com/paulcbetts",
      "followers_url": "https://api.github.com/users/paulcbetts/followers",
      "following_url": "https://api.github.com/users/paulcbetts/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulcbetts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulcbetts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulcbetts/subscriptions",
      "organizations_url": "https://api.github.com/users/paulcbetts/orgs",
      "repos_url": "https://api.github.com/users/paulcbetts/repos",
      "events_url": "https://api.github.com/users/paulcbetts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulcbetts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-12T17:36:05Z",
    "updated_at": "2015-07-12T17:36:05Z",
    "body": "This is still a bug! :)\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/120761703",
    "html_url": "https://github.com/electron/electron/issues/2182#issuecomment-120761703",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2182",
    "id": 120761703,
    "user": {
      "login": "deepak1556",
      "id": 964386,
      "avatar_url": "https://avatars2.githubusercontent.com/u/964386?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/deepak1556",
      "html_url": "https://github.com/deepak1556",
      "followers_url": "https://api.github.com/users/deepak1556/followers",
      "following_url": "https://api.github.com/users/deepak1556/following{/other_user}",
      "gists_url": "https://api.github.com/users/deepak1556/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/deepak1556/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/deepak1556/subscriptions",
      "organizations_url": "https://api.github.com/users/deepak1556/orgs",
      "repos_url": "https://api.github.com/users/deepak1556/repos",
      "events_url": "https://api.github.com/users/deepak1556/events{/privacy}",
      "received_events_url": "https://api.github.com/users/deepak1556/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-12T20:57:38Z",
    "updated_at": "2015-07-12T20:57:38Z",
    "body": "@zcbenz guess we should run the `URL::Fetcher` in a new dummy request context, instead of using the existing one ?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/121405766",
    "html_url": "https://github.com/electron/electron/issues/2182#issuecomment-121405766",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2182",
    "id": 121405766,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2015-07-14T22:04:49Z",
    "updated_at": "2015-07-14T22:04:49Z",
    "body": "@deepak1556 Creating a new request context for the fetch job would make the request have independent cookies, which is not expected on many cases, I think the ideal fix is to have multiple session support so users can avoid the infinite loop by passing a new session object:\n\n``` js\nvar session = app.createEmptySession();\nprotocol.interceptProtocol('http', function(request) {\n  var url = request.url;\n  return new protocol.RequestHttpJob({\n    session: session,\n    url:url+\"?dd=1\"\n  });\n});\n```\n\nBut since it still needs some work to have multiple session support, I think we can allow users to specify a `null` session which creates a new request context for the fetch job:\n\n``` js\n  return new protocol.RequestHttpJob({\n    session: null,\n    url:url+\"?dd=1\"\n  });\n```\n\nSo I think you can change your PR to accept a `session` in `RequestHttpJob`, and if it is set to `null` then create a new request context, otherwise it would reuse current request context. \n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/121488701",
    "html_url": "https://github.com/electron/electron/issues/2182#issuecomment-121488701",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2182",
    "id": 121488701,
    "user": {
      "login": "deepak1556",
      "id": 964386,
      "avatar_url": "https://avatars2.githubusercontent.com/u/964386?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/deepak1556",
      "html_url": "https://github.com/deepak1556",
      "followers_url": "https://api.github.com/users/deepak1556/followers",
      "following_url": "https://api.github.com/users/deepak1556/following{/other_user}",
      "gists_url": "https://api.github.com/users/deepak1556/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/deepak1556/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/deepak1556/subscriptions",
      "organizations_url": "https://api.github.com/users/deepak1556/orgs",
      "repos_url": "https://api.github.com/users/deepak1556/repos",
      "events_url": "https://api.github.com/users/deepak1556/events{/privacy}",
      "received_events_url": "https://api.github.com/users/deepak1556/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-15T05:05:49Z",
    "updated_at": "2015-07-15T05:05:49Z",
    "body": "> I think the ideal fix is to have multiple session support so users can avoid the infinite loop by passing a new session object\n\n:+1: \n\n> if it is set to null then create a new request context, otherwise it would reuse current request context.\n\nif the sesssion is not null, the request context provided will be from the new session object right ?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/121899756",
    "html_url": "https://github.com/electron/electron/issues/2182#issuecomment-121899756",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2182",
    "id": 121899756,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2015-07-16T09:34:07Z",
    "updated_at": "2015-07-16T09:34:07Z",
    "body": "> if the sesssion is not null, the request context provided will be from the new session object right ?\n\nThe answer is yes when we have multi-session support.\n"
  }
]