[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/221532541",
    "html_url": "https://github.com/electron/electron/issues/5672#issuecomment-221532541",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/5672",
    "id": 221532541,
    "user": {
      "login": "sedwards2009",
      "id": 6926644,
      "avatar_url": "https://avatars0.githubusercontent.com/u/6926644?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sedwards2009",
      "html_url": "https://github.com/sedwards2009",
      "followers_url": "https://api.github.com/users/sedwards2009/followers",
      "following_url": "https://api.github.com/users/sedwards2009/following{/other_user}",
      "gists_url": "https://api.github.com/users/sedwards2009/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sedwards2009/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sedwards2009/subscriptions",
      "organizations_url": "https://api.github.com/users/sedwards2009/orgs",
      "repos_url": "https://api.github.com/users/sedwards2009/repos",
      "events_url": "https://api.github.com/users/sedwards2009/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sedwards2009/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-25T10:19:55Z",
    "updated_at": "2016-05-25T10:19:55Z",
    "body": "@denysvitali The general speed of Electron is highly dependent on the upstream project Blink which is the \"guts\" of the Google Chrome browser and also Electon. Electron itself doesn't have much control over how the guts works, also Electron most likely doesn't have much negative impact either.\n\nAlso note that you are assuming that the speed difference between native apps and Electron based apps is purely dependent on Electron itself. How the apps which run on Electron are designed and written has a huge impact on their performance.\n\nSublime text for example can, and probably does, do its own lay out and rendering of text into the window. Electron based apps could also do this by using the Canvas API or even WebGL, but generally they don't. They use HTML and CSS for layout and rendering because this way they can also get a lot of functionality for \"free\". It is a big trade off of course.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/221610291",
    "html_url": "https://github.com/electron/electron/issues/5672#issuecomment-221610291",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/5672",
    "id": 221610291,
    "user": {
      "login": "mnquintana",
      "id": 823545,
      "avatar_url": "https://avatars0.githubusercontent.com/u/823545?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mnquintana",
      "html_url": "https://github.com/mnquintana",
      "followers_url": "https://api.github.com/users/mnquintana/followers",
      "following_url": "https://api.github.com/users/mnquintana/following{/other_user}",
      "gists_url": "https://api.github.com/users/mnquintana/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mnquintana/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mnquintana/subscriptions",
      "organizations_url": "https://api.github.com/users/mnquintana/orgs",
      "repos_url": "https://api.github.com/users/mnquintana/repos",
      "events_url": "https://api.github.com/users/mnquintana/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mnquintana/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-25T15:20:15Z",
    "updated_at": "2016-05-25T17:35:09Z",
    "body": "This has much more to do with how individual Electron-based apps are written than it does Electron itself. Yes, DOM operations _can_ be very slow, and Electron UIs are (generally) written with DOM APIs. But, they don't _have_ to be slow, at least not perceptibly – if you find Electron apps that seem slow, that means they made design choices that traded off speed / responsiveness for something else. In Atom's case, the tradeoff was for hackability – it's way easier for people to write packages and hacks when they have the whole DOM available to them (instead of Canvas or something, which Atom's editor could've been built to use instead). And even still, Atom isn't _stuck_ in its current state – there are still plenty of optimizations left to make that can make it much, much faster, even while using the DOM.\n\nIMO the best way to improve performance in Electron itself, if you're still interested in that, would be to contribute back to Chromium / Blink upstream like @sedwards2009 mentioned, since that is entirely responsible for rendering all visible UI in an Electron app (among a lot of other things).\n\nSpeed isn't an inherent limitation of Electron though. If you prioritize it, you can get native-like performance and responsiveness in Electron.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/222053637",
    "html_url": "https://github.com/electron/electron/issues/5672#issuecomment-222053637",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/5672",
    "id": 222053637,
    "user": {
      "login": "feross",
      "id": 121766,
      "avatar_url": "https://avatars1.githubusercontent.com/u/121766?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/feross",
      "html_url": "https://github.com/feross",
      "followers_url": "https://api.github.com/users/feross/followers",
      "following_url": "https://api.github.com/users/feross/following{/other_user}",
      "gists_url": "https://api.github.com/users/feross/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/feross/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/feross/subscriptions",
      "organizations_url": "https://api.github.com/users/feross/orgs",
      "repos_url": "https://api.github.com/users/feross/repos",
      "events_url": "https://api.github.com/users/feross/events{/privacy}",
      "received_events_url": "https://api.github.com/users/feross/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-27T03:46:42Z",
    "updated_at": "2016-07-15T08:44:48Z",
    "body": "In my experience, the biggest cause of slow app startup is having too many `require()` calls at the top of your `main.js`.\n\nBy design, `require()` is synchronous. And it can touch lots of files on the filesystem. If your users have a spinning disk drive, then all the random accesses will kill your startup time. You can improve the situation by bundling your app with ASAR, so only one file needs to be read.\n\nAnother huge win is to optimize the order that you `require()` files. By lazy loading as much as possible, we were able to get [WebTorrent Desktop](https://webtorrent.io/desktop) to under 500ms startup time on a Macbook 12\" (basically a netbook with an SSD).\n\n**It is possible to build fast apps with Electron**, but you have to be ruthless about lazy loading, and choosing small, focused modules over huge framework modules. I think of it as similar to developing for mobile -- you want to parse as little JavaScript as possible before your app window shows up.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/225786909",
    "html_url": "https://github.com/electron/electron/issues/5672#issuecomment-225786909",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/5672",
    "id": 225786909,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2016-06-14T05:57:11Z",
    "updated_at": "2016-06-14T05:57:11Z",
    "body": "I'm closing this since it has been perfectly answered.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/232908777",
    "html_url": "https://github.com/electron/electron/issues/5672#issuecomment-232908777",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/5672",
    "id": 232908777,
    "user": {
      "login": "Fishrock123",
      "id": 1093990,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1093990?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Fishrock123",
      "html_url": "https://github.com/Fishrock123",
      "followers_url": "https://api.github.com/users/Fishrock123/followers",
      "following_url": "https://api.github.com/users/Fishrock123/following{/other_user}",
      "gists_url": "https://api.github.com/users/Fishrock123/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Fishrock123/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Fishrock123/subscriptions",
      "organizations_url": "https://api.github.com/users/Fishrock123/orgs",
      "repos_url": "https://api.github.com/users/Fishrock123/repos",
      "events_url": "https://api.github.com/users/Fishrock123/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Fishrock123/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-15T09:47:16Z",
    "updated_at": "2016-07-15T09:47:16Z",
    "body": "I'm not certain that is the end of the story here.\n\nPlease see `cachedData` parameter of the VM module. the https://nodejs.org/dist/latest-v6.x/docs/api/vm.html#vm_new_vm_script_code_options\n\nIt is now possible to have V8 use pre-JIT'd (compiled, or byte-coded, not sure which) code. Chromium uses that technique to speed up it's startup time.\n\nI believe we may also use that now in Node.js for core modules.\n\n## \n\nI'm not exactly sure how that could be applied here, but it should be possible as part of a bundling step, I think.\n\ncc @indutny who helped implement usage of it in Node.\n"
  }
]