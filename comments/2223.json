[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/121886713",
    "html_url": "https://github.com/electron/electron/issues/2223#issuecomment-121886713",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2223",
    "id": 121886713,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2015-07-16T08:59:24Z",
    "updated_at": "2015-07-16T20:46:41Z",
    "body": "Currently there is no perfect way to do that, Chromium doesn't provide a way to suppress the Content Security Policy. One trick is to hijack web requests and remove the Content Security Policy header, but if the page writes the Content Security Policy in the `meta` tag in HTML then there is no way to prevent that.\n\nI think currently the best solution is to use node modules for WebSocket connections.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/122125619",
    "html_url": "https://github.com/electron/electron/issues/2223#issuecomment-122125619",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2223",
    "id": 122125619,
    "user": {
      "login": "maxogden",
      "id": 39759,
      "avatar_url": "https://avatars3.githubusercontent.com/u/39759?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maxogden",
      "html_url": "https://github.com/maxogden",
      "followers_url": "https://api.github.com/users/maxogden/followers",
      "following_url": "https://api.github.com/users/maxogden/following{/other_user}",
      "gists_url": "https://api.github.com/users/maxogden/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maxogden/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maxogden/subscriptions",
      "organizations_url": "https://api.github.com/users/maxogden/orgs",
      "repos_url": "https://api.github.com/users/maxogden/repos",
      "events_url": "https://api.github.com/users/maxogden/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maxogden/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-16T22:56:03Z",
    "updated_at": "2015-07-16T22:56:03Z",
    "body": "@zcbenz Ah ok that is unfortunate, as it means I have no way to reliably establish two-way communication between a window and a browser process when loading an arbitrary URL, I wrote up an issue for that on my project here https://github.com/maxogden/electron-microscope/issues/4\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/141097818",
    "html_url": "https://github.com/electron/electron/issues/2223#issuecomment-141097818",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2223",
    "id": 141097818,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2015-09-17T14:07:50Z",
    "updated_at": "2015-09-17T14:07:50Z",
    "body": "#2375 has added a way to disable CSP for a certain scheme, turning the whole CSP down however is still possible since Chromium hard-coded the thing and didn't provide a switch.\n\nI'm closing this since #2375 has provided a way to solve your original problem.\n"
  }
]