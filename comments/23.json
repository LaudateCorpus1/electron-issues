[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/19596779",
    "html_url": "https://github.com/electron/electron/issues/23#issuecomment-19596779",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/23",
    "id": 19596779,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2013-06-18T08:09:01Z",
    "updated_at": "2013-06-18T08:09:34Z",
    "body": "A typical example of inheriting native class is:\n\n``` coffeescript\nclass AtomWindow extends BrowserWindow\n  constructor: ->\n    # blabla...\n    super\n```\n\nTo make it work, the generated constructor should return the result of base class's constructor, like this:\n\n``` javascript\nfunction AtomWindow() {\n  return AtomWindow.__super__.constructor.apply(this, arguments);\n}\n```\n\nBut somehow coffeescript generated constructor like this:\n\n``` javascript\nfunction AtomWindow() {\n  AtomWindow.__super__.constructor.apply(this, arguments);\n}\n```\n\nThere seems to be tons of related issues in coffeescript's github page, I'm still investigating it.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/19598664",
    "html_url": "https://github.com/electron/electron/issues/23#issuecomment-19598664",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/23",
    "id": 19598664,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2013-06-18T08:54:13Z",
    "updated_at": "2013-06-18T08:54:13Z",
    "body": "Hmm, coffeescript is doing the right thing, my problem is now that the native class's internal fields are not inherited via prototype inheritance, this is a limitation of V8 or JavaScript, but v8-juice does have a workaround of it:\nhttp://code.google.com/p/v8-juice/source/browse/trunk/src/include/v8/juice/ClassWrap.h#480\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/19613241",
    "html_url": "https://github.com/electron/electron/issues/23#issuecomment-19613241",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/23",
    "id": 19613241,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2013-06-18T14:06:56Z",
    "updated_at": "2013-06-18T14:06:56Z",
    "body": "After some experiments, I decided to make BrowserWindow not inheritable again, here are my reasons:\n1. Internal fields are not inheritable\n   \n   Because BrowserWindow is a wrap of native C++ class, I need to store C++ object in V8 object's internal fields, however since internal fields are not inherited via prototype inheritance, I can not get the wrapped C++ object from derived class's `this` object without hacks.\n2. Performance\n   \n   In order to be able to get the wrapped C++ object from JS object, I have to store the native `this` object in the JS object somewhere, and then manually find it when I need to lookup the C++ object, which hurts the performance.\n3. Too many hacks in JS\n   \n   To make inheritance of native class work as expected, many hacks have to be used,  the v8-juice's Wiki explains this very well:\n   http://code.google.com/p/v8-juice/wiki/ClassBinderPartTwo#Inheriting_Native_Classes_from_JS\n   \n   And generated JS code of Coffee Script doesn't work well with these hacks.\n4. Two `this` object\n   \n   Distinguished from inheritance of pure JS class, which just calls base class's constructor as plain function, inheriting native class requires calling the native class's constructor with `new`, and also remembering the created native `this` object, which means we have to work with two `this` objects, this just make things a mess.\n\nSo my conclusion is, making inheritance of native class from JS work would cause too much troubles and we should not support it.\n"
  }
]