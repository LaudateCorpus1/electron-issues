[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/143969239",
    "html_url": "https://github.com/electron/electron/issues/2931#issuecomment-143969239",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2931",
    "id": 143969239,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2015-09-29T07:12:28Z",
    "updated_at": "2015-09-29T07:12:28Z",
    "body": "The `ipc` object is an EventEmitter, so calling `ipc.on` do install the callback for 10 times, and since you send the `asynchronous-reply` for 10 times, the callback will be called for 10 \\* 10 times.\n\nI'm not sure what you actually want, but I'm closing this since everything works as expected, you probably want to read [the docs of EventEmitter](https://nodejs.org/api/events.html#events_class_events_eventemitter) to know how it behaves.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/144263464",
    "html_url": "https://github.com/electron/electron/issues/2931#issuecomment-144263464",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2931",
    "id": 144263464,
    "user": {
      "login": "cusr",
      "id": 662076,
      "avatar_url": "https://avatars0.githubusercontent.com/u/662076?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cusr",
      "html_url": "https://github.com/cusr",
      "followers_url": "https://api.github.com/users/cusr/followers",
      "following_url": "https://api.github.com/users/cusr/following{/other_user}",
      "gists_url": "https://api.github.com/users/cusr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cusr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cusr/subscriptions",
      "organizations_url": "https://api.github.com/users/cusr/orgs",
      "repos_url": "https://api.github.com/users/cusr/repos",
      "events_url": "https://api.github.com/users/cusr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cusr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-30T02:39:53Z",
    "updated_at": "2015-09-30T02:39:53Z",
    "body": "thank you for your reply. \nI have read the docs of EventEmitter. \nAnd emitter.once(event, listener) is what I want.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/146300786",
    "html_url": "https://github.com/electron/electron/issues/2931#issuecomment-146300786",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2931",
    "id": 146300786,
    "user": {
      "login": "franciscop",
      "id": 2801252,
      "avatar_url": "https://avatars1.githubusercontent.com/u/2801252?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/franciscop",
      "html_url": "https://github.com/franciscop",
      "followers_url": "https://api.github.com/users/franciscop/followers",
      "following_url": "https://api.github.com/users/franciscop/following{/other_user}",
      "gists_url": "https://api.github.com/users/franciscop/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/franciscop/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/franciscop/subscriptions",
      "organizations_url": "https://api.github.com/users/franciscop/orgs",
      "repos_url": "https://api.github.com/users/franciscop/repos",
      "events_url": "https://api.github.com/users/franciscop/events{/privacy}",
      "received_events_url": "https://api.github.com/users/franciscop/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-07T19:17:49Z",
    "updated_at": "2015-10-07T19:17:49Z",
    "body": "For future reference, I was having the same problem so I used a global register for the timestamps:\n\n``` js\nvar ipc = require('ipc');\nvar api = function(path, data, callback){\n\n  // This fixes a multiple-calls error that there was around\n  this.timestamps = this.timestamps || {};\n  self = this;\n\n  ipc.on('asynchronous-reply', function(arg){\n    var data = JSON.parse(arg);\n    if (!self.timestamps[data.timestamp]){\n      if (data.url == path){\n        self.timestamps[data.timestamp] = data;\n        callback(data);\n      }\n    }\n  });\n\n  data.url = path;\n  ipc.send('asynchronous-message', JSON.stringify(data));\n};\n```\n\nHowever, thanks to the solution showed here, I wrote it in a different way:\n\n``` js\n// It uses `once` to call it a single time\nvar ipc = require('ipc');\n\nvar api = function(path, data, callback){\n\n  ipc.once('asynchronous-reply', function(arg){\n    var data = JSON.parse(arg);\n    if (data.url == path){\n      callback(data);\n    }\n  });\n\n  data.url = path;\n  ipc.send('asynchronous-message', JSON.stringify(data));\n};\n```\n"
  }
]