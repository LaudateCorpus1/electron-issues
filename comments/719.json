[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/59733062",
    "html_url": "https://github.com/electron/electron/issues/719#issuecomment-59733062",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/719",
    "id": 59733062,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2014-10-20T11:25:34Z",
    "updated_at": "2014-10-20T11:25:34Z",
    "body": "Can you load `about:blank` in the window to see if it is related to your page?\n\nNormally when renderer process becomes unresponsive when unloading, an `unresponsive` event would be emitted. However if the devtools is opened the `unresponsive` event would be suppressed.\n\nSo I guess there is a dead loop in your unloading code, you can try pausing the JavaScript in devtools to see what your code is doing when quitting.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/59772968",
    "html_url": "https://github.com/electron/electron/issues/719#issuecomment-59772968",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/719",
    "id": 59772968,
    "user": {
      "login": "jwu",
      "id": 174891,
      "avatar_url": "https://avatars2.githubusercontent.com/u/174891?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jwu",
      "html_url": "https://github.com/jwu",
      "followers_url": "https://api.github.com/users/jwu/followers",
      "following_url": "https://api.github.com/users/jwu/following{/other_user}",
      "gists_url": "https://api.github.com/users/jwu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jwu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jwu/subscriptions",
      "organizations_url": "https://api.github.com/users/jwu/orgs",
      "repos_url": "https://api.github.com/users/jwu/repos",
      "events_url": "https://api.github.com/users/jwu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jwu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-20T15:09:21Z",
    "updated_at": "2014-10-21T14:22:47Z",
    "body": "I just comment out the line `mainWindow.loadUrl('file://' + __dirname + '/index.html');` above and run it again. Still stun when close window.\n\nI'm sure the programme can be quit normally in atom-shell v0.17.2, I found this problem after I upgrade to v0.18.1.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/59929756",
    "html_url": "https://github.com/electron/electron/issues/719#issuecomment-59929756",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/719",
    "id": 59929756,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2014-10-21T13:49:44Z",
    "updated_at": "2014-10-21T13:49:44Z",
    "body": "```\napp.on('ready', function() {\n    var mainWindow = new BrowserWindow( { \n```\n\nCan you try making `mainWindow` a global variable? Otherwise `mainWindow` would be garbage collected after some time and the window would be closed automatically. I guess this might be the root cause. You can do something like this:\n\n```\nvar mainWindow = null;\napp.on('ready', function() {\n   mainWindow = new BrowserWindow( { \n```\n\nIf it still doesn't work can you paste a minimum app that can show this problem? It is very likely that the cause lies somewhere else.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/59934456",
    "html_url": "https://github.com/electron/electron/issues/719#issuecomment-59934456",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/719",
    "id": 59934456,
    "user": {
      "login": "jwu",
      "id": 174891,
      "avatar_url": "https://avatars2.githubusercontent.com/u/174891?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jwu",
      "html_url": "https://github.com/jwu",
      "followers_url": "https://api.github.com/users/jwu/followers",
      "following_url": "https://api.github.com/users/jwu/following{/other_user}",
      "gists_url": "https://api.github.com/users/jwu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jwu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jwu/subscriptions",
      "organizations_url": "https://api.github.com/users/jwu/orgs",
      "repos_url": "https://api.github.com/users/jwu/repos",
      "events_url": "https://api.github.com/users/jwu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jwu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-21T14:19:11Z",
    "updated_at": "2014-10-21T14:22:40Z",
    "body": "I follow your suggestion, and put mainWindow to global, still failed.\n\nI made a simple atom-shell app which can reproduce the problem: http://yunku.gokuai.com/file/kwtrrjre\n\nBefore that, I try to confirm if this is my mistake and I download v0.17.2 and run the test. In my computer, the test can close in v0.17.2. Failed in v0.18.1.\n\nHere is my step:\n- unzip the file\n- use Terminal go to the directory, suppose you unzip it in ~/foo/bar/\n- Run `atomshell .` in ~/foo/bar (The atomshell is an alias register in my bash)\n- The main window and devTools will show together, and just close all of them\n\nIn v0.17.2, if you do the above steps, the terminal will quit the programme and giving back to you. In v0.18.1 the terminal will stun, and you can only use `ctrl-c` force shut it down.\n\nHope these information can help you find the problem.\n\nBTW: I'm working on Mac OSX, and it is upgrade to 10.10. (But I got this issue since 10.9.)\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/60028253",
    "html_url": "https://github.com/electron/electron/issues/719#issuecomment-60028253",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/719",
    "id": 60028253,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2014-10-22T02:27:47Z",
    "updated_at": "2014-10-22T02:27:47Z",
    "body": "Hmm I can not reproduce on my machine, can you help debugging this with following commands?\n\n1) Open atom-shell with gdb:\n\n``` bash\n$ gdb ~/codes/atom-shell/out/Debug/Atom.app/Contents/MacOS/Atom\n```\n\n2) Run your app in gdb's console:\n\n```\n(gdb) run ~/Downloads/atom-test\n```\n\n3) Close your app and wait until it stuns\n\n4) Press `Ctrl+C` in gdb's console\n\n5) Print the stack trace:\n\n```\n(gdb) bt\n```\n\nWith the stack trace I should be able to know what was going on.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/60034937",
    "html_url": "https://github.com/electron/electron/issues/719#issuecomment-60034937",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/719",
    "id": 60034937,
    "user": {
      "login": "jwu",
      "id": 174891,
      "avatar_url": "https://avatars2.githubusercontent.com/u/174891?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jwu",
      "html_url": "https://github.com/jwu",
      "followers_url": "https://api.github.com/users/jwu/followers",
      "following_url": "https://api.github.com/users/jwu/following{/other_user}",
      "gists_url": "https://api.github.com/users/jwu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jwu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jwu/subscriptions",
      "organizations_url": "https://api.github.com/users/jwu/orgs",
      "repos_url": "https://api.github.com/users/jwu/repos",
      "events_url": "https://api.github.com/users/jwu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jwu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-22T04:22:20Z",
    "updated_at": "2014-10-22T04:22:20Z",
    "body": "I use lldb instead, and here is the stack:\n\n```\n* thread #1: tid = 0x14424, 0x00007fff92cfb162 libsystem_kernel.dylib`__psynch_mutexwait + 10, name = 'CrBrowserMain', queue = 'com.apple.main-thread', stop reason = signal SIGSTOP\n  * frame #0: 0x00007fff92cfb162 libsystem_kernel.dylib`__psynch_mutexwait + 10\n    frame #1: 0x00007fff8e9ac81e libsystem_pthread.dylib`_pthread_mutex_lock + 480\n    frame #2: 0x00000001008400d6 libchromiumcontent.dylib`base::AtExitManager::RegisterCallback(void (*)(void*), void*) + 102\n    frame #3: 0x0000000100beae76 libchromiumcontent.dylib`___lldb_unnamed_function8961$$libchromiumcontent.dylib + 166\n    frame #4: 0x0000000100beadae libchromiumcontent.dylib`___lldb_unnamed_function8959$$libchromiumcontent.dylib + 14\n    frame #5: 0x0000000100bea9ca libchromiumcontent.dylib`___lldb_unnamed_function8956$$libchromiumcontent.dylib + 26\n    frame #6: 0x000000010083ffe0 libchromiumcontent.dylib`base::AtExitManager::ProcessCallbacksNow() + 144\n    frame #7: 0x000000010083fe91 libchromiumcontent.dylib`base::AtExitManager::~AtExitManager() + 33\n    frame #8: 0x00000001008230f6 libchromiumcontent.dylib`___lldb_unnamed_function87$$libchromiumcontent.dylib + 198\n    frame #9: 0x00000001008224d2 libchromiumcontent.dylib`content::ContentMain(content::ContentMainParams const&) + 66\n    frame #10: 0x0000000100004d38 Atom Framework`AtomMain + 72\n    frame #11: 0x00007fff88d4f5c9 libdyld.dylib`start + 1\n    frame #12: 0x00007fff88d4f5c9 libdyld.dylib`start + 1\n```\n\nHere is my full log, I separate it by `======` for easy reading.\n\n```\njohnny@Wus-MacBook-Pro:~/jwu/test$lldb /Applications/AtomShell.app/Contents/MacOS/Atom \n(lldb) target create \"/Applications/AtomShell.app/Contents/MacOS/Atom\"\nCurrent executable set to '/Applications/AtomShell.app/Contents/MacOS/Atom' (x86_64).\n\n=====================================================\n\n(lldb) run ~/jwu/atom-test/\nProcess 1999 launched: '/Applications/AtomShell.app/Contents/MacOS/Atom' (x86_64)\n[2005:1022/121844:INFO:renderer_main.cc(204)] Renderer process started\n[2006:1022/121844:INFO:renderer_main.cc(204)] Renderer process started\n\n=======================after close all window and stuns==============================\n\nProcess 1999 stopped\n* thread #1: tid = 0x14424, 0x00007fff92cfb162 libsystem_kernel.dylib`__psynch_mutexwait + 10, name = 'CrBrowserMain', queue = 'com.apple.main-thread', stop reason = signal SIGSTOP\n    frame #0: 0x00007fff92cfb162 libsystem_kernel.dylib`__psynch_mutexwait + 10\nlibsystem_kernel.dylib`__psynch_mutexwait + 10:\n-> 0x7fff92cfb162:  jae    0x7fff92cfb16c            ; __psynch_mutexwait + 20\n   0x7fff92cfb164:  movq   %rax, %rdi\n   0x7fff92cfb167:  jmp    0x7fff92cf6ca3            ; cerror_nocancel\n   0x7fff92cfb16c:  retq   \n\n=======================print the stack==============================\n\n(lldb) bt\n* thread #1: tid = 0x14424, 0x00007fff92cfb162 libsystem_kernel.dylib`__psynch_mutexwait + 10, name = 'CrBrowserMain', queue = 'com.apple.main-thread', stop reason = signal SIGSTOP\n  * frame #0: 0x00007fff92cfb162 libsystem_kernel.dylib`__psynch_mutexwait + 10\n    frame #1: 0x00007fff8e9ac81e libsystem_pthread.dylib`_pthread_mutex_lock + 480\n    frame #2: 0x00000001008400d6 libchromiumcontent.dylib`base::AtExitManager::RegisterCallback(void (*)(void*), void*) + 102\n    frame #3: 0x0000000100beae76 libchromiumcontent.dylib`___lldb_unnamed_function8961$$libchromiumcontent.dylib + 166\n    frame #4: 0x0000000100beadae libchromiumcontent.dylib`___lldb_unnamed_function8959$$libchromiumcontent.dylib + 14\n    frame #5: 0x0000000100bea9ca libchromiumcontent.dylib`___lldb_unnamed_function8956$$libchromiumcontent.dylib + 26\n    frame #6: 0x000000010083ffe0 libchromiumcontent.dylib`base::AtExitManager::ProcessCallbacksNow() + 144\n    frame #7: 0x000000010083fe91 libchromiumcontent.dylib`base::AtExitManager::~AtExitManager() + 33\n    frame #8: 0x00000001008230f6 libchromiumcontent.dylib`___lldb_unnamed_function87$$libchromiumcontent.dylib + 198\n    frame #9: 0x00000001008224d2 libchromiumcontent.dylib`content::ContentMain(content::ContentMainParams const&) + 66\n    frame #10: 0x0000000100004d38 Atom Framework`AtomMain + 72\n    frame #11: 0x00007fff88d4f5c9 libdyld.dylib`start + 1\n    frame #12: 0x00007fff88d4f5c9 libdyld.dylib`start + 1\n(lldb) \n```\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/60190178",
    "html_url": "https://github.com/electron/electron/issues/719#issuecomment-60190178",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/719",
    "id": 60190178,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2014-10-23T04:03:13Z",
    "updated_at": "2014-10-23T04:03:13Z",
    "body": "From the stack trace there is a function in Chromium tried to register a callback for AtExitManager while the program is exiting, which then caused a dead lock. Can you try if Chrome 38 can exit normally with devtools opened?\n\nI'm afraid I'm not able to fix it unless I can find a machine to reliably reproduce it.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/60337032",
    "html_url": "https://github.com/electron/electron/issues/719#issuecomment-60337032",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/719",
    "id": 60337032,
    "user": {
      "login": "jwu",
      "id": 174891,
      "avatar_url": "https://avatars2.githubusercontent.com/u/174891?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jwu",
      "html_url": "https://github.com/jwu",
      "followers_url": "https://api.github.com/users/jwu/followers",
      "following_url": "https://api.github.com/users/jwu/following{/other_user}",
      "gists_url": "https://api.github.com/users/jwu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jwu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jwu/subscriptions",
      "organizations_url": "https://api.github.com/users/jwu/orgs",
      "repos_url": "https://api.github.com/users/jwu/repos",
      "events_url": "https://api.github.com/users/jwu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jwu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-24T02:27:05Z",
    "updated_at": "2014-10-24T02:27:05Z",
    "body": "Looks like my chrome works normally.\n\nI will try other Macs and see if it can be reproduced in them.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/60510352",
    "html_url": "https://github.com/electron/electron/issues/719#issuecomment-60510352",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/719",
    "id": 60510352,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2014-10-26T08:39:33Z",
    "updated_at": "2014-10-26T08:39:33Z",
    "body": "I succeeded to reproduce with following steps:\n1. Open the default app and navigate to `http://www.youku.com`\n2. Click the `播放` button on one of the sections with images\n3. Close the window and the main process doesn't quit\n\nThis seems to be caused by the renderer process hooking on an asynchronous IPC event.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/61060721",
    "html_url": "https://github.com/electron/electron/issues/719#issuecomment-61060721",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/719",
    "id": 61060721,
    "user": {
      "login": "jwu",
      "id": 174891,
      "avatar_url": "https://avatars2.githubusercontent.com/u/174891?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jwu",
      "html_url": "https://github.com/jwu",
      "followers_url": "https://api.github.com/users/jwu/followers",
      "following_url": "https://api.github.com/users/jwu/following{/other_user}",
      "gists_url": "https://api.github.com/users/jwu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jwu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jwu/subscriptions",
      "organizations_url": "https://api.github.com/users/jwu/orgs",
      "repos_url": "https://api.github.com/users/jwu/repos",
      "events_url": "https://api.github.com/users/jwu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jwu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-30T08:51:13Z",
    "updated_at": "2014-10-30T08:51:13Z",
    "body": "looks like v0.19.0 fixed this issue. I think you can close it.\n"
  }
]