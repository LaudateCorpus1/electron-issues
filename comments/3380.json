[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/156326918",
    "html_url": "https://github.com/electron/electron/issues/3380#issuecomment-156326918",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/3380",
    "id": 156326918,
    "user": {
      "login": "rprichard",
      "id": 1572855,
      "avatar_url": "https://avatars0.githubusercontent.com/u/1572855?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rprichard",
      "html_url": "https://github.com/rprichard",
      "followers_url": "https://api.github.com/users/rprichard/followers",
      "following_url": "https://api.github.com/users/rprichard/following{/other_user}",
      "gists_url": "https://api.github.com/users/rprichard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rprichard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rprichard/subscriptions",
      "organizations_url": "https://api.github.com/users/rprichard/orgs",
      "repos_url": "https://api.github.com/users/rprichard/repos",
      "events_url": "https://api.github.com/users/rprichard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rprichard/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-13T05:23:08Z",
    "updated_at": "2015-11-13T05:23:08Z",
    "body": "I'm not sure the #3420 fix completely fixed this issue.  I think I can achieve the same effect by also calling `event.preventDefault()` in the `page-title-updated` handler.  Doing that happens to fix my reduced test case, but it does not fix the original application code that I started with.  FWIW, here's the stack trace from my application, after adding `event.preventDefault()`:\n\n```\nProgram received signal SIGSEGV, Segmentation fault.\n0x00007ffff0fe169e in content::NavigationControllerImpl::GetEntryAtOffset(int) const () from /home/rprichard/XXX/electron/out/D/libcontent.so\n(gdb) bt\n#0  0x00007ffff0fe169e in content::NavigationControllerImpl::GetEntryAtOffset(int) const () from /home/rprichard/XXX/electron/out/D/libcontent.so\n#1  0x00007ffff11f8500 in content::WebContentsImpl::UpdateTitle(content::RenderFrameHost*, int, std::basic_string<unsigned short, base::string16_char_traits, std::allocator<unsigned short> > const&, base::i18n::TextDirection) () from /home/rprichard/XXX/electron/out/D/libcontent.so\n#2  0x00007ffff0feed42 in content::RenderFrameHostImpl::OnMessageReceived(IPC::Message const&) () from /home/rprichard/XXX/electron/out/D/libcontent.so\n#3  0x00007ffff1120fce in content::RenderProcessHostImpl::OnMessageReceived(IPC::Message const&) () from /home/rprichard/XXX/electron/out/D/libcontent.so\n#4  0x00007ffff6007a72 in IPC::ChannelProxy::Context::OnDispatchMessage(IPC::Message const&) () from /home/rprichard/XXX/electron/out/D/libipc.so\n#5  0x00007ffff5edb018 in base::debug::TaskAnnotator::RunTask(char const*, char const*, base::PendingTask const&) () from /home/rprichard/XXX/electron/out/D/libbase.so\n#6  0x00007ffff5efa081 in base::MessageLoop::RunTask(base::PendingTask const&) () from /home/rprichard/XXX/electron/out/D/libbase.so\n#7  0x00007ffff5efa239 in base::MessageLoop::DeferOrRunPendingTask(base::PendingTask const&) () from /home/rprichard/XXX/electron/out/D/libbase.so\n#8  0x00007ffff5efa4ad in base::MessageLoop::DoWork() () from /home/rprichard/XXX/electron/out/D/libbase.so\n#9  0x00007ffff5ecd269 in base::MessagePumpGlib::Run(base::MessagePump::Delegate*) () from /home/rprichard/XXX/electron/out/D/libbase.so\n#10 0x00007ffff5f11e40 in base::RunLoop::Run() () from /home/rprichard/XXX/electron/out/D/libbase.so\n#11 0x00007ffff0f4d8eb in content::BrowserMainLoop::MainMessageLoopRun() () from /home/rprichard/XXX/electron/out/D/libcontent.so\n#12 0x00007ffff0f4d830 in content::BrowserMainLoop::RunMainMessageLoopParts() () from /home/rprichard/XXX/electron/out/D/libcontent.so\n#13 0x00007ffff0f505fd in ?? () from /home/rprichard/XXX/electron/out/D/libcontent.so\n#14 0x00007ffff0f48f43 in content::BrowserMain(content::MainFunctionParams const&) () from /home/rprichard/XXX/electron/out/D/libcontent.so\n#15 0x00007ffff0ed9d31 in ?? () from /home/rprichard/XXX/electron/out/D/libcontent.so\n#16 0x00007ffff0ed8cb0 in content::ContentMain(content::ContentMainParams const&) () from /home/rprichard/XXX/electron/out/D/libcontent.so\n#17 0x000000000076ee4a in main (argc=2, argv=0x7fffffffdcc8) at ../../atom/app/atom_main.cc:179\n```\n\nI suppose I could try to update my test case...\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/156364019",
    "html_url": "https://github.com/electron/electron/issues/3380#issuecomment-156364019",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/3380",
    "id": 156364019,
    "user": {
      "login": "deepak1556",
      "id": 964386,
      "avatar_url": "https://avatars2.githubusercontent.com/u/964386?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/deepak1556",
      "html_url": "https://github.com/deepak1556",
      "followers_url": "https://api.github.com/users/deepak1556/followers",
      "following_url": "https://api.github.com/users/deepak1556/following{/other_user}",
      "gists_url": "https://api.github.com/users/deepak1556/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/deepak1556/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/deepak1556/subscriptions",
      "organizations_url": "https://api.github.com/users/deepak1556/orgs",
      "repos_url": "https://api.github.com/users/deepak1556/repos",
      "events_url": "https://api.github.com/users/deepak1556/events{/privacy}",
      "received_events_url": "https://api.github.com/users/deepak1556/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-13T08:46:48Z",
    "updated_at": "2015-11-13T08:46:48Z",
    "body": "@rprichard i am unable to reproduce the crash after the fix with the test case, it would really help if you could reduce your application scenario to a minimal test case, thanks!\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/156552501",
    "html_url": "https://github.com/electron/electron/issues/3380#issuecomment-156552501",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/3380",
    "id": 156552501,
    "user": {
      "login": "rprichard",
      "id": 1572855,
      "avatar_url": "https://avatars0.githubusercontent.com/u/1572855?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rprichard",
      "html_url": "https://github.com/rprichard",
      "followers_url": "https://api.github.com/users/rprichard/followers",
      "following_url": "https://api.github.com/users/rprichard/following{/other_user}",
      "gists_url": "https://api.github.com/users/rprichard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rprichard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rprichard/subscriptions",
      "organizations_url": "https://api.github.com/users/rprichard/orgs",
      "repos_url": "https://api.github.com/users/rprichard/repos",
      "events_url": "https://api.github.com/users/rprichard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rprichard/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-13T20:48:44Z",
    "updated_at": "2015-11-13T20:48:44Z",
    "body": "I was able to create a new test case demonstrating the crash even with `event.preventDefault` -- https://gist.github.com/rprichard/5aed5b96e69cc22b66b8.  It uses the `request` npm package, so run `npm install` before running electron.\n\nI debugged the original test case, and here's what I learned:\n- When the `page-title-updated` handler closes the window in the original test case, it also immediately deallocates the `content::WebContentsImpl` object, which you can see in the original test case's stack backtrace.\n- In the original stack trace, `WebContentsImpl::UpdateTitle` calls `WebContentsImpl::UpdateTitleForEntry`, which ultimately segfaults.\n- In the new stack trace, `WebContentsImpl::UpdateTitle` calls `NavigationControllerImpl::GetEntryAtOffset`, which ultimately segfaults.\n\nHere's the code for `WebContentsImpl::UpdateTitle`:\n\n``` c++\n...\n  // TODO(evan): make use of title_direction.\n  // http://code.google.com/p/chromium/issues/detail?id=27094\n  if (!UpdateTitleForEntry(entry, title))\n    return;\n\n  // Broadcast notifications when the UI should be updated.\n  if (entry == controller_.GetEntryAtOffset(0))\n    NotifyNavigationStateChanged(INVALIDATE_TYPE_TITLE);\n}\n```\n\nThe `WebContentsImpl` object (i.e. `this`) has been deallocated, so reading the `this->controller_` field is reading dangling memory.\n\nThe fix needs to keep `WebContentsImpl` from being deallocated until the event handler finishes.\n\n(FWIW: to debug the code, I used gdb and placed breakpoints on places such as `content::WebContentsImpl::~WebContentsImpl`.  On Linux, `this` is `$rdx` on method entry.  I also compiled Electron with debug info (-g) by hacking it into the ninja build scripts.  I wanted to build Chromium with debug info, but my computer took too long, and I think the build also failed for some reason.)\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/156571929",
    "html_url": "https://github.com/electron/electron/issues/3380#issuecomment-156571929",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/3380",
    "id": 156571929,
    "user": {
      "login": "rprichard",
      "id": 1572855,
      "avatar_url": "https://avatars0.githubusercontent.com/u/1572855?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rprichard",
      "html_url": "https://github.com/rprichard",
      "followers_url": "https://api.github.com/users/rprichard/followers",
      "following_url": "https://api.github.com/users/rprichard/following{/other_user}",
      "gists_url": "https://api.github.com/users/rprichard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rprichard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rprichard/subscriptions",
      "organizations_url": "https://api.github.com/users/rprichard/orgs",
      "repos_url": "https://api.github.com/users/rprichard/repos",
      "events_url": "https://api.github.com/users/rprichard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rprichard/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-13T22:04:22Z",
    "updated_at": "2015-11-13T22:04:22Z",
    "body": "@zcbenz @deepak1556 \nCould we reopen this issue?\n"
  }
]