[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/148571372",
    "html_url": "https://github.com/electron/electron/issues/3089#issuecomment-148571372",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/3089",
    "id": 148571372,
    "user": {
      "login": "maxcnunes",
      "id": 680356,
      "avatar_url": "https://avatars1.githubusercontent.com/u/680356?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maxcnunes",
      "html_url": "https://github.com/maxcnunes",
      "followers_url": "https://api.github.com/users/maxcnunes/followers",
      "following_url": "https://api.github.com/users/maxcnunes/following{/other_user}",
      "gists_url": "https://api.github.com/users/maxcnunes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maxcnunes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maxcnunes/subscriptions",
      "organizations_url": "https://api.github.com/users/maxcnunes/orgs",
      "repos_url": "https://api.github.com/users/maxcnunes/repos",
      "events_url": "https://api.github.com/users/maxcnunes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maxcnunes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-16T01:37:04Z",
    "updated_at": "2015-10-16T01:37:04Z",
    "body": "Could the problem be here [remote.coffee](https://github.com/atom/electron/blob/master/atom/renderer/api/lib/remote.coffee)? I was hopping trying to fix this bug if it is something in js/coffe but I got some problems building the project in my machine #3102.\n\nWhile this is not fixed, is there a recommended approach to handle errors coming from a remote code?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/148573401",
    "html_url": "https://github.com/electron/electron/issues/3089#issuecomment-148573401",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/3089",
    "id": 148573401,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2015-10-16T01:50:16Z",
    "updated_at": "2015-10-16T01:50:16Z",
    "body": "Yeah the problem is in `remote` module, it seems that `Error` object is not passed with all its members. \n\n> While this is not fixed, is there a recommended approach to handle errors coming from a remote code?\n\nThe best approach is probably not to handle errors for remote object, using `remote` module is quite expensive, and since remote objects are not the original ones, you might encounter surprises if you use it heavily.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/148573481",
    "html_url": "https://github.com/electron/electron/issues/3089#issuecomment-148573481",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/3089",
    "id": 148573481,
    "user": {
      "login": "maxcnunes",
      "id": 680356,
      "avatar_url": "https://avatars1.githubusercontent.com/u/680356?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maxcnunes",
      "html_url": "https://github.com/maxcnunes",
      "followers_url": "https://api.github.com/users/maxcnunes/followers",
      "following_url": "https://api.github.com/users/maxcnunes/following{/other_user}",
      "gists_url": "https://api.github.com/users/maxcnunes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maxcnunes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maxcnunes/subscriptions",
      "organizations_url": "https://api.github.com/users/maxcnunes/orgs",
      "repos_url": "https://api.github.com/users/maxcnunes/repos",
      "events_url": "https://api.github.com/users/maxcnunes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maxcnunes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-16T01:50:24Z",
    "updated_at": "2015-10-16T01:50:24Z",
    "body": "Seems that the problem is during the serialization of Error to string. Properties of Error instances are non-enumerable. Which means they cannot be serialized through JSON.stringify.\n\nMay be the solution could be parse the Error object to a plain object before sending it through the remote function. Something like this:\n\n``` js\n/**\n * Clone error into a plain object\n */\nfunction toPlainError (err) {\n  return Object.getOwnPropertyNames(err)\n    .reduce(function (obj, key) {\n      obj[key] = err[key];\n      return obj;\n    }, {});\n}\n```\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/150561552",
    "html_url": "https://github.com/electron/electron/issues/3089#issuecomment-150561552",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/3089",
    "id": 150561552,
    "user": {
      "login": "maxcnunes",
      "id": 680356,
      "avatar_url": "https://avatars1.githubusercontent.com/u/680356?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maxcnunes",
      "html_url": "https://github.com/maxcnunes",
      "followers_url": "https://api.github.com/users/maxcnunes/followers",
      "following_url": "https://api.github.com/users/maxcnunes/following{/other_user}",
      "gists_url": "https://api.github.com/users/maxcnunes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maxcnunes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maxcnunes/subscriptions",
      "organizations_url": "https://api.github.com/users/maxcnunes/orgs",
      "repos_url": "https://api.github.com/users/maxcnunes/repos",
      "events_url": "https://api.github.com/users/maxcnunes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maxcnunes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-23T12:47:34Z",
    "updated_at": "2015-10-23T12:47:34Z",
    "body": "Awesome!! thanks\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/150945916",
    "html_url": "https://github.com/electron/electron/issues/3089#issuecomment-150945916",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/3089",
    "id": 150945916,
    "user": {
      "login": "lukasbestle",
      "id": 1595007,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1595007?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lukasbestle",
      "html_url": "https://github.com/lukasbestle",
      "followers_url": "https://api.github.com/users/lukasbestle/followers",
      "following_url": "https://api.github.com/users/lukasbestle/following{/other_user}",
      "gists_url": "https://api.github.com/users/lukasbestle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lukasbestle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lukasbestle/subscriptions",
      "organizations_url": "https://api.github.com/users/lukasbestle/orgs",
      "repos_url": "https://api.github.com/users/lukasbestle/repos",
      "events_url": "https://api.github.com/users/lukasbestle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lukasbestle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-25T17:11:52Z",
    "updated_at": "2015-10-25T17:11:52Z",
    "body": "Also seems to happen with `Date`.\n\n---\n\nBTW: I'm currently using the `remote` module because I need: \n1. a single source of truth regarding open file objects and their options.\n2. to pass these file objects between windows (after a file has been opened in one window, it needs to be passed to another window that does stuff with it while the first window is closed).\n\nUsing the `remote` module solves both of these issues (all the code runs in the main process and the renderer can always grab the object from there), but it isn't perfect (see this issue) and as you wrote above, it's not performant.\n\nWhat is your recommended solution for such a problem?\n"
  }
]