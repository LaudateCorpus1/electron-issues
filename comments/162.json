[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/32811902",
    "html_url": "https://github.com/electron/electron/pull/162#issuecomment-32811902",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/162",
    "id": 32811902,
    "user": {
      "login": "probablycorey",
      "id": 596,
      "avatar_url": "https://avatars0.githubusercontent.com/u/596?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/probablycorey",
      "html_url": "https://github.com/probablycorey",
      "followers_url": "https://api.github.com/users/probablycorey/followers",
      "following_url": "https://api.github.com/users/probablycorey/following{/other_user}",
      "gists_url": "https://api.github.com/users/probablycorey/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/probablycorey/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/probablycorey/subscriptions",
      "organizations_url": "https://api.github.com/users/probablycorey/orgs",
      "repos_url": "https://api.github.com/users/probablycorey/repos",
      "events_url": "https://api.github.com/users/probablycorey/events{/privacy}",
      "received_events_url": "https://api.github.com/users/probablycorey/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2014-01-21T00:52:25Z",
    "updated_at": "2014-01-21T00:52:25Z",
    "body": "I also think we can simplify the JS API. Below is a rough draft.\n\n### Methods\n\n`autoUpdater.checkForUpdates()` # Async, triggers a `update-available` event or a `update-not-available` event. A callback would be better, but I think we can't do that because of IPC issues.\n`autoUpdater.setFeedUrl(url)` # Will be helpful for debugging\n\n### Events\n\n`update-available` # contains version and download function (possibly include a download progress callback or event)\n`update-not-available` # contains version\n`update-downloaded` # contains quit and update function (possibly include an installing progress callback or event)\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/32870671",
    "html_url": "https://github.com/electron/electron/pull/162#issuecomment-32870671",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/162",
    "id": 32870671,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2014-01-21T12:43:13Z",
    "updated_at": "2014-01-21T12:43:13Z",
    "body": "I'm fine with the simplified API, the original API was just an one-to-one match to Sparkle's API, and is not well designed.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/32894903",
    "html_url": "https://github.com/electron/electron/pull/162#issuecomment-32894903",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/162",
    "id": 32894903,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2014-01-21T15:25:51Z",
    "updated_at": "2014-01-21T15:25:51Z",
    "body": "I played around Squirrel and some results:\n- Squirrel requires the application to be signed otherwise it would throw an exception.\n- Squirrel would just download the update if there is one, so there is no `update-available` event.\n- It is tricky to implement `update-not-available` event, there is no such event in Squirrel and it calls `[signal empty]` when there is no update.\n- It seems that Squirrel doesn't have the concept of version, it would always download the update if the server told it there was one.\n\nSo my current implementation becomes:\n\n**Methods**\n\n`autoUpdater.setFeedUrl(url)` # Set the feed url, required before checking for updates.\n`autoUpdater.checkForUpdates()` # Async, triggers a `update-downloaded` event or a `update-not-available` event.\n\n**Events**\n\n`update-not-available` # contains nothing\n`update-downloaded` # contains quit and update function, release name, release notes, release date and update url (I just passed everything got from Squirrel)\n\nI'm still learning ReactiveCocoa and Squirrel, so feel free to correct me if I made any mistake. I'm also open to how the API should look like.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/32910463",
    "html_url": "https://github.com/electron/electron/pull/162#issuecomment-32910463",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/162",
    "id": 32910463,
    "user": {
      "login": "probablycorey",
      "id": 596,
      "avatar_url": "https://avatars0.githubusercontent.com/u/596?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/probablycorey",
      "html_url": "https://github.com/probablycorey",
      "followers_url": "https://api.github.com/users/probablycorey/followers",
      "following_url": "https://api.github.com/users/probablycorey/following{/other_user}",
      "gists_url": "https://api.github.com/users/probablycorey/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/probablycorey/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/probablycorey/subscriptions",
      "organizations_url": "https://api.github.com/users/probablycorey/orgs",
      "repos_url": "https://api.github.com/users/probablycorey/repos",
      "events_url": "https://api.github.com/users/probablycorey/events{/privacy}",
      "received_events_url": "https://api.github.com/users/probablycorey/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2014-01-21T17:53:06Z",
    "updated_at": "2014-01-21T17:53:06Z",
    "body": "@keithduncan does what we have so far make sense (mostly [auto_updater_mac.mm](https://github.com/atom/atom-shell/pull/162/files#diff-7)). Also, is there any signal that will let us know a download is available before it is downloaded? [From the docs](https://github.com/Squirrel/Squirrel.Mac#update-notifications) it only looks like we get notified after the update is downloaded.\n\nThis would be helpful for a 'check for updates' menu item. I'd like it to feel responsive and not have to download the entire update before responding.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/32963740",
    "html_url": "https://github.com/electron/electron/pull/162#issuecomment-32963740",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/162",
    "id": 32963740,
    "user": {
      "login": "keithduncan",
      "id": 22101,
      "avatar_url": "https://avatars2.githubusercontent.com/u/22101?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/keithduncan",
      "html_url": "https://github.com/keithduncan",
      "followers_url": "https://api.github.com/users/keithduncan/followers",
      "following_url": "https://api.github.com/users/keithduncan/following{/other_user}",
      "gists_url": "https://api.github.com/users/keithduncan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/keithduncan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/keithduncan/subscriptions",
      "organizations_url": "https://api.github.com/users/keithduncan/orgs",
      "repos_url": "https://api.github.com/users/keithduncan/repos",
      "events_url": "https://api.github.com/users/keithduncan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/keithduncan/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2014-01-21T21:10:07Z",
    "updated_at": "2014-01-21T21:10:07Z",
    "body": "> Squirrel requires the application to be signed otherwise it would throw an exception.\n\nCan you post the backtrace, it shouldn’t throw an exception and we should fix that, but it won’t install an update that doesn’t meet the designated requirement of the current application.\n\n> It seems that Squirrel doesn't have the concept of version, it would always download the update if the server told it there was one.\n\nThis is correct, it’s up to the server to tell the client whether to update or not. If the server responds with a 200 and an update Squirrel will download it, if the server responds with a 204 then Squirrel does nothing. Version number comparison has to be done on the server.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/32964966",
    "html_url": "https://github.com/electron/electron/pull/162#issuecomment-32964966",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/162",
    "id": 32964966,
    "user": {
      "login": "keithduncan",
      "id": 22101,
      "avatar_url": "https://avatars2.githubusercontent.com/u/22101?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/keithduncan",
      "html_url": "https://github.com/keithduncan",
      "followers_url": "https://api.github.com/users/keithduncan/followers",
      "following_url": "https://api.github.com/users/keithduncan/following{/other_user}",
      "gists_url": "https://api.github.com/users/keithduncan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/keithduncan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/keithduncan/subscriptions",
      "organizations_url": "https://api.github.com/users/keithduncan/orgs",
      "repos_url": "https://api.github.com/users/keithduncan/repos",
      "events_url": "https://api.github.com/users/keithduncan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/keithduncan/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2014-01-21T21:22:51Z",
    "updated_at": "2014-01-21T21:22:51Z",
    "body": "> Also, is there any signal that will let us know a download is available before it is downloaded? From the docs it only looks like we get notified after the update is downloaded.\n\nThis is correct, we removed it but can add it again if you need it?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/32989079",
    "html_url": "https://github.com/electron/electron/pull/162#issuecomment-32989079",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/162",
    "id": 32989079,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2014-01-22T02:50:56Z",
    "updated_at": "2014-01-22T02:50:56Z",
    "body": "> Can you post the backtrace, it shouldn’t throw an exception and we should fix that, but it won’t install an update that doesn’t meet the designated requirement of the current application.\n\nThe stack trace I got:\n\n```\n2014-01-21 22:53:11.015 Atom[10534:507] *** Assertion failure in -[SQRLUpdater initWithUpdateRequest:], /Users/corey/github/Squirrel.Mac/Squirrel/SQRLUpdater.m:153\n2014-01-21 22:53:11.017 Atom[10534:507] An uncaught exception was raised\n2014-01-21 22:53:11.017 Atom[10534:507] Could not get code signature for running application: Error Domain=NSOSStatusErrorDomain Code=-67062 \"The operation couldn’t be completed. (OSStatus error -67062.)\"\n2014-01-21 22:53:11.017 Atom[10534:507] (\n    0   CoreFoundation                      0x00007fff816d141c __exceptionPreprocess + 172\n    1   libobjc.A.dylib                     0x00007fff839f8e75 objc_exception_throw + 43\n    2   CoreFoundation                      0x00007fff816d11f8 +[NSException raise:format:arguments:] + 104\n    3   Foundation                          0x00007fff8e7fec61 -[NSAssertionHandler handleFailureInMethod:object:file:lineNumber:description:] + 189\n    4   Squirrel                            0x000000010be794d8 -[SQRLUpdater initWithUpdateRequest:] + 952\n    5   Atom Framework                      0x000000010b5fd4ca _ZN12auto_updater11AutoUpdater10SetFeedURLERKSs + 170\n    6   Atom Framework                      0x000000010b5e5da9 _ZN4atom3api11AutoUpdater10SetFeedURLERKN2v820FunctionCallbackInfoINS2_5ValueEEE + 73\n    7   libchromiumcontent.dylib            0x000000010d13d4de _ZN2v87Testing13DeoptimizeAllEv + 33214\n    8   libchromiumcontent.dylib            0x000000010d1581a9 _ZN2v87Testing13DeoptimizeAllEv + 142985\n    9   ???                                 0x000035d128b069ce 0x0 + 59172447087054\n)\n2014-01-21 22:53:11.018 Atom[10534:507] *** Terminating app due to uncaught exception 'NSInternalInconsistencyException', reason: 'Could not get code signature for running application: Error Domain=NSOSStatusErrorDomain Code=-67062 \"The operation couldn’t be completed. (OSStatus error -67062.)\"'\n*** First throw call stack:\n(\n    0   CoreFoundation                      0x00007fff816d141c __exceptionPreprocess + 172\n    1   libobjc.A.dylib                     0x00007fff839f8e75 objc_exception_throw + 43\n    2   CoreFoundation                      0x00007fff816d11f8 +[NSException raise:format:arguments:] + 104\n    3   Foundation                          0x00007fff8e7fec61 -[NSAssertionHandler handleFailureInMethod:object:file:lineNumber:description:] + 189\n    4   Squirrel                            0x000000010be794d8 -[SQRLUpdater initWithUpdateRequest:] + 952\n    5   Atom Framework                      0x000000010b5fd4ca _ZN12auto_updater11AutoUpdater10SetFeedURLERKSs + 170\n    6   Atom Framework                      0x000000010b5e5da9 _ZN4atom3api11AutoUpdater10SetFeedURLERKN2v820FunctionCallbackInfoINS2_5ValueEEE + 73\n    7   libchromiumcontent.dylib            0x000000010d13d4de _ZN2v87Testing13DeoptimizeAllEv + 33214\n    8   libchromiumcontent.dylib            0x000000010d1581a9 _ZN2v87Testing13DeoptimizeAllEv + 142985\n    9   ???                                 0x000035d128b069ce 0x0 + 59172447087054\n)\nlibc++abi.dylib: terminating with uncaught exception of type NSException\n```\n\nCan you provide a way to disable checking for signature via environment variable? It would make writing tests much easier.\n\n> This is correct, we removed it but can add it again if you need it?\n\nIt would be great if you could add it. In our case we want to first check for updates, and then let user decide whether to download it, so it may also need to add more APIs in Squirrel.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/33040934",
    "html_url": "https://github.com/electron/electron/pull/162#issuecomment-33040934",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/162",
    "id": 33040934,
    "user": {
      "login": "probablycorey",
      "id": 596,
      "avatar_url": "https://avatars0.githubusercontent.com/u/596?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/probablycorey",
      "html_url": "https://github.com/probablycorey",
      "followers_url": "https://api.github.com/users/probablycorey/followers",
      "following_url": "https://api.github.com/users/probablycorey/following{/other_user}",
      "gists_url": "https://api.github.com/users/probablycorey/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/probablycorey/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/probablycorey/subscriptions",
      "organizations_url": "https://api.github.com/users/probablycorey/orgs",
      "repos_url": "https://api.github.com/users/probablycorey/repos",
      "events_url": "https://api.github.com/users/probablycorey/events{/privacy}",
      "received_events_url": "https://api.github.com/users/probablycorey/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2014-01-22T16:39:42Z",
    "updated_at": "2014-01-22T16:39:42Z",
    "body": "> It would be great if you could add it. In our case we want to first check for updates, and then let user decide whether to download it, so it may also need to add more APIs in Squirrel.\n\nFor me, allowing users to decide is less of an issue, I think we could get by without that. The more important thing is the responsiveness of clicking the 'check for update' button. If it responds in < 1 second that an update is available and starts downloading it, that is great. But if it responds in > 30 seconds and says the update has been downloaded it will feel very slow.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/33053053",
    "html_url": "https://github.com/electron/electron/pull/162#issuecomment-33053053",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/162",
    "id": 33053053,
    "user": {
      "login": "keithduncan",
      "id": 22101,
      "avatar_url": "https://avatars2.githubusercontent.com/u/22101?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/keithduncan",
      "html_url": "https://github.com/keithduncan",
      "followers_url": "https://api.github.com/users/keithduncan/followers",
      "following_url": "https://api.github.com/users/keithduncan/following{/other_user}",
      "gists_url": "https://api.github.com/users/keithduncan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/keithduncan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/keithduncan/subscriptions",
      "organizations_url": "https://api.github.com/users/keithduncan/orgs",
      "repos_url": "https://api.github.com/users/keithduncan/repos",
      "events_url": "https://api.github.com/users/keithduncan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/keithduncan/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2014-01-22T18:39:19Z",
    "updated_at": "2014-01-22T18:39:19Z",
    "body": "PR to fix crashing when there’s no code signature in https://github.com/Squirrel/Squirrel.Mac/pull/104\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/33053176",
    "html_url": "https://github.com/electron/electron/pull/162#issuecomment-33053176",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/162",
    "id": 33053176,
    "user": {
      "login": "keithduncan",
      "id": 22101,
      "avatar_url": "https://avatars2.githubusercontent.com/u/22101?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/keithduncan",
      "html_url": "https://github.com/keithduncan",
      "followers_url": "https://api.github.com/users/keithduncan/followers",
      "following_url": "https://api.github.com/users/keithduncan/following{/other_user}",
      "gists_url": "https://api.github.com/users/keithduncan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/keithduncan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/keithduncan/subscriptions",
      "organizations_url": "https://api.github.com/users/keithduncan/orgs",
      "repos_url": "https://api.github.com/users/keithduncan/repos",
      "events_url": "https://api.github.com/users/keithduncan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/keithduncan/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2014-01-22T18:40:31Z",
    "updated_at": "2014-01-22T18:40:31Z",
    "body": "Status notification filed as https://github.com/Squirrel/Squirrel.Mac/issues/105\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/33642507",
    "html_url": "https://github.com/electron/electron/pull/162#issuecomment-33642507",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/162",
    "id": 33642507,
    "user": {
      "login": "probablycorey",
      "id": 596,
      "avatar_url": "https://avatars0.githubusercontent.com/u/596?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/probablycorey",
      "html_url": "https://github.com/probablycorey",
      "followers_url": "https://api.github.com/users/probablycorey/followers",
      "following_url": "https://api.github.com/users/probablycorey/following{/other_user}",
      "gists_url": "https://api.github.com/users/probablycorey/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/probablycorey/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/probablycorey/subscriptions",
      "organizations_url": "https://api.github.com/users/probablycorey/orgs",
      "repos_url": "https://api.github.com/users/probablycorey/repos",
      "events_url": "https://api.github.com/users/probablycorey/events{/privacy}",
      "received_events_url": "https://api.github.com/users/probablycorey/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2014-01-29T23:07:56Z",
    "updated_at": "2014-01-29T23:07:56Z",
    "body": "@zcbenz I can't get this PR to build anymore. [Here is a gist](https://gist.github.com/probablycorey/4180222a1efb6fb5331e). It looks like it is a problem with brightray and NSSearchPathDirectory.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/33642587",
    "html_url": "https://github.com/electron/electron/pull/162#issuecomment-33642587",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/162",
    "id": 33642587,
    "user": {
      "login": "probablycorey",
      "id": 596,
      "avatar_url": "https://avatars0.githubusercontent.com/u/596?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/probablycorey",
      "html_url": "https://github.com/probablycorey",
      "followers_url": "https://api.github.com/users/probablycorey/followers",
      "following_url": "https://api.github.com/users/probablycorey/following{/other_user}",
      "gists_url": "https://api.github.com/users/probablycorey/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/probablycorey/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/probablycorey/subscriptions",
      "organizations_url": "https://api.github.com/users/probablycorey/orgs",
      "repos_url": "https://api.github.com/users/probablycorey/repos",
      "events_url": "https://api.github.com/users/probablycorey/events{/privacy}",
      "received_events_url": "https://api.github.com/users/probablycorey/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2014-01-29T23:08:59Z",
    "updated_at": "2014-01-29T23:08:59Z",
    "body": "I also updated the frameworks on S3 to include Squirrel/Squirrel.Mac#104 and Squirrel/Squirrel.Mac#105 and created an Atom branch to test squirrel out https://github.com/atom/atom/tree/cj-use-squirrel-as-updater.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/33649460",
    "html_url": "https://github.com/electron/electron/pull/162#issuecomment-33649460",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/162",
    "id": 33649460,
    "user": {
      "login": "aroben",
      "id": 917945,
      "avatar_url": "https://avatars1.githubusercontent.com/u/917945?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aroben",
      "html_url": "https://github.com/aroben",
      "followers_url": "https://api.github.com/users/aroben/followers",
      "following_url": "https://api.github.com/users/aroben/following{/other_user}",
      "gists_url": "https://api.github.com/users/aroben/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aroben/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aroben/subscriptions",
      "organizations_url": "https://api.github.com/users/aroben/orgs",
      "repos_url": "https://api.github.com/users/aroben/repos",
      "events_url": "https://api.github.com/users/aroben/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aroben/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-30T00:45:27Z",
    "updated_at": "2014-01-30T00:45:27Z",
    "body": "I think the build error comes from trying to mix Chromium and the 10.9 SDK. We might need to lock to the 10.8 SDK.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/33652481",
    "html_url": "https://github.com/electron/electron/pull/162#issuecomment-33652481",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/162",
    "id": 33652481,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2014-01-30T01:36:55Z",
    "updated_at": "2014-01-30T01:36:55Z",
    "body": "@probablycorey Can you open `vendor/brightray/brightray.gypi` and replace `'mac_sdkroot%': 'macosx'` with `'mac_sdkroot%': 'macosx10.8'`, and then run `./script/update.py && ./script/build.py` to see if it works this time? This should switch to use 10.8 SDK to build.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/33719299",
    "html_url": "https://github.com/electron/electron/pull/162#issuecomment-33719299",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/162",
    "id": 33719299,
    "user": {
      "login": "probablycorey",
      "id": 596,
      "avatar_url": "https://avatars0.githubusercontent.com/u/596?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/probablycorey",
      "html_url": "https://github.com/probablycorey",
      "followers_url": "https://api.github.com/users/probablycorey/followers",
      "following_url": "https://api.github.com/users/probablycorey/following{/other_user}",
      "gists_url": "https://api.github.com/users/probablycorey/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/probablycorey/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/probablycorey/subscriptions",
      "organizations_url": "https://api.github.com/users/probablycorey/orgs",
      "repos_url": "https://api.github.com/users/probablycorey/repos",
      "events_url": "https://api.github.com/users/probablycorey/events{/privacy}",
      "received_events_url": "https://api.github.com/users/probablycorey/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2014-01-30T18:47:31Z",
    "updated_at": "2014-01-30T18:47:31Z",
    "body": "I still get the the error when I modify `vendor/brightray/brightray.gypi`. I'm going to go ahead and upgrade to 10.9 and hope that fixes them problem.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/33726406",
    "html_url": "https://github.com/electron/electron/pull/162#issuecomment-33726406",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/162",
    "id": 33726406,
    "user": {
      "login": "probablycorey",
      "id": 596,
      "avatar_url": "https://avatars0.githubusercontent.com/u/596?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/probablycorey",
      "html_url": "https://github.com/probablycorey",
      "followers_url": "https://api.github.com/users/probablycorey/followers",
      "following_url": "https://api.github.com/users/probablycorey/following{/other_user}",
      "gists_url": "https://api.github.com/users/probablycorey/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/probablycorey/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/probablycorey/subscriptions",
      "organizations_url": "https://api.github.com/users/probablycorey/orgs",
      "repos_url": "https://api.github.com/users/probablycorey/repos",
      "events_url": "https://api.github.com/users/probablycorey/events{/privacy}",
      "received_events_url": "https://api.github.com/users/probablycorey/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2014-01-30T19:57:07Z",
    "updated_at": "2014-01-30T19:57:07Z",
    "body": "Compiles fine on Mavericks!\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/33753761",
    "html_url": "https://github.com/electron/electron/pull/162#issuecomment-33753761",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/162",
    "id": 33753761,
    "user": {
      "login": "probablycorey",
      "id": 596,
      "avatar_url": "https://avatars0.githubusercontent.com/u/596?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/probablycorey",
      "html_url": "https://github.com/probablycorey",
      "followers_url": "https://api.github.com/users/probablycorey/followers",
      "following_url": "https://api.github.com/users/probablycorey/following{/other_user}",
      "gists_url": "https://api.github.com/users/probablycorey/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/probablycorey/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/probablycorey/subscriptions",
      "organizations_url": "https://api.github.com/users/probablycorey/orgs",
      "repos_url": "https://api.github.com/users/probablycorey/repos",
      "events_url": "https://api.github.com/users/probablycorey/events{/privacy}",
      "received_events_url": "https://api.github.com/users/probablycorey/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2014-01-31T01:18:40Z",
    "updated_at": "2014-01-31T01:18:40Z",
    "body": "I'm a bit stuck on this. Here is what I did.\n1. I uploaded a version of squirrel that removed the check for code signing by commenting out [this line](https://github.com/Squirrel/Squirrel.Mac/blob/master/Squirrel/SQRLUpdater.m#L170). Codesigning is works differently on Mavericks and I'd like to skip that problem for now.\n2. I added some logging to `AutoUpdater::SetFeedURL` to make sure `g_updater.updates` every returns anything. But it doesn't look like it does.\n\n```\n2014-01-30 17:10:07.466 Atom[90256:507] Internals of CFAllocator not known; out-of-memory failures via CFAllocator will not result in termination. http://crbug.com/45650\n[90256:0130/171007:WARNING:dns_config_service_posix.cc(188)] dns_config has unhandled options!\n2014-01-30 17:10:07.740 Atom[90256:507] Could not get code signature for running application, BUT I DON'T FUCKING CARE!: Error Domain=NSOSStatusErrorDomain Code=-67062 \"The operation couldn’t be completed. (OSStatus error -67062.)\"\n2014-01-30 17:10:07.745 Atom[90256:507] --- SETTING THE FEED URL.\n2014-01-30 17:10:07.745 Atom[90256:507] --- CHECKING FOR UPDATES.\n2014-01-30 17:10:07.763 Atom[90256:507] \"App load time: 209ms\"\n2014-01-30 17:10:07.776 Atom Helper[90257:507] Internals of CFAllocator not known; out-of-memory failures via CFAllocator will not result in termination. http://crbug.com/45650\n[90257:0130/171007:INFO:renderer_main.cc(227)] Renderer process started\n[90256:0130/171009:INFO:CONSOLE(23)] \"Window load time: 1733ms\", source: /Users/corey/github/atom/src/window-bootstrap.coffee (23)\n2014-01-30 17:10:16.340 Atom[90256:5e03] Download completed to: file://localhost/Users/corey/Library/Application%20Support/com.github.atom.ShipIt/update.aDKtn0g/Atom.app.zip\n```\n\nThe logs inside the `subscribeNext`, `error` and `completed` blocks never get called. But it looks like squirrel logs that the download completes. Any ideas?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/33793362",
    "html_url": "https://github.com/electron/electron/pull/162#issuecomment-33793362",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/162",
    "id": 33793362,
    "user": {
      "login": "keithduncan",
      "id": 22101,
      "avatar_url": "https://avatars2.githubusercontent.com/u/22101?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/keithduncan",
      "html_url": "https://github.com/keithduncan",
      "followers_url": "https://api.github.com/users/keithduncan/followers",
      "following_url": "https://api.github.com/users/keithduncan/following{/other_user}",
      "gists_url": "https://api.github.com/users/keithduncan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/keithduncan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/keithduncan/subscriptions",
      "organizations_url": "https://api.github.com/users/keithduncan/orgs",
      "repos_url": "https://api.github.com/users/keithduncan/repos",
      "events_url": "https://api.github.com/users/keithduncan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/keithduncan/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2014-01-31T13:25:04Z",
    "updated_at": "2014-01-31T13:25:04Z",
    "body": "Without the signature, `-verifyAndPrepareUpdate:fromBundle:` will return `nil` and halt the signal chain, so the update will be downloaded but never prepared and delivered on `updates`.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/33794166",
    "html_url": "https://github.com/electron/electron/pull/162#issuecomment-33794166",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/162",
    "id": 33794166,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2014-01-31T13:36:53Z",
    "updated_at": "2014-01-31T13:36:53Z",
    "body": "@keithduncan as I tested, errors seem to never been delivered to `updates` even if the application was signed, is this the expected behavior?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/33795216",
    "html_url": "https://github.com/electron/electron/pull/162#issuecomment-33795216",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/162",
    "id": 33795216,
    "user": {
      "login": "keithduncan",
      "id": 22101,
      "avatar_url": "https://avatars2.githubusercontent.com/u/22101?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/keithduncan",
      "html_url": "https://github.com/keithduncan",
      "followers_url": "https://api.github.com/users/keithduncan/followers",
      "following_url": "https://api.github.com/users/keithduncan/following{/other_user}",
      "gists_url": "https://api.github.com/users/keithduncan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/keithduncan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/keithduncan/subscriptions",
      "organizations_url": "https://api.github.com/users/keithduncan/orgs",
      "repos_url": "https://api.github.com/users/keithduncan/repos",
      "events_url": "https://api.github.com/users/keithduncan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/keithduncan/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2014-01-31T13:52:13Z",
    "updated_at": "2014-01-31T13:52:13Z",
    "body": "@zcbenz yep this is from `RACCommand` which catches errors and delivers them to it’s `errors` signal\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/33856174",
    "html_url": "https://github.com/electron/electron/pull/162#issuecomment-33856174",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/162",
    "id": 33856174,
    "user": {
      "login": "probablycorey",
      "id": 596,
      "avatar_url": "https://avatars0.githubusercontent.com/u/596?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/probablycorey",
      "html_url": "https://github.com/probablycorey",
      "followers_url": "https://api.github.com/users/probablycorey/followers",
      "following_url": "https://api.github.com/users/probablycorey/following{/other_user}",
      "gists_url": "https://api.github.com/users/probablycorey/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/probablycorey/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/probablycorey/subscriptions",
      "organizations_url": "https://api.github.com/users/probablycorey/orgs",
      "repos_url": "https://api.github.com/users/probablycorey/repos",
      "events_url": "https://api.github.com/users/probablycorey/events{/privacy}",
      "received_events_url": "https://api.github.com/users/probablycorey/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2014-02-01T00:22:03Z",
    "updated_at": "2014-02-01T00:22:03Z",
    "body": "This is almost working @zcbenz. The only thing left is getting the `no-update-available` event to fire.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/33859044",
    "html_url": "https://github.com/electron/electron/pull/162#issuecomment-33859044",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/162",
    "id": 33859044,
    "user": {
      "login": "jspahrsummers",
      "id": 432536,
      "avatar_url": "https://avatars3.githubusercontent.com/u/432536?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jspahrsummers",
      "html_url": "https://github.com/jspahrsummers",
      "followers_url": "https://api.github.com/users/jspahrsummers/followers",
      "following_url": "https://api.github.com/users/jspahrsummers/following{/other_user}",
      "gists_url": "https://api.github.com/users/jspahrsummers/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jspahrsummers/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jspahrsummers/subscriptions",
      "organizations_url": "https://api.github.com/users/jspahrsummers/orgs",
      "repos_url": "https://api.github.com/users/jspahrsummers/repos",
      "events_url": "https://api.github.com/users/jspahrsummers/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jspahrsummers/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-01T01:24:17Z",
    "updated_at": "2014-02-01T01:24:17Z",
    "body": "@probablycorey Instead of subscribing to the `updates` signal, you can wait for the results of `checkForUpdatesCommand`. In the same way that you get errors from `[checkForUpdatesCommand execute:nil]`, you can also subscribe to completion:\n\n``` objc\n[[g_updater.checkForUpdatesCommand execute:nil] subscribeError:^(NSError *error) {\n    NSLog(@\"ruh roh\");\n} completed:^{\n    NSLog(@\"aw yeah\");\n}];\n```\n\nIf you want to know whether a `SQRLDownloadedUpdate` is sent, you have to do a little juggling to shove a \"default\" value into the signal:\n\n``` objc\n[[[[g_updater.checkForUpdatesCommand\n    execute:nil]\n    // Send a `nil` after everything...\n    concat:[RACSignal return:nil]]\n    // But only take the first value. If an update is sent, we'll get that.\n    // Otherwise, we'll get our inserted `nil` value.\n    take:1]\n    subscribeNext:^(SQRLDownloadedUpdate *update) {\n        if (update == nil) {\n            NSLog(@\"No new updates\");\n        } else {\n            NSLog(@\"Got this sweet update here: %@\", update);\n        }\n    } error:^(NSError *error) {\n        NSLog(@\"Everything is terrible: %@\", error);\n    }];\n```\n\nWithout a doubt, ReactiveCocoa is fairly intimidating. The important part is just to remember that everything is actually a _stream_ of values, even if it's just zero or one value normally. Most problems just come down to figuring out the right way to combine and filter those streams of values.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/33865119",
    "html_url": "https://github.com/electron/electron/pull/162#issuecomment-33865119",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/162",
    "id": 33865119,
    "user": {
      "login": "probablycorey",
      "id": 596,
      "avatar_url": "https://avatars0.githubusercontent.com/u/596?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/probablycorey",
      "html_url": "https://github.com/probablycorey",
      "followers_url": "https://api.github.com/users/probablycorey/followers",
      "following_url": "https://api.github.com/users/probablycorey/following{/other_user}",
      "gists_url": "https://api.github.com/users/probablycorey/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/probablycorey/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/probablycorey/subscriptions",
      "organizations_url": "https://api.github.com/users/probablycorey/orgs",
      "repos_url": "https://api.github.com/users/probablycorey/repos",
      "events_url": "https://api.github.com/users/probablycorey/events{/privacy}",
      "received_events_url": "https://api.github.com/users/probablycorey/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2014-02-01T06:38:30Z",
    "updated_at": "2014-02-01T06:38:30Z",
    "body": "Sweet, thanks Justin!\n\nOn Friday, January 31, 2014, Justin Spahr-Summers notifications@github.com\nwrote:\n\n> @probablycorey https://github.com/probablycorey Instead of subscribing\n> to the updates signal, you can wait for the results of\n> checkForUpdatesCommand. In the same way that you get errors from [checkForUpdatesCommand\n> execute:nil], you can also subscribe to completion:\n> \n> [[g_updater.checkForUpdatesCommand execute:nil] subscribeError:^(NSError *error) {\n>     NSLog(@\"ruh roh\");} completed:^{\n>     NSLog(@\"aw yeah\");}];\n> \n> If you want to know whether a SQRLDownloadedUpdate is sent, you have to\n> do a little juggling to shove a \"default\" value into the signal:\n> \n> [[[[g_updater.checkForUpdatesCommand\n>     execute:nil]\n>     // Send a `nil` after everything...\n>     concat:[RACSignal return:nil]]\n>     // But only take the first value. If an update is sent, we'll get that.\n>     // Otherwise, we'll get our inserted `nil` value.\n>     take:1]\n>     subscribeNext:^(SQRLDownloadedUpdate *update) {\n>         if (update == nil) {\n>             NSLog(@\"No new updates\");\n>         } else {\n>             NSLog(@\"Got this sweet update here: %@\", update);\n>         }\n>     } error:^(NSError *error) {\n>         NSLog(@\"Everything is terrible: %@\", error);\n>     }];\n> \n> Without a doubt, ReactiveCocoa is fairly intimidating. The important part\n> is just to remember that everything is actually a _stream_ of values,\n> even if it's just zero or one value normally. Most problems just come down\n> to figuring out the right way to combine and filter those streams of values.\n> \n> ## \n> \n> Reply to this email directly or view it on GitHubhttps://github.com/atom/atom-shell/pull/162#issuecomment-33859044\n> .\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/33887425",
    "html_url": "https://github.com/electron/electron/pull/162#issuecomment-33887425",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/162",
    "id": 33887425,
    "user": {
      "login": "probablycorey",
      "id": 596,
      "avatar_url": "https://avatars0.githubusercontent.com/u/596?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/probablycorey",
      "html_url": "https://github.com/probablycorey",
      "followers_url": "https://api.github.com/users/probablycorey/followers",
      "following_url": "https://api.github.com/users/probablycorey/following{/other_user}",
      "gists_url": "https://api.github.com/users/probablycorey/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/probablycorey/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/probablycorey/subscriptions",
      "organizations_url": "https://api.github.com/users/probablycorey/orgs",
      "repos_url": "https://api.github.com/users/probablycorey/repos",
      "events_url": "https://api.github.com/users/probablycorey/events{/privacy}",
      "received_events_url": "https://api.github.com/users/probablycorey/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2014-02-01T23:59:29Z",
    "updated_at": "2014-02-01T23:59:29Z",
    "body": "I followed @jspahrsummers advice and got it working! I'll get things merged on the Atom and Atom.io side. Once that is ready and after @zcbenz reviews my code this is ready to merge!\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/33898842",
    "html_url": "https://github.com/electron/electron/pull/162#issuecomment-33898842",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/162",
    "id": 33898842,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2014-02-02T12:09:30Z",
    "updated_at": "2014-02-02T12:09:30Z",
    "body": ":+1: \n"
  }
]