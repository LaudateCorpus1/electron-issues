[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/254787072",
    "html_url": "https://github.com/electron/electron/issues/7669#issuecomment-254787072",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7669",
    "id": 254787072,
    "user": {
      "login": "MarshallOfSound",
      "id": 6634592,
      "avatar_url": "https://avatars0.githubusercontent.com/u/6634592?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarshallOfSound",
      "html_url": "https://github.com/MarshallOfSound",
      "followers_url": "https://api.github.com/users/MarshallOfSound/followers",
      "following_url": "https://api.github.com/users/MarshallOfSound/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarshallOfSound/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarshallOfSound/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarshallOfSound/subscriptions",
      "organizations_url": "https://api.github.com/users/MarshallOfSound/orgs",
      "repos_url": "https://api.github.com/users/MarshallOfSound/repos",
      "events_url": "https://api.github.com/users/MarshallOfSound/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarshallOfSound/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-19T11:33:00Z",
    "updated_at": "2016-10-19T11:33:00Z",
    "body": "> As a workaround, we load a script that overrides global node objects and only allow access to electron.ipcRenderer\n\nThat's exactly what people here will recommend you do (a preload script that injects carefully scoped functions to allow access to IPC)\n\nJust make sure you don't inject the entire require funciton, and maybe not even the entire IPC module.  Something as simple as \n\n``` js\nconst { ipcRenderer } = require('electron')\nwindow.sendThing = () => {\n  ipcRenderer.send('thing')\n}\n```\n\nas a preload script might be the minimum you need üëç \n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/254787809",
    "html_url": "https://github.com/electron/electron/issues/7669#issuecomment-254787809",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7669",
    "id": 254787809,
    "user": {
      "login": "buremba",
      "id": 82745,
      "avatar_url": "https://avatars0.githubusercontent.com/u/82745?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/buremba",
      "html_url": "https://github.com/buremba",
      "followers_url": "https://api.github.com/users/buremba/followers",
      "following_url": "https://api.github.com/users/buremba/following{/other_user}",
      "gists_url": "https://api.github.com/users/buremba/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/buremba/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/buremba/subscriptions",
      "organizations_url": "https://api.github.com/users/buremba/orgs",
      "repos_url": "https://api.github.com/users/buremba/repos",
      "events_url": "https://api.github.com/users/buremba/events{/privacy}",
      "received_events_url": "https://api.github.com/users/buremba/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-19T11:36:51Z",
    "updated_at": "2016-10-19T11:36:51Z",
    "body": "@MarshallOfSound , thanks for the quick response. Is there a simple way to override all the global node objects? Is it enough to just override the `require` object?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/254788474",
    "html_url": "https://github.com/electron/electron/issues/7669#issuecomment-254788474",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7669",
    "id": 254788474,
    "user": {
      "login": "MarshallOfSound",
      "id": 6634592,
      "avatar_url": "https://avatars0.githubusercontent.com/u/6634592?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarshallOfSound",
      "html_url": "https://github.com/MarshallOfSound",
      "followers_url": "https://api.github.com/users/MarshallOfSound/followers",
      "following_url": "https://api.github.com/users/MarshallOfSound/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarshallOfSound/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarshallOfSound/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarshallOfSound/subscriptions",
      "organizations_url": "https://api.github.com/users/MarshallOfSound/orgs",
      "repos_url": "https://api.github.com/users/MarshallOfSound/repos",
      "events_url": "https://api.github.com/users/MarshallOfSound/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarshallOfSound/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-19T11:40:30Z",
    "updated_at": "2016-10-19T11:40:30Z",
    "body": "@buremba You don't need to have `nodeIntegration` enabled for a preload script to have access to a node environment (preload scripts always have a node environment regardless of the `nodeIntegration` setting)\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/254788846",
    "html_url": "https://github.com/electron/electron/issues/7669#issuecomment-254788846",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7669",
    "id": 254788846,
    "user": {
      "login": "buremba",
      "id": 82745,
      "avatar_url": "https://avatars0.githubusercontent.com/u/82745?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/buremba",
      "html_url": "https://github.com/buremba",
      "followers_url": "https://api.github.com/users/buremba/followers",
      "following_url": "https://api.github.com/users/buremba/following{/other_user}",
      "gists_url": "https://api.github.com/users/buremba/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/buremba/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/buremba/subscriptions",
      "organizations_url": "https://api.github.com/users/buremba/orgs",
      "repos_url": "https://api.github.com/users/buremba/repos",
      "events_url": "https://api.github.com/users/buremba/events{/privacy}",
      "received_events_url": "https://api.github.com/users/buremba/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-19T11:42:45Z",
    "updated_at": "2016-10-19T11:42:45Z",
    "body": "Ah, that's what I was missing. Thanks a lot @MarshallOfSound !\n"
  }
]