[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/118761328",
    "html_url": "https://github.com/electron/electron/issues/2129#issuecomment-118761328",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2129",
    "id": 118761328,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2015-07-06T07:46:09Z",
    "updated_at": "2015-07-06T07:46:09Z",
    "body": "You should avoid using `var crypto = require('crypto')` under global scope, it will try to store to `window.crypto` which unfortunately can not be changed.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/118779519",
    "html_url": "https://github.com/electron/electron/issues/2129#issuecomment-118779519",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2129",
    "id": 118779519,
    "user": {
      "login": "mauris",
      "id": 996939,
      "avatar_url": "https://avatars2.githubusercontent.com/u/996939?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mauris",
      "html_url": "https://github.com/mauris",
      "followers_url": "https://api.github.com/users/mauris/followers",
      "following_url": "https://api.github.com/users/mauris/following{/other_user}",
      "gists_url": "https://api.github.com/users/mauris/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mauris/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mauris/subscriptions",
      "organizations_url": "https://api.github.com/users/mauris/orgs",
      "repos_url": "https://api.github.com/users/mauris/repos",
      "events_url": "https://api.github.com/users/mauris/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mauris/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-06T09:02:27Z",
    "updated_at": "2015-07-06T09:02:27Z",
    "body": "So the solution is to put the `require` statement within another inner scope? I'll give that a try. Many thanks for replying so quickly. \n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/118799802",
    "html_url": "https://github.com/electron/electron/issues/2129#issuecomment-118799802",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2129",
    "id": 118799802,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2015-07-06T10:19:31Z",
    "updated_at": "2015-07-06T10:19:31Z",
    "body": "The simplest fix is to rename your variable to other than `crypto`, like `nodeCrypto = require('crypto')`.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/119035223",
    "html_url": "https://github.com/electron/electron/issues/2129#issuecomment-119035223",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2129",
    "id": 119035223,
    "user": {
      "login": "paulcbetts",
      "id": 1396,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1396?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulcbetts",
      "html_url": "https://github.com/paulcbetts",
      "followers_url": "https://api.github.com/users/paulcbetts/followers",
      "following_url": "https://api.github.com/users/paulcbetts/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulcbetts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulcbetts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulcbetts/subscriptions",
      "organizations_url": "https://api.github.com/users/paulcbetts/orgs",
      "repos_url": "https://api.github.com/users/paulcbetts/repos",
      "events_url": "https://api.github.com/users/paulcbetts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulcbetts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-07T00:35:48Z",
    "updated_at": "2015-07-07T00:35:48Z",
    "body": "`screen` is another library that will troll you in this fashion\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/218233557",
    "html_url": "https://github.com/electron/electron/issues/2129#issuecomment-218233557",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2129",
    "id": 218233557,
    "user": {
      "login": "francoislaberge",
      "id": 1845,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1845?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/francoislaberge",
      "html_url": "https://github.com/francoislaberge",
      "followers_url": "https://api.github.com/users/francoislaberge/followers",
      "following_url": "https://api.github.com/users/francoislaberge/following{/other_user}",
      "gists_url": "https://api.github.com/users/francoislaberge/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/francoislaberge/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/francoislaberge/subscriptions",
      "organizations_url": "https://api.github.com/users/francoislaberge/orgs",
      "repos_url": "https://api.github.com/users/francoislaberge/repos",
      "events_url": "https://api.github.com/users/francoislaberge/events{/privacy}",
      "received_events_url": "https://api.github.com/users/francoislaberge/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-10T17:39:20Z",
    "updated_at": "2016-05-10T17:39:20Z",
    "body": "@zcbenz What's the reasoning on this one? Why is this electron's behavior? I created a [debugger](https://www.npmjs.com/package/debugger) cli for node.js scripts using electron, and because of this you can't just run any arbitrary node.js app via including it into an electron page.\n\nI worked around this by doing the following:\n\n``` js\n<!DOCTYPE html>\n<html>\n<head lang=\"en\">\n    <meta charset=\"utf-8\">\n    <title>Debugger</title>\n</head>\n<body>\n    <script>\n        /**\n         * Ignore all this. This just includes the debugger target script\n         */\n        var ipc = require('ipc');\n            src = ipc.sendSync('get-target-script');\n\n        // We have to wrap the require in a scope to avoid issues like the following\n        // where when trying to assign to certain named variables when in the global\n        // scope it will be ignored because window.<variable-name> is read only.\n        // See 'crypto' issue for example:\n        // https://github.com/electron/electron/issues/2129\n        (function(){\n            require(src);\n        })();\n    </script>\n</body>\n</html>\n```\n\nAre there any obvious difference in the environments like this that I should be coding against? I find this much easier to use than using node-inspector. It's just\n\n``` bash\nnpm install -g debugger\ndebugger app.js\n```\n\nThanks in advance!\nFrancois\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/222638659",
    "html_url": "https://github.com/electron/electron/issues/2129#issuecomment-222638659",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2129",
    "id": 222638659,
    "user": {
      "login": "davidsharp",
      "id": 5731838,
      "avatar_url": "https://avatars0.githubusercontent.com/u/5731838?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/davidsharp",
      "html_url": "https://github.com/davidsharp",
      "followers_url": "https://api.github.com/users/davidsharp/followers",
      "following_url": "https://api.github.com/users/davidsharp/following{/other_user}",
      "gists_url": "https://api.github.com/users/davidsharp/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/davidsharp/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/davidsharp/subscriptions",
      "organizations_url": "https://api.github.com/users/davidsharp/orgs",
      "repos_url": "https://api.github.com/users/davidsharp/repos",
      "events_url": "https://api.github.com/users/davidsharp/events{/privacy}",
      "received_events_url": "https://api.github.com/users/davidsharp/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-31T09:32:34Z",
    "updated_at": "2016-05-31T09:32:34Z",
    "body": "@francoislaberge It's less Electron behaviour, and more a conflict between Chromium and Node behaviours, `window.crypto` exists in Chromium, unable to be over-written, so `crypto`'s just a namespace that can't be used in this instance.\n\nAt least you can call Node's `crypto` whatever you want, which seems like the most flexible solution. Maybe there could be better documentation of gotchas like this, but it beats taking away a Chromium feature people _could_ be expecting, when there's already a solution for Node `crypto` users.\n"
  }
]