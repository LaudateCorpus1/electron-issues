[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/101241241",
    "html_url": "https://github.com/electron/electron/issues/1658#issuecomment-101241241",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1658",
    "id": 101241241,
    "user": {
      "login": "YurySolovyov",
      "id": 2168518,
      "avatar_url": "https://avatars3.githubusercontent.com/u/2168518?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/YurySolovyov",
      "html_url": "https://github.com/YurySolovyov",
      "followers_url": "https://api.github.com/users/YurySolovyov/followers",
      "following_url": "https://api.github.com/users/YurySolovyov/following{/other_user}",
      "gists_url": "https://api.github.com/users/YurySolovyov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/YurySolovyov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/YurySolovyov/subscriptions",
      "organizations_url": "https://api.github.com/users/YurySolovyov/orgs",
      "repos_url": "https://api.github.com/users/YurySolovyov/repos",
      "events_url": "https://api.github.com/users/YurySolovyov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/YurySolovyov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-12T11:18:29Z",
    "updated_at": "2015-05-12T11:19:49Z",
    "body": "There is an `'original-fs'` module that you can require, which as you can see from it's name is not patched.\n\n``` js\nvar originalFs = require('original-fs');\noriginalFs.readFileSync('/path/to/example.asar');\n```\n\n[[docs]](https://github.com/atom/electron/blob/master/docs/tutorial/application-packaging.md#treating-asar-archive-as-normal-file)\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/101275652",
    "html_url": "https://github.com/electron/electron/issues/1658#issuecomment-101275652",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1658",
    "id": 101275652,
    "user": {
      "login": "bpasero",
      "id": 900690,
      "avatar_url": "https://avatars0.githubusercontent.com/u/900690?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bpasero",
      "html_url": "https://github.com/bpasero",
      "followers_url": "https://api.github.com/users/bpasero/followers",
      "following_url": "https://api.github.com/users/bpasero/following{/other_user}",
      "gists_url": "https://api.github.com/users/bpasero/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bpasero/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bpasero/subscriptions",
      "organizations_url": "https://api.github.com/users/bpasero/orgs",
      "repos_url": "https://api.github.com/users/bpasero/repos",
      "events_url": "https://api.github.com/users/bpasero/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bpasero/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-12T13:25:47Z",
    "updated_at": "2015-05-12T13:25:47Z",
    "body": "That is quite insane, it should be the other way around. A client can opt in to asar support with a method call and then things just work.\n\nNow I have to change my node only code to use a module which might not be in all environments, specifically those where Atom is not around.\n\nAtom should not temper with core modules and should not require me to write custom code that only works in the Atom environment. The code I write should run anywhere, either node.js, io.js or Atom.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/101280648",
    "html_url": "https://github.com/electron/electron/issues/1658#issuecomment-101280648",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1658",
    "id": 101280648,
    "user": {
      "login": "YurySolovyov",
      "id": 2168518,
      "avatar_url": "https://avatars3.githubusercontent.com/u/2168518?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/YurySolovyov",
      "html_url": "https://github.com/YurySolovyov",
      "followers_url": "https://api.github.com/users/YurySolovyov/followers",
      "following_url": "https://api.github.com/users/YurySolovyov/following{/other_user}",
      "gists_url": "https://api.github.com/users/YurySolovyov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/YurySolovyov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/YurySolovyov/subscriptions",
      "organizations_url": "https://api.github.com/users/YurySolovyov/orgs",
      "repos_url": "https://api.github.com/users/YurySolovyov/repos",
      "events_url": "https://api.github.com/users/YurySolovyov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/YurySolovyov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-12T13:36:33Z",
    "updated_at": "2015-05-12T13:36:33Z",
    "body": "Well you have to have either special `asar-fs` module or patched node's `fs` + `original-fs` and I'm still not sure what's better.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/101284486",
    "html_url": "https://github.com/electron/electron/issues/1658#issuecomment-101284486",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1658",
    "id": 101284486,
    "user": {
      "login": "bpasero",
      "id": 900690,
      "avatar_url": "https://avatars0.githubusercontent.com/u/900690?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bpasero",
      "html_url": "https://github.com/bpasero",
      "followers_url": "https://api.github.com/users/bpasero/followers",
      "following_url": "https://api.github.com/users/bpasero/following{/other_user}",
      "gists_url": "https://api.github.com/users/bpasero/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bpasero/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bpasero/subscriptions",
      "organizations_url": "https://api.github.com/users/bpasero/orgs",
      "repos_url": "https://api.github.com/users/bpasero/repos",
      "events_url": "https://api.github.com/users/bpasero/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bpasero/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-12T13:40:40Z",
    "updated_at": "2015-05-12T13:40:40Z",
    "body": "Well, graceful-fs is showing how to do it, just require it once and it patches the fs module. Thats how I would expect asar support to work too.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/101289958",
    "html_url": "https://github.com/electron/electron/issues/1658#issuecomment-101289958",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1658",
    "id": 101289958,
    "user": {
      "login": "YurySolovyov",
      "id": 2168518,
      "avatar_url": "https://avatars3.githubusercontent.com/u/2168518?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/YurySolovyov",
      "html_url": "https://github.com/YurySolovyov",
      "followers_url": "https://api.github.com/users/YurySolovyov/followers",
      "following_url": "https://api.github.com/users/YurySolovyov/following{/other_user}",
      "gists_url": "https://api.github.com/users/YurySolovyov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/YurySolovyov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/YurySolovyov/subscriptions",
      "organizations_url": "https://api.github.com/users/YurySolovyov/orgs",
      "repos_url": "https://api.github.com/users/YurySolovyov/repos",
      "events_url": "https://api.github.com/users/YurySolovyov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/YurySolovyov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-12T13:51:54Z",
    "updated_at": "2015-05-12T13:51:54Z",
    "body": "/cc @zcbenz \n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/101462942",
    "html_url": "https://github.com/electron/electron/issues/1658#issuecomment-101462942",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1658",
    "id": 101462942,
    "user": {
      "login": "paulcbetts",
      "id": 1396,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1396?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulcbetts",
      "html_url": "https://github.com/paulcbetts",
      "followers_url": "https://api.github.com/users/paulcbetts/followers",
      "following_url": "https://api.github.com/users/paulcbetts/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulcbetts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulcbetts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulcbetts/subscriptions",
      "organizations_url": "https://api.github.com/users/paulcbetts/orgs",
      "repos_url": "https://api.github.com/users/paulcbetts/repos",
      "events_url": "https://api.github.com/users/paulcbetts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulcbetts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-12T23:56:56Z",
    "updated_at": "2015-05-12T23:57:41Z",
    "body": "> That is quite insane, it should be the other way around. A client can opt in to asar support with a method call and then things just work.\n\nWhat you're describing is the _opposite_ of \"things just work\", it means that every library that uses Electron now has to be ASAR aware (including ones that were not designed for Electron). The current design causes the least amount of developer suffering \n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/101516672",
    "html_url": "https://github.com/electron/electron/issues/1658#issuecomment-101516672",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1658",
    "id": 101516672,
    "user": {
      "login": "bpasero",
      "id": 900690,
      "avatar_url": "https://avatars0.githubusercontent.com/u/900690?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bpasero",
      "html_url": "https://github.com/bpasero",
      "followers_url": "https://api.github.com/users/bpasero/followers",
      "following_url": "https://api.github.com/users/bpasero/following{/other_user}",
      "gists_url": "https://api.github.com/users/bpasero/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bpasero/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bpasero/subscriptions",
      "organizations_url": "https://api.github.com/users/bpasero/orgs",
      "repos_url": "https://api.github.com/users/bpasero/repos",
      "events_url": "https://api.github.com/users/bpasero/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bpasero/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-13T05:25:11Z",
    "updated_at": "2015-05-13T14:27:14Z",
    "body": "Oh yeah, don't get me wrong, I like if things just work without custom\nmodules! But then don't throw a very weird non-node error when\nfs.readFile() or fs.stat() a text file that happens to have a asar\nextension.\n\nIf you overwrite a module, play by the rules of the module and don't break\nits contract.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/103830748",
    "html_url": "https://github.com/electron/electron/issues/1658#issuecomment-103830748",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1658",
    "id": 103830748,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2015-05-20T09:55:31Z",
    "updated_at": "2015-05-20T09:55:31Z",
    "body": "This behavior has been there for a long time and many code are already relying on it, I'm afraid no matter whether it is good or not it has been too late to change this behavior, so I'm closing this as won't fix.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/126071165",
    "html_url": "https://github.com/electron/electron/issues/1658#issuecomment-126071165",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1658",
    "id": 126071165,
    "user": {
      "login": "Ivshti",
      "id": 1247629,
      "avatar_url": "https://avatars0.githubusercontent.com/u/1247629?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Ivshti",
      "html_url": "https://github.com/Ivshti",
      "followers_url": "https://api.github.com/users/Ivshti/followers",
      "following_url": "https://api.github.com/users/Ivshti/following{/other_user}",
      "gists_url": "https://api.github.com/users/Ivshti/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Ivshti/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Ivshti/subscriptions",
      "organizations_url": "https://api.github.com/users/Ivshti/orgs",
      "repos_url": "https://api.github.com/users/Ivshti/repos",
      "events_url": "https://api.github.com/users/Ivshti/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Ivshti/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-29T19:37:36Z",
    "updated_at": "2015-07-29T19:48:50Z",
    "body": "This is just frustrating.\n\nCurrently most extractor node.js modules do not work with the tarballs of our application because they contain an empty atom.asar.\n\n@zcbenz  Please think a bit more about what can be done about this. I'm not suggesting an opt-out of ASAR, but just for an option of handling ASAR errors separately somehow before they reach unsuspecting node.js modules.\n\nFor anyone looking for a workaround, use mafintosh/tar-fs, it supports passing a custom fs module, e.g. `tar.unpack(path,{fs: require(\"original-fs\")})`\n"
  }
]