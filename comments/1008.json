[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/70023989",
    "html_url": "https://github.com/electron/electron/issues/1008#issuecomment-70023989",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1008",
    "id": 70023989,
    "user": {
      "login": "paulcbetts",
      "id": 1396,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1396?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulcbetts",
      "html_url": "https://github.com/paulcbetts",
      "followers_url": "https://api.github.com/users/paulcbetts/followers",
      "following_url": "https://api.github.com/users/paulcbetts/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulcbetts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulcbetts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulcbetts/subscriptions",
      "organizations_url": "https://api.github.com/users/paulcbetts/orgs",
      "repos_url": "https://api.github.com/users/paulcbetts/repos",
      "events_url": "https://api.github.com/users/paulcbetts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulcbetts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-15T01:09:06Z",
    "updated_at": "2015-01-15T01:09:06Z",
    "body": "I actually would rather that Atom Shell's built-in `auto-updater` were to help you out with implementing Squirrel.Windows callbacks and allow you to check for updates, but I realize that this is a more complicated change (it is the direction we want to go though moving forward)\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/70024253",
    "html_url": "https://github.com/electron/electron/issues/1008#issuecomment-70024253",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1008",
    "id": 70024253,
    "user": {
      "login": "joshuawarner32",
      "id": 182686,
      "avatar_url": "https://avatars0.githubusercontent.com/u/182686?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/joshuawarner32",
      "html_url": "https://github.com/joshuawarner32",
      "followers_url": "https://api.github.com/users/joshuawarner32/followers",
      "following_url": "https://api.github.com/users/joshuawarner32/following{/other_user}",
      "gists_url": "https://api.github.com/users/joshuawarner32/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/joshuawarner32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/joshuawarner32/subscriptions",
      "organizations_url": "https://api.github.com/users/joshuawarner32/orgs",
      "repos_url": "https://api.github.com/users/joshuawarner32/repos",
      "events_url": "https://api.github.com/users/joshuawarner32/events{/privacy}",
      "received_events_url": "https://api.github.com/users/joshuawarner32/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-15T01:11:53Z",
    "updated_at": "2015-01-15T01:11:53Z",
    "body": "@paulcbetts, I'm certainly open to taking that approach (in lieu of a more short-term solution), as long as the timeline doesn't snowball because of it.\n\nWhat would be involved there?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/70025008",
    "html_url": "https://github.com/electron/electron/issues/1008#issuecomment-70025008",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1008",
    "id": 70025008,
    "user": {
      "login": "paulcbetts",
      "id": 1396,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1396?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulcbetts",
      "html_url": "https://github.com/paulcbetts",
      "followers_url": "https://api.github.com/users/paulcbetts/followers",
      "following_url": "https://api.github.com/users/paulcbetts/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulcbetts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulcbetts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulcbetts/subscriptions",
      "organizations_url": "https://api.github.com/users/paulcbetts/orgs",
      "repos_url": "https://api.github.com/users/paulcbetts/repos",
      "events_url": "https://api.github.com/users/paulcbetts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulcbetts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-15T01:20:04Z",
    "updated_at": "2015-01-15T01:20:04Z",
    "body": "@joshuawarner32 So, there are a few parts, I'll copy-paste relevant code snippets from our app which, while not complete, should give you some ideas:\n- Implement checkForUpdates and the events on Windows using Squirrel:\n\n``` coffee\ncheckForUpdates: (url) -> \n  updateDotExe = path.resolve path.dirname(process.execPath), '..', 'update.exe'\n  return unless fs.existsSync(updateDotExe)\n\n  proc = spawn updateDotExe, ['--update', url]\n  proc.stdout.on 'data', (m) -> logger.info(\"Update: \" + m)\n  proc.stderr.on 'data', (m) -> logger.info(\"Update: \" + m)\n```\n- Create an API for adding / removing shortcuts\n\n``` coffee\n# Private: Forks to Squirrel in order to install or update our app shortcut on\n# the Desktop and in the Start Menu on Windows\n#\n# finish - A callback to be invoked on completion\n#\n# Returns Nothing\ninstallShortcuts = (finish) ->\n  target = path.basename(process.execPath)\n  updateDotExe = path.resolve path.dirname(process.execPath), '..', 'update.exe'\n  spawn(updateDotExe, ['--createShortcut', target]).on('exit', finish)\n\n# Private: Forks to Squirrel in order to remove our app shortcut on the Desktop\n# and in the Start Menu on Windows. Called on app uninstall.\n#\n# finish - A callback to be invoked on completion\n#\n# Returns Nothing\nuninstallShortcuts = (finish) ->\n  target = path.basename(process.execPath)\n  updateDotExe = path.resolve path.dirname(process.execPath), '..', 'update.exe'\n  spawn(updateDotExe, ['--removeShortcut', target]).on('exit', finish)\n```\n- Handle Squirrel Events, as **early in app startup as possible** (in our app, this is literally the first method called in the application). We hard-code this, but you would want to instead allow the dev to customize these callbacks, as long as it terminates the app for you after the callback.\n\n``` coffee\n# Private: When our app is installed, Squirrel (our app install/update framework)\n# invokes our executable with specific parameters, usually of the form\n# '--squirrel-$EVENT $VERSION' (i.e. '--squirrel-install 0.1.0'). This is our\n# chance to do custom install / uninstall actions. Once these events are handled,\n# we **must** exit immediately\n#\n# appStart - A callback to be invoked to start the application if there are no\n#            Squirrel events to handle.\n#\n# Returns Nothing\nhandleSquirrelEvents = (appStart) ->\n  options = process.argv[1..]\n  unless options and options.length >= 1\n    appStart()\n    return\n\n  m = options[0].match /--squirrel-([a-z]+)/\n  unless m and m[1]\n    appStart()\n    return\n\n  if m[1] is 'firstrun'\n    appStart()\n    return\n\n  app.on 'ready', ->\n    switch m[1]\n      when 'install' then installShortcuts(app.quit)\n      when 'updated' then installShortcuts(app.quit)\n      when 'uninstall' then uninstallShortcuts(app.quit)\n      when 'obsolete' then app.quit()\n```\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/70336054",
    "html_url": "https://github.com/electron/electron/issues/1008#issuecomment-70336054",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1008",
    "id": 70336054,
    "user": {
      "login": "joshuawarner32",
      "id": 182686,
      "avatar_url": "https://avatars0.githubusercontent.com/u/182686?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/joshuawarner32",
      "html_url": "https://github.com/joshuawarner32",
      "followers_url": "https://api.github.com/users/joshuawarner32/followers",
      "following_url": "https://api.github.com/users/joshuawarner32/following{/other_user}",
      "gists_url": "https://api.github.com/users/joshuawarner32/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/joshuawarner32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/joshuawarner32/subscriptions",
      "organizations_url": "https://api.github.com/users/joshuawarner32/orgs",
      "repos_url": "https://api.github.com/users/joshuawarner32/repos",
      "events_url": "https://api.github.com/users/joshuawarner32/events{/privacy}",
      "received_events_url": "https://api.github.com/users/joshuawarner32/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-16T22:54:46Z",
    "updated_at": "2015-01-16T22:54:46Z",
    "body": "I have those handlers integrated and working in my custom app (thanks!).  Were you thinking those would get integrated into atom-shell itself?  If so, where?  There's not a whole lot of javascript code (AFAICT) that executes before the app's main.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/70336371",
    "html_url": "https://github.com/electron/electron/issues/1008#issuecomment-70336371",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1008",
    "id": 70336371,
    "user": {
      "login": "kevinsawicki",
      "id": 671378,
      "avatar_url": "https://avatars0.githubusercontent.com/u/671378?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kevinsawicki",
      "html_url": "https://github.com/kevinsawicki",
      "followers_url": "https://api.github.com/users/kevinsawicki/followers",
      "following_url": "https://api.github.com/users/kevinsawicki/following{/other_user}",
      "gists_url": "https://api.github.com/users/kevinsawicki/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kevinsawicki/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kevinsawicki/subscriptions",
      "organizations_url": "https://api.github.com/users/kevinsawicki/orgs",
      "repos_url": "https://api.github.com/users/kevinsawicki/repos",
      "events_url": "https://api.github.com/users/kevinsawicki/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kevinsawicki/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2015-01-16T22:57:39Z",
    "updated_at": "2015-01-16T22:57:39Z",
    "body": "> Were you thinking those would get integrated into atom-shell itself?\n\nYeah, there is a plan to add more windows squirrel helpers to the `auto-update` class, https://github.com/atom/atom-shell/issues/939\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/70336979",
    "html_url": "https://github.com/electron/electron/issues/1008#issuecomment-70336979",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1008",
    "id": 70336979,
    "user": {
      "login": "joshuawarner32",
      "id": 182686,
      "avatar_url": "https://avatars0.githubusercontent.com/u/182686?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/joshuawarner32",
      "html_url": "https://github.com/joshuawarner32",
      "followers_url": "https://api.github.com/users/joshuawarner32/followers",
      "following_url": "https://api.github.com/users/joshuawarner32/following{/other_user}",
      "gists_url": "https://api.github.com/users/joshuawarner32/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/joshuawarner32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/joshuawarner32/subscriptions",
      "organizations_url": "https://api.github.com/users/joshuawarner32/orgs",
      "repos_url": "https://api.github.com/users/joshuawarner32/repos",
      "events_url": "https://api.github.com/users/joshuawarner32/events{/privacy}",
      "received_events_url": "https://api.github.com/users/joshuawarner32/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-16T23:03:06Z",
    "updated_at": "2015-01-16T23:03:06Z",
    "body": "Ah, cool.  Sounds like this is mostly a dup of #939, then.\n"
  }
]