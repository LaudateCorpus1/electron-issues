[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/36560360",
    "html_url": "https://github.com/electron/electron/issues/193#issuecomment-36560360",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/193",
    "id": 36560360,
    "user": {
      "login": "ptoomey3",
      "id": 103360,
      "avatar_url": "https://avatars1.githubusercontent.com/u/103360?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ptoomey3",
      "html_url": "https://github.com/ptoomey3",
      "followers_url": "https://api.github.com/users/ptoomey3/followers",
      "following_url": "https://api.github.com/users/ptoomey3/following{/other_user}",
      "gists_url": "https://api.github.com/users/ptoomey3/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ptoomey3/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ptoomey3/subscriptions",
      "organizations_url": "https://api.github.com/users/ptoomey3/orgs",
      "repos_url": "https://api.github.com/users/ptoomey3/repos",
      "events_url": "https://api.github.com/users/ptoomey3/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ptoomey3/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2014-03-03T21:13:24Z",
    "updated_at": "2014-03-03T21:13:24Z",
    "body": "/cc @mastahyeti @gregose \n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/36575046",
    "html_url": "https://github.com/electron/electron/issues/193#issuecomment-36575046",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/193",
    "id": 36575046,
    "user": {
      "login": "ptoomey3",
      "id": 103360,
      "avatar_url": "https://avatars1.githubusercontent.com/u/103360?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ptoomey3",
      "html_url": "https://github.com/ptoomey3",
      "followers_url": "https://api.github.com/users/ptoomey3/followers",
      "following_url": "https://api.github.com/users/ptoomey3/following{/other_user}",
      "gists_url": "https://api.github.com/users/ptoomey3/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ptoomey3/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ptoomey3/subscriptions",
      "organizations_url": "https://api.github.com/users/ptoomey3/orgs",
      "repos_url": "https://api.github.com/users/ptoomey3/repos",
      "events_url": "https://api.github.com/users/ptoomey3/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ptoomey3/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2014-03-03T23:36:28Z",
    "updated_at": "2014-03-03T23:40:48Z",
    "body": "Ok..I'm officially out of my comfort zone here, so my apologies if I am repeating something obvious/known.  I was browsing the V8 [embedder's guide](https://developers.google.com/v8/embed) to try to understand how V8 views the notion of \"origin\" in V8.  It looks like each `context` [gets it's own origin](https://developers.google.com/v8/embed#contexts). So, I took a look through atom-shell and noticed [this line](https://github.com/atom/atom-shell/blob/master/browser/atom_browser_main_parts.cc#L61) seems to imply we use one context for the entire process.  So, I wonder if we could support some notion of each iframe receiving their own context such that we can enforce same origin policy between \"trusted content\" and \"untrusted content\" using built-in browser primitives such as the `sandbox` attribute on iframes.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/36575148",
    "html_url": "https://github.com/electron/electron/issues/193#issuecomment-36575148",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/193",
    "id": 36575148,
    "user": {
      "login": "ptoomey3",
      "id": 103360,
      "avatar_url": "https://avatars1.githubusercontent.com/u/103360?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ptoomey3",
      "html_url": "https://github.com/ptoomey3",
      "followers_url": "https://api.github.com/users/ptoomey3/followers",
      "following_url": "https://api.github.com/users/ptoomey3/following{/other_user}",
      "gists_url": "https://api.github.com/users/ptoomey3/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ptoomey3/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ptoomey3/subscriptions",
      "organizations_url": "https://api.github.com/users/ptoomey3/orgs",
      "repos_url": "https://api.github.com/users/ptoomey3/repos",
      "events_url": "https://api.github.com/users/ptoomey3/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ptoomey3/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2014-03-03T23:37:45Z",
    "updated_at": "2014-03-03T23:37:53Z",
    "body": "Oops..the second link I referenced mentions contexts, but doesn't mention the [security model](https://developers.google.com/v8/embed#security) of them.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/36575540",
    "html_url": "https://github.com/electron/electron/issues/193#issuecomment-36575540",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/193",
    "id": 36575540,
    "user": {
      "login": "nathansobo",
      "id": 1789,
      "avatar_url": "https://avatars2.githubusercontent.com/u/1789?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nathansobo",
      "html_url": "https://github.com/nathansobo",
      "followers_url": "https://api.github.com/users/nathansobo/followers",
      "following_url": "https://api.github.com/users/nathansobo/following{/other_user}",
      "gists_url": "https://api.github.com/users/nathansobo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nathansobo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nathansobo/subscriptions",
      "organizations_url": "https://api.github.com/users/nathansobo/orgs",
      "repos_url": "https://api.github.com/users/nathansobo/repos",
      "events_url": "https://api.github.com/users/nathansobo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nathansobo/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2014-03-03T23:42:59Z",
    "updated_at": "2014-03-03T23:42:59Z",
    "body": "I think you're on the right track @ptoomey3.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/36622919",
    "html_url": "https://github.com/electron/electron/issues/193#issuecomment-36622919",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/193",
    "id": 36622919,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2014-03-04T13:23:05Z",
    "updated_at": "2014-03-04T13:23:05Z",
    "body": "After some investigation, I found that I disabled web security in early developments, which just grant universal access to all web documents no mater what security origin they have, which caused this problem.\n\nIn atom-shell only browser process uses one global context, in renderer processes we still use different v8 contexts for different pages and security tokens are untouched (thanks to node's [multi-context](http://strongloop.com/strongblog/whats-new-node-js-v0-12-multiple-context-execution/) patch). In node-webkit the whole node layer runs in a separated v8 context, and in order to make node's APIs accessible to web pages, we had to erase web pages' security tokens, which led to the extreme difficulty of guarding from frames.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/36634975",
    "html_url": "https://github.com/electron/electron/issues/193#issuecomment-36634975",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/193",
    "id": 36634975,
    "user": {
      "login": "ptoomey3",
      "id": 103360,
      "avatar_url": "https://avatars1.githubusercontent.com/u/103360?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ptoomey3",
      "html_url": "https://github.com/ptoomey3",
      "followers_url": "https://api.github.com/users/ptoomey3/followers",
      "following_url": "https://api.github.com/users/ptoomey3/following{/other_user}",
      "gists_url": "https://api.github.com/users/ptoomey3/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ptoomey3/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ptoomey3/subscriptions",
      "organizations_url": "https://api.github.com/users/ptoomey3/orgs",
      "repos_url": "https://api.github.com/users/ptoomey3/repos",
      "events_url": "https://api.github.com/users/ptoomey3/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ptoomey3/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2014-03-04T15:20:57Z",
    "updated_at": "2014-03-06T20:03:49Z",
    "body": "@zcbenz - I know I might be getting greedy, but is there some way we can default iframes to be sandboxed? #196 forces node integration to \"except-iframe\".  So, by default all iframes will not have node integration.  But, by default, all iframes can still do `window.parent.proces.XYZ()`. So, it would be nice to force iframes to be \"secure by default\" and allow people to opt out of it if absolutely necessary.  So, by default an iframe would have `sandbox=''` (i.e. most restrictive policy). If users want a less restrictive policy they can specify one by setting it explicitly `sandbox='allow-scripts'`. And, if they want to exempt out of it entirely (which should be very rare) they could set a data attribute `data-disable-sandbox='true'`. This would allow us to grep for any usages of `data-disable-sandbox` to audit any extension that is using this potentially insecure behavior.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/36727792",
    "html_url": "https://github.com/electron/electron/issues/193#issuecomment-36727792",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/193",
    "id": 36727792,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2014-03-05T10:15:39Z",
    "updated_at": "2014-03-05T10:15:39Z",
    "body": "@ptoomey3 This absolutely doable, I have put it in a new issue https://github.com/atom/atom-shell/issues/200.\n"
  }
]