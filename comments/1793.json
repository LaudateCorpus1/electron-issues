[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/106070924",
    "html_url": "https://github.com/electron/electron/issues/1793#issuecomment-106070924",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1793",
    "id": 106070924,
    "user": {
      "login": "steelbrain",
      "id": 4278113,
      "avatar_url": "https://avatars2.githubusercontent.com/u/4278113?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/steelbrain",
      "html_url": "https://github.com/steelbrain",
      "followers_url": "https://api.github.com/users/steelbrain/followers",
      "following_url": "https://api.github.com/users/steelbrain/following{/other_user}",
      "gists_url": "https://api.github.com/users/steelbrain/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/steelbrain/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/steelbrain/subscriptions",
      "organizations_url": "https://api.github.com/users/steelbrain/orgs",
      "repos_url": "https://api.github.com/users/steelbrain/repos",
      "events_url": "https://api.github.com/users/steelbrain/events{/privacy}",
      "received_events_url": "https://api.github.com/users/steelbrain/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-27T20:52:53Z",
    "updated_at": "2015-05-27T21:17:59Z",
    "body": "``` js\nprotocol.isHandledProtocol(\"http\") // true\nprotocol.interceptProtocol(\"http\", function(){\n  console.log(arguments)\n}) // Error: Scheme does not exist\n```\n\nThe only difference is [`IsHandledProtocol`](https://github.com/atom/electron/blob/master/atom/browser/api/atom_api_protocol.cc#L238) and [`HasProtocolHandler`](https://github.com/atom/electron/blob/master/atom/browser/api/atom_api_protocol.cc#L243).\n/cc @deepak1556 \n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/106081794",
    "html_url": "https://github.com/electron/electron/issues/1793#issuecomment-106081794",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1793",
    "id": 106081794,
    "user": {
      "login": "steelbrain",
      "id": 4278113,
      "avatar_url": "https://avatars2.githubusercontent.com/u/4278113?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/steelbrain",
      "html_url": "https://github.com/steelbrain",
      "followers_url": "https://api.github.com/users/steelbrain/followers",
      "following_url": "https://api.github.com/users/steelbrain/following{/other_user}",
      "gists_url": "https://api.github.com/users/steelbrain/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/steelbrain/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/steelbrain/subscriptions",
      "organizations_url": "https://api.github.com/users/steelbrain/orgs",
      "repos_url": "https://api.github.com/users/steelbrain/repos",
      "events_url": "https://api.github.com/users/steelbrain/events{/privacy}",
      "received_events_url": "https://api.github.com/users/steelbrain/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-27T21:17:30Z",
    "updated_at": "2015-05-27T21:17:30Z",
    "body": "``` js\nprotocol.registerProtocol(\"http\", function(){\n  console.log(arguments)\n}) // Error: The scheme is already registered\nprotocol.unregisterProtocol(\"http\") // Error: The scheme has not been registered\n```\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/106179883",
    "html_url": "https://github.com/electron/electron/issues/1793#issuecomment-106179883",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1793",
    "id": 106179883,
    "user": {
      "login": "deepak1556",
      "id": 964386,
      "avatar_url": "https://avatars2.githubusercontent.com/u/964386?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/deepak1556",
      "html_url": "https://github.com/deepak1556",
      "followers_url": "https://api.github.com/users/deepak1556/followers",
      "following_url": "https://api.github.com/users/deepak1556/following{/other_user}",
      "gists_url": "https://api.github.com/users/deepak1556/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/deepak1556/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/deepak1556/subscriptions",
      "organizations_url": "https://api.github.com/users/deepak1556/orgs",
      "repos_url": "https://api.github.com/users/deepak1556/repos",
      "events_url": "https://api.github.com/users/deepak1556/events{/privacy}",
      "received_events_url": "https://api.github.com/users/deepak1556/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-28T05:34:36Z",
    "updated_at": "2015-05-28T05:34:36Z",
    "body": "@steelbrain are you intercepting affter `browser-window` creation ? the following works for me ;)\n\n``` js\nvar path = require('path');\nvar url = require('url');\nvar app = require('app');\nvar BrowserWindow = require('browser-window');\n\nfunction setupProtocol () {\n  var protocol = require('protocol');\n\n  console.log(\"http: \" + protocol.isHandledProtocol('http'))\n\n  protocol.interceptProtocol('http', function(request) {\n    // Parse the URL\n    var parsedUri = url.parse(request.url);\n\n    var appName = parsedUri.hostname;\n\n    console.log(parsedUri)\n\n    // The default path is '/index.html'.\n    if (parsedUri.pathname === \"/\")\n      parsedUri.pathname = \"/index.html\"\n\n    var filePath = path.join(__dirname, parsedUri.pathname);\n    console.log('Requesting', filePath);\n\n    return new protocol.RequestFileJob(filePath);\n  })\n}\n\nfunction openWindow (uri) {\n  var win = new BrowserWindow({ width: 800, height: 600 });\n\n  setupProtocol();\n\n  win.loadUrl(uri);\n\n  win.openDevTools();\n}\n\napp.on('ready', function () {\n  openWindow('http://app1/'); // Works\n});\n```\n\n``` html\n<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"utf-8\">\n  <title>App 1</title>\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n  <link rel=\"stylesheet\" href=\"styles.css\" />\n</head>\n<body>\n  <h1>App 1</h1>\n  <webview id=\"foo\" src=\"http://github.com\" nodeintegration></webview>\n</body>\n<script>\n</script>\n</html>\n```\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/106187521",
    "html_url": "https://github.com/electron/electron/issues/1793#issuecomment-106187521",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1793",
    "id": 106187521,
    "user": {
      "login": "steelbrain",
      "id": 4278113,
      "avatar_url": "https://avatars2.githubusercontent.com/u/4278113?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/steelbrain",
      "html_url": "https://github.com/steelbrain",
      "followers_url": "https://api.github.com/users/steelbrain/followers",
      "following_url": "https://api.github.com/users/steelbrain/following{/other_user}",
      "gists_url": "https://api.github.com/users/steelbrain/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/steelbrain/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/steelbrain/subscriptions",
      "organizations_url": "https://api.github.com/users/steelbrain/orgs",
      "repos_url": "https://api.github.com/users/steelbrain/repos",
      "events_url": "https://api.github.com/users/steelbrain/events{/privacy}",
      "received_events_url": "https://api.github.com/users/steelbrain/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-28T05:54:24Z",
    "updated_at": "2015-05-28T05:54:24Z",
    "body": "I just copy/pasted your code and I get `Error: Scheme does not exist.` on startup, I'll try to reproduce this error on the latest version.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/106187879",
    "html_url": "https://github.com/electron/electron/issues/1793#issuecomment-106187879",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1793",
    "id": 106187879,
    "user": {
      "login": "steelbrain",
      "id": 4278113,
      "avatar_url": "https://avatars2.githubusercontent.com/u/4278113?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/steelbrain",
      "html_url": "https://github.com/steelbrain",
      "followers_url": "https://api.github.com/users/steelbrain/followers",
      "following_url": "https://api.github.com/users/steelbrain/following{/other_user}",
      "gists_url": "https://api.github.com/users/steelbrain/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/steelbrain/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/steelbrain/subscriptions",
      "organizations_url": "https://api.github.com/users/steelbrain/orgs",
      "repos_url": "https://api.github.com/users/steelbrain/repos",
      "events_url": "https://api.github.com/users/steelbrain/events{/privacy}",
      "received_events_url": "https://api.github.com/users/steelbrain/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-28T05:58:38Z",
    "updated_at": "2015-05-28T06:12:09Z",
    "body": "I was on 0.26.0, it works on 0.27.0 \nThis interception however, isn't gonna work unless the protocol callbacks are async, and even if they are users will still have to reinvent the wheel if they want to re-write the urls in the requests. It would be great to have `RequestHTTPJob` just like string or file job.\n"
  }
]