[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/252456102",
    "html_url": "https://github.com/electron/electron/issues/7532#issuecomment-252456102",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7532",
    "id": 252456102,
    "user": {
      "login": "MarshallOfSound",
      "id": 6634592,
      "avatar_url": "https://avatars0.githubusercontent.com/u/6634592?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarshallOfSound",
      "html_url": "https://github.com/MarshallOfSound",
      "followers_url": "https://api.github.com/users/MarshallOfSound/followers",
      "following_url": "https://api.github.com/users/MarshallOfSound/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarshallOfSound/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarshallOfSound/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarshallOfSound/subscriptions",
      "organizations_url": "https://api.github.com/users/MarshallOfSound/orgs",
      "repos_url": "https://api.github.com/users/MarshallOfSound/repos",
      "events_url": "https://api.github.com/users/MarshallOfSound/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarshallOfSound/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-09T00:29:19Z",
    "updated_at": "2016-10-09T00:29:37Z",
    "body": "@tolmasky Electron already has built in architecture for handling results / return values from `executeJavaScript` calls.\n\nAs per the docs: http://electron.atom.io/docs/api/web-contents/#contentsexecutejavascriptcode-usergesture-callback\n\n> callback Function (optional) - Called after script has been executed with a single parameter \"result\"\n\nSo your code can be simplified to the following (assuming you want to use promises and `async`/`await`)\n\n``` js\nconst executeJavaScript = (code) =>\n  new Promise((resolve) => {\n    webview.executeJavaScript(code, resolve);\n  });\n\nvar backgroundColor = await executeJavaScript('document.body.style.background');\n```\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/252456483",
    "html_url": "https://github.com/electron/electron/issues/7532#issuecomment-252456483",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7532",
    "id": 252456483,
    "user": {
      "login": "tolmasky",
      "id": 23753,
      "avatar_url": "https://avatars1.githubusercontent.com/u/23753?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tolmasky",
      "html_url": "https://github.com/tolmasky",
      "followers_url": "https://api.github.com/users/tolmasky/followers",
      "following_url": "https://api.github.com/users/tolmasky/following{/other_user}",
      "gists_url": "https://api.github.com/users/tolmasky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tolmasky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tolmasky/subscriptions",
      "organizations_url": "https://api.github.com/users/tolmasky/orgs",
      "repos_url": "https://api.github.com/users/tolmasky/repos",
      "events_url": "https://api.github.com/users/tolmasky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tolmasky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-09T00:40:47Z",
    "updated_at": "2016-10-09T00:41:11Z",
    "body": "Sorry , I chose a bad example that didn't highlight the asynchronous nature of what I'm getting at. Here is a better example that I believe is not handled by the current architecture, hence the desire to be able to have a resolve/reject in browser code:\n\n```\nasync function fadeOut()\n{\n   await executeJavaScript(function(resolve, reject)\n   {\n       element = document.getElementById(\"whatever\");\n       element.style.transition = \"opacity 0.5s\";\n       element.addEventListener(\"transitionend\", resolve, false);\n       element.style.opacity = 0;\n   });\n}\n```\n\nI know I could just wait 0.5s, this is just an example. The things I'm doing may take variable time.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/252456620",
    "html_url": "https://github.com/electron/electron/issues/7532#issuecomment-252456620",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7532",
    "id": 252456620,
    "user": {
      "login": "MarshallOfSound",
      "id": 6634592,
      "avatar_url": "https://avatars0.githubusercontent.com/u/6634592?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarshallOfSound",
      "html_url": "https://github.com/MarshallOfSound",
      "followers_url": "https://api.github.com/users/MarshallOfSound/followers",
      "following_url": "https://api.github.com/users/MarshallOfSound/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarshallOfSound/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarshallOfSound/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarshallOfSound/subscriptions",
      "organizations_url": "https://api.github.com/users/MarshallOfSound/orgs",
      "repos_url": "https://api.github.com/users/MarshallOfSound/repos",
      "events_url": "https://api.github.com/users/MarshallOfSound/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarshallOfSound/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-09T00:44:35Z",
    "updated_at": "2016-10-09T00:44:35Z",
    "body": "@tolmasky Ah, so you want to asyncronously return from the executed JS.  I think the only way we could standardly do that is if your code string returned a promise.  Then we can asyncronously resolve that promise, callbacks and such wouldn't work.  I'll reopen and submit a PR to allow async promise return values\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/252456707",
    "html_url": "https://github.com/electron/electron/issues/7532#issuecomment-252456707",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7532",
    "id": 252456707,
    "user": {
      "login": "tolmasky",
      "id": 23753,
      "avatar_url": "https://avatars1.githubusercontent.com/u/23753?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tolmasky",
      "html_url": "https://github.com/tolmasky",
      "followers_url": "https://api.github.com/users/tolmasky/followers",
      "following_url": "https://api.github.com/users/tolmasky/following{/other_user}",
      "gists_url": "https://api.github.com/users/tolmasky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tolmasky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tolmasky/subscriptions",
      "organizations_url": "https://api.github.com/users/tolmasky/orgs",
      "repos_url": "https://api.github.com/users/tolmasky/repos",
      "events_url": "https://api.github.com/users/tolmasky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tolmasky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-09T00:46:46Z",
    "updated_at": "2016-10-09T00:46:46Z",
    "body": "That would be great! I'm more than happy to return promises, thanks!\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/252457240",
    "html_url": "https://github.com/electron/electron/issues/7532#issuecomment-252457240",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7532",
    "id": 252457240,
    "user": {
      "login": "MarshallOfSound",
      "id": 6634592,
      "avatar_url": "https://avatars0.githubusercontent.com/u/6634592?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarshallOfSound",
      "html_url": "https://github.com/MarshallOfSound",
      "followers_url": "https://api.github.com/users/MarshallOfSound/followers",
      "following_url": "https://api.github.com/users/MarshallOfSound/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarshallOfSound/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarshallOfSound/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarshallOfSound/subscriptions",
      "organizations_url": "https://api.github.com/users/MarshallOfSound/orgs",
      "repos_url": "https://api.github.com/users/MarshallOfSound/repos",
      "events_url": "https://api.github.com/users/MarshallOfSound/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarshallOfSound/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-09T01:01:55Z",
    "updated_at": "2016-10-09T01:01:55Z",
    "body": "@tolmasky See #7533 \n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/252457578",
    "html_url": "https://github.com/electron/electron/issues/7532#issuecomment-252457578",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7532",
    "id": 252457578,
    "user": {
      "login": "tolmasky",
      "id": 23753,
      "avatar_url": "https://avatars1.githubusercontent.com/u/23753?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tolmasky",
      "html_url": "https://github.com/tolmasky",
      "followers_url": "https://api.github.com/users/tolmasky/followers",
      "following_url": "https://api.github.com/users/tolmasky/following{/other_user}",
      "gists_url": "https://api.github.com/users/tolmasky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tolmasky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tolmasky/subscriptions",
      "organizations_url": "https://api.github.com/users/tolmasky/orgs",
      "repos_url": "https://api.github.com/users/tolmasky/repos",
      "events_url": "https://api.github.com/users/tolmasky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tolmasky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-09T01:11:13Z",
    "updated_at": "2016-10-09T01:11:40Z",
    "body": "This certainly gives me enough to work with, but I'm wondering whether its possible to support errors while we're at it. If it is too difficult at this stage, I can easily use this to piggy-back my own wrapper as such:\n\n```\nfunction executeWithErrors(functionStringReturningPromise)\n{\n      return new Promise(function(resolve, reject)\n      {\n             webview.executeJavaScript(\"(\" + functionStringReturningPromise + \")().then(function(x) { return { result: x } }).catch(function(e) { return { error: { message: e.message, stack: e.stack } } })\", \n(result) =>\n{\n    if(result.error) reject(result.error);\nelse resolve(result.result);\n});\n      })\n}\n\n```\n\nI don't know the internals of executeJavaScript, so adding \"two\" types of returns may be too difficult to do, in which case I'm happy to do the above. Thanks so much for the quick turnaround on this!\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/252457843",
    "html_url": "https://github.com/electron/electron/issues/7532#issuecomment-252457843",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7532",
    "id": 252457843,
    "user": {
      "login": "MarshallOfSound",
      "id": 6634592,
      "avatar_url": "https://avatars0.githubusercontent.com/u/6634592?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarshallOfSound",
      "html_url": "https://github.com/MarshallOfSound",
      "followers_url": "https://api.github.com/users/MarshallOfSound/followers",
      "following_url": "https://api.github.com/users/MarshallOfSound/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarshallOfSound/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarshallOfSound/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarshallOfSound/subscriptions",
      "organizations_url": "https://api.github.com/users/MarshallOfSound/orgs",
      "repos_url": "https://api.github.com/users/MarshallOfSound/repos",
      "events_url": "https://api.github.com/users/MarshallOfSound/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarshallOfSound/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-09T01:19:14Z",
    "updated_at": "2016-10-09T01:19:14Z",
    "body": "@tolmasky I was hoping our callback system already followed the `(err, value)` style but it doesn't and it would be a massive breaking change to implement something like that.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/253001670",
    "html_url": "https://github.com/electron/electron/issues/7532#issuecomment-253001670",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7532",
    "id": 253001670,
    "user": {
      "login": "tolmasky",
      "id": 23753,
      "avatar_url": "https://avatars1.githubusercontent.com/u/23753?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tolmasky",
      "html_url": "https://github.com/tolmasky",
      "followers_url": "https://api.github.com/users/tolmasky/followers",
      "following_url": "https://api.github.com/users/tolmasky/following{/other_user}",
      "gists_url": "https://api.github.com/users/tolmasky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tolmasky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tolmasky/subscriptions",
      "organizations_url": "https://api.github.com/users/tolmasky/orgs",
      "repos_url": "https://api.github.com/users/tolmasky/repos",
      "events_url": "https://api.github.com/users/tolmasky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tolmasky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-11T18:23:44Z",
    "updated_at": "2016-10-11T18:23:44Z",
    "body": "No worries, this is great. Out of curiosity how long do features trail released versions?\n"
  }
]