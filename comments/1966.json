[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/112262726",
    "html_url": "https://github.com/electron/electron/issues/1966#issuecomment-112262726",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1966",
    "id": 112262726,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2015-06-16T02:27:01Z",
    "updated_at": "2015-06-16T02:27:01Z",
    "body": "This behavior is expected with current implementation of Node.js integration, but I think we should find a way to fix it.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/112262969",
    "html_url": "https://github.com/electron/electron/issues/1966#issuecomment-112262969",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1966",
    "id": 112262969,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2015-06-16T02:29:21Z",
    "updated_at": "2015-06-16T02:29:21Z",
    "body": "Related: #873.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/112264140",
    "html_url": "https://github.com/electron/electron/issues/1966#issuecomment-112264140",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1966",
    "id": 112264140,
    "user": {
      "login": "aackerman",
      "id": 786640,
      "avatar_url": "https://avatars2.githubusercontent.com/u/786640?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aackerman",
      "html_url": "https://github.com/aackerman",
      "followers_url": "https://api.github.com/users/aackerman/followers",
      "following_url": "https://api.github.com/users/aackerman/following{/other_user}",
      "gists_url": "https://api.github.com/users/aackerman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aackerman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aackerman/subscriptions",
      "organizations_url": "https://api.github.com/users/aackerman/orgs",
      "repos_url": "https://api.github.com/users/aackerman/repos",
      "events_url": "https://api.github.com/users/aackerman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aackerman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-16T02:41:54Z",
    "updated_at": "2015-06-16T02:41:54Z",
    "body": "Sounds like a complicated fix. What do you think about adding some \"gotcha\" info to the docs in the meantime?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/150971066",
    "html_url": "https://github.com/electron/electron/issues/1966#issuecomment-150971066",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1966",
    "id": 150971066,
    "user": {
      "login": "CGamesPlay",
      "id": 1216626,
      "avatar_url": "https://avatars0.githubusercontent.com/u/1216626?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CGamesPlay",
      "html_url": "https://github.com/CGamesPlay",
      "followers_url": "https://api.github.com/users/CGamesPlay/followers",
      "following_url": "https://api.github.com/users/CGamesPlay/following{/other_user}",
      "gists_url": "https://api.github.com/users/CGamesPlay/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CGamesPlay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CGamesPlay/subscriptions",
      "organizations_url": "https://api.github.com/users/CGamesPlay/orgs",
      "repos_url": "https://api.github.com/users/CGamesPlay/repos",
      "events_url": "https://api.github.com/users/CGamesPlay/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CGamesPlay/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-25T21:18:46Z",
    "updated_at": "2015-10-25T21:18:46Z",
    "body": "This is pretty subtle and prevalent... I stumbled upon it because my click event triggered a re-render in React, and my render function made a call to `remote.getCurrentWindow().webContents`, which triggered this `sendSync` call, which caused some pending events to run mid-render, which caused React to re-render mid-render. \n\nReact was able to catch this and report some warnings:\n\n```\nWarning: <Unknown Component /> is being rendered by both [Unknown] and [Unknown] using the same key (null) in the same place. Currently, this means that they don't preserve state. This behavior should be very rare so we're considering deprecating it. Please contact the React team and explain your use case so that we can take that into consideration.\nWarning: unmountComponentAtNode(): Render methods should be a pure function of props and state; triggering nested component updates from render is not allowed. If necessary, trigger nested updates in componentDidUpdate.\nWarning: _renderNewRootComponent(): Render methods should be a pure function of props and state; triggering nested component updates from render is not allowed. If necessary, trigger nested updates in componentDidUpdate.\n```\n\nI was able to work around the issue by putting the actual processing for the click event into a `process.nextTick` callback.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/163593359",
    "html_url": "https://github.com/electron/electron/issues/1966#issuecomment-163593359",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1966",
    "id": 163593359,
    "user": {
      "login": "mkscrg",
      "id": 471342,
      "avatar_url": "https://avatars2.githubusercontent.com/u/471342?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mkscrg",
      "html_url": "https://github.com/mkscrg",
      "followers_url": "https://api.github.com/users/mkscrg/followers",
      "following_url": "https://api.github.com/users/mkscrg/following{/other_user}",
      "gists_url": "https://api.github.com/users/mkscrg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mkscrg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mkscrg/subscriptions",
      "organizations_url": "https://api.github.com/users/mkscrg/orgs",
      "repos_url": "https://api.github.com/users/mkscrg/repos",
      "events_url": "https://api.github.com/users/mkscrg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mkscrg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-10T12:14:26Z",
    "updated_at": "2015-12-10T12:14:26Z",
    "body": "We also hit this (#3747), by trying to `remote.getGlobal()` during a `drop` event.\n"
  }
]