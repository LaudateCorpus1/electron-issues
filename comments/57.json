[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/22688967",
    "html_url": "https://github.com/electron/electron/issues/57#issuecomment-22688967",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/57",
    "id": 22688967,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2013-08-15T07:26:36Z",
    "updated_at": "2013-08-15T07:26:36Z",
    "body": "Having `dev-tools:opened` and `dev-tools:closed` is not enough, because when the devtools is open the webview could still own the focus.\n\nI think we should keep current behavior: let the browser always trigger the `copy:` selector on the first responder, and then emit `core:copy` in renderer by listening to DOM events.\n\nOn Windows and Linux, applications do not have an global application menu, instead each window just has its own menubar, accelerators are usually not captured in the browser side, but in the renderer side. So on these platforms, the `core:copy` command will have to be emitted by listening to DOM events.\n\nThe OS X is the special one and I think current behavior just keeps the future platform difference minimum.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/22733233",
    "html_url": "https://github.com/electron/electron/issues/57#issuecomment-22733233",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/57",
    "id": 22733233,
    "user": {
      "login": "probablycorey",
      "id": 596,
      "avatar_url": "https://avatars0.githubusercontent.com/u/596?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/probablycorey",
      "html_url": "https://github.com/probablycorey",
      "followers_url": "https://api.github.com/users/probablycorey/followers",
      "following_url": "https://api.github.com/users/probablycorey/following{/other_user}",
      "gists_url": "https://api.github.com/users/probablycorey/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/probablycorey/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/probablycorey/subscriptions",
      "organizations_url": "https://api.github.com/users/probablycorey/orgs",
      "repos_url": "https://api.github.com/users/probablycorey/repos",
      "events_url": "https://api.github.com/users/probablycorey/events{/privacy}",
      "received_events_url": "https://api.github.com/users/probablycorey/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2013-08-15T21:47:45Z",
    "updated_at": "2013-08-15T21:47:45Z",
    "body": "I have a few more questions about implementing this. I'll use `Edit > Paste` for the example. \n\nThe `Edit > Paste` menu item now triggers paste by calling `Menu.sendActionToFirstResponder('paste:')` from `atom-application.coffee`. When Dev Tools are focused this work great! When the editor is focused text is pasted but not by the `core:paste` command, it is because the `paste:` selector is being called on the editor's hidden textarea.\n\nA solution might be to only call `Menu.sendActionToFirstResponder('paste:')` if the window does not have focus. If it does have focus we would forward the event onto the `AtomWindow`.I think the only way to determine if the window has focus is to listen to window.onblur and window.onfocus and keep that state stored on the window. \n\nDoes this seem like a logical solution to you?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/22747294",
    "html_url": "https://github.com/electron/electron/issues/57#issuecomment-22747294",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/57",
    "id": 22747294,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2013-08-16T04:41:05Z",
    "updated_at": "2013-08-16T04:41:05Z",
    "body": "Yeah you are right, with `paste:` selector the text are inputed instead of pasted.\n\nI'll add a `AtomWindow.isWebViewFocused()` API, so you don't need to get the state by hooking to `onblur` and `onfocus`.\n"
  }
]