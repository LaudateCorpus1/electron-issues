[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/127651281",
    "html_url": "https://github.com/electron/electron/issues/2415#issuecomment-127651281",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2415",
    "id": 127651281,
    "user": {
      "login": "paulcbetts",
      "id": 1396,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1396?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulcbetts",
      "html_url": "https://github.com/paulcbetts",
      "followers_url": "https://api.github.com/users/paulcbetts/followers",
      "following_url": "https://api.github.com/users/paulcbetts/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulcbetts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulcbetts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulcbetts/subscriptions",
      "organizations_url": "https://api.github.com/users/paulcbetts/orgs",
      "repos_url": "https://api.github.com/users/paulcbetts/repos",
      "events_url": "https://api.github.com/users/paulcbetts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulcbetts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-04T15:33:36Z",
    "updated_at": "2015-08-04T15:33:36Z",
    "body": "Waste the space, disk space is cheap. \n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/127654681",
    "html_url": "https://github.com/electron/electron/issues/2415#issuecomment-127654681",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2415",
    "id": 127654681,
    "user": {
      "login": "arthurakay",
      "id": 401229,
      "avatar_url": "https://avatars3.githubusercontent.com/u/401229?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/arthurakay",
      "html_url": "https://github.com/arthurakay",
      "followers_url": "https://api.github.com/users/arthurakay/followers",
      "following_url": "https://api.github.com/users/arthurakay/following{/other_user}",
      "gists_url": "https://api.github.com/users/arthurakay/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/arthurakay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/arthurakay/subscriptions",
      "organizations_url": "https://api.github.com/users/arthurakay/orgs",
      "repos_url": "https://api.github.com/users/arthurakay/repos",
      "events_url": "https://api.github.com/users/arthurakay/events{/privacy}",
      "received_events_url": "https://api.github.com/users/arthurakay/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-04T15:44:48Z",
    "updated_at": "2015-08-04T15:44:48Z",
    "body": "Assuming my users have infinite disk space on their machines, it still leaves me with the rather unsavory option of asking them to install multiple binaries. The long-term struggle to keep the users on the latest versions of those binaries is also unpalatable.\n\nBased on my experience with Electron thus far, and your terse response, I take it that what I'm asking for currently isn't possible.\n\nSo let's tackle the more interesting question here -- can it (or should it) be something Electron supports?\n\nElectron clearly hasn't been designed with this use case in mind, but it strikes me that the ability to launch multiple apps from the same runtime could be done.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/127657548",
    "html_url": "https://github.com/electron/electron/issues/2415#issuecomment-127657548",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2415",
    "id": 127657548,
    "user": {
      "login": "etiktin",
      "id": 4381579,
      "avatar_url": "https://avatars1.githubusercontent.com/u/4381579?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/etiktin",
      "html_url": "https://github.com/etiktin",
      "followers_url": "https://api.github.com/users/etiktin/followers",
      "following_url": "https://api.github.com/users/etiktin/following{/other_user}",
      "gists_url": "https://api.github.com/users/etiktin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/etiktin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/etiktin/subscriptions",
      "organizations_url": "https://api.github.com/users/etiktin/orgs",
      "repos_url": "https://api.github.com/users/etiktin/repos",
      "events_url": "https://api.github.com/users/etiktin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/etiktin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-04T15:55:55Z",
    "updated_at": "2015-08-04T15:57:31Z",
    "body": "Yes. It is possible (at least if I understand you correctly). The default_app supports loading other apps dynamically. Take a look at [main.js](https://github.com/atom/electron/blob/master/atom/browser/default_app/main.js)  (specifically follow the handling of `option.file`).\n\nYour default asar could show the list of apps and when the user choose one, you will load it like the default_app does (`require('module')._load(packagePath, module, true);`). \n\nAnother option is to create a shell script for each app, that will call your branded electron and pass to it as an argument the path to the app you want to load (which is exactly what the default_app does).\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/127692155",
    "html_url": "https://github.com/electron/electron/issues/2415#issuecomment-127692155",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2415",
    "id": 127692155,
    "user": {
      "login": "arthurakay",
      "id": 401229,
      "avatar_url": "https://avatars3.githubusercontent.com/u/401229?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/arthurakay",
      "html_url": "https://github.com/arthurakay",
      "followers_url": "https://api.github.com/users/arthurakay/followers",
      "following_url": "https://api.github.com/users/arthurakay/following{/other_user}",
      "gists_url": "https://api.github.com/users/arthurakay/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/arthurakay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/arthurakay/subscriptions",
      "organizations_url": "https://api.github.com/users/arthurakay/orgs",
      "repos_url": "https://api.github.com/users/arthurakay/repos",
      "events_url": "https://api.github.com/users/arthurakay/events{/privacy}",
      "received_events_url": "https://api.github.com/users/arthurakay/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-04T17:55:31Z",
    "updated_at": "2015-08-04T17:55:31Z",
    "body": "@etiktin That is incredibly helpful, I didn't realize some of this infrastructure already existed! I guess I have three follow-up questions at this point:\n\n(1) `app.setAppPath(packagePath);` implies that Electron can only ever have one of these sub-apps open at a time. Is that accurate? Users should expect that they can open any of the apps in the list simultaneously, so I just want to be sure that scenario \"just works\" with this approach. (Each app would launch in its own `BrowserWindow`).\n\n(2) The code I see in `main.js` uses a `packagePath` to a folder containing the \"app\" assets. If I were attempting to distribute my \"apps\" using the `.asar` archive format, is that just magically readable at runtime?\n\n(3) In the following code from `main.js`:\n\n```\n// Run the app.\nrequire('module')._load(packagePath, module, true);\n```\n\nWhere is the `module` module defined? I'm just generally curious how that works, where the second parameter \"module\" comes from, and what else this might do.\n\nThanks again for the idea!\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/127705755",
    "html_url": "https://github.com/electron/electron/issues/2415#issuecomment-127705755",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2415",
    "id": 127705755,
    "user": {
      "login": "etiktin",
      "id": 4381579,
      "avatar_url": "https://avatars1.githubusercontent.com/u/4381579?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/etiktin",
      "html_url": "https://github.com/etiktin",
      "followers_url": "https://api.github.com/users/etiktin/followers",
      "following_url": "https://api.github.com/users/etiktin/following{/other_user}",
      "gists_url": "https://api.github.com/users/etiktin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/etiktin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/etiktin/subscriptions",
      "organizations_url": "https://api.github.com/users/etiktin/orgs",
      "repos_url": "https://api.github.com/users/etiktin/repos",
      "events_url": "https://api.github.com/users/etiktin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/etiktin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-04T18:35:22Z",
    "updated_at": "2015-08-04T18:35:22Z",
    "body": "Glad I could help :smile:\n1. After the user selected the app do you want the menu (app list) to stay open or is it ok to close it? \n   If it's ok to close, just load the app like the default_app does. Then when the user wants to select another app, he'll re-run your app which will open it in a new electron instance (you can run more than one electron process) and he/she can select another app.\n   If you want the list to stay open, I would suggest that you support accepting app path as an argument (like the default_app does). If you didn't get an app path, it means you need to show the list, otherwise load the app in that path. So when a user clicks on an app you would spawn a new electron instance with the app path as an argument (you can do it using the `child_process` module).\n2. `asar` packages are supposed to work like app directories (there's some magic involved in making it work like that). So just run electron with the default_app and either pass to it as an argument the path to a test `asar` or just drag and drop it over and see if it works. If it doesn't, open a new issue for that and it's probably something that can be worked around.\n3. `module` is a node/io.js builtin module that implements the module system.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/127707879",
    "html_url": "https://github.com/electron/electron/issues/2415#issuecomment-127707879",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2415",
    "id": 127707879,
    "user": {
      "login": "arthurakay",
      "id": 401229,
      "avatar_url": "https://avatars3.githubusercontent.com/u/401229?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/arthurakay",
      "html_url": "https://github.com/arthurakay",
      "followers_url": "https://api.github.com/users/arthurakay/followers",
      "following_url": "https://api.github.com/users/arthurakay/following{/other_user}",
      "gists_url": "https://api.github.com/users/arthurakay/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/arthurakay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/arthurakay/subscriptions",
      "organizations_url": "https://api.github.com/users/arthurakay/orgs",
      "repos_url": "https://api.github.com/users/arthurakay/repos",
      "events_url": "https://api.github.com/users/arthurakay/events{/privacy}",
      "received_events_url": "https://api.github.com/users/arthurakay/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-04T18:42:44Z",
    "updated_at": "2015-08-04T18:42:44Z",
    "body": "Awesome, thanks again! I've got a lot of work ahead of me, but this answers a lot of questions.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/262655814",
    "html_url": "https://github.com/electron/electron/issues/2415#issuecomment-262655814",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2415",
    "id": 262655814,
    "user": {
      "login": "bsacks99",
      "id": 1143934,
      "avatar_url": "https://avatars0.githubusercontent.com/u/1143934?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bsacks99",
      "html_url": "https://github.com/bsacks99",
      "followers_url": "https://api.github.com/users/bsacks99/followers",
      "following_url": "https://api.github.com/users/bsacks99/following{/other_user}",
      "gists_url": "https://api.github.com/users/bsacks99/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bsacks99/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bsacks99/subscriptions",
      "organizations_url": "https://api.github.com/users/bsacks99/orgs",
      "repos_url": "https://api.github.com/users/bsacks99/repos",
      "events_url": "https://api.github.com/users/bsacks99/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bsacks99/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-23T23:35:25Z",
    "updated_at": "2016-11-23T23:35:25Z",
    "body": "@arthurakay,\r\n\r\nWere you able to come up with a solution that works for having multiple applications? I have a similar issue and am trying to find a starting point. @etiktin shell script idea might be the best suited for us. Wondering where you landed in the end.\r\n\r\nThanks,\r\nB"
  }
]