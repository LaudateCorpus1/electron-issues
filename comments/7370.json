[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/250069176",
    "html_url": "https://github.com/electron/electron/issues/7370#issuecomment-250069176",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7370",
    "id": 250069176,
    "user": {
      "login": "zeke",
      "id": 2289,
      "avatar_url": "https://avatars2.githubusercontent.com/u/2289?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zeke",
      "html_url": "https://github.com/zeke",
      "followers_url": "https://api.github.com/users/zeke/followers",
      "following_url": "https://api.github.com/users/zeke/following{/other_user}",
      "gists_url": "https://api.github.com/users/zeke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zeke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zeke/subscriptions",
      "organizations_url": "https://api.github.com/users/zeke/orgs",
      "repos_url": "https://api.github.com/users/zeke/repos",
      "events_url": "https://api.github.com/users/zeke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zeke/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2016-09-28T04:31:41Z",
    "updated_at": "2016-09-28T04:53:33Z",
    "body": "We can infer which arguments are required by parsing the method signature: `[browserWindow, ]options[, callback]`.\n\nAs for the object properties... not sure. I kind of like the `*` idea. It's a familiar convention from GUI land. Interested to hear what others think.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/250070200",
    "html_url": "https://github.com/electron/electron/issues/7370#issuecomment-250070200",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7370",
    "id": 250070200,
    "user": {
      "login": "enlight",
      "id": 233003,
      "avatar_url": "https://avatars3.githubusercontent.com/u/233003?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/enlight",
      "html_url": "https://github.com/enlight",
      "followers_url": "https://api.github.com/users/enlight/followers",
      "following_url": "https://api.github.com/users/enlight/following{/other_user}",
      "gists_url": "https://api.github.com/users/enlight/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/enlight/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/enlight/subscriptions",
      "organizations_url": "https://api.github.com/users/enlight/orgs",
      "repos_url": "https://api.github.com/users/enlight/repos",
      "events_url": "https://api.github.com/users/enlight/events{/privacy}",
      "received_events_url": "https://api.github.com/users/enlight/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-28T04:42:39Z",
    "updated_at": "2016-09-28T04:42:39Z",
    "body": "What would the `*` variant look like exactly?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/250071468",
    "html_url": "https://github.com/electron/electron/issues/7370#issuecomment-250071468",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7370",
    "id": 250071468,
    "user": {
      "login": "MarshallOfSound",
      "id": 6634592,
      "avatar_url": "https://avatars0.githubusercontent.com/u/6634592?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarshallOfSound",
      "html_url": "https://github.com/MarshallOfSound",
      "followers_url": "https://api.github.com/users/MarshallOfSound/followers",
      "following_url": "https://api.github.com/users/MarshallOfSound/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarshallOfSound/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarshallOfSound/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarshallOfSound/subscriptions",
      "organizations_url": "https://api.github.com/users/MarshallOfSound/orgs",
      "repos_url": "https://api.github.com/users/MarshallOfSound/repos",
      "events_url": "https://api.github.com/users/MarshallOfSound/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarshallOfSound/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-28T04:54:58Z",
    "updated_at": "2016-09-28T04:54:58Z",
    "body": "@enlight Not sure tbh, maybe something like this\n\n``` markdown\n### `dialog.showOpenDialog([browserWindow, ]options[, callback])`\n\n* `browserWindow` BrowserWindow (optional)\n* `options` Object\n  * `title`<sup>*</sup> String\n  * `defaultPath` String\n  * `buttonLabel` String - Custom label for the confirmation button, when\n    left empty the default label will be used.\n  * `filters`<sup>*</sup> Array\n  * `properties` Array - Contains which features the dialog should use, can\n    contain `openFile`, `openDirectory`, `multiSelections`, `createDirectory`\n    and `showHiddenFiles`.\n* `callback` Function\n```\n\nWhich results in \n\n### `dialog.showOpenDialog([browserWindow, ]options[, callback])`\n- `browserWindow` BrowserWindow (optional)\n- `options` Object\n  - `title`<sup>*</sup> String\n  - `defaultPath` String\n  - `buttonLabel` String - Custom label for the confirmation button, when\n    left empty the default label will be used.\n  - `filters`<sup>*</sup> Array\n  - `properties` Array - Contains which features the dialog should use, can\n    contain `openFile`, `openDirectory`, `multiSelections`, `createDirectory`\n    and `showHiddenFiles`.\n- `callback` Function\n\nI went for `<sup>*</sup>` because just `*` looked kind of silly, still up for other ideas though as even that doesn't look too flash\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/250073164",
    "html_url": "https://github.com/electron/electron/issues/7370#issuecomment-250073164",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7370",
    "id": 250073164,
    "user": {
      "login": "enlight",
      "id": 233003,
      "avatar_url": "https://avatars3.githubusercontent.com/u/233003?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/enlight",
      "html_url": "https://github.com/enlight",
      "followers_url": "https://api.github.com/users/enlight/followers",
      "following_url": "https://api.github.com/users/enlight/following{/other_user}",
      "gists_url": "https://api.github.com/users/enlight/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/enlight/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/enlight/subscriptions",
      "organizations_url": "https://api.github.com/users/enlight/orgs",
      "repos_url": "https://api.github.com/users/enlight/repos",
      "events_url": "https://api.github.com/users/enlight/events{/privacy}",
      "received_events_url": "https://api.github.com/users/enlight/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-28T05:11:18Z",
    "updated_at": "2016-09-28T05:25:15Z",
    "body": "I'm definitely not a fan of `<sup>*</sup>`, that's harder to type out than `(optional)` and less readable. What if we used `[]` just like in the function signature?\n\n``` markdown\n### `dialog.showOpenDialog([browserWindow, ]options[, callback])`\n\n* `browserWindow` BrowserWindow\n* `options` Object\n  * `[title]` String\n  * `[defaultPath]` String\n  * `[buttonLabel]` String - Custom label for the confirmation button, when\n    left empty the default label will be used.\n  * `[filters]` Array\n  * `[properties]` Array - Contains which features the dialog should use, can\n    contain `openFile`, `openDirectory`, `multiSelections`, `createDirectory`\n    and `showHiddenFiles`.\n* `callback` Function\n```\n\nEDIT: What it actually looks like\n\n### `dialog.showOpenDialog([browserWindow, ]options[, callback])`\n- `browserWindow` BrowserWindow\n- `options` Object\n  - `[title]` String\n  - `[defaultPath]` String\n  - `[buttonLabel]` String - Custom label for the confirmation button, when\n    left empty the default label will be used.\n  - `[filters]` Array\n  - `[properties]` Array - Contains which features the dialog should use, can\n    contain `openFile`, `openDirectory`, `multiSelections`, `createDirectory`\n    and `showHiddenFiles`.\n- `callback` Function\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/250073873",
    "html_url": "https://github.com/electron/electron/issues/7370#issuecomment-250073873",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7370",
    "id": 250073873,
    "user": {
      "login": "MarshallOfSound",
      "id": 6634592,
      "avatar_url": "https://avatars0.githubusercontent.com/u/6634592?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarshallOfSound",
      "html_url": "https://github.com/MarshallOfSound",
      "followers_url": "https://api.github.com/users/MarshallOfSound/followers",
      "following_url": "https://api.github.com/users/MarshallOfSound/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarshallOfSound/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarshallOfSound/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarshallOfSound/subscriptions",
      "organizations_url": "https://api.github.com/users/MarshallOfSound/orgs",
      "repos_url": "https://api.github.com/users/MarshallOfSound/repos",
      "events_url": "https://api.github.com/users/MarshallOfSound/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarshallOfSound/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-28T05:17:15Z",
    "updated_at": "2016-09-28T05:17:15Z",
    "body": "Yep, that looks good to me and @zeke thumbed it 👍 \n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/256196072",
    "html_url": "https://github.com/electron/electron/issues/7370#issuecomment-256196072",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7370",
    "id": 256196072,
    "user": {
      "login": "zeke",
      "id": 2289,
      "avatar_url": "https://avatars2.githubusercontent.com/u/2289?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zeke",
      "html_url": "https://github.com/zeke",
      "followers_url": "https://api.github.com/users/zeke/followers",
      "following_url": "https://api.github.com/users/zeke/following{/other_user}",
      "gists_url": "https://api.github.com/users/zeke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zeke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zeke/subscriptions",
      "organizations_url": "https://api.github.com/users/zeke/orgs",
      "repos_url": "https://api.github.com/users/zeke/repos",
      "events_url": "https://api.github.com/users/zeke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zeke/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2016-10-25T22:27:17Z",
    "updated_at": "2016-10-25T22:27:30Z",
    "body": "I did indeed 👍  this, but now coming back to it I feel that the square-bracket syntax for optional properties is a little confusing. It seems like it could be mistaken for some kind of array notation.\n\nSomehow in the method signatures, it seems less confusing: `([browserWindow, ]options[, callback])`.\n\nI guess I'm feeling that `(optional)` is the clearest way. It's more wordy, but there's no mistaking what it means:\n\n```\n* `buttonLabel` String (optional) - Custom label for the confirmation button, when left empty the default label will be used.\n```\n\nor perhaps `(required)`, if there are fewer of those overall:\n\n```\n* `defaultPath` String (required)\n```\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/256196639",
    "html_url": "https://github.com/electron/electron/issues/7370#issuecomment-256196639",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7370",
    "id": 256196639,
    "user": {
      "login": "MarshallOfSound",
      "id": 6634592,
      "avatar_url": "https://avatars0.githubusercontent.com/u/6634592?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarshallOfSound",
      "html_url": "https://github.com/MarshallOfSound",
      "followers_url": "https://api.github.com/users/MarshallOfSound/followers",
      "following_url": "https://api.github.com/users/MarshallOfSound/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarshallOfSound/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarshallOfSound/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarshallOfSound/subscriptions",
      "organizations_url": "https://api.github.com/users/MarshallOfSound/orgs",
      "repos_url": "https://api.github.com/users/MarshallOfSound/repos",
      "events_url": "https://api.github.com/users/MarshallOfSound/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarshallOfSound/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-25T22:30:08Z",
    "updated_at": "2016-10-25T22:30:08Z",
    "body": "@zeke So if `(required)` is present it indicates all other properties are `(optional)`?  And vice-versa?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/256226088",
    "html_url": "https://github.com/electron/electron/issues/7370#issuecomment-256226088",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7370",
    "id": 256226088,
    "user": {
      "login": "enlight",
      "id": 233003,
      "avatar_url": "https://avatars3.githubusercontent.com/u/233003?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/enlight",
      "html_url": "https://github.com/enlight",
      "followers_url": "https://api.github.com/users/enlight/followers",
      "following_url": "https://api.github.com/users/enlight/following{/other_user}",
      "gists_url": "https://api.github.com/users/enlight/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/enlight/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/enlight/subscriptions",
      "organizations_url": "https://api.github.com/users/enlight/orgs",
      "repos_url": "https://api.github.com/users/enlight/repos",
      "events_url": "https://api.github.com/users/enlight/events{/privacy}",
      "received_events_url": "https://api.github.com/users/enlight/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-26T01:34:02Z",
    "updated_at": "2016-10-26T01:34:02Z",
    "body": "I can't think of a good reason for turning the existing convention upside down, so I suggest marking optional parameters with `(optional)` instead of marking required parameters.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/260648121",
    "html_url": "https://github.com/electron/electron/issues/7370#issuecomment-260648121",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7370",
    "id": 260648121,
    "user": {
      "login": "MarshallOfSound",
      "id": 6634592,
      "avatar_url": "https://avatars0.githubusercontent.com/u/6634592?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarshallOfSound",
      "html_url": "https://github.com/MarshallOfSound",
      "followers_url": "https://api.github.com/users/MarshallOfSound/followers",
      "following_url": "https://api.github.com/users/MarshallOfSound/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarshallOfSound/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarshallOfSound/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarshallOfSound/subscriptions",
      "organizations_url": "https://api.github.com/users/MarshallOfSound/orgs",
      "repos_url": "https://api.github.com/users/MarshallOfSound/repos",
      "events_url": "https://api.github.com/users/MarshallOfSound/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarshallOfSound/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-15T13:59:26Z",
    "updated_at": "2016-11-15T13:59:26Z",
    "body": "PR to fix this was merged\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/260648239",
    "html_url": "https://github.com/electron/electron/issues/7370#issuecomment-260648239",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7370",
    "id": 260648239,
    "user": {
      "login": "MarshallOfSound",
      "id": 6634592,
      "avatar_url": "https://avatars0.githubusercontent.com/u/6634592?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarshallOfSound",
      "html_url": "https://github.com/MarshallOfSound",
      "followers_url": "https://api.github.com/users/MarshallOfSound/followers",
      "following_url": "https://api.github.com/users/MarshallOfSound/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarshallOfSound/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarshallOfSound/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarshallOfSound/subscriptions",
      "organizations_url": "https://api.github.com/users/MarshallOfSound/orgs",
      "repos_url": "https://api.github.com/users/MarshallOfSound/repos",
      "events_url": "https://api.github.com/users/MarshallOfSound/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarshallOfSound/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-15T13:59:52Z",
    "updated_at": "2016-11-15T13:59:52Z",
    "body": "#7884 \n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/260703240",
    "html_url": "https://github.com/electron/electron/issues/7370#issuecomment-260703240",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7370",
    "id": 260703240,
    "user": {
      "login": "zeke",
      "id": 2289,
      "avatar_url": "https://avatars2.githubusercontent.com/u/2289?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zeke",
      "html_url": "https://github.com/zeke",
      "followers_url": "https://api.github.com/users/zeke/followers",
      "following_url": "https://api.github.com/users/zeke/following{/other_user}",
      "gists_url": "https://api.github.com/users/zeke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zeke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zeke/subscriptions",
      "organizations_url": "https://api.github.com/users/zeke/orgs",
      "repos_url": "https://api.github.com/users/zeke/repos",
      "events_url": "https://api.github.com/users/zeke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zeke/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2016-11-15T17:10:22Z",
    "updated_at": "2016-11-15T17:10:22Z",
    "body": "🤘 \n"
  }
]