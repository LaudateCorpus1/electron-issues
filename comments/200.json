[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/36742564",
    "html_url": "https://github.com/electron/electron/issues/200#issuecomment-36742564",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/200",
    "id": 36742564,
    "user": {
      "login": "ptoomey3",
      "id": 103360,
      "avatar_url": "https://avatars1.githubusercontent.com/u/103360?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ptoomey3",
      "html_url": "https://github.com/ptoomey3",
      "followers_url": "https://api.github.com/users/ptoomey3/followers",
      "following_url": "https://api.github.com/users/ptoomey3/following{/other_user}",
      "gists_url": "https://api.github.com/users/ptoomey3/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ptoomey3/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ptoomey3/subscriptions",
      "organizations_url": "https://api.github.com/users/ptoomey3/orgs",
      "repos_url": "https://api.github.com/users/ptoomey3/repos",
      "events_url": "https://api.github.com/users/ptoomey3/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ptoomey3/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2014-03-05T13:40:24Z",
    "updated_at": "2014-03-05T13:41:19Z",
    "body": "Thanks @zcbenz.  Regular iframe security will generally be sufficient if Atom ends up iframing third-party content that is not sourced from the user's machine (ex. `<iframe src='http://www.google.com'></iframe>`), since standard same origin restrictions will apply.  But, the sandbox attribute is useful for any iframe content that comes from the same origin.  For example, if someone were to iframe a locally generated file such as `rendered_output.html` via `<iframe src='rendered_output.html'></iframe>` this would come from the same origin as Atom  itself (`file://`). As a result, the iframe content could do `window.parent.process` to access Node.  So, I think is a reasonable protection to just sandbox all iframes to be safe.  I just tried this out by manually inserting an iframe with content from a local file into Atom.  When I set `sandbox = 'allow-scripts'` (I had to enable scripting to even attempt outer frame access) the inner frame is still prevented from accessing the outer frame:\n\n![screen shot 2014-03-05 at 7 35 30 am](https://f.cloud.github.com/assets/103360/2333423/1107e454-a46b-11e3-9cd5-b0df9846fa83.png)\n\nSo, sandboxing seems a nice addition.  Thanks for being so quick to respond @zcbenz!\n\n/cc @mastahyeti  @gregose \n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/36933588",
    "html_url": "https://github.com/electron/electron/issues/200#issuecomment-36933588",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/200",
    "id": 36933588,
    "user": {
      "login": "ptoomey3",
      "id": 103360,
      "avatar_url": "https://avatars1.githubusercontent.com/u/103360?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ptoomey3",
      "html_url": "https://github.com/ptoomey3",
      "followers_url": "https://api.github.com/users/ptoomey3/followers",
      "following_url": "https://api.github.com/users/ptoomey3/following{/other_user}",
      "gists_url": "https://api.github.com/users/ptoomey3/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ptoomey3/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ptoomey3/subscriptions",
      "organizations_url": "https://api.github.com/users/ptoomey3/orgs",
      "repos_url": "https://api.github.com/users/ptoomey3/repos",
      "events_url": "https://api.github.com/users/ptoomey3/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ptoomey3/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2014-03-06T20:35:34Z",
    "updated_at": "2014-03-06T20:35:34Z",
    "body": "Once we have this iframe protection in place (and CSP is working) it sounds like @probablycorey and @nathansobo were interested in doing another release.  \n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/36936979",
    "html_url": "https://github.com/electron/electron/issues/200#issuecomment-36936979",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/200",
    "id": 36936979,
    "user": {
      "login": "nathansobo",
      "id": 1789,
      "avatar_url": "https://avatars2.githubusercontent.com/u/1789?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nathansobo",
      "html_url": "https://github.com/nathansobo",
      "followers_url": "https://api.github.com/users/nathansobo/followers",
      "following_url": "https://api.github.com/users/nathansobo/following{/other_user}",
      "gists_url": "https://api.github.com/users/nathansobo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nathansobo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nathansobo/subscriptions",
      "organizations_url": "https://api.github.com/users/nathansobo/orgs",
      "repos_url": "https://api.github.com/users/nathansobo/repos",
      "events_url": "https://api.github.com/users/nathansobo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nathansobo/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2014-03-06T21:06:58Z",
    "updated_at": "2014-03-06T21:06:58Z",
    "body": "To clarify, we'll handle CSP on our end.\n"
  }
]