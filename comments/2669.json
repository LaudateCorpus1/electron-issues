[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/136538714",
    "html_url": "https://github.com/electron/electron/issues/2669#issuecomment-136538714",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2669",
    "id": 136538714,
    "user": {
      "login": "etiktin",
      "id": 4381579,
      "avatar_url": "https://avatars1.githubusercontent.com/u/4381579?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/etiktin",
      "html_url": "https://github.com/etiktin",
      "followers_url": "https://api.github.com/users/etiktin/followers",
      "following_url": "https://api.github.com/users/etiktin/following{/other_user}",
      "gists_url": "https://api.github.com/users/etiktin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/etiktin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/etiktin/subscriptions",
      "organizations_url": "https://api.github.com/users/etiktin/orgs",
      "repos_url": "https://api.github.com/users/etiktin/repos",
      "events_url": "https://api.github.com/users/etiktin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/etiktin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-01T00:46:52Z",
    "updated_at": "2015-09-01T00:46:52Z",
    "body": "This is a shot in the dark but have you tried playing with the security options? Specifically the 2 registerUrlScheme methods mentioned in [web-frame](https://github.com/atom/electron/blob/874367e2c5b7a91c620285322488b04a57569110/docs/api/web-frame.md#webframeregisterurlschemeassecurescheme). If that doesn't work you can try disabling websecurity completely by setting `web-security` to false in BrowserWindow initialization (see [here](https://github.com/atom/electron/blob/master/docs/api/browser-window.md#new-browserwindowoptions)).\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/136541991",
    "html_url": "https://github.com/electron/electron/issues/2669#issuecomment-136541991",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2669",
    "id": 136541991,
    "user": {
      "login": "AndrejHronco",
      "id": 1925905,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1925905?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AndrejHronco",
      "html_url": "https://github.com/AndrejHronco",
      "followers_url": "https://api.github.com/users/AndrejHronco/followers",
      "following_url": "https://api.github.com/users/AndrejHronco/following{/other_user}",
      "gists_url": "https://api.github.com/users/AndrejHronco/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AndrejHronco/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AndrejHronco/subscriptions",
      "organizations_url": "https://api.github.com/users/AndrejHronco/orgs",
      "repos_url": "https://api.github.com/users/AndrejHronco/repos",
      "events_url": "https://api.github.com/users/AndrejHronco/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AndrejHronco/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-01T01:12:14Z",
    "updated_at": "2015-09-01T01:12:14Z",
    "body": "I did try and use the web-security object in BrowserWindow to no effect. I will try the two web-frame methods, is there more documentation on web-frame and using these two methods? Is there a different way that Electron(libchromiumcontent) handles permissions compared with Chromium?\n\nIt's unclear as to what the issue is. I'm not prompted to allow permission to use sysex, like i am in Chrome, which seems fine, but it does seem that a requirement to sending sysex messages is the secure protocol 'https:' \n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/136565098",
    "html_url": "https://github.com/electron/electron/issues/2669#issuecomment-136565098",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2669",
    "id": 136565098,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2015-09-01T03:24:59Z",
    "updated_at": "2015-09-01T03:24:59Z",
    "body": "Are you using OS X? If so can you paste the crash report that can be found in `Console.app`?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/136592598",
    "html_url": "https://github.com/electron/electron/issues/2669#issuecomment-136592598",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2669",
    "id": 136592598,
    "user": {
      "login": "AndrejHronco",
      "id": 1925905,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1925905?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AndrejHronco",
      "html_url": "https://github.com/AndrejHronco",
      "followers_url": "https://api.github.com/users/AndrejHronco/followers",
      "following_url": "https://api.github.com/users/AndrejHronco/following{/other_user}",
      "gists_url": "https://api.github.com/users/AndrejHronco/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AndrejHronco/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AndrejHronco/subscriptions",
      "organizations_url": "https://api.github.com/users/AndrejHronco/orgs",
      "repos_url": "https://api.github.com/users/AndrejHronco/repos",
      "events_url": "https://api.github.com/users/AndrejHronco/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AndrejHronco/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-01T05:45:44Z",
    "updated_at": "2015-09-01T08:02:04Z",
    "body": "This gets logged each time the crash happens:\n`Aug 29 20:00:06 computer-name kernel[0]: Sandbox: Electron(5338) System Policy: deny file-write-unlink /Users/user/Library/Saved Application State/com.github.electron.savedState/restorecount.plist`\n\nThis is from Electron Helper crash log:\n\n```\nProcess:               Electron Helper [5474]\nPath:                  /Users/USER/Documents/*/Electron.app/Contents/Frameworks/Electron Helper.app/Contents/MacOS/Electron Helper\nIdentifier:            com.github.electron.helper\nParent Process:        Electron [5472]\n3   Electron Framework              0x00000001113d2122 0x10f7e2000 + 29294882\n4   Electron Framework              0x00000001102be238 0x10f7e2000 + 11387448\n5   Electron Framework              0x00000001102be786 0x10f7e2000 + 11388806\n6   Electron Framework              0x0000000110106ef1 0x10f7e2000 + 9588465\n7   Electron Framework              0x0000000110107402 0x10f7e2000 + 9589762\n8   Electron Framework              0x000000010f9318b8 0x10f7e2000 + 1374392\n9   Electron Framework              0x0000000110109b49 0x10f7e2000 + 9599817\n10  Electron Framework              0x000000011010964a 0x10f7e2000 + 9598538\n11  Electron Framework              0x000000010f9318b8 0x10f7e2000 + 1374392\n12  Electron Framework              0x000000010f94d94f 0x10f7e2000 + 1489231\n13  Electron Framework              0x000000010f94dd36 0x10f7e2000 + 1490230\n14  Electron Framework              0x000000010f92a381 0x10f7e2000 + 1344385\n20  Electron Framework              0x000000010f92a854 0x10f7e2000 + 1345620\n21  Electron Framework              0x000000010f92a1ec 0x10f7e2000 + 1343980\n22  Electron Framework              0x000000010f95c0f3 0x10f7e2000 + 1548531\n23  Electron Framework              0x000000010f94d26d 0x10f7e2000 + 1487469\n24  Electron Framework              0x00000001102b8e46 0x10f7e2000 + 11365958\n25  Electron Framework              0x000000010fd65f52 0x10f7e2000 + 5783378\n26  Electron Framework              0x000000010fd655f6 0x10f7e2000 + 5780982\n27  Electron Framework              0x000000010f7e440d AtomMain + 77\n28  com.github.electron.helper      0x000000010f7daf2a main + 58\n1   Electron Framework              0x00000001103a91cd 0x10f7e2000 + 12349901\n2   Electron Framework              0x000000010f929740 0x10f7e2000 + 1341248\n3   Electron Framework              0x000000010f95c0f3 0x10f7e2000 + 1548531\n4   Electron Framework              0x000000010f94d26d 0x10f7e2000 + 1487469\n5   Electron Framework              0x000000010f97af3f 0x10f7e2000 + 1675071\n6   Electron Framework              0x000000010f97739b 0x10f7e2000 + 1659803\n1   Electron Framework              0x000000010fc5d549 0x10f7e2000 + 4699465\n2   Electron Framework              0x000000010f97a73c 0x10f7e2000 + 1673020\n3   Electron Framework              0x000000010f97739b 0x10f7e2000 + 1659803\n1   Electron Framework              0x000000010fc5d549 0x10f7e2000 + 4699465\n2   Electron Framework              0x000000010f97a73c 0x10f7e2000 + 1673020\n3   Electron Framework              0x000000010f97739b 0x10f7e2000 + 1659803\n1   Electron Framework              0x0000000110927278 0x10f7e2000 + 18109048\n2   Electron Framework              0x0000000110913119 0x10f7e2000 + 18026777\n3   Electron Framework              0x0000000110913416 0x10f7e2000 + 18027542\n4   Electron Framework              0x000000011090b676 0x10f7e2000 + 17995382\n5   Electron Framework              0x0000000110900383 0x10f7e2000 + 17949571\n6   Electron Framework              0x00000001108ffe63 0x10f7e2000 + 17948259\n7   Electron Framework              0x00000001108ffdea 0x10f7e2000 + 17948138\n8   Electron Framework              0x000000010f95c0f3 0x10f7e2000 + 1548531\n9   Electron Framework              0x000000010f94d26d 0x10f7e2000 + 1487469\n10  Electron Framework              0x000000010f97af3f 0x10f7e2000 + 1675071\n11  Electron Framework              0x000000010f97739b 0x10f7e2000 + 1659803\n5   Electron Framework              0x000000010f92a5cf 0x10f7e2000 + 1344975\n6   Electron Framework              0x000000010f92a1ec 0x10f7e2000 + 1343980\n7   Electron Framework              0x000000010f95c0f3 0x10f7e2000 + 1548531\n8   Electron Framework              0x000000010f94d26d 0x10f7e2000 + 1487469\n9   Electron Framework              0x000000010f97af3f 0x10f7e2000 + 1675071\n10  Electron Framework              0x000000010f97739b 0x10f7e2000 + 1659803\n1   Electron Framework              0x000000010f88cd3f atom::NodeBindings::EmbedThreadRunner(void*) + 63\n1   Electron Framework              0x000000010f969feb 0x10f7e2000 + 1605611\n2   Electron Framework              0x000000010f97c80c 0x10f7e2000 + 1681420\n3   Electron Framework              0x000000010f97ccb0 0x10f7e2000 + 1682608\n4   Electron Framework              0x000000010f97739b 0x10f7e2000 + 1659803\n5   Electron Framework              0x000000010f92a5cf 0x10f7e2000 + 1344975\n6   Electron Framework              0x000000010f92a1ec 0x10f7e2000 + 1343980\n7   Electron Framework              0x000000010f95c0f3 0x10f7e2000 + 1548531\n8   Electron Framework              0x000000010f94d26d 0x10f7e2000 + 1487469\n9   Electron Framework              0x000000010f97af3f 0x10f7e2000 + 1675071\n10  Electron Framework              0x000000010f97739b 0x10f7e2000 + 1659803\n1   Electron Framework              0x000000010f969feb 0x10f7e2000 + 1605611\n2   Electron Framework              0x000000010f97c80c 0x10f7e2000 + 1681420\n3   Electron Framework              0x000000010f97ccb0 0x10f7e2000 + 1682608\n4   Electron Framework              0x000000010f97739b 0x10f7e2000 + 1659803\n       0x10f7da000 -        0x10f7daff5 +com.github.electron.helper (0) <B06FAAF5-D736-3DAC-96E4-BC9F4A693378> /Users/USER/Documents/*/Electron.app/Contents/Frameworks/Electron Helper.app/Contents/MacOS/Electron Helper\n       0x10f7e2000 -        0x11223cf51 +Electron Framework (0) <8505C2DD-76D8-39E5-AEEE-1156A492F20E> /Users/USER/Documents/*/Electron.app/Contents/Frameworks/Electron Framework.framework/Versions/A/Electron Framework\n       0x11281d000 -        0x112832ff7 +com.github.Squirrel (1.0 - 1) <85C10AB5-0538-3E6C-A73B-9D4E55378A5B> /Users/USER/Documents/*/Electron.app/Contents/Frameworks/Squirrel.framework/Versions/A/Squirrel\n       0x11284f000 -        0x1128b2ff7 +org.reactivecocoa.ReactiveCocoa (1.0 - 1) <701B20DE-3ADD-3643-B52A-E05744C30DB3> /Users/USER/Documents/*/Electron.app/Contents/Frameworks/ReactiveCocoa.framework/Versions/A/ReactiveCocoa\n       0x11292b000 -        0x11293ffff +org.mantle.Mantle (1.0 - ???) <31915DD6-48E6-3706-A076-C9D4CE17F4F6> /Users/USER/Documents/*/Electron.app/Contents/Frameworks/Mantle.framework/Versions/A/Mantle\n       0x112951000 -        0x11331fff3 +libnode.dylib (0) <A70B058A-3305-3486-92FC-7D0E76A65058> /Users/USER/Documents/*/Electron.app/Contents/Frameworks/Electron Framework.framework/Versions/A/Libraries/libnode.dylib\n       0x118335000 -        0x118555fe7 +ffmpegsumo.so (0) <333A2A7D-7472-301F-9BA7-979B4009AB8C> /Users/USER/Documents/*/Electron.app/Contents/Frameworks/Electron Framework.framework/Libraries/ffmpegsumo.so\n```\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/136624063",
    "html_url": "https://github.com/electron/electron/issues/2669#issuecomment-136624063",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2669",
    "id": 136624063,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2015-09-01T08:03:53Z",
    "updated_at": "2015-09-01T08:04:01Z",
    "body": "Can you give some sample code that can show the problem? Calling `navigator.requestMIDIAccess` seems to work fine.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/136813135",
    "html_url": "https://github.com/electron/electron/issues/2669#issuecomment-136813135",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2669",
    "id": 136813135,
    "user": {
      "login": "AndrejHronco",
      "id": 1925905,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1925905?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AndrejHronco",
      "html_url": "https://github.com/AndrejHronco",
      "followers_url": "https://api.github.com/users/AndrejHronco/followers",
      "following_url": "https://api.github.com/users/AndrejHronco/following{/other_user}",
      "gists_url": "https://api.github.com/users/AndrejHronco/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AndrejHronco/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AndrejHronco/subscriptions",
      "organizations_url": "https://api.github.com/users/AndrejHronco/orgs",
      "repos_url": "https://api.github.com/users/AndrejHronco/repos",
      "events_url": "https://api.github.com/users/AndrejHronco/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AndrejHronco/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-01T18:00:53Z",
    "updated_at": "2015-09-01T18:00:53Z",
    "body": "The web midi api seems to work with everything other than sending sysex, which is the only feature of the API that requires any special conditions. Here is an example of sending sysex, which crashes the app every time:\n\n``` javascript\nnavigator.requestMIDIAccess({sysex: true}).then(onMIDISuccess, onMIDIFailure);\n// midi is the returned midiAccess object from requestMIDIAccess\nvar outputPort = midi.outputs.get(outputport.id); //loop over each output to get access to each port\n// send simple sysex message\noutputPort.send([240, 126, 127, 6, 1, 247]); // device id request\n```\n\n`{sysex: true}` is what prompts the user for permission in the browser context, the protocol must be 'https:' In the context of an Electron app, no permission prompt is given. The sysex message above pings the device, then the device returns a message with info about itself. The message can be in hexadecimal literal format `0xF7` or in the decimal equivalent, `240`. It can also be an Uint8Array.\n\n[Here is more info on sending messages](https://webaudio.github.io/web-midi-api/#sending-midi-messages-to-an-output-device)\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/137910959",
    "html_url": "https://github.com/electron/electron/issues/2669#issuecomment-137910959",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2669",
    "id": 137910959,
    "user": {
      "login": "toyoshim",
      "id": 577684,
      "avatar_url": "https://avatars3.githubusercontent.com/u/577684?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/toyoshim",
      "html_url": "https://github.com/toyoshim",
      "followers_url": "https://api.github.com/users/toyoshim/followers",
      "following_url": "https://api.github.com/users/toyoshim/following{/other_user}",
      "gists_url": "https://api.github.com/users/toyoshim/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/toyoshim/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/toyoshim/subscriptions",
      "organizations_url": "https://api.github.com/users/toyoshim/orgs",
      "repos_url": "https://api.github.com/users/toyoshim/repos",
      "events_url": "https://api.github.com/users/toyoshim/events{/privacy}",
      "received_events_url": "https://api.github.com/users/toyoshim/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-05T04:59:49Z",
    "updated_at": "2015-09-05T04:59:49Z",
    "body": "Hi, I confirmed that the browser kills a renderer because of bad IPC message, reason 34, at https://code.google.com/p/chromium/codesearch#chromium/src/content/browser/media/midi_host.cc&q=MH_SYS_EX_PERMISSION&sq=package:chromium&type=cs&l=109.\n\nThe permission for each renderer is managed by ChildProcessSecurityPolicy, and should be set for sysex at https://code.google.com/p/chromium/codesearch#chromium/src/chrome/browser/media/midi_permission_context.cc&sq=package:chromium&type=cs&l=32&rcl=1441409197. If this isn't set correctly, the browser kills a renderer on receiving sysex in order to protect the browser from broken renderers.\n\nSo the point to fix this issue seems to implement Electron version of midi_permission_context.cc.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/137912596",
    "html_url": "https://github.com/electron/electron/issues/2669#issuecomment-137912596",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2669",
    "id": 137912596,
    "user": {
      "login": "toyoshim",
      "id": 577684,
      "avatar_url": "https://avatars3.githubusercontent.com/u/577684?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/toyoshim",
      "html_url": "https://github.com/toyoshim",
      "followers_url": "https://api.github.com/users/toyoshim/followers",
      "following_url": "https://api.github.com/users/toyoshim/following{/other_user}",
      "gists_url": "https://api.github.com/users/toyoshim/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/toyoshim/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/toyoshim/subscriptions",
      "organizations_url": "https://api.github.com/users/toyoshim/orgs",
      "repos_url": "https://api.github.com/users/toyoshim/repos",
      "events_url": "https://api.github.com/users/toyoshim/events{/privacy}",
      "received_events_url": "https://api.github.com/users/toyoshim/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-05T05:42:19Z",
    "updated_at": "2015-09-05T05:42:19Z",
    "body": "I took a quick look and wrote a fix for this.\nbrightray's PermissionManager seems to be the right place to handle the ChildProcessSecurityPolicy for Electron. I can send a pull request to the brightray. I'm looking the process for code contribution.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/137913130",
    "html_url": "https://github.com/electron/electron/issues/2669#issuecomment-137913130",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2669",
    "id": 137913130,
    "user": {
      "login": "toyoshim",
      "id": 577684,
      "avatar_url": "https://avatars3.githubusercontent.com/u/577684?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/toyoshim",
      "html_url": "https://github.com/toyoshim",
      "followers_url": "https://api.github.com/users/toyoshim/followers",
      "following_url": "https://api.github.com/users/toyoshim/following{/other_user}",
      "gists_url": "https://api.github.com/users/toyoshim/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/toyoshim/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/toyoshim/subscriptions",
      "organizations_url": "https://api.github.com/users/toyoshim/orgs",
      "repos_url": "https://api.github.com/users/toyoshim/repos",
      "events_url": "https://api.github.com/users/toyoshim/events{/privacy}",
      "received_events_url": "https://api.github.com/users/toyoshim/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-05T06:02:07Z",
    "updated_at": "2015-09-05T06:02:07Z",
    "body": "Sent a pull request to atom/brightray.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/138676991",
    "html_url": "https://github.com/electron/electron/issues/2669#issuecomment-138676991",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2669",
    "id": 138676991,
    "user": {
      "login": "AndrejHronco",
      "id": 1925905,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1925905?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AndrejHronco",
      "html_url": "https://github.com/AndrejHronco",
      "followers_url": "https://api.github.com/users/AndrejHronco/followers",
      "following_url": "https://api.github.com/users/AndrejHronco/following{/other_user}",
      "gists_url": "https://api.github.com/users/AndrejHronco/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AndrejHronco/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AndrejHronco/subscriptions",
      "organizations_url": "https://api.github.com/users/AndrejHronco/orgs",
      "repos_url": "https://api.github.com/users/AndrejHronco/repos",
      "events_url": "https://api.github.com/users/AndrejHronco/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AndrejHronco/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-08T19:29:22Z",
    "updated_at": "2015-09-08T19:29:22Z",
    "body": "Thanks for working on this [toyoshim](https://github.com/toyoshim), looking forward to using Web MIDI in Electron.\n"
  }
]