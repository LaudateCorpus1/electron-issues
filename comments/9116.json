[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/297670975",
    "html_url": "https://github.com/electron/electron/pull/9116#issuecomment-297670975",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/9116",
    "id": 297670975,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2017-04-27T10:03:52Z",
    "updated_at": "2017-04-27T10:03:52Z",
    "body": "I have updated Node to v7.9.0 and increased node module version. The tests of native modules are failing because of the bumping of node module version.\r\n\r\nThis PR should be ready to merge, though I would expect to see unknown regressions due to Chrome and Node upgrade."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/298700455",
    "html_url": "https://github.com/electron/electron/pull/9116#issuecomment-298700455",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/9116",
    "id": 298700455,
    "user": {
      "login": "kevinsawicki",
      "id": 671378,
      "avatar_url": "https://avatars0.githubusercontent.com/u/671378?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kevinsawicki",
      "html_url": "https://github.com/kevinsawicki",
      "followers_url": "https://api.github.com/users/kevinsawicki/followers",
      "following_url": "https://api.github.com/users/kevinsawicki/following{/other_user}",
      "gists_url": "https://api.github.com/users/kevinsawicki/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kevinsawicki/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kevinsawicki/subscriptions",
      "organizations_url": "https://api.github.com/users/kevinsawicki/orgs",
      "repos_url": "https://api.github.com/users/kevinsawicki/repos",
      "events_url": "https://api.github.com/users/kevinsawicki/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kevinsawicki/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2017-05-02T17:15:33Z",
    "updated_at": "2017-05-02T17:21:40Z",
    "body": "> The tests of native modules are failing because of the bumping of node module version.\r\n\r\nI've updated this branch to build the spec modules against a local headers tarball instead of a published one so hopefully this shouldn't happen again going forward when we bump the node module version."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/298795585",
    "html_url": "https://github.com/electron/electron/pull/9116#issuecomment-298795585",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/9116",
    "id": 298795585,
    "user": {
      "login": "kevinsawicki",
      "id": 671378,
      "avatar_url": "https://avatars0.githubusercontent.com/u/671378?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kevinsawicki",
      "html_url": "https://github.com/kevinsawicki",
      "followers_url": "https://api.github.com/users/kevinsawicki/followers",
      "following_url": "https://api.github.com/users/kevinsawicki/following{/other_user}",
      "gists_url": "https://api.github.com/users/kevinsawicki/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kevinsawicki/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kevinsawicki/subscriptions",
      "organizations_url": "https://api.github.com/users/kevinsawicki/orgs",
      "repos_url": "https://api.github.com/users/kevinsawicki/repos",
      "events_url": "https://api.github.com/users/kevinsawicki/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kevinsawicki/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2017-05-03T00:11:16Z",
    "updated_at": "2017-05-03T00:41:43Z",
    "body": "Seeing some crashes from `LocalArrayBufferTracker` on Windows, also seen by @brenca:\r\n\r\n```\r\n   ntdll.dll!_RtlReportCriticalFailure@12()    Unknown\r\n    ntdll.dll!_RtlpReportHeapFailure@4()    Unknown\r\n    ntdll.dll!_RtlpHeapHandleError@4()  Unknown\r\n    ntdll.dll!_RtlpLogHeapFailure@24()  Unknown\r\n    ntdll.dll!_RtlFreeHeap@12() Unknown\r\n    electron.exe!base::allocator::WinHeapFree(void *)   Unknown\r\n    electron.exe!base::debug::Alias(void const *)   Unknown\r\n    electron.exe!_free()    Unknown\r\n    electron.exe!gin::ArrayBufferAllocator::Free(void * data, unsigned int length) Line 34  C++\r\n    node.dll!v8::internal::LocalArrayBufferTracker::Process<<lambda_364280a90984476bdb46fa9c7db4695b> >(v8::internal::ArrayBufferTracker::ProcessBuffers::__l2::<lambda_364280a90984476bdb46fa9c7db4695b> callback) Line 66   C++\r\n    node.dll!v8::internal::ArrayBufferTracker::FreeDeadInNewSpace(v8::internal::Heap * heap) Line 82    C++\r\n    node.dll!v8::internal::Heap::Scavenge() Line 1773   C++\r\n    node.dll!v8::internal::Heap::PerformGarbageCollection(v8::internal::GarbageCollector collector, const v8::GCCallbackFlags gc_callback_flags) Line 1359  C++\r\n    node.dll!v8::internal::Heap::CollectGarbage(v8::internal::GarbageCollector collector, v8::internal::GarbageCollectionReason gc_reason, const char * collector_reason, const v8::GCCallbackFlags gc_callback_flags) Line 1013    C++\r\n```\r\n\r\nSeems to occur possibly on the first GC in the main process, can reproduce pretty consistently by requiring a large library. Seeing it when running the specs on Windows against the release build when `electabul` gets required which in turn requires `asar`.\r\n\r\nWill investigate further and try to narrow down.\r\n\r\nHere is another one:\r\n\r\n```\r\n \tntdll.dll!RtlFreeHeap\u001e()\tUnknown\r\n \telectron.exe!base::allocator::WinHeapFree(void *)\tUnknown\r\n \tnode.dll!v8::internal::LocalArrayBufferTracker::Process<<lambda_d5761fd40aa45311e3047f5db5a671ca> >(v8::internal::ArrayBufferTracker::ProcessBuffers::__l2::<lambda_d5761fd40aa45311e3047f5db5a671ca> callback) Line 67\tC++\r\n \tnode.dll!v8::internal::ArrayBufferTracker::FreeDeadInNewSpace(v8::internal::Heap * heap) Line 82\tC++\r\n \tnode.dll!v8::internal::Heap::Scavenge() Line 1773\tC++\r\n \tnode.dll!v8::internal::Heap::PerformGarbageCollection(v8::internal::GarbageCollector collector, const v8::GCCallbackFlags gc_callback_flags) Line 1359\tC++\r\n \tnode.dll!v8::internal::Heap::CollectGarbage(v8::internal::GarbageCollector collector, v8::internal::GarbageCollectionReason gc_reason, const char * collector_reason, const v8::GCCallbackFlags gc_callback_flags) Line 1013\tC++\r\n \tnode.dll!v8::internal::Heap::CollectGarbage(v8::internal::AllocationSpace space, v8::internal::GarbageCollectionReason gc_reason, const v8::GCCallbackFlags callbackFlags) Line 686\tC++\r\n \tnode.dll!v8::internal::Factory::NewRawOneByteString(int length, v8::internal::PretenureFlag pretenure) Line 539\tC++\r\n \tnode.dll!v8::internal::String::SlowFlatten(v8::internal::Handle<v8::internal::ConsString> cons, v8::internal::PretenureFlag pretenure) Line 2444\tC++\r\n \tnode.dll!v8::internal::String::Flatten(v8::internal::Handle<v8::internal::String> string, v8::internal::PretenureFlag pretenure) Line 3534\tC++\r\n \tnode.dll!v8::internal::Parser::ParseProgram(v8::internal::Isolate * isolate, v8::internal::ParseInfo * info) Line 626\tC++\r\n \tnode.dll!v8::internal::parsing::ParseProgram(v8::internal::ParseInfo * info, bool internalize) Line 30\tC++\r\n \tnode.dll!v8::internal::`anonymous namespace'::CompileToplevel(v8::internal::CompilationInfo * info) Line 1157\tC++\r\n \tnode.dll!v8::internal::Compiler::GetSharedFunctionInfoForScript(v8::internal::Handle<v8::internal::String> source, v8::internal::Handle<v8::internal::Object> script_name, int line_offset, int column_offset, v8::ScriptOriginOptions resource_options, v8::internal::Handle<v8::internal::Object> source_map_url, v8::internal::Handle<v8::internal::Context> context, v8::Extension * extension, v8::internal::ScriptData * * cached_data, v8::ScriptCompiler::CompileOptions compile_options, v8::internal::NativesFlag natives) Line 1764\tC++\r\n \tnode.dll!v8::ScriptCompiler::CompileUnboundInternal(v8::Isolate * v8_isolate, v8::ScriptCompiler::Source * source, v8::ScriptCompiler::CompileOptions options) Line 2151\tC++\r\n \tnode.dll!v8::ScriptCompiler::CompileUnboundScript(v8::Isolate * v8_isolate, v8::ScriptCompiler::Source * source, v8::ScriptCompiler::CompileOptions options) Line 2188\tC++\r\n>\tnode.dll!node::ContextifyScript::New(const v8::FunctionCallbackInfo<v8::Value> & args) Line 533\tC++\r\n \tnode.dll!v8::internal::FunctionCallbackArguments::Call(void(*)(const v8::FunctionCallbackInfo<v8::Value> &) f) Line 26\tC++\r\n \tnode.dll!v8::internal::`anonymous namespace'::HandleApiCallHelper<1>(v8::internal::Isolate * isolate, v8::internal::Handle<v8::internal::HeapObject> function, v8::internal::Handle<v8::internal::HeapObject> new_target, v8::internal::Handle<v8::internal::FunctionTemplateInfo> fun_data, v8::internal::Handle<v8::internal::Object> receiver, v8::internal::BuiltinArguments args) Line 113\tC++\r\n \tnode.dll!v8::internal::Builtin_Impl_HandleApiCall(v8::internal::BuiltinArguments args, v8::internal::Isolate * isolate) Line 136\tC++\r\n \tnode.dll!v8::internal::Builtin_HandleApiCall(int args_length, v8::internal::Object * * args_object, v8::internal::Isolate * isolate) Line 128\tC++\r\n```"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/299933127",
    "html_url": "https://github.com/electron/electron/pull/9116#issuecomment-299933127",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/9116",
    "id": 299933127,
    "user": {
      "login": "kevinsawicki",
      "id": 671378,
      "avatar_url": "https://avatars0.githubusercontent.com/u/671378?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kevinsawicki",
      "html_url": "https://github.com/kevinsawicki",
      "followers_url": "https://api.github.com/users/kevinsawicki/followers",
      "following_url": "https://api.github.com/users/kevinsawicki/following{/other_user}",
      "gists_url": "https://api.github.com/users/kevinsawicki/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kevinsawicki/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kevinsawicki/subscriptions",
      "organizations_url": "https://api.github.com/users/kevinsawicki/orgs",
      "repos_url": "https://api.github.com/users/kevinsawicki/repos",
      "events_url": "https://api.github.com/users/kevinsawicki/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kevinsawicki/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2017-05-08T17:26:18Z",
    "updated_at": "2017-05-08T18:00:20Z",
    "body": "Was able to track down the crash a bit more, here is a simpler reproduction:\r\n\r\n```js\r\nconst crypto = require('crypto')\r\n\r\nfor (let i = 1; i < 10000; i++) {\r\n  crypto.randomBytes(i)\r\n}\r\n```\r\n\r\nThis crashes for me each time"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/300071171",
    "html_url": "https://github.com/electron/electron/pull/9116#issuecomment-300071171",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/9116",
    "id": 300071171,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2017-05-09T06:14:34Z",
    "updated_at": "2017-05-09T06:14:34Z",
    "body": "I have pushed a fix for the crash in the main process, however when taking a heap snapshot in devtools, a crash would happen in renderer process:\r\n\r\n```\r\n \tntdll.dll!00007ffbd39c1b70()\tUnknown\r\n \tntdll.dll!00007ffbd39c4db2()\tUnknown\r\n \tntdll.dll!00007ffbd39c59b0()\tUnknown\r\n \tntdll.dll!00007ffbd397a810()\tUnknown\r\n \tnode.dll!_free_base(void * block) Line 112\tC++\r\n \t[External Code]\t\r\n>\tnode.dll!v8::internal::NativeObjectsExplorer::FillRetainedObjects() Line 2312\tC++\r\n \tnode.dll!v8::internal::NativeObjectsExplorer::IterateAndExtractReferences(v8::internal::SnapshotFiller * filler) Line 2354\tC++\r\n \tnode.dll!v8::internal::HeapSnapshotGenerator::GenerateSnapshot() Line 2537\tC++\r\n \tnode.dll!v8::internal::HeapProfiler::TakeSnapshot(v8::ActivityControl * control, v8::HeapProfiler::ObjectNameResolver * resolver) Line 84\tC++\r\n \telectron.exe!mate::internal::Invoker<mate::internal::IndicesHolder<0>,v8::Isolate * __ptr64>::DispatchToCallback(base::Callback<void __cdecl(v8::Isolate *),1,1> callback) Line 202\tC++\r\n \telectron.exe!mate::internal::Dispatcher<void __cdecl(v8::Isolate * __ptr64)>::DispatchToCallback(const v8::FunctionCallbackInfo<v8::Value> & info) Line 236\tC++\r\n \tnode.dll!v8::internal::FunctionCallbackArguments::Call(void(*)(const v8::FunctionCallbackInfo<v8::Value> &) f) Line 26\tC++\r\n \tnode.dll!v8::internal::`anonymous namespace'::HandleApiCallHelper<0>(v8::internal::Isolate * isolate, v8::internal::Handle<v8::internal::HeapObject> function, v8::internal::Handle<v8::internal::HeapObject> new_target, v8::internal::Handle<v8::internal::FunctionTemplateInfo> fun_data, v8::internal::Handle<v8::internal::Object> receiver, v8::internal::BuiltinArguments args) Line 113\tC++\r\n \tnode.dll!v8::internal::Builtin_Impl_HandleApiCall(v8::internal::BuiltinArguments args, v8::internal::Isolate * isolate) Line 140\tC++\r\n \tnode.dll!v8::internal::Builtin_HandleApiCall(int args_length, v8::internal::Object * * args_object, v8::internal::Isolate * isolate) Line 128\tC++\r\n \t[External Code]\t\r\n \tnode.dll!v8::internal::Runtime_LoadIC_Miss(int args_length, v8::internal::Object * * args_object, v8::internal::Isolate * isolate) Line 2544\tC++\r\n \t[External Code]\t\r\n```\r\n\r\nIt seems that some native classes were allocated in Chromium but freed in Node."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/300325343",
    "html_url": "https://github.com/electron/electron/pull/9116#issuecomment-300325343",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/9116",
    "id": 300325343,
    "user": {
      "login": "kevinsawicki",
      "id": 671378,
      "avatar_url": "https://avatars0.githubusercontent.com/u/671378?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kevinsawicki",
      "html_url": "https://github.com/kevinsawicki",
      "followers_url": "https://api.github.com/users/kevinsawicki/followers",
      "following_url": "https://api.github.com/users/kevinsawicki/following{/other_user}",
      "gists_url": "https://api.github.com/users/kevinsawicki/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kevinsawicki/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kevinsawicki/subscriptions",
      "organizations_url": "https://api.github.com/users/kevinsawicki/orgs",
      "repos_url": "https://api.github.com/users/kevinsawicki/repos",
      "events_url": "https://api.github.com/users/kevinsawicki/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kevinsawicki/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2017-05-09T22:58:13Z",
    "updated_at": "2017-05-09T22:58:13Z",
    "body": "> I have pushed a fix for the crash in the main process\r\n\r\nAwesome work @zcbenz, specs no longer crash for me on Windows release builds, I've merged https://github.com/electron/libchromiumcontent/issues/289\r\n\r\nA new 58 release came out today and I've queued up the builds in https://github.com/electron/libchromiumcontent/pull/290, I'll merge that into this branch once it completes."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/300620845",
    "html_url": "https://github.com/electron/electron/pull/9116#issuecomment-300620845",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/9116",
    "id": 300620845,
    "user": {
      "login": "kevinsawicki",
      "id": 671378,
      "avatar_url": "https://avatars0.githubusercontent.com/u/671378?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kevinsawicki",
      "html_url": "https://github.com/kevinsawicki",
      "followers_url": "https://api.github.com/users/kevinsawicki/followers",
      "following_url": "https://api.github.com/users/kevinsawicki/following{/other_user}",
      "gists_url": "https://api.github.com/users/kevinsawicki/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kevinsawicki/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kevinsawicki/subscriptions",
      "organizations_url": "https://api.github.com/users/kevinsawicki/orgs",
      "repos_url": "https://api.github.com/users/kevinsawicki/repos",
      "events_url": "https://api.github.com/users/kevinsawicki/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kevinsawicki/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2017-05-10T21:40:26Z",
    "updated_at": "2017-05-10T21:40:26Z",
    "body": "This has been released to beta in 1.7.0, please open new issues for any bugs you hit."
  }
]