[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/164170926",
    "html_url": "https://github.com/electron/electron/issues/3794#issuecomment-164170926",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/3794",
    "id": 164170926,
    "user": {
      "login": "paulcbetts",
      "id": 1396,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1396?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulcbetts",
      "html_url": "https://github.com/paulcbetts",
      "followers_url": "https://api.github.com/users/paulcbetts/followers",
      "following_url": "https://api.github.com/users/paulcbetts/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulcbetts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulcbetts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulcbetts/subscriptions",
      "organizations_url": "https://api.github.com/users/paulcbetts/orgs",
      "repos_url": "https://api.github.com/users/paulcbetts/repos",
      "events_url": "https://api.github.com/users/paulcbetts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulcbetts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-12T17:41:23Z",
    "updated_at": "2015-12-12T17:41:23Z",
    "body": "My psychic debugger is saying that your plugin and Chrome are 64-bit and your Electron is 32-bit or vice-versa\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/164176004",
    "html_url": "https://github.com/electron/electron/issues/3794#issuecomment-164176004",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/3794",
    "id": 164176004,
    "user": {
      "login": "rmsmith",
      "id": 1627763,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1627763?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rmsmith",
      "html_url": "https://github.com/rmsmith",
      "followers_url": "https://api.github.com/users/rmsmith/followers",
      "following_url": "https://api.github.com/users/rmsmith/following{/other_user}",
      "gists_url": "https://api.github.com/users/rmsmith/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rmsmith/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rmsmith/subscriptions",
      "organizations_url": "https://api.github.com/users/rmsmith/orgs",
      "repos_url": "https://api.github.com/users/rmsmith/repos",
      "events_url": "https://api.github.com/users/rmsmith/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rmsmith/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-12T18:56:43Z",
    "updated_at": "2015-12-12T18:56:43Z",
    "body": "@paulcbetts I should have mentioned that this is a 32-bit .dll running in 32-bit Electron; my Chrome Canary version is also 32-bit.\n\nOne other tidbit regarding Chrome Canary is that I had to go into `chrome://plugins` and check a checkbox that says \"Always allowed to run\" in order for the plugin to smoothly load.  That checkbox won't appear until you have a page running that attempts to load the plugin, but once checked it will persist for future loads.  I don't know if this is relevant to Electron but I thought it was worth mentioning.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/164400702",
    "html_url": "https://github.com/electron/electron/issues/3794#issuecomment-164400702",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/3794",
    "id": 164400702,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2015-12-14T10:20:57Z",
    "updated_at": "2015-12-14T10:20:57Z",
    "body": "You need to use the plugin from the Chrome version that matches the one used by Electron, e.g. Chrome 45 instead of Chrome Canary.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/164419180",
    "html_url": "https://github.com/electron/electron/issues/3794#issuecomment-164419180",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/3794",
    "id": 164419180,
    "user": {
      "login": "rmsmith",
      "id": 1627763,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1627763?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rmsmith",
      "html_url": "https://github.com/rmsmith",
      "followers_url": "https://api.github.com/users/rmsmith/followers",
      "following_url": "https://api.github.com/users/rmsmith/following{/other_user}",
      "gists_url": "https://api.github.com/users/rmsmith/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rmsmith/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rmsmith/subscriptions",
      "organizations_url": "https://api.github.com/users/rmsmith/orgs",
      "repos_url": "https://api.github.com/users/rmsmith/repos",
      "events_url": "https://api.github.com/users/rmsmith/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rmsmith/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-14T11:56:05Z",
    "updated_at": "2015-12-14T11:56:05Z",
    "body": "@zcbenz I don't understand why you have closed this issue.  I have built the pepper plugin with the `pepper_45` version of the `nacl_sdk` and I am using Electron with Chrome 45.  The fact that I can load my plugin in Chrome Canary is simply provided as  evidence that the plugin .dll is properly built.\n\nDoes anyone have a working 3rd party pepper plugin that they are using with Electron on Windows?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/164420045",
    "html_url": "https://github.com/electron/electron/issues/3794#issuecomment-164420045",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/3794",
    "id": 164420045,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2015-12-14T12:00:35Z",
    "updated_at": "2015-12-14T12:00:35Z",
    "body": "@rmsmith Sorry I thought you were trying to use the Flash plugin, currently I don't think we have a way to load third party pepper plugins except for Flash, we should definitely add one though.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/164421495",
    "html_url": "https://github.com/electron/electron/issues/3794#issuecomment-164421495",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/3794",
    "id": 164421495,
    "user": {
      "login": "rmsmith",
      "id": 1627763,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1627763?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rmsmith",
      "html_url": "https://github.com/rmsmith",
      "followers_url": "https://api.github.com/users/rmsmith/followers",
      "following_url": "https://api.github.com/users/rmsmith/following{/other_user}",
      "gists_url": "https://api.github.com/users/rmsmith/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rmsmith/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rmsmith/subscriptions",
      "organizations_url": "https://api.github.com/users/rmsmith/orgs",
      "repos_url": "https://api.github.com/users/rmsmith/repos",
      "events_url": "https://api.github.com/users/rmsmith/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rmsmith/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-14T12:09:41Z",
    "updated_at": "2015-12-14T12:09:41Z",
    "body": "@zcbenz support for 3rd party pepper plugins was recently added by @deepak1556 (see #1558) and I can confirm that it _does_ work on OSX.  The problem seems to be on Windows only.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/164766520",
    "html_url": "https://github.com/electron/electron/issues/3794#issuecomment-164766520",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/3794",
    "id": 164766520,
    "user": {
      "login": "rmsmith",
      "id": 1627763,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1627763?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rmsmith",
      "html_url": "https://github.com/rmsmith",
      "followers_url": "https://api.github.com/users/rmsmith/followers",
      "following_url": "https://api.github.com/users/rmsmith/following{/other_user}",
      "gists_url": "https://api.github.com/users/rmsmith/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rmsmith/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rmsmith/subscriptions",
      "organizations_url": "https://api.github.com/users/rmsmith/orgs",
      "repos_url": "https://api.github.com/users/rmsmith/repos",
      "events_url": "https://api.github.com/users/rmsmith/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rmsmith/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-15T13:36:04Z",
    "updated_at": "2015-12-15T13:36:04Z",
    "body": "Today I was able to figure out my problem and load the plugin on Windows.  The problem was with the plugin path on Windows.  All of the example code that I have seen on this subject has shown code similar to the attached example:\n\n```\nvar path = require('path');\napp.commandLine.appendSwitch('register-pepper-plugins', path.join(__dirname,'win/Release/hello.dll;application/x-hello'));\n```\n\nThe above call to `path.join` yields:\n\n```\nD:\\github\\electron-quick-start\\win\\Release\\hello.dll;application\\x-hello\n```\n\nThe above string does not represent a Windows path, which was the problem.  If I build my own path string literal then the plugin successfully loads:\n\n```\nD:/github/electron-quick-start/win/Release/hello.dll;application/x-hello\n```\n\nBeing new to `node.js` this behavior of the `path` module was not obvious to me.  It would probably be good to have a correct example somewhere for others to avoid this pitfall :)\n\nI will close this issue since the plugin loading is working now :)  Sorry for the noise.\n\nThanks!\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/169607238",
    "html_url": "https://github.com/electron/electron/issues/3794#issuecomment-169607238",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/3794",
    "id": 169607238,
    "user": {
      "login": "sleepcooper",
      "id": 11676437,
      "avatar_url": "https://avatars0.githubusercontent.com/u/11676437?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sleepcooper",
      "html_url": "https://github.com/sleepcooper",
      "followers_url": "https://api.github.com/users/sleepcooper/followers",
      "following_url": "https://api.github.com/users/sleepcooper/following{/other_user}",
      "gists_url": "https://api.github.com/users/sleepcooper/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sleepcooper/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sleepcooper/subscriptions",
      "organizations_url": "https://api.github.com/users/sleepcooper/orgs",
      "repos_url": "https://api.github.com/users/sleepcooper/repos",
      "events_url": "https://api.github.com/users/sleepcooper/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sleepcooper/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-07T09:27:14Z",
    "updated_at": "2016-01-07T09:30:27Z",
    "body": "@rmsmith  \n hello rmsmith :  \n    I have a  problem with your plugin. use the word (chrome --register-pepper-plugins=\"E:/Demo/pepper/win/Release/hello.dll;application/x-hello\" ) to regist the plugin and in chrome plugins I saw hello.dll. then in local html file I write the word:\n(\n     script:\n    var obj = document.getElementById('hello');\n    alert(obj);\n     html:  \n    <\"embed\" width=\"200px\" height=\"200px\"   id=\"hello\"    type=\"application/x-hello\"/>\n)\n\nI received a tip that the website don't support the plugin and the variable object is null\nI don't know what's problem, can you help me?\n\nthanks\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/169644185",
    "html_url": "https://github.com/electron/electron/issues/3794#issuecomment-169644185",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/3794",
    "id": 169644185,
    "user": {
      "login": "rmsmith",
      "id": 1627763,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1627763?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rmsmith",
      "html_url": "https://github.com/rmsmith",
      "followers_url": "https://api.github.com/users/rmsmith/followers",
      "following_url": "https://api.github.com/users/rmsmith/following{/other_user}",
      "gists_url": "https://api.github.com/users/rmsmith/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rmsmith/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rmsmith/subscriptions",
      "organizations_url": "https://api.github.com/users/rmsmith/orgs",
      "repos_url": "https://api.github.com/users/rmsmith/repos",
      "events_url": "https://api.github.com/users/rmsmith/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rmsmith/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-07T12:09:50Z",
    "updated_at": "2016-01-07T12:09:50Z",
    "body": "@sleepcooper which version of Chrome are you using?  As far as I know this will not work in the Stable channel of Chrome, it works only in the Chrome Canary channel or in things like Electron.\n\nIf you are in Chrome Canary (32-bit build for Windows) then be sure to check the checkbox that says \"Always allowed to run\" in `chrome://plugins` and then try to re-launch Canary.\n\nHope that helps,\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/169645458",
    "html_url": "https://github.com/electron/electron/issues/3794#issuecomment-169645458",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/3794",
    "id": 169645458,
    "user": {
      "login": "rmsmith",
      "id": 1627763,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1627763?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rmsmith",
      "html_url": "https://github.com/rmsmith",
      "followers_url": "https://api.github.com/users/rmsmith/followers",
      "following_url": "https://api.github.com/users/rmsmith/following{/other_user}",
      "gists_url": "https://api.github.com/users/rmsmith/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rmsmith/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rmsmith/subscriptions",
      "organizations_url": "https://api.github.com/users/rmsmith/orgs",
      "repos_url": "https://api.github.com/users/rmsmith/repos",
      "events_url": "https://api.github.com/users/rmsmith/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rmsmith/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-07T12:17:46Z",
    "updated_at": "2016-01-07T12:17:46Z",
    "body": "@sleepcooper also I just noticed that you have quotation marks around \"embed\" in your html.  That is probably why your variable `obj` is null.  Try removing those quotes :)\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/169954849",
    "html_url": "https://github.com/electron/electron/issues/3794#issuecomment-169954849",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/3794",
    "id": 169954849,
    "user": {
      "login": "sleepcooper",
      "id": 11676437,
      "avatar_url": "https://avatars0.githubusercontent.com/u/11676437?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sleepcooper",
      "html_url": "https://github.com/sleepcooper",
      "followers_url": "https://api.github.com/users/sleepcooper/followers",
      "following_url": "https://api.github.com/users/sleepcooper/following{/other_user}",
      "gists_url": "https://api.github.com/users/sleepcooper/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sleepcooper/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sleepcooper/subscriptions",
      "organizations_url": "https://api.github.com/users/sleepcooper/orgs",
      "repos_url": "https://api.github.com/users/sleepcooper/repos",
      "events_url": "https://api.github.com/users/sleepcooper/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sleepcooper/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-08T10:17:52Z",
    "updated_at": "2016-01-08T10:17:52Z",
    "body": "@rmsmith  I changed chrome version in the Chrome Canary version(32-bit build for Windows) ,  and set \"Always allowed to run\". but still has the problem that the website don't support the plugin and the variable object is null , should I set some option in chrome:// flags\nembed label has quotation in order to show my html content \n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/169974062",
    "html_url": "https://github.com/electron/electron/issues/3794#issuecomment-169974062",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/3794",
    "id": 169974062,
    "user": {
      "login": "rmsmith",
      "id": 1627763,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1627763?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rmsmith",
      "html_url": "https://github.com/rmsmith",
      "followers_url": "https://api.github.com/users/rmsmith/followers",
      "following_url": "https://api.github.com/users/rmsmith/following{/other_user}",
      "gists_url": "https://api.github.com/users/rmsmith/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rmsmith/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rmsmith/subscriptions",
      "organizations_url": "https://api.github.com/users/rmsmith/orgs",
      "repos_url": "https://api.github.com/users/rmsmith/repos",
      "events_url": "https://api.github.com/users/rmsmith/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rmsmith/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-08T11:41:09Z",
    "updated_at": "2016-01-08T11:41:09Z",
    "body": "@sleepcooper my test of the plugin in Chrome Canary was as a Chrome App, not a web page, so perhaps that accounts for the difference.  My tests in Chrome Canary were only for debugging purposes so that I could get things working in Electron.  If you want to target Chrome web pages I'd recommend using Native Client or Emscripten, which are both designed for that use case.  The `Makefile` in my sample plugin can also produce a `.pexe` file (Portable Native Client executable) with some minor modifications.  Hope that helps,\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/172782129",
    "html_url": "https://github.com/electron/electron/issues/3794#issuecomment-172782129",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/3794",
    "id": 172782129,
    "user": {
      "login": "sleepcooper",
      "id": 11676437,
      "avatar_url": "https://avatars0.githubusercontent.com/u/11676437?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sleepcooper",
      "html_url": "https://github.com/sleepcooper",
      "followers_url": "https://api.github.com/users/sleepcooper/followers",
      "following_url": "https://api.github.com/users/sleepcooper/following{/other_user}",
      "gists_url": "https://api.github.com/users/sleepcooper/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sleepcooper/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sleepcooper/subscriptions",
      "organizations_url": "https://api.github.com/users/sleepcooper/orgs",
      "repos_url": "https://api.github.com/users/sleepcooper/repos",
      "events_url": "https://api.github.com/users/sleepcooper/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sleepcooper/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-19T09:07:54Z",
    "updated_at": "2016-01-19T11:56:48Z",
    "body": "@rmsmith  If I change your code, how to built a dll file on windows os\nI user visual studio 2010 create a ppapi project, it ran in a link problem that ppapi_cpp.lib is use built by visual studio 2013.  but the vs_addin don't support visual stido 2013.\nDo you happend this problem, and how do?\nI did't use makefile to build dll before.\nLooking forward to your reply\nthanks\n\nthe error:\n1>ppapi_cpp.lib(module.o) : error LNK2038: mismatch detected for '_MSC_VER': value '1800' doesn't match value '1600' in main.obj\n1>ppapi_cpp.lib(instance.o) : error LNK2038: mismatch detected for '_MSC_VER': value '1800' doesn't match value '1600' in main.obj\n1>ppapi_cpp.lib(var.o) : error LNK2038: mismatch detected for '_MSC_VER': value '1800' doesn't match value '1600' in main.obj\n1>ppapi_cpp.lib(ppp_entrypoints.o) : error LNK2038: mismatch detected for '_MSC_VER': value '1800' doesn't match value '1600' in main.obj\n1>ppapi_cpp.lib(resource.o) : error LNK2038: mismatch detected for '_MSC_VER': value '1800' doesn't match value '1600' in main.obj\n1>ppapi_cpp.lib(input_event.o) : error LNK2038: mismatch detected for '_MSC_VER': value '1800' doesn't match value '1600' in main.obj\n1>ppapi_cpp.lib(view.o) : error LNK2038: mismatch detected for '_MSC_VER': value '1800' doesn't match value '1600' in main.obj\n1>ppapi_cpp.lib(url_loader.o) : error LNK2038: mismatch detected for '_MSC_VER': value '1800' doesn't match value '1600' in main.obj\n1>ppapi_cpp.lib(core.o) : error LNK2038: mismatch detected for '_MSC_VER': value '1800' doesn't match value '1600' in main.obj\n1>ppapi_cpp.lib(url_response_info.o) : error LNK2038: mismatch detected for '_MSC_VER': value '1800' doesn't match value '1600' in main.obj\n1>ppapi_cpp.lib(file_ref.o) : error LNK2038: mismatch detected for '_MSC_VER': value '1800' doesn't match value '1600' in main.obj\n1>     Creating library win\\hello.lib and object win\\hello.exp\n1>ppapi_cpp.lib(core.o) : error LNK2001: unresolved external symbol \"void __cdecl std::_Xbad_alloc(void)\" (?_Xbad_alloc@std@@YAXXZ)\n1>ppapi_cpp.lib(url_response_info.o) : error LNK2001: unresolved external symbol \"void __cdecl std::_Xbad_alloc(void)\" (?_Xbad_alloc@std@@YAXXZ)\n1>ppapi_cpp.lib(file_ref.o) : error LNK2001: unresolved external symbol \"void __cdecl std::_Xbad_alloc(void)\" (?_Xbad_alloc@std@@YAXXZ)\n1>ppapi_cpp.lib(resource.o) : error LNK2001: unresolved external symbol \"void __cdecl std::_Xbad_alloc(void)\" (?_Xbad_alloc@std@@YAXXZ)\n1>ppapi_cpp.lib(input_event.o) : error LNK2001: unresolved external symbol \"void __cdecl std::_Xbad_alloc(void)\" (?_Xbad_alloc@std@@YAXXZ)\n1>ppapi_cpp.lib(view.o) : error LNK2001: unresolved external symbol \"void __cdecl std::_Xbad_alloc(void)\" (?_Xbad_alloc@std@@YAXXZ)\n1>ppapi_cpp.lib(url_loader.o) : error LNK2001: unresolved external symbol \"void __cdecl std::_Xbad_alloc(void)\" (?_Xbad_alloc@std@@YAXXZ)\n1>ppapi_cpp.lib(module.o) : error LNK2019: unresolved external symbol \"void __cdecl std::_Xbad_alloc(void)\" (?_Xbad_alloc@std@@YAXXZ) referenced in function \"char \\* __cdecl std::_Allocate<char>(unsigned int,char *)\" (??$_Allocate@D@std@@YAPADIPAD@Z)\n1>ppapi_cpp.lib(instance.o) : error LNK2001: unresolved external symbol \"void __cdecl std::_Xbad_alloc(void)\" (?_Xbad_alloc@std@@YAXXZ)\n1>ppapi_cpp.lib(var.o) : error LNK2001: unresolved external symbol \"void __cdecl std::_Xbad_alloc(void)\" (?_Xbad_alloc@std@@YAXXZ)\n1>ppapi_cpp.lib(ppp_entrypoints.o) : error LNK2001: unresolved external symbol \"void __cdecl std::_Xbad_alloc(void)\" (?_Xbad_alloc@std@@YAXXZ)\n1>ppapi_cpp.lib(core.o) : error LNK2001: unresolved external symbol \"char const \\* __cdecl std::_Syserror_map(int)\" (?_Syserror_map@std@@YAPBDH@Z)\n1>ppapi_cpp.lib(url_response_info.o) : error LNK2001: unresolved external symbol \"char const \\* __cdecl std::_Syserror_map(int)\" (?_Syserror_map@std@@YAPBDH@Z)\n1>ppapi_cpp.lib(file_ref.o) : error LNK2001: unresolved external symbol \"char const \\* __cdecl std::_Syserror_map(int)\" (?_Syserror_map@std@@YAPBDH@Z)\n1>ppapi_cpp.lib(resource.o) : error LNK2001: unresolved external symbol \"char const \\* __cdecl std::_Syserror_map(int)\" (?_Syserror_map@std@@YAPBDH@Z)\n1>ppapi_cpp.lib(input_event.o) : error LNK2001: unresolved external symbol \"char const \\* __cdecl std::_Syserror_map(int)\" (?_Syserror_map@std@@YAPBDH@Z)\n1>ppapi_cpp.lib(view.o) : error LNK2001: unresolved external symbol \"char const \\* __cdecl std::_Syserror_map(int)\" (?_Syserror_map@std@@YAPBDH@Z)\n1>ppapi_cpp.lib(url_loader.o) : error LNK2001: unresolved external symbol \"char const \\* __cdecl std::_Syserror_map(int)\" (?_Syserror_map@std@@YAPBDH@Z)\n1>ppapi_cpp.lib(module.o) : error LNK2019: unresolved external symbol \"char const \\* __cdecl std::_Syserror_map(int)\" (?_Syserror_map@std@@YAPBDH@Z) referenced in function \"public: virtual class std::error_condition __thiscall std::_System_error_category::default_error_condition(int)const \" (?default_error_condition@_System_error_category@std@@UBE?AVerror_condition@2@H@Z)\n1>ppapi_cpp.lib(instance.o) : error LNK2001: unresolved external symbol \"char const \\* __cdecl std::_Syserror_map(int)\" (?_Syserror_map@std@@YAPBDH@Z)\n1>ppapi_cpp.lib(var.o) : error LNK2001: unresolved external symbol \"char const \\* __cdecl std::_Syserror_map(int)\" (?_Syserror_map@std@@YAPBDH@Z)\n1>ppapi_cpp.lib(ppp_entrypoints.o) : error LNK2001: unresolved external symbol \"char const \\* __cdecl std::_Syserror_map(int)\" (?_Syserror_map@std@@YAPBDH@Z)\n1>ppapi_cpp.lib(core.o) : error LNK2001: unresolved external symbol \"char const \\* __cdecl std::_Winerror_map(int)\" (?_Winerror_map@std@@YAPBDH@Z)\n1>ppapi_cpp.lib(url_response_info.o) : error LNK2001: unresolved external symbol \"char const \\* __cdecl std::_Winerror_map(int)\" (?_Winerror_map@std@@YAPBDH@Z)\n1>ppapi_cpp.lib(file_ref.o) : error LNK2001: unresolved external symbol \"char const \\* __cdecl std::_Winerror_map(int)\" (?_Winerror_map@std@@YAPBDH@Z)\n1>ppapi_cpp.lib(resource.o) : error LNK2001: unresolved external symbol \"char const \\* __cdecl std::_Winerror_map(int)\" (?_Winerror_map@std@@YAPBDH@Z)\n1>ppapi_cpp.lib(input_event.o) : error LNK2001: unresolved external symbol \"char const \\* __cdecl std::_Winerror_map(int)\" (?_Winerror_map@std@@YAPBDH@Z)\n1>ppapi_cpp.lib(view.o) : error LNK2001: unresolved external symbol \"char const \\* __cdecl std::_Winerror_map(int)\" (?_Winerror_map@std@@YAPBDH@Z)\n1>ppapi_cpp.lib(url_loader.o) : error LNK2001: unresolved external symbol \"char const \\* __cdecl std::_Winerror_map(int)\" (?_Winerror_map@std@@YAPBDH@Z)\n1>ppapi_cpp.lib(module.o) : error LNK2019: unresolved external symbol \"char const \\* __cdecl std::_Winerror_map(int)\" (?_Winerror_map@std@@YAPBDH@Z) referenced in function \"public: virtual class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall std::_System_error_category::message(int)const \" (?message@_System_error_category@std@@UBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z)\n1>ppapi_cpp.lib(instance.o) : error LNK2001: unresolved external symbol \"char const \\* __cdecl std::_Winerror_map(int)\" (?_Winerror_map@std@@YAPBDH@Z)\n1>ppapi_cpp.lib(var.o) : error LNK2001: unresolved external symbol \"char const \\* __cdecl std::_Winerror_map(int)\" (?_Winerror_map@std@@YAPBDH@Z)\n1>ppapi_cpp.lib(ppp_entrypoints.o) : error LNK2001: unresolved external symbol \"char const \\* __cdecl std::_Winerror_map(int)\" (?_Winerror_map@std@@YAPBDH@Z)\n1>ppapi_cpp.lib(var.o) : error LNK2019: unresolved external symbol ___report_rangecheckfailure referenced in function \"public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall pp::Var::DebugString(void)const \" (?DebugString@Var@pp@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ)\n1>E:\\Demo\\hello\\hello\\win\\hello.dll : fatal error LNK1120: 4 unresolved externals\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/172846922",
    "html_url": "https://github.com/electron/electron/issues/3794#issuecomment-172846922",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/3794",
    "id": 172846922,
    "user": {
      "login": "rmsmith",
      "id": 1627763,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1627763?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rmsmith",
      "html_url": "https://github.com/rmsmith",
      "followers_url": "https://api.github.com/users/rmsmith/followers",
      "following_url": "https://api.github.com/users/rmsmith/following{/other_user}",
      "gists_url": "https://api.github.com/users/rmsmith/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rmsmith/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rmsmith/subscriptions",
      "organizations_url": "https://api.github.com/users/rmsmith/orgs",
      "repos_url": "https://api.github.com/users/rmsmith/repos",
      "events_url": "https://api.github.com/users/rmsmith/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rmsmith/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-19T13:04:50Z",
    "updated_at": "2016-01-19T13:04:50Z",
    "body": "@sleepcooper I built the example plugin `dll` using `make` from the `nacl_sdk` and Visual Studio 2013, however I did not use the `vs_addin`.  If you put `cl.exe` from VS 2013 on your %PATH% that is all you need to build with `make` from the `nacl_sdk` (it is convenient to also put `make` from `nacl_sdk/pepper_45/tools/` on your %PATH%).  I hard-coded some paths to VS 2013 in the Makefile for this sample plugin, so you should check that those match your system.  Once all of this is setup, it should be as simple as typing `make TOOLCHAIN=win` on the command line.\n\nHope that helps,\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/196128892",
    "html_url": "https://github.com/electron/electron/issues/3794#issuecomment-196128892",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/3794",
    "id": 196128892,
    "user": {
      "login": "minggo",
      "id": 488203,
      "avatar_url": "https://avatars2.githubusercontent.com/u/488203?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minggo",
      "html_url": "https://github.com/minggo",
      "followers_url": "https://api.github.com/users/minggo/followers",
      "following_url": "https://api.github.com/users/minggo/following{/other_user}",
      "gists_url": "https://api.github.com/users/minggo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minggo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minggo/subscriptions",
      "organizations_url": "https://api.github.com/users/minggo/orgs",
      "repos_url": "https://api.github.com/users/minggo/repos",
      "events_url": "https://api.github.com/users/minggo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minggo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-14T03:58:35Z",
    "updated_at": "2016-03-14T03:58:35Z",
    "body": "@rmsmith Is there any example about how to build a .so with pepper SDK?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/196164503",
    "html_url": "https://github.com/electron/electron/issues/3794#issuecomment-196164503",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/3794",
    "id": 196164503,
    "user": {
      "login": "rmsmith",
      "id": 1627763,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1627763?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rmsmith",
      "html_url": "https://github.com/rmsmith",
      "followers_url": "https://api.github.com/users/rmsmith/followers",
      "following_url": "https://api.github.com/users/rmsmith/following{/other_user}",
      "gists_url": "https://api.github.com/users/rmsmith/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rmsmith/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rmsmith/subscriptions",
      "organizations_url": "https://api.github.com/users/rmsmith/orgs",
      "repos_url": "https://api.github.com/users/rmsmith/repos",
      "events_url": "https://api.github.com/users/rmsmith/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rmsmith/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-14T06:22:54Z",
    "updated_at": "2016-03-14T06:22:54Z",
    "body": "@minggo the example plugin in this issue can build a .so.  More examples can be found in the Native Client SDK and their documentation and forums are a better place to ask questions on the topic.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/196165462",
    "html_url": "https://github.com/electron/electron/issues/3794#issuecomment-196165462",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/3794",
    "id": 196165462,
    "user": {
      "login": "minggo",
      "id": 488203,
      "avatar_url": "https://avatars2.githubusercontent.com/u/488203?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minggo",
      "html_url": "https://github.com/minggo",
      "followers_url": "https://api.github.com/users/minggo/followers",
      "following_url": "https://api.github.com/users/minggo/following{/other_user}",
      "gists_url": "https://api.github.com/users/minggo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minggo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minggo/subscriptions",
      "organizations_url": "https://api.github.com/users/minggo/orgs",
      "repos_url": "https://api.github.com/users/minggo/repos",
      "events_url": "https://api.github.com/users/minggo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minggo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-14T06:28:51Z",
    "updated_at": "2016-03-14T06:28:51Z",
    "body": "@rmsmith Thanks for your answer. I just download the SDK, and run `make`, all are generate `.pexe` or `.nexe` files. And i found you said you can generate `.so`, so i ask you here.\n\nPS: can electron load `.pexe` file?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/196169200",
    "html_url": "https://github.com/electron/electron/issues/3794#issuecomment-196169200",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/3794",
    "id": 196169200,
    "user": {
      "login": "rmsmith",
      "id": 1627763,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1627763?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rmsmith",
      "html_url": "https://github.com/rmsmith",
      "followers_url": "https://api.github.com/users/rmsmith/followers",
      "following_url": "https://api.github.com/users/rmsmith/following{/other_user}",
      "gists_url": "https://api.github.com/users/rmsmith/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rmsmith/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rmsmith/subscriptions",
      "organizations_url": "https://api.github.com/users/rmsmith/orgs",
      "repos_url": "https://api.github.com/users/rmsmith/repos",
      "events_url": "https://api.github.com/users/rmsmith/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rmsmith/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-14T06:47:41Z",
    "updated_at": "2016-03-14T06:47:41Z",
    "body": "@minggo on OSX you would run `make TOOLCHAIN=mac` on the command line, for example.  Check that `mac` and/or `linux` are in the Makefile's `VALID_TOOLCHAINS`.\n\nElectron will not load a `.pexe` or `.nexe` (those require Native Client which is not included) but only a `.so` or `.dll` (trusted Pepper Plugin).\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/196174119",
    "html_url": "https://github.com/electron/electron/issues/3794#issuecomment-196174119",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/3794",
    "id": 196174119,
    "user": {
      "login": "minggo",
      "id": 488203,
      "avatar_url": "https://avatars2.githubusercontent.com/u/488203?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minggo",
      "html_url": "https://github.com/minggo",
      "followers_url": "https://api.github.com/users/minggo/followers",
      "following_url": "https://api.github.com/users/minggo/following{/other_user}",
      "gists_url": "https://api.github.com/users/minggo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minggo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minggo/subscriptions",
      "organizations_url": "https://api.github.com/users/minggo/orgs",
      "repos_url": "https://api.github.com/users/minggo/repos",
      "events_url": "https://api.github.com/users/minggo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minggo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-14T07:04:36Z",
    "updated_at": "2016-03-14T07:04:36Z",
    "body": "@rmsmith  Thanks.\n"
  }
]