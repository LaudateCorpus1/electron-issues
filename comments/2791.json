[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/140587778",
    "html_url": "https://github.com/electron/electron/issues/2791#issuecomment-140587778",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2791",
    "id": 140587778,
    "user": {
      "login": "hokein",
      "id": 2557445,
      "avatar_url": "https://avatars2.githubusercontent.com/u/2557445?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hokein",
      "html_url": "https://github.com/hokein",
      "followers_url": "https://api.github.com/users/hokein/followers",
      "following_url": "https://api.github.com/users/hokein/following{/other_user}",
      "gists_url": "https://api.github.com/users/hokein/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hokein/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hokein/subscriptions",
      "organizations_url": "https://api.github.com/users/hokein/orgs",
      "repos_url": "https://api.github.com/users/hokein/repos",
      "events_url": "https://api.github.com/users/hokein/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hokein/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-16T00:35:32Z",
    "updated_at": "2015-09-16T00:35:32Z",
    "body": "I can reproduce it with the following code:\n\n```\nvar app = require('app');\nvar BrowserWindow = require('browser-window');\nvar dialog = require('dialog');\nvar mainWindow = null;\nvar win = null;\n\n// Quit when all windows are closed.\napp.on('window-all-closed', function() {\n});\n\napp.on('ready', function() {\n  mainWindow = new BrowserWindow({\n    width: 800,\n    height: 600,\n    'auto-hide-menu-bar': true,\n    'use-content-size': true,\n  });\n  mainWindow.loadUrl('file://' + __dirname + '/index.html');\n  mainWindow.focus();\n  app.on('activate', function(event, hasVisibleWindows) {\n    if (!hasVisibleWindows) {\n      win = new BrowserWindow({\n        width: 800,\n        height: 600,\n      });\n      win.loadUrl('file://' + __dirname + '/index.html');\n    }\n  });\n});\n```\n\nThe crash stack trace:\n\n```\nTime Awake Since Boot: 400000 seconds\nTime Since Wake:       2100 seconds\n\nCrashed Thread:        0  CrBrowserMain  Dispatch queue: com.apple.main-thread\n\nException Type:        EXC_BAD_ACCESS (SIGSEGV)\nException Codes:       EXC_I386_GPFLT\n\nThread 0 Crashed:: CrBrowserMain  Dispatch queue: com.apple.main-thread\n0   Electron Framework              0x000000010ef3b2b0 -[BRYInspectableWebContentsView viewDidBecomeFirstResponder:] + 64\n1   com.apple.CoreFoundation        0x00007fff94f2b45c __CFNOTIFICATIONCENTER_IS_CALLING_OUT_TO_AN_OBSERVER__ + 12\n2   com.apple.CoreFoundation        0x00007fff94e1b634 _CFXNotificationPost + 3140\n3   com.apple.Foundation            0x00007fff953739d1 -[NSNotificationCenter postNotificationName:object:userInfo:] + 66\n4   libcontent.dylib                0x00000001121a7bcc 0x111f07000 + 2755532\n5   com.apple.AppKit                0x00007fff906276f5 -[NSWindow makeFirstResponder:] + 727\n6   libcontent.dylib                0x0000000112271747 0x111f07000 + 3581767\n7   Electron Framework              0x000000010ed692f0 atom::api::WebContents::Focus() + 48\n8   Electron Framework              0x000000010ed76719 base::internal::RunnableAdapter<void (atom::api::WebContents::*)()>::Run(atom::api::WebContents*) + 105\n9   Electron Framework              0x000000010ed766a9 base::internal::InvokeHelper<false, void, base::internal::RunnableAdapter<void (atom::api::WebContents::*)()>, base::internal::TypeList<atom::api::WebContents* const&> >::MakeItSo(base::internal::RunnableAdapter<void (atom::api::WebContents::*)()>, atom::api::WebContents* const&) + 41\n10  Electron Framework              0x000000010ed76675 base::internal::Invoker<base::IndexSequence<>, base::internal::BindState<base::internal::RunnableAdapter<void (atom::api::WebContents::*)()>, void (atom::api::WebContents*), base::internal::TypeList<> >, base::internal::TypeList<>, base::internal::InvokeHelper<false, void, base::internal::RunnableAdapter<void (atom::api::WebContents::*)()>, base::internal::TypeList<atom::api::WebContents* const&> >, void (atom::api::WebContents* const&)>::Run(base::internal::BindStateBase*, atom::api::WebContents* const&) + 69\n11  Electron Framework              0x000000010ed763d6 base::Callback<void (atom::api::WebContents*)>::Run(atom::api::WebContents* const&) const + 70\n12  Electron Framework              0x000000010ed75fc0 mate::internal::Invoker<mate::internal::IndicesHolder<0ul>, atom::api::WebContents*>::DispatchToCallback(base::Callback<void (atom::api::WebContents*)>) + 32\n13  Electron Framework              0x000000010ed75da6 mate::internal::Dispatcher<void (atom::api::WebContents*)>::DispatchToCallback(v8::FunctionCallbackInfo<v8::Value> const&) + 326\n14  libv8.dylib                     0x000000011022324f v8::internal::FunctionCallbackArguments::Call(void (*)(v8::FunctionCallbackInfo<v8::Value> const&)) + 159\n15  libv8.dylib                     0x000000011024c2a9 0x1101eb000 + 397993\n16  libv8.dylib                     0x000000011024ef8d 0x1101eb000 + 409485\n17  ???                             0x0000350ee5409b7b 0 + 58338092030843\n18  ???                             0x0000350ee5597b08 0 + 58338093660936\n19  ???                             0x0000350ee540a537 0 + 58338092033335\n20  ???                             0x0000350ee54345e3 0 + 58338092205539\n21  ???                             0x0000350ee55834b6 0 + 58338093577398\n22  ???                             0x0000350ee540a537 0 + 58338092033335\n23  ???                             0x0000350ee5535e72 0 + 58338093260402\n24  ???                             0x0000350ee55359e5 0 + 58338093259237\n25  ???                             0x0000350ee540a537 0 + 58338092033335\n26  ???                             0x0000350ee5597239 0 + 58338093658681\n27  ???                             0x0000350ee540a537 0 + 58338092033335\n28  ???                             0x0000350ee54345e3 0 + 58338092205539\n29  ???                             0x0000350ee5596ff2 0 + 58338093658098\n30  ???                             0x0000350ee540a537 0 + 58338092033335\n31  ???                             0x0000350ee54345e3 0 + 58338092205539\n32  ???                             0x0000350ee5596ebb 0 + 58338093657787\n33  ???                             0x0000350ee540a537 0 + 58338092033335\n34  ???                             0x0000350ee55b28b8 0 + 58338093770936\n35  ???                             0x0000350ee540a537 0 + 58338092033335\n36  ???                             0x0000350ee55b256c 0 + 58338093770092\n37  ???                             0x0000350ee5535916 0 + 58338093259030\n38  ???                             0x0000350ee55b2446 0 + 58338093769798\n39  ???                             0x0000350ee5535e72 0 + 58338093260402\n40  ???                             0x0000350ee55359e5 0 + 58338093259237\n41  ???                             0x0000350ee540a537 0 + 58338092033335\n42  ???                             0x0000350ee54318f9 0 + 58338092194041\n43  ???                             0x0000350ee54160a2 0 + 58338092081314\n44  libv8.dylib                     0x0000000110386ff5 0x1101eb000 + 1687541\n45  libv8.dylib                     0x000000011020a504 v8::Function::Call(v8::Local<v8::Context>, v8::Local<v8::Value>, int, v8::Local<v8::Value>*) + 276\n46  libnode.dylib                   0x000000010f8918e0 node::MakeCallback(node::Environment*, v8::Local<v8::Value>, v8::Local<v8::Function>, int, v8::Local<v8::Value>*) + 1200 (node.cc:1080)\n47  libnode.dylib                   0x000000010f891d3e node::MakeCallback(node::Environment*, v8::Local<v8::Object>, v8::Local<v8::String>, int, v8::Local<v8::Value>*) + 174 (node.cc:1130)\n48  libnode.dylib                   0x000000010f891db1 node::MakeCallback(node::Environment*, v8::Local<v8::Object>, char const*, int, v8::Local<v8::Value>*) + 97 (node.cc:1140)\n49  libnode.dylib                   0x000000010f891e61 node::MakeCallback(v8::Isolate*, v8::Local<v8::Object>, char const*, int, v8::Local<v8::Value>*) + 161 (node.cc:1154)\n50  Electron Framework              0x000000010ee361be mate::internal::CallEmitWithArgs(v8::Isolate*, v8::Local<v8::Object>, std::__1::vector<v8::Local<v8::Value>, std::__1::allocator<v8::Local<v8::Value> > >*) + 174\n51  Electron Framework              0x000000010ece8d8f v8::Local<v8::Value> mate::EmitEvent<base::BasicStringPiece<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, v8::Local<v8::Object>, bool>(v8::Isolate*, v8::Local<v8::Object>, base::BasicStringPiece<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > const&, v8::Local<v8::Object> const&, bool const&) + 591\n52  Electron Framework              0x000000010ece8a8a bool mate::EventEmitter::EmitWithEvent<bool>(base::BasicStringPiece<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > const&, v8::Local<v8::Object>, bool const&) + 186\n53  Electron Framework              0x000000010ece89a4 bool mate::EventEmitter::EmitWithSender<bool>(base::BasicStringPiece<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > const&, content::WebContents*, IPC::Message*, bool const&) + 148\n54  Electron Framework              0x000000010ece0bac bool mate::EventEmitter::Emit<bool>(base::BasicStringPiece<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > const&, bool const&) + 44\n55  Electron Framework              0x000000010ecde650 atom::api::App::OnActivate(bool) + 64\n56  Electron Framework              0x000000010edb573d atom::Browser::Activate(bool) + 125\n57  Electron Framework              0x000000010edbff5b -[AtomApplicationDelegate applicationShouldHandleReopen:hasVisibleWindows:] + 59\n58  com.apple.AppKit                0x00007fff909a0928 -[NSApplication(NSAppleEventHandling) _handleAEReopen:] + 357\n59  com.apple.AppKit                0x00007fff905aa385 -[NSApplication(NSAppleEventHandling) _handleCoreEvent:withReplyEvent:] + 244\n60  com.apple.Foundation            0x00007fff953a6748 -[NSAppleEventManager dispatchRawAppleEvent:withRawReply:handlerRefCon:] + 290\n61  com.apple.Foundation            0x00007fff953a65b9 _NSAppleEventManagerGenericHandler + 102\n62  com.apple.AE                    0x00007fff94b6f34c aeDispatchAppleEvent(AEDesc const*, AEDesc*, unsigned int, unsigned char*) + 531\n63  com.apple.AE                    0x00007fff94b6f0c9 dispatchEventAndSendReply(AEDesc const*, AEDesc*) + 31\n64  com.apple.AE                    0x00007fff94b6efd3 aeProcessAppleEvent + 295\n65  com.apple.HIToolbox             0x00007fff8fd2dc6e AEProcessAppleEvent + 56\n66  com.apple.AppKit                0x00007fff905a3da2 _DPSNextEvent + 2249\n67  com.apple.AppKit                0x00007fff905a2e58 -[NSApplication nextEventMatchingMask:untilDate:inMode:dequeue:] + 346\n68  com.apple.AppKit                0x00007fff90598af3 -[NSApplication run] + 594\n69  libbase.dylib                   0x0000000110ac6cb1 0x110ac3000 + 15537\n70  libbase.dylib                   0x0000000110ac628c 0x110ac3000 + 12940\n71  libbase.dylib                   0x0000000110b14413 base::RunLoop::Run() + 99\n72  libcontent.dylib                0x0000000111f91f7b content::BrowserMainLoop::MainMessageLoopRun() + 155\n73  libcontent.dylib                0x0000000111f91eb5 content::BrowserMainLoop::RunMainMessageLoopParts() + 69\n74  libcontent.dylib                0x0000000111f943a2 0x111f07000 + 578466\n75  libcontent.dylib                0x0000000111f8e13f content::BrowserMain(content::MainFunctionParams const&) + 159\n76  libcontent.dylib                0x0000000111f0b5ec 0x111f07000 + 17900\n77  libcontent.dylib                0x0000000111f0ac46 content::ContentMain(content::ContentMainParams const&) + 54\n78  Electron Framework              0x000000010eccf528 AtomMain + 104\n79  com.github.electron             0x000000010ecc7f1d main + 109 (atom_main.cc:190)\n80  libdyld.dylib                   0x00007fff9040f5c9 start + 1\n```\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/140933714",
    "html_url": "https://github.com/electron/electron/issues/2791#issuecomment-140933714",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2791",
    "id": 140933714,
    "user": {
      "login": "smebberson",
      "id": 74628,
      "avatar_url": "https://avatars2.githubusercontent.com/u/74628?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/smebberson",
      "html_url": "https://github.com/smebberson",
      "followers_url": "https://api.github.com/users/smebberson/followers",
      "following_url": "https://api.github.com/users/smebberson/following{/other_user}",
      "gists_url": "https://api.github.com/users/smebberson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/smebberson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/smebberson/subscriptions",
      "organizations_url": "https://api.github.com/users/smebberson/orgs",
      "repos_url": "https://api.github.com/users/smebberson/repos",
      "events_url": "https://api.github.com/users/smebberson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/smebberson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-17T00:36:46Z",
    "updated_at": "2015-09-17T00:36:46Z",
    "body": "I've noticed this too. However, I'm not using the new activate event. I am trying to recreate the same window however, much like the code above. The first window creates fine, I close, when the second window is being created, it crashes.\n"
  }
]