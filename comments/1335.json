[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/87949440",
    "html_url": "https://github.com/electron/electron/issues/1335#issuecomment-87949440",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1335",
    "id": 87949440,
    "user": {
      "login": "thomasjo",
      "id": 3622,
      "avatar_url": "https://avatars0.githubusercontent.com/u/3622?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/thomasjo",
      "html_url": "https://github.com/thomasjo",
      "followers_url": "https://api.github.com/users/thomasjo/followers",
      "following_url": "https://api.github.com/users/thomasjo/following{/other_user}",
      "gists_url": "https://api.github.com/users/thomasjo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/thomasjo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/thomasjo/subscriptions",
      "organizations_url": "https://api.github.com/users/thomasjo/orgs",
      "repos_url": "https://api.github.com/users/thomasjo/repos",
      "events_url": "https://api.github.com/users/thomasjo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/thomasjo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-31T05:56:44Z",
    "updated_at": "2015-03-31T05:56:44Z",
    "body": "While nw.js does support it, it comes with some pretty hefty drawbacks. First of all it requires disabling GPU acceleration, and secondly it only works on OS X and Windows (based on their documentation).\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/88167511",
    "html_url": "https://github.com/electron/electron/issues/1335#issuecomment-88167511",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1335",
    "id": 88167511,
    "user": {
      "login": "CharlieHess",
      "id": 1865957,
      "avatar_url": "https://avatars2.githubusercontent.com/u/1865957?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CharlieHess",
      "html_url": "https://github.com/CharlieHess",
      "followers_url": "https://api.github.com/users/CharlieHess/followers",
      "following_url": "https://api.github.com/users/CharlieHess/following{/other_user}",
      "gists_url": "https://api.github.com/users/CharlieHess/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CharlieHess/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CharlieHess/subscriptions",
      "organizations_url": "https://api.github.com/users/CharlieHess/orgs",
      "repos_url": "https://api.github.com/users/CharlieHess/repos",
      "events_url": "https://api.github.com/users/CharlieHess/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CharlieHess/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-31T16:46:23Z",
    "updated_at": "2015-03-31T16:46:23Z",
    "body": "+1, this one's plaguing Slack too, since we display all of our notifications in a transparent window.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/99335023",
    "html_url": "https://github.com/electron/electron/issues/1335#issuecomment-99335023",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1335",
    "id": 99335023,
    "user": {
      "login": "YourCyborg",
      "id": 4079790,
      "avatar_url": "https://avatars2.githubusercontent.com/u/4079790?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/YourCyborg",
      "html_url": "https://github.com/YourCyborg",
      "followers_url": "https://api.github.com/users/YourCyborg/followers",
      "following_url": "https://api.github.com/users/YourCyborg/following{/other_user}",
      "gists_url": "https://api.github.com/users/YourCyborg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/YourCyborg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/YourCyborg/subscriptions",
      "organizations_url": "https://api.github.com/users/YourCyborg/orgs",
      "repos_url": "https://api.github.com/users/YourCyborg/repos",
      "events_url": "https://api.github.com/users/YourCyborg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/YourCyborg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-06T06:04:34Z",
    "updated_at": "2015-05-06T06:04:34Z",
    "body": "+1, this is critical for the project I'm working on.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/100379880",
    "html_url": "https://github.com/electron/electron/issues/1335#issuecomment-100379880",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1335",
    "id": 100379880,
    "user": {
      "login": "marcfowler",
      "id": 1171131,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1171131?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/marcfowler",
      "html_url": "https://github.com/marcfowler",
      "followers_url": "https://api.github.com/users/marcfowler/followers",
      "following_url": "https://api.github.com/users/marcfowler/following{/other_user}",
      "gists_url": "https://api.github.com/users/marcfowler/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/marcfowler/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/marcfowler/subscriptions",
      "organizations_url": "https://api.github.com/users/marcfowler/orgs",
      "repos_url": "https://api.github.com/users/marcfowler/repos",
      "events_url": "https://api.github.com/users/marcfowler/events{/privacy}",
      "received_events_url": "https://api.github.com/users/marcfowler/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-08T22:04:48Z",
    "updated_at": "2015-05-08T22:04:48Z",
    "body": "+1, this would be excellent.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/114309308",
    "html_url": "https://github.com/electron/electron/issues/1335#issuecomment-114309308",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1335",
    "id": 114309308,
    "user": {
      "login": "geelen",
      "id": 23264,
      "avatar_url": "https://avatars0.githubusercontent.com/u/23264?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/geelen",
      "html_url": "https://github.com/geelen",
      "followers_url": "https://api.github.com/users/geelen/followers",
      "following_url": "https://api.github.com/users/geelen/following{/other_user}",
      "gists_url": "https://api.github.com/users/geelen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/geelen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/geelen/subscriptions",
      "organizations_url": "https://api.github.com/users/geelen/orgs",
      "repos_url": "https://api.github.com/users/geelen/repos",
      "events_url": "https://api.github.com/users/geelen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/geelen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-23T00:07:02Z",
    "updated_at": "2015-06-23T00:07:02Z",
    "body": "Interested in hearing the latest on this. For my purposes, I'd love if we could set a transparent window to have _no_ click area. So you could have an always-on-top full screen overlay that didn't catch clicks.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/160979486",
    "html_url": "https://github.com/electron/electron/issues/1335#issuecomment-160979486",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1335",
    "id": 160979486,
    "user": {
      "login": "TimvdEijnden",
      "id": 951290,
      "avatar_url": "https://avatars2.githubusercontent.com/u/951290?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TimvdEijnden",
      "html_url": "https://github.com/TimvdEijnden",
      "followers_url": "https://api.github.com/users/TimvdEijnden/followers",
      "following_url": "https://api.github.com/users/TimvdEijnden/following{/other_user}",
      "gists_url": "https://api.github.com/users/TimvdEijnden/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TimvdEijnden/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TimvdEijnden/subscriptions",
      "organizations_url": "https://api.github.com/users/TimvdEijnden/orgs",
      "repos_url": "https://api.github.com/users/TimvdEijnden/repos",
      "events_url": "https://api.github.com/users/TimvdEijnden/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TimvdEijnden/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-01T14:09:43Z",
    "updated_at": "2015-12-01T14:09:43Z",
    "body": "I'm interested too, i'm building an app with a semi transparent window that's on top of other applications but mouseevents need to get through to the other applications.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/169703080",
    "html_url": "https://github.com/electron/electron/issues/1335#issuecomment-169703080",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1335",
    "id": 169703080,
    "user": {
      "login": "yohaia",
      "id": 9316123,
      "avatar_url": "https://avatars1.githubusercontent.com/u/9316123?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yohaia",
      "html_url": "https://github.com/yohaia",
      "followers_url": "https://api.github.com/users/yohaia/followers",
      "following_url": "https://api.github.com/users/yohaia/following{/other_user}",
      "gists_url": "https://api.github.com/users/yohaia/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yohaia/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yohaia/subscriptions",
      "organizations_url": "https://api.github.com/users/yohaia/orgs",
      "repos_url": "https://api.github.com/users/yohaia/repos",
      "events_url": "https://api.github.com/users/yohaia/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yohaia/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-07T15:49:53Z",
    "updated_at": "2016-01-07T15:49:53Z",
    "body": "+1\n\nAny news about it?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/169963166",
    "html_url": "https://github.com/electron/electron/issues/1335#issuecomment-169963166",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1335",
    "id": 169963166,
    "user": {
      "login": "lukeapage",
      "id": 309321,
      "avatar_url": "https://avatars2.githubusercontent.com/u/309321?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lukeapage",
      "html_url": "https://github.com/lukeapage",
      "followers_url": "https://api.github.com/users/lukeapage/followers",
      "following_url": "https://api.github.com/users/lukeapage/following{/other_user}",
      "gists_url": "https://api.github.com/users/lukeapage/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lukeapage/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lukeapage/subscriptions",
      "organizations_url": "https://api.github.com/users/lukeapage/orgs",
      "repos_url": "https://api.github.com/users/lukeapage/repos",
      "events_url": "https://api.github.com/users/lukeapage/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lukeapage/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-08T10:55:12Z",
    "updated_at": "2016-01-08T10:55:12Z",
    "body": "the linked chromium bug is marked wont-fix\nhttps://code.google.com/p/chromium/issues/detail?id=387234\n\nthe last comment is:\n\n> #11 NekR.Fab...@gmail.com\n> You know, just btw, people in Atom team can do it by themselves if their users need it, right?\n\nso nothing is currently going to happen until someone on the atom team decides to do it or persuades the chrome team it is worth putting on their backlog (and they said it was low priority).\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/171502185",
    "html_url": "https://github.com/electron/electron/issues/1335#issuecomment-171502185",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1335",
    "id": 171502185,
    "user": {
      "login": "molster",
      "id": 9122700,
      "avatar_url": "https://avatars2.githubusercontent.com/u/9122700?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/molster",
      "html_url": "https://github.com/molster",
      "followers_url": "https://api.github.com/users/molster/followers",
      "following_url": "https://api.github.com/users/molster/following{/other_user}",
      "gists_url": "https://api.github.com/users/molster/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/molster/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/molster/subscriptions",
      "organizations_url": "https://api.github.com/users/molster/orgs",
      "repos_url": "https://api.github.com/users/molster/repos",
      "events_url": "https://api.github.com/users/molster/events{/privacy}",
      "received_events_url": "https://api.github.com/users/molster/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-14T02:09:34Z",
    "updated_at": "2016-01-14T02:09:34Z",
    "body": "Just ran into this today, It has put a -massive- issues into my plans of using a new window has an overlay. (in fact, it is now impossible)\n\nI would love a fix for this!\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/195714388",
    "html_url": "https://github.com/electron/electron/issues/1335#issuecomment-195714388",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1335",
    "id": 195714388,
    "user": {
      "login": "devployment",
      "id": 7137845,
      "avatar_url": "https://avatars0.githubusercontent.com/u/7137845?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/devployment",
      "html_url": "https://github.com/devployment",
      "followers_url": "https://api.github.com/users/devployment/followers",
      "following_url": "https://api.github.com/users/devployment/following{/other_user}",
      "gists_url": "https://api.github.com/users/devployment/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/devployment/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/devployment/subscriptions",
      "organizations_url": "https://api.github.com/users/devployment/orgs",
      "repos_url": "https://api.github.com/users/devployment/repos",
      "events_url": "https://api.github.com/users/devployment/events{/privacy}",
      "received_events_url": "https://api.github.com/users/devployment/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-12T10:51:04Z",
    "updated_at": "2016-03-12T10:51:04Z",
    "body": "Is there any work in progress for this? Will there be a chance for the Electron team to make this possible without being added to Chromium?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/205101304",
    "html_url": "https://github.com/electron/electron/issues/1335#issuecomment-205101304",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1335",
    "id": 205101304,
    "user": {
      "login": "stanier",
      "id": 8770519,
      "avatar_url": "https://avatars2.githubusercontent.com/u/8770519?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stanier",
      "html_url": "https://github.com/stanier",
      "followers_url": "https://api.github.com/users/stanier/followers",
      "following_url": "https://api.github.com/users/stanier/following{/other_user}",
      "gists_url": "https://api.github.com/users/stanier/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stanier/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stanier/subscriptions",
      "organizations_url": "https://api.github.com/users/stanier/orgs",
      "repos_url": "https://api.github.com/users/stanier/repos",
      "events_url": "https://api.github.com/users/stanier/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stanier/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-04T01:44:18Z",
    "updated_at": "2016-04-04T01:44:18Z",
    "body": "+1\n\nAssuming this won't be resolved through the Chromium code, is there a plausible way to have the application listen for a click event and then trigger the proper counterpart in GTK or similar?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/205158619",
    "html_url": "https://github.com/electron/electron/issues/1335#issuecomment-205158619",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1335",
    "id": 205158619,
    "user": {
      "login": "kutu",
      "id": 228802,
      "avatar_url": "https://avatars1.githubusercontent.com/u/228802?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kutu",
      "html_url": "https://github.com/kutu",
      "followers_url": "https://api.github.com/users/kutu/followers",
      "following_url": "https://api.github.com/users/kutu/following{/other_user}",
      "gists_url": "https://api.github.com/users/kutu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kutu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kutu/subscriptions",
      "organizations_url": "https://api.github.com/users/kutu/orgs",
      "repos_url": "https://api.github.com/users/kutu/repos",
      "events_url": "https://api.github.com/users/kutu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kutu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-04T06:39:23Z",
    "updated_at": "2016-04-04T06:39:35Z",
    "body": "i use ahkscript\n\n``` ahk\n#c::\n    WinSet, ExStyle, ^0x20, A\n    WinSet, Transparent, 255, A\n    return\n```\n\npress Win+C on active window, and its click-through now\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/222317178",
    "html_url": "https://github.com/electron/electron/issues/1335#issuecomment-222317178",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1335",
    "id": 222317178,
    "user": {
      "login": "xeoneux",
      "id": 3099626,
      "avatar_url": "https://avatars0.githubusercontent.com/u/3099626?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/xeoneux",
      "html_url": "https://github.com/xeoneux",
      "followers_url": "https://api.github.com/users/xeoneux/followers",
      "following_url": "https://api.github.com/users/xeoneux/following{/other_user}",
      "gists_url": "https://api.github.com/users/xeoneux/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/xeoneux/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/xeoneux/subscriptions",
      "organizations_url": "https://api.github.com/users/xeoneux/orgs",
      "repos_url": "https://api.github.com/users/xeoneux/repos",
      "events_url": "https://api.github.com/users/xeoneux/events{/privacy}",
      "received_events_url": "https://api.github.com/users/xeoneux/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-28T16:32:35Z",
    "updated_at": "2016-05-28T16:32:35Z",
    "body": "@zcbenz Any update on this? 😄 \n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/225171737",
    "html_url": "https://github.com/electron/electron/issues/1335#issuecomment-225171737",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1335",
    "id": 225171737,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2016-06-10T12:42:21Z",
    "updated_at": "2016-06-10T12:42:21Z",
    "body": "To people watching this issue: if you simply want to make the whole window click-though, you can use the new [win.setIgnoreMouseEvents](http://electron.atom.io/docs/api/browser-window/#winsetignoremouseeventsignore) API introduced in v1.2.2.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/225178859",
    "html_url": "https://github.com/electron/electron/issues/1335#issuecomment-225178859",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1335",
    "id": 225178859,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2016-06-10T13:15:45Z",
    "updated_at": "2016-06-10T13:15:45Z",
    "body": "Also on making specified regions transparent, I have come up with some ideas on the implementation (but do not assume it would be done in near future):\n\nFor Linux, it is actually very easy by using the `XShapeCombineRectangles` API, the implementation of `SetIgnoreMouseEvents` is just setting only a region of (0, 0, 1, 1) to accept mouse events.\n\nFor Windows, it is easy to set the shape of window, but there is no API to control which regions can accept mouse events.\n\nFor OS X, either setting window shape or setting click-though regions is impossible if you don't have control to the rendering code.\n\nAnd since Chromium does complex hardware acceleration, it becomes super hard to implement custom click-through regions. NW.js does it by disabling hardware acceleration, and patching the rendering code, this is an approach that I definitely don't want to take.\n\nMy idea for the implementation on OS X/Windows is, we just make the whole window click-through, and then create a transparent window as child window, and use it to capture all mouse events. Since we have full control of the child window, we can set it to the shape of the regions that users do not want to be click-though, and then send all mouse and keyboard events received in the child window to the parent window.\n\nIn this way we don't have to patch Chromium, so it is easy to maintain and hardware acceleration works. The downside is we have to very carefully redirect mouse and keyboard events, to make the window behave as if it there is no child window.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/228901908",
    "html_url": "https://github.com/electron/electron/issues/1335#issuecomment-228901908",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1335",
    "id": 228901908,
    "user": {
      "login": "StickyCube",
      "id": 4573741,
      "avatar_url": "https://avatars0.githubusercontent.com/u/4573741?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/StickyCube",
      "html_url": "https://github.com/StickyCube",
      "followers_url": "https://api.github.com/users/StickyCube/followers",
      "following_url": "https://api.github.com/users/StickyCube/following{/other_user}",
      "gists_url": "https://api.github.com/users/StickyCube/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/StickyCube/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/StickyCube/subscriptions",
      "organizations_url": "https://api.github.com/users/StickyCube/orgs",
      "repos_url": "https://api.github.com/users/StickyCube/repos",
      "events_url": "https://api.github.com/users/StickyCube/events{/privacy}",
      "received_events_url": "https://api.github.com/users/StickyCube/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-27T23:03:16Z",
    "updated_at": "2016-06-27T23:03:16Z",
    "body": "If, like me, your use case for this feature is fairly simple [this gist](https://gist.github.com/StickyCube/ed79421bc53cba38f5b74b060d3f15fa) might be of interest. It is a basic implementation of what @zcbenz is describing, creating one clickable area which redirects mouse events to the parent.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/270754279",
    "html_url": "https://github.com/electron/electron/issues/1335#issuecomment-270754279",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1335",
    "id": 270754279,
    "user": {
      "login": "ButzYung",
      "id": 3256084,
      "avatar_url": "https://avatars1.githubusercontent.com/u/3256084?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ButzYung",
      "html_url": "https://github.com/ButzYung",
      "followers_url": "https://api.github.com/users/ButzYung/followers",
      "following_url": "https://api.github.com/users/ButzYung/following{/other_user}",
      "gists_url": "https://api.github.com/users/ButzYung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ButzYung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ButzYung/subscriptions",
      "organizations_url": "https://api.github.com/users/ButzYung/orgs",
      "repos_url": "https://api.github.com/users/ButzYung/repos",
      "events_url": "https://api.github.com/users/ButzYung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ButzYung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-05T20:52:58Z",
    "updated_at": "2017-01-05T20:52:58Z",
    "body": "During the development of my Windows gadget project which requires click-thru, I have unintentionally come up with a somewhat fancy but practical solution which works to define a clickcable area of truly arbitrary shape.\r\n\r\nIn the renderer process, use \"screen.getCursorScreenPoint()\" to keep tracking the cursor position, and then send the coordinates to the main process regularly. On the main process, use \"webContents.capturePage()\" to capture the image of that exact 1x1 pixel on the renderer window. Since it's just 1 pixel, the performance cost is ignorable, and then you can define whether that pixel is clickable or not by looking at the opacity value. This way, you can practically define a truly pixel-correct clickable area. The only issue left here is a function to detect the mousedown state regardless of the cursor position."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/279930258",
    "html_url": "https://github.com/electron/electron/issues/1335#issuecomment-279930258",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1335",
    "id": 279930258,
    "user": {
      "login": "amhoho",
      "id": 24509574,
      "avatar_url": "https://avatars2.githubusercontent.com/u/24509574?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amhoho",
      "html_url": "https://github.com/amhoho",
      "followers_url": "https://api.github.com/users/amhoho/followers",
      "following_url": "https://api.github.com/users/amhoho/following{/other_user}",
      "gists_url": "https://api.github.com/users/amhoho/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amhoho/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amhoho/subscriptions",
      "organizations_url": "https://api.github.com/users/amhoho/orgs",
      "repos_url": "https://api.github.com/users/amhoho/repos",
      "events_url": "https://api.github.com/users/amhoho/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amhoho/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-15T06:43:33Z",
    "updated_at": "2017-02-15T06:43:33Z",
    "body": "Electron click through transparency example\r\nhttps://gist.github.com/StickyCube/ed79421bc53cba38f5b74b060d3f15fa"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/289494987",
    "html_url": "https://github.com/electron/electron/issues/1335#issuecomment-289494987",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1335",
    "id": 289494987,
    "user": {
      "login": "varavut",
      "id": 1370448,
      "avatar_url": "https://avatars2.githubusercontent.com/u/1370448?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/varavut",
      "html_url": "https://github.com/varavut",
      "followers_url": "https://api.github.com/users/varavut/followers",
      "following_url": "https://api.github.com/users/varavut/following{/other_user}",
      "gists_url": "https://api.github.com/users/varavut/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/varavut/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/varavut/subscriptions",
      "organizations_url": "https://api.github.com/users/varavut/orgs",
      "repos_url": "https://api.github.com/users/varavut/repos",
      "events_url": "https://api.github.com/users/varavut/events{/privacy}",
      "received_events_url": "https://api.github.com/users/varavut/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-27T15:46:19Z",
    "updated_at": "2017-03-27T15:46:19Z",
    "body": "@ButzYung Could you please tell me that how can I get opacity value from NativeImage (webContents.capturePage() return NativeImage)? Thanks."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/289676808",
    "html_url": "https://github.com/electron/electron/issues/1335#issuecomment-289676808",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1335",
    "id": 289676808,
    "user": {
      "login": "ButzYung",
      "id": 3256084,
      "avatar_url": "https://avatars1.githubusercontent.com/u/3256084?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ButzYung",
      "html_url": "https://github.com/ButzYung",
      "followers_url": "https://api.github.com/users/ButzYung/followers",
      "following_url": "https://api.github.com/users/ButzYung/following{/other_user}",
      "gists_url": "https://api.github.com/users/ButzYung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ButzYung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ButzYung/subscriptions",
      "organizations_url": "https://api.github.com/users/ButzYung/orgs",
      "repos_url": "https://api.github.com/users/ButzYung/repos",
      "events_url": "https://api.github.com/users/ButzYung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ButzYung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-28T06:33:33Z",
    "updated_at": "2017-03-28T06:33:33Z",
    "body": "@varavut Capturing a 1x1 image as an example, it would be something like this.\r\n\r\n  ```\r\nwebContents.capturePage({x:0,y:0,width:1,height:1}, function(image) {\r\n    var buffer = image.getBitmap()\r\n\r\n    // send the data back to renderer for processing, with buffer[3] being the alpha channel\r\n    webContents.send('capturePage', 'RESULT|' + [buffer[0],buffer[1],buffer[2],buffer[3]])\r\n  });\r\n```"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/298886798",
    "html_url": "https://github.com/electron/electron/issues/1335#issuecomment-298886798",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1335",
    "id": 298886798,
    "user": {
      "login": "cecilpeng",
      "id": 3832621,
      "avatar_url": "https://avatars0.githubusercontent.com/u/3832621?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cecilpeng",
      "html_url": "https://github.com/cecilpeng",
      "followers_url": "https://api.github.com/users/cecilpeng/followers",
      "following_url": "https://api.github.com/users/cecilpeng/following{/other_user}",
      "gists_url": "https://api.github.com/users/cecilpeng/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cecilpeng/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cecilpeng/subscriptions",
      "organizations_url": "https://api.github.com/users/cecilpeng/orgs",
      "repos_url": "https://api.github.com/users/cecilpeng/repos",
      "events_url": "https://api.github.com/users/cecilpeng/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cecilpeng/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-03T11:35:39Z",
    "updated_at": "2017-05-03T11:35:39Z",
    "body": "@ButzYung Thanks for your solution. I tried it, the key is the interval of tracking. 100ms for my computer, looks well. If I used `webContents.capturePage`, CPU cost high. I would define the area which is click-through, just check the point if in the area."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/299109829",
    "html_url": "https://github.com/electron/electron/issues/1335#issuecomment-299109829",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1335",
    "id": 299109829,
    "user": {
      "login": "ButzYung",
      "id": 3256084,
      "avatar_url": "https://avatars1.githubusercontent.com/u/3256084?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ButzYung",
      "html_url": "https://github.com/ButzYung",
      "followers_url": "https://api.github.com/users/ButzYung/followers",
      "following_url": "https://api.github.com/users/ButzYung/following{/other_user}",
      "gists_url": "https://api.github.com/users/ButzYung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ButzYung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ButzYung/subscriptions",
      "organizations_url": "https://api.github.com/users/ButzYung/orgs",
      "repos_url": "https://api.github.com/users/ButzYung/repos",
      "events_url": "https://api.github.com/users/ButzYung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ButzYung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-04T06:54:22Z",
    "updated_at": "2017-05-04T06:54:22Z",
    "body": "@cecilpeng In my case I give a 200ms delay after the current webContents.capturePage has finished, instead of doing another capture immediately. That's roughly 4-5 captures/second, enough for the purpose of checking transparency, and the CPU usage is ignorable."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/299111453",
    "html_url": "https://github.com/electron/electron/issues/1335#issuecomment-299111453",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1335",
    "id": 299111453,
    "user": {
      "login": "cecilpeng",
      "id": 3832621,
      "avatar_url": "https://avatars0.githubusercontent.com/u/3832621?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cecilpeng",
      "html_url": "https://github.com/cecilpeng",
      "followers_url": "https://api.github.com/users/cecilpeng/followers",
      "following_url": "https://api.github.com/users/cecilpeng/following{/other_user}",
      "gists_url": "https://api.github.com/users/cecilpeng/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cecilpeng/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cecilpeng/subscriptions",
      "organizations_url": "https://api.github.com/users/cecilpeng/orgs",
      "repos_url": "https://api.github.com/users/cecilpeng/repos",
      "events_url": "https://api.github.com/users/cecilpeng/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cecilpeng/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-04T07:06:39Z",
    "updated_at": "2017-05-04T07:06:39Z",
    "body": "@ButzYung yes, it is better to do another capture after last has finished. I'm still worried about the timeout solution, it's not smart enough. We can't know what happens on the users' computer. I recommend that javascript is a good languague to observe instead of inspect."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/305675626",
    "html_url": "https://github.com/electron/electron/issues/1335#issuecomment-305675626",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1335",
    "id": 305675626,
    "user": {
      "login": "sancarn",
      "id": 7938900,
      "avatar_url": "https://avatars2.githubusercontent.com/u/7938900?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sancarn",
      "html_url": "https://github.com/sancarn",
      "followers_url": "https://api.github.com/users/sancarn/followers",
      "following_url": "https://api.github.com/users/sancarn/following{/other_user}",
      "gists_url": "https://api.github.com/users/sancarn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sancarn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sancarn/subscriptions",
      "organizations_url": "https://api.github.com/users/sancarn/orgs",
      "repos_url": "https://api.github.com/users/sancarn/repos",
      "events_url": "https://api.github.com/users/sancarn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sancarn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-02T02:54:15Z",
    "updated_at": "2017-06-02T02:54:31Z",
    "body": "I'm very much a HTML noob but is it not possible to simply:\r\n\r\n1. setup a 'onMouseLeave' event on HTML elements which you want to be clickable.\r\n--> this mouse leave event executes win.setIgnoreEvents(true)\r\n2. setup a 'onMouseEnter' event on HTML elements which you want to be clickable.\r\n--> this mouse enter event executes win.setIgnoreEvents(false)\r\n\r\nDue to my lack of HTML knowledge there may be an issue with this in certain scenarios... But in my head it seems to be the, currently, ideal workaround. Except for the extra setup time required of course?"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/305723767",
    "html_url": "https://github.com/electron/electron/issues/1335#issuecomment-305723767",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1335",
    "id": 305723767,
    "user": {
      "login": "ButzYung",
      "id": 3256084,
      "avatar_url": "https://avatars1.githubusercontent.com/u/3256084?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ButzYung",
      "html_url": "https://github.com/ButzYung",
      "followers_url": "https://api.github.com/users/ButzYung/followers",
      "following_url": "https://api.github.com/users/ButzYung/following{/other_user}",
      "gists_url": "https://api.github.com/users/ButzYung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ButzYung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ButzYung/subscriptions",
      "organizations_url": "https://api.github.com/users/ButzYung/orgs",
      "repos_url": "https://api.github.com/users/ButzYung/repos",
      "events_url": "https://api.github.com/users/ButzYung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ButzYung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-02T08:27:28Z",
    "updated_at": "2017-06-02T08:27:28Z",
    "body": "@sancarn The problem with your approach is that when .setIgnoreMouseEvents is set to true in step 1, there is no more mouse event and thus the usual HTML-driven \"onMouseOver\" event in step 2 will not fire anymore.\r\n\r\nBut hey, now that I think about it, if your approach is combined with my \"capturePage\" approach, which can detect mouseover on/off by comparing opacity without the usual HTML events, it may produce interesting results. I have actually tried, and guess what, it works lol. Now, you can have a truly pixel-correct clickable area."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/305756649",
    "html_url": "https://github.com/electron/electron/issues/1335#issuecomment-305756649",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1335",
    "id": 305756649,
    "user": {
      "login": "sancarn",
      "id": 7938900,
      "avatar_url": "https://avatars2.githubusercontent.com/u/7938900?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sancarn",
      "html_url": "https://github.com/sancarn",
      "followers_url": "https://api.github.com/users/sancarn/followers",
      "following_url": "https://api.github.com/users/sancarn/following{/other_user}",
      "gists_url": "https://api.github.com/users/sancarn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sancarn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sancarn/subscriptions",
      "organizations_url": "https://api.github.com/users/sancarn/orgs",
      "repos_url": "https://api.github.com/users/sancarn/repos",
      "events_url": "https://api.github.com/users/sancarn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sancarn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-02T11:02:41Z",
    "updated_at": "2017-06-02T11:03:35Z",
    "body": "Lol riiight. Hilarious that I didn't see that as a flaw xD\r\n\r\nIndeed merging the two approaches is also slightly less heavy which is nice."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/305762969",
    "html_url": "https://github.com/electron/electron/issues/1335#issuecomment-305762969",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1335",
    "id": 305762969,
    "user": {
      "login": "sancarn",
      "id": 7938900,
      "avatar_url": "https://avatars2.githubusercontent.com/u/7938900?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sancarn",
      "html_url": "https://github.com/sancarn",
      "followers_url": "https://api.github.com/users/sancarn/followers",
      "following_url": "https://api.github.com/users/sancarn/following{/other_user}",
      "gists_url": "https://api.github.com/users/sancarn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sancarn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sancarn/subscriptions",
      "organizations_url": "https://api.github.com/users/sancarn/orgs",
      "repos_url": "https://api.github.com/users/sancarn/repos",
      "events_url": "https://api.github.com/users/sancarn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sancarn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-02T11:39:26Z",
    "updated_at": "2017-06-02T11:39:26Z",
    "body": "When it comes to getting the pixel, I haven't tested this but on Windows it may be easier to use [hookWindowMessages()](https://github.com/electron/electron/blob/master/docs/api/browser-window.md#winhookwindowmessagemessage-callback-windows) with message [WM_MOUSEMOVE](https://wiki.winehq.org/List_Of_Windows_Messages) = 512."
  }
]