[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/85535247",
    "html_url": "https://github.com/electron/electron/issues/1289#issuecomment-85535247",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1289",
    "id": 85535247,
    "user": {
      "login": "deepak1556",
      "id": 964386,
      "avatar_url": "https://avatars2.githubusercontent.com/u/964386?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/deepak1556",
      "html_url": "https://github.com/deepak1556",
      "followers_url": "https://api.github.com/users/deepak1556/followers",
      "following_url": "https://api.github.com/users/deepak1556/following{/other_user}",
      "gists_url": "https://api.github.com/users/deepak1556/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/deepak1556/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/deepak1556/subscriptions",
      "organizations_url": "https://api.github.com/users/deepak1556/orgs",
      "repos_url": "https://api.github.com/users/deepak1556/repos",
      "events_url": "https://api.github.com/users/deepak1556/events{/privacy}",
      "received_events_url": "https://api.github.com/users/deepak1556/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-24T14:43:58Z",
    "updated_at": "2015-03-24T15:12:58Z",
    "body": "Sweet bug, thanks for finding it out. The problem is we bypassed require cache by generating two different id's for the same module. Require system works first by looking up module.paths and then module.filename is used if its a relative lookup https://github.com/iojs/io.js/blob/6fc5e953547bfbdf97bc380d4bfc471e3378fad9/lib/module.js#L202 . And the culprit was `module.paths.concat` which generated case sensitive drive letters on mingw.\n\ncode:\n\n```\nvar Module = require('module')\n\nvar path = require('path')\n\nvar filename = path.normalize(window.decodeURIComponent(__filename))\n\nvar dirname = path.dirname(filename)\n\nconsole.log(filename)\n\nconsole.log(module.paths.concat(Module._nodeModulePaths(dirname)))\n```\n\n**output on mingw :**\n\n``` bash\n[6876:0324/200528:INFO:CONSOLE(12)] \"F:\\github\\atom-shell-windows-bash-problem\\i\nndex.html\", source: file:///F:/github/atom-shell-windows-bash-problem/app.js (12\n)\n[6876:0324/200528:INFO:CONSOLE(14)] \"f:\\github\\atom-shell-windows-bash-problem\\n\node_modules\\atom-shell\\dist\\resources\\atom.asar\\renderer\\lib\\node_modules,f:\\git\nhub\\atom-shell-windows-bash-problem\\node_modules\\atom-shell\\dist\\resources\\atom.\nasar\\renderer\\node_modules,f:\\github\\atom-shell-windows-bash-problem\\node_module\ns\\atom-shell\\dist\\resources\\atom.asar\\node_modules,f:\\github\\atom-shell-windows-\nbash-problem\\node_modules\\atom-shell\\dist\\resources\\node_modules,f:\\github\\atom-\nshell-windows-bash-problem\\node_modules\\atom-shell\\dist\\node_modules,f:\\github\\a\ntom-shell-windows-bash-problem\\node_modules\\atom-shell\\node_modules,f:\\github\\at\nom-shell-windows-bash-problem\\node_modules,f:\\github\\node_modules,f:\\node_module\ns,F:\\github\\atom-shell-windows-bash-problem\\node_modules,F:\\github\\node_modules,\nF:\\node_modules,F:\\github\\atom-shell-windows-bash-problem\\node_modules,F:\\github\n\\node_modules,F:\\node_modules\", source: file:///F:/github/atom-shell-windows-bas\nh-problem/app.js (14)\n```\n\n**output on other shells (cmd, cygwin):** \n\n``` bash\n[11436:0324/200512:INFO:CONSOLE(12)] \"F:\\github\\atom-shell-windows-bash-problem\\\nindex.html\", source: file:///F:/github/atom-shell-windows-bash-problem/app.js (1\n2)\n[11436:0324/200512:INFO:CONSOLE(14)] \"F:\\github\\atom-shell-windows-bash-problem\\\nnode_modules\\atom-shell\\dist\\resources\\atom.asar\\renderer\\lib\\node_modules,F:\\gi\nthub\\atom-shell-windows-bash-problem\\node_modules\\atom-shell\\dist\\resources\\atom\n.asar\\renderer\\node_modules,F:\\github\\atom-shell-windows-bash-problem\\node_modul\nes\\atom-shell\\dist\\resources\\atom.asar\\node_modules,F:\\github\\atom-shell-windows\n-bash-problem\\node_modules\\atom-shell\\dist\\resources\\node_modules,F:\\github\\atom\n-shell-windows-bash-problem\\node_modules\\atom-shell\\dist\\node_modules,F:\\github\\\natom-shell-windows-bash-problem\\node_modules\\atom-shell\\node_modules,F:\\github\\a\ntom-shell-windows-bash-problem\\node_modules,F:\\github\\node_modules,F:\\node_modul\nes,F:\\github\\atom-shell-windows-bash-problem\\node_modules,F:\\github\\node_modules\n,F:\\node_modules,F:\\github\\atom-shell-windows-bash-problem\\node_modules,F:\\githu\nb\\node_modules,F:\\node_modules\", source: file:///F:/github/atom-shell-windows-ba\nsh-problem/app.js (14)\n```\n\n So we loaded `dep` from two different path ids, hence the reload. The workaround when you made everything relative worked because everything was loaded via module.filename , so no duplicate ids\n\n/cc @zcbenz \n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/85550252",
    "html_url": "https://github.com/electron/electron/issues/1289#issuecomment-85550252",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1289",
    "id": 85550252,
    "user": {
      "login": "deepak1556",
      "id": 964386,
      "avatar_url": "https://avatars2.githubusercontent.com/u/964386?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/deepak1556",
      "html_url": "https://github.com/deepak1556",
      "followers_url": "https://api.github.com/users/deepak1556/followers",
      "following_url": "https://api.github.com/users/deepak1556/following{/other_user}",
      "gists_url": "https://api.github.com/users/deepak1556/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/deepak1556/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/deepak1556/subscriptions",
      "organizations_url": "https://api.github.com/users/deepak1556/orgs",
      "repos_url": "https://api.github.com/users/deepak1556/repos",
      "events_url": "https://api.github.com/users/deepak1556/events{/privacy}",
      "received_events_url": "https://api.github.com/users/deepak1556/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-24T15:22:07Z",
    "updated_at": "2015-03-24T15:22:07Z",
    "body": "The solution i can think of is to do `Module._nodeModulePaths(global.__dirname).concat(module.paths)` instead of the other way around, would like to hear other suggestions.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/85867555",
    "html_url": "https://github.com/electron/electron/issues/1289#issuecomment-85867555",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1289",
    "id": 85867555,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2015-03-25T06:15:19Z",
    "updated_at": "2015-03-25T06:15:19Z",
    "body": "> The solution i can think of is to do Module._nodeModulePaths(global.__dirname).concat(module.paths) instead of the other way around, would like to hear other suggestions.\n\nThis will make calls like `require('app')` to prefer users' `app.js` instead of atom-shell's `app` API.\n\nAnd this behavior is actually expected in io.js/Node.js, there was a PR in Node (https://github.com/joyent/node/pull/6774) to solve this but not accepted, and in io.js they used to make driver letter lower case (https://github.com/iojs/io.js/commit/f6e574018090ed4d63596b8a3bb614f8f48b6267) to solve this, but then reverted at https://github.com/iojs/io.js/pull/100.\n\nSo even though it causes confusions, I think we had better keep the same behavior with io.js/Node.js.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/85874387",
    "html_url": "https://github.com/electron/electron/issues/1289#issuecomment-85874387",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1289",
    "id": 85874387,
    "user": {
      "login": "deepak1556",
      "id": 964386,
      "avatar_url": "https://avatars2.githubusercontent.com/u/964386?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/deepak1556",
      "html_url": "https://github.com/deepak1556",
      "followers_url": "https://api.github.com/users/deepak1556/followers",
      "following_url": "https://api.github.com/users/deepak1556/following{/other_user}",
      "gists_url": "https://api.github.com/users/deepak1556/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/deepak1556/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/deepak1556/subscriptions",
      "organizations_url": "https://api.github.com/users/deepak1556/orgs",
      "repos_url": "https://api.github.com/users/deepak1556/repos",
      "events_url": "https://api.github.com/users/deepak1556/events{/privacy}",
      "received_events_url": "https://api.github.com/users/deepak1556/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-25T06:34:00Z",
    "updated_at": "2015-03-25T06:34:00Z",
    "body": ":+1:\n"
  }
]