[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/63436452",
    "html_url": "https://github.com/electron/electron/issues/837#issuecomment-63436452",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/837",
    "id": 63436452,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2014-11-18T08:25:52Z",
    "updated_at": "2014-11-18T08:25:52Z",
    "body": "In Chromium there is no easy way to add new attribute to an existing element, usually it would require patching heavily both Chromium and blink's codebase, which we want to avoid. Maybe adding some API to incept http requests and modify headers of them would fit your case?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/63462973",
    "html_url": "https://github.com/electron/electron/issues/837#issuecomment-63462973",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/837",
    "id": 63462973,
    "user": {
      "login": "frankhale",
      "id": 190154,
      "avatar_url": "https://avatars2.githubusercontent.com/u/190154?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frankhale",
      "html_url": "https://github.com/frankhale",
      "followers_url": "https://api.github.com/users/frankhale/followers",
      "following_url": "https://api.github.com/users/frankhale/following{/other_user}",
      "gists_url": "https://api.github.com/users/frankhale/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frankhale/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frankhale/subscriptions",
      "organizations_url": "https://api.github.com/users/frankhale/orgs",
      "repos_url": "https://api.github.com/users/frankhale/repos",
      "events_url": "https://api.github.com/users/frankhale/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frankhale/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-18T12:27:36Z",
    "updated_at": "2014-11-18T12:27:36Z",
    "body": "Sure, however it's done really doesn't matter too much to me. Being able to inject the referrer header and having the iframe src use it would be very nice indeed! \n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/74760248",
    "html_url": "https://github.com/electron/electron/issues/837#issuecomment-74760248",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/837",
    "id": 74760248,
    "user": {
      "login": "frankhale",
      "id": 190154,
      "avatar_url": "https://avatars2.githubusercontent.com/u/190154?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frankhale",
      "html_url": "https://github.com/frankhale",
      "followers_url": "https://api.github.com/users/frankhale/followers",
      "following_url": "https://api.github.com/users/frankhale/following{/other_user}",
      "gists_url": "https://api.github.com/users/frankhale/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frankhale/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frankhale/subscriptions",
      "organizations_url": "https://api.github.com/users/frankhale/orgs",
      "repos_url": "https://api.github.com/users/frankhale/repos",
      "events_url": "https://api.github.com/users/frankhale/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frankhale/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-17T21:42:24Z",
    "updated_at": "2015-02-17T21:42:47Z",
    "body": "My use case was using the YouTube API which needs an iframe. I think the correct solution is to load a page into a webview which sets the httpreferrer and then inject code into webview to do whatever I need to do with the iframe to bootstrap the YouTube API. I'm going to close this as I think this is a perfectly reasonable way to accomplish what I need.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/121418851",
    "html_url": "https://github.com/electron/electron/issues/837#issuecomment-121418851",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/837",
    "id": 121418851,
    "user": {
      "login": "frankhale",
      "id": 190154,
      "avatar_url": "https://avatars2.githubusercontent.com/u/190154?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frankhale",
      "html_url": "https://github.com/frankhale",
      "followers_url": "https://api.github.com/users/frankhale/followers",
      "following_url": "https://api.github.com/users/frankhale/following{/other_user}",
      "gists_url": "https://api.github.com/users/frankhale/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frankhale/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frankhale/subscriptions",
      "organizations_url": "https://api.github.com/users/frankhale/orgs",
      "repos_url": "https://api.github.com/users/frankhale/repos",
      "events_url": "https://api.github.com/users/frankhale/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frankhale/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-14T22:57:33Z",
    "updated_at": "2015-07-14T23:05:54Z",
    "body": "Just a note on the last comment by me where I talk about using a webview to set the referrer and then load a HTML page with the requisite YouTube iframe API code. That doesn't work, the referrer will be blank for the iframe and the overridden http referrer on the webview will have no effect.\n\nI'm providing this information here so that anyone coming across it can easily reference the solution. I eventually want to get this put into libchromiumcontent upstream if there is a larger need by the community.\n\nI've created a patch to libchromiumcontent / Chromium to add a new switch to allow overriding the HTTP referrer for all requests. So this allows you to spoof the referrer for iframes as well as everything else. I needed this to get around VEVO videos on YouTube being blocked from embedding using the YouTube iframe API.\n\nThe following issue has the reference information for those that want to get this feature for themselves today: https://github.com/frankhale/toby/issues/45\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/258969950",
    "html_url": "https://github.com/electron/electron/issues/837#issuecomment-258969950",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/837",
    "id": 258969950,
    "user": {
      "login": "citkane",
      "id": 998947,
      "avatar_url": "https://avatars1.githubusercontent.com/u/998947?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/citkane",
      "html_url": "https://github.com/citkane",
      "followers_url": "https://api.github.com/users/citkane/followers",
      "following_url": "https://api.github.com/users/citkane/following{/other_user}",
      "gists_url": "https://api.github.com/users/citkane/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/citkane/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/citkane/subscriptions",
      "organizations_url": "https://api.github.com/users/citkane/orgs",
      "repos_url": "https://api.github.com/users/citkane/repos",
      "events_url": "https://api.github.com/users/citkane/events{/privacy}",
      "received_events_url": "https://api.github.com/users/citkane/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-07T21:34:40Z",
    "updated_at": "2016-11-07T21:34:40Z",
    "body": "I have also been struggling with the issue of using the YouTube iframe API in a webview and setting httpReferrer for playback of restricted videos in my Electron App. @frankhale 's various insights I found have been helpful, but I do not want to use a patched version of Electron or override the referrer for all requests\n\nFor posterity, I am posting my alternative workaround on this closed topic in case anybody else faces the problem.\n\nBasically, I have abandoned using the Youtube API altogether and have used webview wrappers to access the html5 video object directly. The code logic looks something like this:\n\nHTML:\n\n``` html\n<div id='youtube-wrap'>\n    <webview style=\"width:100%; height:100%;\" id=\"youtube\" httpReferrer=\"http://youtube.com\" src=\"https://www.youtube.com/embed/ru0K8uYEZWw?autoplay=1&controls=0&color=white&disablekb=1&modestbranding=1&rel=0&showinfo=0\" nodeintegration preload=\"./youtube.js\"></webview>\n</div>\n<div onclick=\"play()\">play</div>\n<div onclick=\"pause()\">pause</div>\n<div onclick=\"fullscreen()\">fullscreen</div>\n```\n\nCSS:\nThe reason for wrapping the webview will be clear when you consider fullscreen functionality.\n\n``` css\n#youtube-wrap{\n    width:400px;\n   height:300px;\n}\n```\n\nJS logic for the main window:\n\n``` javascript\nconst {ipcRenderer} = require('electron');\nvar webView;\nvar ready = false;\nwindow.addEventListener(\"load\",function(){  \n    webView = document.getElementById('youtube');                               \n    webView.addEventListener('dom-ready', function(e) {\n        //optionally open a dev console for the webview\n        webView.openDevTools();\n    })\n    webView.addEventListener('ipc-message',function(event){\n        if(event.channel === 'media'){\n            if(event.args[0]==='vidready'){\n                ready=true;\n            }\n        };\n    });\n})\nfunction play(){\n    if(ready){\n        webView.send('media','play');\n    }\n}\nfunction pause(){\n    if(ready){\n        webView.send('media','pause');\n    }\n}\nfunction fullscreen(){\n    //this allows the webview to escape the confines of it's wrapper to go fullscreen, while the youtube logic inside the webview is set to 100% width and 100% height - voila! a fullscreen implementation.\n    document.getElementById(\"youtube\").webkitRequestFullscreen();\n}\n```\n\nJS logic for the rendered (webview) window:\nThis is injected into the webview in html, ie. youtube.js\n\n``` javascript\nconst {ipcRenderer} = require('electron');\nvar video;\nwindow.addEventListener(\"load\",function(){  \n    window.$ = window.jQuery = require('jquery');\n    ipcRenderer.sendToHost('media','vidready'); \n    video = $('video')[0];\n        //we set autoplay to true to force loading of video - now pause.\n        video.pause();\n    ipcRenderer.on('media',function(send,mess){\n        if(mess === 'pause'){\n            video.pause();\n        }\n        if(mess === 'play'){            \n            video.play();\n        }\n    });\n});\n```\n\nYou now have a two way dialogue between the main window and the embedded video, which makes it relatively easy to write video control functions to suite the purpose of your app using HTML5 specifications. You can also view restricted content because the httpReferrer in the HTML webview declaration holds true.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/258974712",
    "html_url": "https://github.com/electron/electron/issues/837#issuecomment-258974712",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/837",
    "id": 258974712,
    "user": {
      "login": "frankhale",
      "id": 190154,
      "avatar_url": "https://avatars2.githubusercontent.com/u/190154?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frankhale",
      "html_url": "https://github.com/frankhale",
      "followers_url": "https://api.github.com/users/frankhale/followers",
      "following_url": "https://api.github.com/users/frankhale/following{/other_user}",
      "gists_url": "https://api.github.com/users/frankhale/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frankhale/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frankhale/subscriptions",
      "organizations_url": "https://api.github.com/users/frankhale/orgs",
      "repos_url": "https://api.github.com/users/frankhale/repos",
      "events_url": "https://api.github.com/users/frankhale/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frankhale/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-07T21:52:44Z",
    "updated_at": "2016-11-07T21:53:35Z",
    "body": "I was messing around with this the other day and came up with this. This will allow you to set the HTTP Referrer for each request.\n\nIn your main.js do this:\n\n```\nconst { session } = require('electron');\n```\n\n``` javascript\nsession.defaultSession.webRequest.onBeforeSendHeaders(['https://*.youtube.com/*'], (details, callback) => {\n    details.requestHeaders[\"Referer\"] = \"https://youtube.com\";\n    callback({cancel: false, requestHeaders: details.requestHeaders});\n  });\n```\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/258990340",
    "html_url": "https://github.com/electron/electron/issues/837#issuecomment-258990340",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/837",
    "id": 258990340,
    "user": {
      "login": "frankhale",
      "id": 190154,
      "avatar_url": "https://avatars2.githubusercontent.com/u/190154?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frankhale",
      "html_url": "https://github.com/frankhale",
      "followers_url": "https://api.github.com/users/frankhale/followers",
      "following_url": "https://api.github.com/users/frankhale/following{/other_user}",
      "gists_url": "https://api.github.com/users/frankhale/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frankhale/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frankhale/subscriptions",
      "organizations_url": "https://api.github.com/users/frankhale/orgs",
      "repos_url": "https://api.github.com/users/frankhale/repos",
      "events_url": "https://api.github.com/users/frankhale/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frankhale/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-07T22:56:09Z",
    "updated_at": "2016-11-07T22:56:09Z",
    "body": "My previous talk about patching Electron is no longer necessary, see my latest comment with example of overriding the headers to set the referrer for requests.\n"
  }
]