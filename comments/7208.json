[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/247044079",
    "html_url": "https://github.com/electron/electron/issues/7208#issuecomment-247044079",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7208",
    "id": 247044079,
    "user": {
      "login": "alexandrudima",
      "id": 5047891,
      "avatar_url": "https://avatars0.githubusercontent.com/u/5047891?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexandrudima",
      "html_url": "https://github.com/alexandrudima",
      "followers_url": "https://api.github.com/users/alexandrudima/followers",
      "following_url": "https://api.github.com/users/alexandrudima/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexandrudima/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexandrudima/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexandrudima/subscriptions",
      "organizations_url": "https://api.github.com/users/alexandrudima/orgs",
      "repos_url": "https://api.github.com/users/alexandrudima/repos",
      "events_url": "https://api.github.com/users/alexandrudima/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexandrudima/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-14T15:06:25Z",
    "updated_at": "2016-09-14T15:06:25Z",
    "body": "## Electron 0.36.11 (process.versions.chrome = 47.0.2526.110)\n\n**Does not reproduce**\n![image](https://cloud.githubusercontent.com/assets/5047891/18517714/8154508e-7a9d-11e6-8afd-32d8b653c0a3.png)\n\nI can try \"bisecting\" releases to see where the issue could have been introduced\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/247048916",
    "html_url": "https://github.com/electron/electron/issues/7208#issuecomment-247048916",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7208",
    "id": 247048916,
    "user": {
      "login": "alexandrudima",
      "id": 5047891,
      "avatar_url": "https://avatars0.githubusercontent.com/u/5047891?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexandrudima",
      "html_url": "https://github.com/alexandrudima",
      "followers_url": "https://api.github.com/users/alexandrudima/followers",
      "following_url": "https://api.github.com/users/alexandrudima/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexandrudima/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexandrudima/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexandrudima/subscriptions",
      "organizations_url": "https://api.github.com/users/alexandrudima/orgs",
      "repos_url": "https://api.github.com/users/alexandrudima/repos",
      "events_url": "https://api.github.com/users/alexandrudima/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexandrudima/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-14T15:19:46Z",
    "updated_at": "2016-09-14T15:19:46Z",
    "body": "- Does not reproduce in Electron v 0.37.0\n- Does not reproduce in Electron v 0.37.3\n- Does not reproduce in Electron b 0.37.5\n- **Reproduces every second try** in Electron b 0.37.6 (maybe after hovering over a link in the page?)\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/247056008",
    "html_url": "https://github.com/electron/electron/issues/7208#issuecomment-247056008",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7208",
    "id": 247056008,
    "user": {
      "login": "alexandrudima",
      "id": 5047891,
      "avatar_url": "https://avatars0.githubusercontent.com/u/5047891?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexandrudima",
      "html_url": "https://github.com/alexandrudima",
      "followers_url": "https://api.github.com/users/alexandrudima/followers",
      "following_url": "https://api.github.com/users/alexandrudima/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexandrudima/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexandrudima/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexandrudima/subscriptions",
      "organizations_url": "https://api.github.com/users/alexandrudima/orgs",
      "repos_url": "https://api.github.com/users/alexandrudima/repos",
      "events_url": "https://api.github.com/users/alexandrudima/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexandrudima/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-14T15:40:29Z",
    "updated_at": "2016-09-14T15:40:40Z",
    "body": "## Another interesting fact:\n\nWhen using Electron v 1.3.6 and adding the following at the bottom of `main.js`:\n\n```\nsetInterval(function() {\n  console.log(  app.isAccessibilitySupportEnabled() );\n}, 500);\n```\n\nI get `true`, so I think Electron believes a screen reader is attached, when in fact it is not.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/247057449",
    "html_url": "https://github.com/electron/electron/issues/7208#issuecomment-247057449",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7208",
    "id": 247057449,
    "user": {
      "login": "alexandrudima",
      "id": 5047891,
      "avatar_url": "https://avatars0.githubusercontent.com/u/5047891?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexandrudima",
      "html_url": "https://github.com/alexandrudima",
      "followers_url": "https://api.github.com/users/alexandrudima/followers",
      "following_url": "https://api.github.com/users/alexandrudima/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexandrudima/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexandrudima/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexandrudima/subscriptions",
      "organizations_url": "https://api.github.com/users/alexandrudima/orgs",
      "repos_url": "https://api.github.com/users/alexandrudima/repos",
      "events_url": "https://api.github.com/users/alexandrudima/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexandrudima/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-14T15:44:56Z",
    "updated_at": "2016-09-14T15:44:56Z",
    "body": "ping @paulcbetts \n\nIt looks like on my machine Electron immediately (on startup) goes into accessibility mode.\n\nPossible commit that first appeared in 0.37.6: c474ad09134d2d3e5bdeff8be114cbb4a003ec0f\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/247060662",
    "html_url": "https://github.com/electron/electron/issues/7208#issuecomment-247060662",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7208",
    "id": 247060662,
    "user": {
      "login": "alexandrudima",
      "id": 5047891,
      "avatar_url": "https://avatars0.githubusercontent.com/u/5047891?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexandrudima",
      "html_url": "https://github.com/alexandrudima",
      "followers_url": "https://api.github.com/users/alexandrudima/followers",
      "following_url": "https://api.github.com/users/alexandrudima/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexandrudima/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexandrudima/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexandrudima/subscriptions",
      "organizations_url": "https://api.github.com/users/alexandrudima/orgs",
      "repos_url": "https://api.github.com/users/alexandrudima/repos",
      "events_url": "https://api.github.com/users/alexandrudima/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexandrudima/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-14T15:54:17Z",
    "updated_at": "2016-09-14T15:54:17Z",
    "body": "## Better repro steps - `main.js`\n\n``` js\nvar electron = require('electron')\nvar app = electron.app\nvar BrowserWindow = electron.BrowserWindow\n\nvar mainWindow;\n\nfunction createWindow () {\n    mainWindow = new BrowserWindow({width: 800, height: 900, webPreferences: {backgroundThrottling: false}})\n    mainWindow.loadURL(`chrome://accessibility`)\n    mainWindow.on('closed', function () {\n        mainWindow = null\n    })\n}\n\napp.on('ready', createWindow)\n\napp.on('window-all-closed', function () {\n    if (process.platform !== 'darwin') {\n        app.quit()\n    }\n})\n\napp.on('activate', function () {\n    if (mainWindow === null) {\n        createWindow()\n    }\n})\n```\n\n## 0.37.6\n\n![image](https://cloud.githubusercontent.com/assets/5047891/18519409/2369d2f8-7aa4-11e6-92ff-fd947115738f.png)\n\n## 0.37.5\n\n![image](https://cloud.githubusercontent.com/assets/5047891/18519425/312ac85c-7aa4-11e6-8400-e733d0414962.png)\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/247061824",
    "html_url": "https://github.com/electron/electron/issues/7208#issuecomment-247061824",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7208",
    "id": 247061824,
    "user": {
      "login": "alexandrudima",
      "id": 5047891,
      "avatar_url": "https://avatars0.githubusercontent.com/u/5047891?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexandrudima",
      "html_url": "https://github.com/alexandrudima",
      "followers_url": "https://api.github.com/users/alexandrudima/followers",
      "following_url": "https://api.github.com/users/alexandrudima/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexandrudima/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexandrudima/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexandrudima/subscriptions",
      "organizations_url": "https://api.github.com/users/alexandrudima/orgs",
      "repos_url": "https://api.github.com/users/alexandrudima/repos",
      "events_url": "https://api.github.com/users/alexandrudima/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexandrudima/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-14T15:57:43Z",
    "updated_at": "2016-09-14T15:58:05Z",
    "body": "fyi found this comment in some unrelated project. I have a touch monitor.\n\nhttp://hg.openjdk.java.net/openjfx/8u/rt/rev/059dc6af444f\n\n```\n /* By default JAWS does not send WM_GETOBJECT with UiaRootObjectId till\n+         * a focus event is raised by UiaRaiseAutomationEvent().\n+         * In some systems (i.e. touch monitors), OBJID_CLIENT are sent when\n+         * no screen reader is active. Test for SPI_GETSCREENREADER and\n+         * UiaClientsAreListening() to avoid initializing accessibility\n+         * unnecessarily.\n+         */\n```\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/247064345",
    "html_url": "https://github.com/electron/electron/issues/7208#issuecomment-247064345",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7208",
    "id": 247064345,
    "user": {
      "login": "paulcbetts",
      "id": 1396,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1396?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulcbetts",
      "html_url": "https://github.com/paulcbetts",
      "followers_url": "https://api.github.com/users/paulcbetts/followers",
      "following_url": "https://api.github.com/users/paulcbetts/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulcbetts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulcbetts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulcbetts/subscriptions",
      "organizations_url": "https://api.github.com/users/paulcbetts/orgs",
      "repos_url": "https://api.github.com/users/paulcbetts/repos",
      "events_url": "https://api.github.com/users/paulcbetts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulcbetts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-14T16:05:14Z",
    "updated_at": "2016-09-14T16:05:14Z",
    "body": "@alexandrudima Seems legit, send in a PR\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/247066382",
    "html_url": "https://github.com/electron/electron/issues/7208#issuecomment-247066382",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7208",
    "id": 247066382,
    "user": {
      "login": "bpasero",
      "id": 900690,
      "avatar_url": "https://avatars0.githubusercontent.com/u/900690?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bpasero",
      "html_url": "https://github.com/bpasero",
      "followers_url": "https://api.github.com/users/bpasero/followers",
      "following_url": "https://api.github.com/users/bpasero/following{/other_user}",
      "gists_url": "https://api.github.com/users/bpasero/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bpasero/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bpasero/subscriptions",
      "organizations_url": "https://api.github.com/users/bpasero/orgs",
      "repos_url": "https://api.github.com/users/bpasero/repos",
      "events_url": "https://api.github.com/users/bpasero/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bpasero/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-14T16:11:25Z",
    "updated_at": "2016-09-14T16:11:25Z",
    "body": "This seems to be what @paulcbetts reported with https://github.com/electron/electron/issues/4001 a while ago.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/247072761",
    "html_url": "https://github.com/electron/electron/issues/7208#issuecomment-247072761",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7208",
    "id": 247072761,
    "user": {
      "login": "alexandrudima",
      "id": 5047891,
      "avatar_url": "https://avatars0.githubusercontent.com/u/5047891?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexandrudima",
      "html_url": "https://github.com/alexandrudima",
      "followers_url": "https://api.github.com/users/alexandrudima/followers",
      "following_url": "https://api.github.com/users/alexandrudima/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexandrudima/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexandrudima/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexandrudima/subscriptions",
      "organizations_url": "https://api.github.com/users/alexandrudima/orgs",
      "repos_url": "https://api.github.com/users/alexandrudima/repos",
      "events_url": "https://api.github.com/users/alexandrudima/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexandrudima/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-14T16:31:16Z",
    "updated_at": "2016-09-14T16:31:16Z",
    "body": "Some more information -- https://cs.chromium.org/chromium/src/content/browser/accessibility/browser_accessibility_state_impl.h?q=WM_GETOBJECT&sq=package:chromium&dr=C&l=25\n\n```\n// Screen Reader Detection\n// (1) On windows many screen reader detection mechinisms will give false\n// positives like relying on the SPI_GETSCREENREADER system parameter. In Chrome\n// we attempt to dynamically detect a MSAA client screen reader by calling\n// NotifiyWinEvent in NativeWidgetWin with a custom ID and wait to see if the ID\n// is requested by a subsequent call to WM_GETOBJECT.\n```\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/247139980",
    "html_url": "https://github.com/electron/electron/issues/7208#issuecomment-247139980",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7208",
    "id": 247139980,
    "user": {
      "login": "dbaeumer",
      "id": 1931590,
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931590?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dbaeumer",
      "html_url": "https://github.com/dbaeumer",
      "followers_url": "https://api.github.com/users/dbaeumer/followers",
      "following_url": "https://api.github.com/users/dbaeumer/following{/other_user}",
      "gists_url": "https://api.github.com/users/dbaeumer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dbaeumer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dbaeumer/subscriptions",
      "organizations_url": "https://api.github.com/users/dbaeumer/orgs",
      "repos_url": "https://api.github.com/users/dbaeumer/repos",
      "events_url": "https://api.github.com/users/dbaeumer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dbaeumer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-14T20:17:45Z",
    "updated_at": "2016-09-14T20:17:45Z",
    "body": "@alexandrudima impressive analysis of the problem!\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/247169398",
    "html_url": "https://github.com/electron/electron/issues/7208#issuecomment-247169398",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7208",
    "id": 247169398,
    "user": {
      "login": "alexandrudima",
      "id": 5047891,
      "avatar_url": "https://avatars0.githubusercontent.com/u/5047891?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexandrudima",
      "html_url": "https://github.com/alexandrudima",
      "followers_url": "https://api.github.com/users/alexandrudima/followers",
      "following_url": "https://api.github.com/users/alexandrudima/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexandrudima/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexandrudima/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexandrudima/subscriptions",
      "organizations_url": "https://api.github.com/users/alexandrudima/orgs",
      "repos_url": "https://api.github.com/users/alexandrudima/repos",
      "events_url": "https://api.github.com/users/alexandrudima/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexandrudima/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-14T21:59:55Z",
    "updated_at": "2016-09-14T21:59:55Z",
    "body": "@paulcbetts Is `LegacyRenderWidgetHostHWND` something that makes its way down to Electron? i.e. something that is running?\n\nBecause [it seems to do what Electron wants to do with `WM_GETOBJECT`](https://cs.chromium.org/chromium/src/content/browser/renderer_host/legacy_render_widget_host_win.cc):\n- [it sends some sort of alert with object id 1](https://cs.chromium.org/chromium/src/content/browser/renderer_host/legacy_render_widget_host_win.cc?q=OnScreenReaderDetected&sq=package:chromium&dr=C&l=127)\n- [and then it calls `OnScreenReaderDetected` when it receives a `WM_GETOBJECT` request for object id 1](https://cs.chromium.org/chromium/src/content/browser/renderer_host/legacy_render_widget_host_win.cc?q=OnScreenReaderDetected&sq=package:chromium&dr=C&l=167)\n\nI don't fully understand what parts of Chromium make it into Electron and [how all the switches](https://cs.chromium.org/chromium/src/content/browser/renderer_host/legacy_render_widget_host_win.cc?q=OnScreenReaderDetected&sq=package:chromium&dr=C&l=40) are set at runtime. Is there a way to find out if this class is alive/running in Electron without needing to compile Chromium locally?\n\nShould Electron do something similar (i.e. `NotifyWinEvent` in the initialization phase and then fish for a `WM_GETOBJECT` referencing the same value) or is Chromium already doing that?\n\nFrom my compiling Electron locally I can cofirm it receives quite some number (10 maybe) of `WM_GETOBJECT` of `OBJID_CLIENT` on my machine even when there is no screen reader running. It then receives hundreds of these objects when I start NVDA, for example. Is one option to use the counts as an heuristic for when to call `OnScreenReaderDetected`?\n\n@zcbenz @paulcbetts I really do not like slowness and would like with your help to put together a PR, but in what direction should I go? I would also be very happy if you are able to fix this. Should I \"duplicate\" the smarts of `LegacyRenderWidgetHostHWND` inside Electron?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/247214980",
    "html_url": "https://github.com/electron/electron/issues/7208#issuecomment-247214980",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7208",
    "id": 247214980,
    "user": {
      "login": "paulcbetts",
      "id": 1396,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1396?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulcbetts",
      "html_url": "https://github.com/paulcbetts",
      "followers_url": "https://api.github.com/users/paulcbetts/followers",
      "following_url": "https://api.github.com/users/paulcbetts/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulcbetts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulcbetts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulcbetts/subscriptions",
      "organizations_url": "https://api.github.com/users/paulcbetts/orgs",
      "repos_url": "https://api.github.com/users/paulcbetts/repos",
      "events_url": "https://api.github.com/users/paulcbetts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulcbetts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-15T02:20:37Z",
    "updated_at": "2016-09-15T02:21:31Z",
    "body": "@alexandrudima Anything under the `content` component ends up in Electron as part of libchromiumcontent. This _usually_ excludes the \"browser\" folder, but `content/browser` is included.\n\ntbh, I'd try the Java approach first, it seems far easier than dealing with this WM_GETOBJECT canary - maybe it Just Works?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/253574159",
    "html_url": "https://github.com/electron/electron/issues/7208#issuecomment-253574159",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7208",
    "id": 253574159,
    "user": {
      "login": "miniak",
      "id": 1281234,
      "avatar_url": "https://avatars0.githubusercontent.com/u/1281234?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/miniak",
      "html_url": "https://github.com/miniak",
      "followers_url": "https://api.github.com/users/miniak/followers",
      "following_url": "https://api.github.com/users/miniak/following{/other_user}",
      "gists_url": "https://api.github.com/users/miniak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/miniak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/miniak/subscriptions",
      "organizations_url": "https://api.github.com/users/miniak/orgs",
      "repos_url": "https://api.github.com/users/miniak/repos",
      "events_url": "https://api.github.com/users/miniak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/miniak/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-13T17:01:09Z",
    "updated_at": "2016-10-13T17:02:20Z",
    "body": "I've tried this:\n\n```\n-      if (obj_id == OBJID_CLIENT) {\n+      if (obj_id == OBJID_CLIENT && IsScreenReaderActive()) {\n```\n\nwith a detection code like this:\n\n```\nstatic bool IsLibraryLoaded(const wchar_t* name) {\n  HMODULE hModule = nullptr;\n  return ::GetModuleHandleEx(GET_MODULE_HANDLE_EX_FLAG_UNCHANGED_REFCOUNT, name, &hModule) && hModule;\n}\n\nstatic bool IsScreenReaderActive() {\n  // BOOL value = false;\n  // if (::SystemParametersInfo(SPI_GETSCREENREADER, 0, &value, false) && value)\n  //   return true;\n\n  base::win::ScopedHandle hMutex(\n    ::CreateMutex(nullptr, false, L\"NarratorRunning\"));\n  if (::GetLastError() == ERROR_ALREADY_EXISTS) return true;\n\n  static const wchar_t* names[] = {\n    // NVDA\n    L\"nvdaHelperRemote.dll\",\n    // JAWS\n    L\"jhook.dll\"\n  };\n\n  for (auto name : names) {\n    if (IsLibraryLoaded(name)) return true;\n  }\n\n  return false;\n}\n```\n\nSeems to work fine with Narrator, JAWS and NVDA for which it has detection. However, it won't work with other accessibility tools.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/253576513",
    "html_url": "https://github.com/electron/electron/issues/7208#issuecomment-253576513",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7208",
    "id": 253576513,
    "user": {
      "login": "miniak",
      "id": 1281234,
      "avatar_url": "https://avatars0.githubusercontent.com/u/1281234?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/miniak",
      "html_url": "https://github.com/miniak",
      "followers_url": "https://api.github.com/users/miniak/followers",
      "following_url": "https://api.github.com/users/miniak/following{/other_user}",
      "gists_url": "https://api.github.com/users/miniak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/miniak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/miniak/subscriptions",
      "organizations_url": "https://api.github.com/users/miniak/orgs",
      "repos_url": "https://api.github.com/users/miniak/repos",
      "events_url": "https://api.github.com/users/miniak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/miniak/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-13T17:10:10Z",
    "updated_at": "2016-10-13T17:10:10Z",
    "body": "I am also going the try the Java approach.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/253579299",
    "html_url": "https://github.com/electron/electron/issues/7208#issuecomment-253579299",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7208",
    "id": 253579299,
    "user": {
      "login": "miniak",
      "id": 1281234,
      "avatar_url": "https://avatars0.githubusercontent.com/u/1281234?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/miniak",
      "html_url": "https://github.com/miniak",
      "followers_url": "https://api.github.com/users/miniak/followers",
      "following_url": "https://api.github.com/users/miniak/following{/other_user}",
      "gists_url": "https://api.github.com/users/miniak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/miniak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/miniak/subscriptions",
      "organizations_url": "https://api.github.com/users/miniak/orgs",
      "repos_url": "https://api.github.com/users/miniak/repos",
      "events_url": "https://api.github.com/users/miniak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/miniak/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-13T17:21:11Z",
    "updated_at": "2016-10-13T17:21:11Z",
    "body": "Btw I am also experiencing this issue in Windows 10 running in Parallels on Mac\n"
  }
]