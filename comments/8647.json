[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/278859427",
    "html_url": "https://github.com/electron/electron/issues/8647#issuecomment-278859427",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/8647",
    "id": 278859427,
    "user": {
      "login": "KagamiChan",
      "id": 3816900,
      "avatar_url": "https://avatars2.githubusercontent.com/u/3816900?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/KagamiChan",
      "html_url": "https://github.com/KagamiChan",
      "followers_url": "https://api.github.com/users/KagamiChan/followers",
      "following_url": "https://api.github.com/users/KagamiChan/following{/other_user}",
      "gists_url": "https://api.github.com/users/KagamiChan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/KagamiChan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KagamiChan/subscriptions",
      "organizations_url": "https://api.github.com/users/KagamiChan/orgs",
      "repos_url": "https://api.github.com/users/KagamiChan/repos",
      "events_url": "https://api.github.com/users/KagamiChan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/KagamiChan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-10T05:12:19Z",
    "updated_at": "2017-02-10T05:12:19Z",
    "body": "I've done some search on this topic before, here's some findings that might help\r\n- Electron does not support all Chrome extensions, the initial intention was to support some developer extensions. https://github.com/electron/electron/blob/master/docs/tutorial/devtools-extension.md\r\n- `chrome-extension` protocol is currently available for devtool tabs.\r\n- Not all chrome.* API are implemented, and they are only available for pages from `chrome-extension` protocol. https://github.com/electron/electron/blob/master/lib/renderer/init.js#L78\r\n\r\nPlease correct me if I went wrong.\r\n\r\nI think you may implement a `chrome-extension` custom protocol similar to that in `chrome-extension.js`, and make up the missing chrome.* API if necessary. I'm not sure if there's some ipc problems."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/278951811",
    "html_url": "https://github.com/electron/electron/issues/8647#issuecomment-278951811",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/8647",
    "id": 278951811,
    "user": {
      "login": "codekiln",
      "id": 140930,
      "avatar_url": "https://avatars3.githubusercontent.com/u/140930?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codekiln",
      "html_url": "https://github.com/codekiln",
      "followers_url": "https://api.github.com/users/codekiln/followers",
      "following_url": "https://api.github.com/users/codekiln/following{/other_user}",
      "gists_url": "https://api.github.com/users/codekiln/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codekiln/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codekiln/subscriptions",
      "organizations_url": "https://api.github.com/users/codekiln/orgs",
      "repos_url": "https://api.github.com/users/codekiln/repos",
      "events_url": "https://api.github.com/users/codekiln/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codekiln/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-10T14:16:51Z",
    "updated_at": "2017-02-10T14:16:51Z",
    "body": "Hi @KagamiChan, thank you for your response. As I alluded to in my post, I'm aware that not all of the `chrome.*` apis are supported, and that's not the concern here because I've checked that all of the `chrome.*` apis I need are already implemented in Electron:\r\n\r\n> I've already checked that all of the chrome.* apis referenced inside the chrome extension are supported by electron as mentioned in #5842 . I've read through https://github.com/electron/electron/blob/v1.4.15/lib/browser/chrome-extension.js#L73, and I can see that it doesn't look like web_accessible_resources is extracted from the manifest.json when extensions are loaded.\r\n\r\nMy goal here is to find out why the `chrome-extension://` protocol seems to reference extensions by name instead of id, and determine if the electron team is amenable to an enhancement bringing support for `web_accessible_resources`. If so, I can submit a PR to implement the `chrome-extension://[PACKAGE ID]/[PATH]` protocol to access items referenced in the `web_accessible_resources` of extensions' `manifest.json`. "
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/278954254",
    "html_url": "https://github.com/electron/electron/issues/8647#issuecomment-278954254",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/8647",
    "id": 278954254,
    "user": {
      "login": "MarshallOfSound",
      "id": 6634592,
      "avatar_url": "https://avatars0.githubusercontent.com/u/6634592?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarshallOfSound",
      "html_url": "https://github.com/MarshallOfSound",
      "followers_url": "https://api.github.com/users/MarshallOfSound/followers",
      "following_url": "https://api.github.com/users/MarshallOfSound/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarshallOfSound/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarshallOfSound/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarshallOfSound/subscriptions",
      "organizations_url": "https://api.github.com/users/MarshallOfSound/orgs",
      "repos_url": "https://api.github.com/users/MarshallOfSound/repos",
      "events_url": "https://api.github.com/users/MarshallOfSound/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarshallOfSound/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-10T14:27:23Z",
    "updated_at": "2017-02-10T14:27:23Z",
    "body": "> determine if the electron team is amenable to an enhancement bringing support for web_accessible_resources. \r\n\r\nIf it's part of the spec, not too complex (doesn't look like it) and adds support for more chrome extensions I'd personally love a PR for it :D\r\n\r\nIt sounds like something that we have to be super careful about though (potentially exposing filesystem to remote pages).\r\n\r\n/cc @electron/maintainers Is this something that fits into the scope of chrome extension compatibility we want to provide?"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/278971947",
    "html_url": "https://github.com/electron/electron/issues/8647#issuecomment-278971947",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/8647",
    "id": 278971947,
    "user": {
      "login": "deepak1556",
      "id": 964386,
      "avatar_url": "https://avatars2.githubusercontent.com/u/964386?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/deepak1556",
      "html_url": "https://github.com/deepak1556",
      "followers_url": "https://api.github.com/users/deepak1556/followers",
      "following_url": "https://api.github.com/users/deepak1556/following{/other_user}",
      "gists_url": "https://api.github.com/users/deepak1556/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/deepak1556/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/deepak1556/subscriptions",
      "organizations_url": "https://api.github.com/users/deepak1556/orgs",
      "repos_url": "https://api.github.com/users/deepak1556/repos",
      "events_url": "https://api.github.com/users/deepak1556/events{/privacy}",
      "received_events_url": "https://api.github.com/users/deepak1556/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-10T15:18:43Z",
    "updated_at": "2017-02-10T15:18:43Z",
    "body": "I don't see the need to support parsing `web_accessible_resources` with our current implementation of `chrome-extension` protocol. Unlike chrome we haven't implemented a strict policy of what resources can be requested from the extension, all resources are responded with CORS headers. In your example if you try to load `chrome.runtime.getURL(<relative path>)` , it should work."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/278994838",
    "html_url": "https://github.com/electron/electron/issues/8647#issuecomment-278994838",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/8647",
    "id": 278994838,
    "user": {
      "login": "codekiln",
      "id": 140930,
      "avatar_url": "https://avatars3.githubusercontent.com/u/140930?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codekiln",
      "html_url": "https://github.com/codekiln",
      "followers_url": "https://api.github.com/users/codekiln/followers",
      "following_url": "https://api.github.com/users/codekiln/following{/other_user}",
      "gists_url": "https://api.github.com/users/codekiln/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codekiln/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codekiln/subscriptions",
      "organizations_url": "https://api.github.com/users/codekiln/orgs",
      "repos_url": "https://api.github.com/users/codekiln/repos",
      "events_url": "https://api.github.com/users/codekiln/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codekiln/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-10T16:42:54Z",
    "updated_at": "2017-02-10T16:46:22Z",
    "body": "@deepak1556, the need is not there if you are writing your own js code; in that case, one could use the `runtime.getURL` method. The need arises only if you want use a *third party* js library that already makes use of the `chrome-extension://` protocol to refer to a *third party* chrome extension. I am making a Cisco Jabber softphone application. For that I need to use Cisco's cwic.js library, which already calls `chrome-extension://` in a way that refers to web accessible resources in Cisco's chrome extension."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/279002764",
    "html_url": "https://github.com/electron/electron/issues/8647#issuecomment-279002764",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/8647",
    "id": 279002764,
    "user": {
      "login": "deepak1556",
      "id": 964386,
      "avatar_url": "https://avatars2.githubusercontent.com/u/964386?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/deepak1556",
      "html_url": "https://github.com/deepak1556",
      "followers_url": "https://api.github.com/users/deepak1556/followers",
      "following_url": "https://api.github.com/users/deepak1556/following{/other_user}",
      "gists_url": "https://api.github.com/users/deepak1556/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/deepak1556/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/deepak1556/subscriptions",
      "organizations_url": "https://api.github.com/users/deepak1556/orgs",
      "repos_url": "https://api.github.com/users/deepak1556/repos",
      "events_url": "https://api.github.com/users/deepak1556/events{/privacy}",
      "received_events_url": "https://api.github.com/users/deepak1556/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-10T17:10:24Z",
    "updated_at": "2017-02-10T17:10:24Z",
    "body": "> For that I need to use Cisco's cwic.js library, which already calls chrome-extension:// in a way that refers to web accessible resources in Cisco's chrome extension.\r\n\r\n@codekiln I believe cwic.js uses a hardcoded extension id to request some existing resource, then yes it will be problem because the id will defer from what we have internally in Electron when installing the extension. I would say the problem is within the library itself not Electron.\r\n\r\nOn a side note, I am not familiar with jabber sdk but isn't there other versions of using the sdk without relying on chrome extension. "
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/279019846",
    "html_url": "https://github.com/electron/electron/issues/8647#issuecomment-279019846",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/8647",
    "id": 279019846,
    "user": {
      "login": "codekiln",
      "id": 140930,
      "avatar_url": "https://avatars3.githubusercontent.com/u/140930?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codekiln",
      "html_url": "https://github.com/codekiln",
      "followers_url": "https://api.github.com/users/codekiln/followers",
      "following_url": "https://api.github.com/users/codekiln/following{/other_user}",
      "gists_url": "https://api.github.com/users/codekiln/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codekiln/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codekiln/subscriptions",
      "organizations_url": "https://api.github.com/users/codekiln/orgs",
      "repos_url": "https://api.github.com/users/codekiln/repos",
      "events_url": "https://api.github.com/users/codekiln/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codekiln/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-10T18:06:39Z",
    "updated_at": "2017-02-10T18:06:39Z",
    "body": "@deepak1556 Chrome [uses and supports the standard of a hardcoded `chrome-extension://[PACKAGE ID]/[PATH]`](https://developer.chrome.com/extensions/manifest/web_accessible_resources), and Jabber uses that standard. [Electron even uses this standard when loading the background pages for each extension](https://github.com/electron/electron/blob/v1.4.15/lib/browser/chrome-extension.js#L98) and in the implementation of [`chrome.runtime.getURL` itself](https://github.com/electron/electron/blob/3834f0c6a6909194184d1f2ffbe457ebfa5c3d76/lib/renderer/chrome-api.js#L89). It's just that `web_accessible_resources` is currently unimplemented. \r\n\r\nWith regards to your side note, Jabber SDK [requires the chrome extension since Chrome removed the NPAPI it formerly depended on a few years ago](https://communities.cisco.com/community/developer/jabber/blog/2014/12/11/jabber-guest-105--chrome-npapi-plugin-update-ios-mobile-hd). "
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/279049649",
    "html_url": "https://github.com/electron/electron/issues/8647#issuecomment-279049649",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/8647",
    "id": 279049649,
    "user": {
      "login": "deepak1556",
      "id": 964386,
      "avatar_url": "https://avatars2.githubusercontent.com/u/964386?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/deepak1556",
      "html_url": "https://github.com/deepak1556",
      "followers_url": "https://api.github.com/users/deepak1556/followers",
      "following_url": "https://api.github.com/users/deepak1556/following{/other_user}",
      "gists_url": "https://api.github.com/users/deepak1556/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/deepak1556/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/deepak1556/subscriptions",
      "organizations_url": "https://api.github.com/users/deepak1556/orgs",
      "repos_url": "https://api.github.com/users/deepak1556/repos",
      "events_url": "https://api.github.com/users/deepak1556/events{/privacy}",
      "received_events_url": "https://api.github.com/users/deepak1556/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-10T19:54:43Z",
    "updated_at": "2017-02-10T19:54:43Z",
    "body": "@codekiln in your example you are trying to load `chrome-extension://ppbllmlcmhfnfflbkbinnhacecaankdh/cwic_plugin.js` where the hostname is the extension id but its not ID under which it is registered in Electron, rather it is the manifest name field, in this extension case try loading `chrome-extension://cisco-web-communicator/cwic_plugin.js`\r\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/279430113",
    "html_url": "https://github.com/electron/electron/issues/8647#issuecomment-279430113",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/8647",
    "id": 279430113,
    "user": {
      "login": "codekiln",
      "id": 140930,
      "avatar_url": "https://avatars3.githubusercontent.com/u/140930?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codekiln",
      "html_url": "https://github.com/codekiln",
      "followers_url": "https://api.github.com/users/codekiln/followers",
      "following_url": "https://api.github.com/users/codekiln/following{/other_user}",
      "gists_url": "https://api.github.com/users/codekiln/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codekiln/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codekiln/subscriptions",
      "organizations_url": "https://api.github.com/users/codekiln/orgs",
      "repos_url": "https://api.github.com/users/codekiln/repos",
      "events_url": "https://api.github.com/users/codekiln/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codekiln/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-13T15:45:54Z",
    "updated_at": "2017-02-13T15:47:58Z",
    "body": "@deepak1556 why does electron [use the chrome extension's name as the extensionId](https://github.com/electron/electron/blob/master/lib/browser/chrome-extension.js#L50) instead of just using the extension's actual ID? Is there a technical reason? Would electron be amenable to a PR to begin using the chrome web store extension id as the chrome extension id?"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/279741528",
    "html_url": "https://github.com/electron/electron/issues/8647#issuecomment-279741528",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/8647",
    "id": 279741528,
    "user": {
      "login": "deepak1556",
      "id": 964386,
      "avatar_url": "https://avatars2.githubusercontent.com/u/964386?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/deepak1556",
      "html_url": "https://github.com/deepak1556",
      "followers_url": "https://api.github.com/users/deepak1556/followers",
      "following_url": "https://api.github.com/users/deepak1556/following{/other_user}",
      "gists_url": "https://api.github.com/users/deepak1556/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/deepak1556/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/deepak1556/subscriptions",
      "organizations_url": "https://api.github.com/users/deepak1556/orgs",
      "repos_url": "https://api.github.com/users/deepak1556/repos",
      "events_url": "https://api.github.com/users/deepak1556/events{/privacy}",
      "received_events_url": "https://api.github.com/users/deepak1556/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-14T15:36:41Z",
    "updated_at": "2017-02-14T15:36:41Z",
    "body": "> why does electron use the chrome extension's name as the extensionId instead of just using the extension's actual ID? Is there a technical reason?\r\n\r\nI dont think so, but will defer to @zcbenz since he implemented it."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/282646007",
    "html_url": "https://github.com/electron/electron/issues/8647#issuecomment-282646007",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/8647",
    "id": 282646007,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2017-02-27T07:22:32Z",
    "updated_at": "2017-02-27T07:22:32Z",
    "body": "> why does electron use the chrome extension's name as the extensionId instead of just using the extension's actual ID? Is there a technical reason?\r\n\r\nThe API may load from the extension's source code directly, which does not have an ID available. We should also support using real extension ID as hostname when there is one."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/282731775",
    "html_url": "https://github.com/electron/electron/issues/8647#issuecomment-282731775",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/8647",
    "id": 282731775,
    "user": {
      "login": "codekiln",
      "id": 140930,
      "avatar_url": "https://avatars3.githubusercontent.com/u/140930?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codekiln",
      "html_url": "https://github.com/codekiln",
      "followers_url": "https://api.github.com/users/codekiln/followers",
      "following_url": "https://api.github.com/users/codekiln/following{/other_user}",
      "gists_url": "https://api.github.com/users/codekiln/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codekiln/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codekiln/subscriptions",
      "organizations_url": "https://api.github.com/users/codekiln/orgs",
      "repos_url": "https://api.github.com/users/codekiln/repos",
      "events_url": "https://api.github.com/users/codekiln/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codekiln/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-27T14:14:21Z",
    "updated_at": "2017-02-27T14:14:21Z",
    "body": "It may be possible to compute the extension id from the crx bundle; see this\ncode\n<https://github.com/shyiko/node-chrome-extension-id/blob/master/src/index.js>\nfrom the chrome-extension-id\n<https://www.npmjs.com/package/chrome-extension-id> npm package.\n\nOn Mon, Feb 27, 2017 at 2:23 AM, Cheng Zhao <notifications@github.com>\nwrote:\n\n> why does electron use the chrome extension's name as the extensionId\n> instead of just using the extension's actual ID? Is there a technical\n> reason?\n>\n> The API may load from the extension's source code directly, which does not\n> have an ID available. We should also support using real extension ID as\n> hostname when there is one.\n>\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/electron/electron/issues/8647#issuecomment-282646007>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAImglqTtwDfIZfwUOkqtkp_u0KQ_iywks5rgnnYgaJpZM4L8nS1>\n> .\n>\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/299251916",
    "html_url": "https://github.com/electron/electron/issues/8647#issuecomment-299251916",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/8647",
    "id": 299251916,
    "user": {
      "login": "RickyV33",
      "id": 5842804,
      "avatar_url": "https://avatars0.githubusercontent.com/u/5842804?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RickyV33",
      "html_url": "https://github.com/RickyV33",
      "followers_url": "https://api.github.com/users/RickyV33/followers",
      "following_url": "https://api.github.com/users/RickyV33/following{/other_user}",
      "gists_url": "https://api.github.com/users/RickyV33/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RickyV33/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RickyV33/subscriptions",
      "organizations_url": "https://api.github.com/users/RickyV33/orgs",
      "repos_url": "https://api.github.com/users/RickyV33/repos",
      "events_url": "https://api.github.com/users/RickyV33/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RickyV33/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-04T17:20:36Z",
    "updated_at": "2017-05-04T17:20:36Z",
    "body": "I'm currently facing the same issue. Was there any resolution to this problem? "
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/299272990",
    "html_url": "https://github.com/electron/electron/issues/8647#issuecomment-299272990",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/8647",
    "id": 299272990,
    "user": {
      "login": "codekiln",
      "id": 140930,
      "avatar_url": "https://avatars3.githubusercontent.com/u/140930?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codekiln",
      "html_url": "https://github.com/codekiln",
      "followers_url": "https://api.github.com/users/codekiln/followers",
      "following_url": "https://api.github.com/users/codekiln/following{/other_user}",
      "gists_url": "https://api.github.com/users/codekiln/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codekiln/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codekiln/subscriptions",
      "organizations_url": "https://api.github.com/users/codekiln/orgs",
      "repos_url": "https://api.github.com/users/codekiln/repos",
      "events_url": "https://api.github.com/users/codekiln/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codekiln/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-04T18:39:18Z",
    "updated_at": "2017-05-04T18:39:18Z",
    "body": "No. I offered to make a fix, but it wasn't clear that would be accepted, so\nI didn't create the fixing PR. I ended up going to nw.js, which has better\nsupport for chrome extensions.\n\nOn Thu, May 4, 2017 at 1:21 PM, Ricardo Valencia <notifications@github.com>\nwrote:\n\n> I'm currently facing the same issue. Was there any resolution to this\n> problem?\n>\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/electron/electron/issues/8647#issuecomment-299251916>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAImgnguZ30KF02rFaJojA_Ai7n7jD4iks5r2gkJgaJpZM4L8nS1>\n> .\n>\n"
  }
]