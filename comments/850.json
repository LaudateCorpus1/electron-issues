[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/64037068",
    "html_url": "https://github.com/electron/electron/issues/850#issuecomment-64037068",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/850",
    "id": 64037068,
    "user": {
      "login": "bwin",
      "id": 1673361,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1673361?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bwin",
      "html_url": "https://github.com/bwin",
      "followers_url": "https://api.github.com/users/bwin/followers",
      "following_url": "https://api.github.com/users/bwin/following{/other_user}",
      "gists_url": "https://api.github.com/users/bwin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bwin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bwin/subscriptions",
      "organizations_url": "https://api.github.com/users/bwin/orgs",
      "repos_url": "https://api.github.com/users/bwin/repos",
      "events_url": "https://api.github.com/users/bwin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bwin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-21T21:01:59Z",
    "updated_at": "2014-11-21T21:03:16Z",
    "body": "I get the same error on windows, but only if\n- I use a frameless window (`frame: false`)\n- I have aero disabled (no accelerated graphics composition)\n\n**edit:** AtomShell 0.16.3 32bit, Windows 7 Home Premium 64bit\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/64133526",
    "html_url": "https://github.com/electron/electron/issues/850#issuecomment-64133526",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/850",
    "id": 64133526,
    "user": {
      "login": "antton",
      "id": 1666548,
      "avatar_url": "https://avatars2.githubusercontent.com/u/1666548?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/antton",
      "html_url": "https://github.com/antton",
      "followers_url": "https://api.github.com/users/antton/followers",
      "following_url": "https://api.github.com/users/antton/following{/other_user}",
      "gists_url": "https://api.github.com/users/antton/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/antton/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/antton/subscriptions",
      "organizations_url": "https://api.github.com/users/antton/orgs",
      "repos_url": "https://api.github.com/users/antton/repos",
      "events_url": "https://api.github.com/users/antton/events{/privacy}",
      "received_events_url": "https://api.github.com/users/antton/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-23T20:36:47Z",
    "updated_at": "2014-11-23T20:36:47Z",
    "body": "If anyone can put some example code would be great! I try in a different ways and it's not working any of them.\n\nI try with 0.19 version and even try the old 0.16 previously commented by @bwin but nothing.\n\nAnyone else having the same issue? any advice?\n\nThanks for all \n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/64155103",
    "html_url": "https://github.com/electron/electron/issues/850#issuecomment-64155103",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/850",
    "id": 64155103,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2014-11-24T06:09:20Z",
    "updated_at": "2014-11-24T06:09:20Z",
    "body": "Crash reports:\n\n```\nOperating system: Windows NT\n                  6.1.7601 Service Pack 1\nCPU: x86\n     GenuineIntel family 6 model 23 stepping 10\n     1 CPU\n\nCrash reason:  EXCEPTION_ACCESS_VIOLATION_READ\nCrash address: 0x10\nAssertion: Unknown assertion type 0x00000000\n\nThread 20 (crashed)\n 0  atom.exe!StatusTrayStateChangerWin::EnsureTrayIconVisible() [status_tray_state_changer_win.cc : 72 + 0x0]\n    eip = 0x00e61a83   esp = 0x0553f8e8   ebp = 0x0553f9c0   ebx = 0x00000000\n    esi = 0x00000000   edi = 0x0042b398   eax = 0x00000000   ecx = 0x4c71559d\n    edx = 0x00000000   efl = 0x00010246\n    Found by: given as instruction pointer in context\n 1  atom.exe!views::NativeViewAccessibilityWin::get_accValue(tagVARIANT,wchar_t * *) [native_view_accessibility_win.cc : 732 + 0x3]\n    eip = 0x0100b493   esp = 0x0553fa58   ebp = 0x104c5bb0\n    Found by: call frame info with scanning\n 2  atom.exe + 0x280000\n    eip = 0x01000000   esp = 0x0553fab8   ebp = 0x104c5bb0\n    Found by: stack scanning\n```\n\n```\nOperating system: Windows NT\n                  6.1.7601 Service Pack 1\nCPU: x86\n     GenuineIntel family 6 model 23 stepping 10\n     1 CPU\n\nCrash reason:  EXCEPTION_ACCESS_VIOLATION_READ\nCrash address: 0x11000000\nAssertion: Unknown assertion type 0x00000000\n\nThread 0 (crashed)\n 0  atom.exe!atom::api::Tray::SetToolTip(std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &) [atom_api_tray.cc : 52 + 0x3]\n    eip = 0x00e0ef36   esp = 0x0026eecc   ebp = 0x0026eecc   ebx = 0x00000000\n    esi = 0x00e0ef30   edi = 0x00000000   eax = 0x0026efac   ecx = 0x11000000\n    edx = 0x00000000   efl = 0x00010202\n    Found by: given as instruction pointer in context\n 1  atom.exe!base::internal::Invoker<0,base::internal::BindState<base::internal::RunnableAdapter<void ( atom::api::Tray::*)(std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)>,void (atom::api::Tray *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &),void (void)>,void (atom::api::Tray *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)>::Run(base::internal::BindStateBase *,atom::api::Tray * const &,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &) [bind_internal.h : 1196 + 0x16]\n    eip = 0x00e0eda9   esp = 0x0026eed4   ebp = 0x0026eedc\n    Found by: call frame info\n 2  atom.exe!mate::internal::Dispatcher<void (atom::api::Tray *,std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &)>::DispatchToCallback(v8::FunctionCallbackInfo<v8::Value> const &) [function_template.h : 390 + 0x10]\n    eip = 0x00e0e368   esp = 0x0026eee4   ebp = 0x0026eff0\n    Found by: call frame info\n 3  chromiumcontent.dll!v8::internal::FunctionCallbackArguments::Call(void (*)(v8::FunctionCallbackInfo<v8::Value> const &)) [arguments.cc : 33 + 0x2]\n    eip = 0x6718833f   esp = 0x0026eff8   ebp = 0x0026f044\n    Found by: call frame info\n 4  chromiumcontent.dll!v8::internal::HandleApiCallHelper<0> [builtins.cc : 1144 + 0x11]\n    eip = 0x670eb1b9   esp = 0x0026f04c   ebp = 0x0026f0b8\n    Found by: call frame info\n 5  0x3c30a3d6\n    eip = 0x3c30a3d6   esp = 0x0026f0c0   ebp = 0x0026f0d8\n    Found by: call frame info\n```\n"
  }
]