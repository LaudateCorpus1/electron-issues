[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/239324975",
    "html_url": "https://github.com/electron/electron/issues/6820#issuecomment-239324975",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/6820",
    "id": 239324975,
    "user": {
      "login": "MarshallOfSound",
      "id": 6634592,
      "avatar_url": "https://avatars0.githubusercontent.com/u/6634592?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarshallOfSound",
      "html_url": "https://github.com/MarshallOfSound",
      "followers_url": "https://api.github.com/users/MarshallOfSound/followers",
      "following_url": "https://api.github.com/users/MarshallOfSound/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarshallOfSound/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarshallOfSound/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarshallOfSound/subscriptions",
      "organizations_url": "https://api.github.com/users/MarshallOfSound/orgs",
      "repos_url": "https://api.github.com/users/MarshallOfSound/repos",
      "events_url": "https://api.github.com/users/MarshallOfSound/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarshallOfSound/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-11T23:35:41Z",
    "updated_at": "2016-08-11T23:35:41Z",
    "body": "@nishant09 If the app is already open that event is fired (I know because I implemented something similar last week).\n\nHowever we no longer support Electron `0.34.1` so can you please update your Electron version to `1.3.3` and see if the issue persists.  If it does raise a new issue üëç \n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/239326107",
    "html_url": "https://github.com/electron/electron/issues/6820#issuecomment-239326107",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/6820",
    "id": 239326107,
    "user": {
      "login": "nishant09",
      "id": 7454585,
      "avatar_url": "https://avatars2.githubusercontent.com/u/7454585?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nishant09",
      "html_url": "https://github.com/nishant09",
      "followers_url": "https://api.github.com/users/nishant09/followers",
      "following_url": "https://api.github.com/users/nishant09/following{/other_user}",
      "gists_url": "https://api.github.com/users/nishant09/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nishant09/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nishant09/subscriptions",
      "organizations_url": "https://api.github.com/users/nishant09/orgs",
      "repos_url": "https://api.github.com/users/nishant09/repos",
      "events_url": "https://api.github.com/users/nishant09/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nishant09/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-11T23:42:47Z",
    "updated_at": "2016-08-11T23:42:47Z",
    "body": "@MarshallOfSound Thanks for your reply. I would appreciate if you could guide me little more here. How did you implemented it? Which event I need to listen to here. Would you be able to put the snippet ? I noticed after clicking my app gets the focus. however, It doesn't pass the url parameters. \n\nYes, we are in the process of upgrading the electron version. will try to reproduce the issue once we have it.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/239327725",
    "html_url": "https://github.com/electron/electron/issues/6820#issuecomment-239327725",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/6820",
    "id": 239327725,
    "user": {
      "login": "MarshallOfSound",
      "id": 6634592,
      "avatar_url": "https://avatars0.githubusercontent.com/u/6634592?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarshallOfSound",
      "html_url": "https://github.com/MarshallOfSound",
      "followers_url": "https://api.github.com/users/MarshallOfSound/followers",
      "following_url": "https://api.github.com/users/MarshallOfSound/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarshallOfSound/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarshallOfSound/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarshallOfSound/subscriptions",
      "organizations_url": "https://api.github.com/users/MarshallOfSound/orgs",
      "repos_url": "https://api.github.com/users/MarshallOfSound/repos",
      "events_url": "https://api.github.com/users/MarshallOfSound/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarshallOfSound/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-11T23:53:17Z",
    "updated_at": "2016-08-11T23:53:17Z",
    "body": "@nishant09  Literally my snippet looks like this\n\n``` js\napp.on('open-url', (ev, data) => handle(data));\n\n// handle\nconst handle = (data) => {\n  let payload;\n  try {\n    payload = JSON.parse(unescape(data).replace(/^my-app-uri:\\/\\//g, '')).payload;\n  } catch (err) {\n    // ignore\n  }\n  if (payload) {\n    handlePayload(payload);\n  }\n}\n```\n\nSo it does _Just Work_ üëç \n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/239331171",
    "html_url": "https://github.com/electron/electron/issues/6820#issuecomment-239331171",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/6820",
    "id": 239331171,
    "user": {
      "login": "nishant09",
      "id": 7454585,
      "avatar_url": "https://avatars2.githubusercontent.com/u/7454585?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nishant09",
      "html_url": "https://github.com/nishant09",
      "followers_url": "https://api.github.com/users/nishant09/followers",
      "following_url": "https://api.github.com/users/nishant09/following{/other_user}",
      "gists_url": "https://api.github.com/users/nishant09/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nishant09/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nishant09/subscriptions",
      "organizations_url": "https://api.github.com/users/nishant09/orgs",
      "repos_url": "https://api.github.com/users/nishant09/repos",
      "events_url": "https://api.github.com/users/nishant09/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nishant09/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-12T00:16:54Z",
    "updated_at": "2016-08-12T00:16:54Z",
    "body": "Appreciate. After digging more into this, I noticed the event gets fired. but the parameter I'm setting in the event(constants.macParams) is not getting passed to the renderer process. Have you seen this issue before ? How are you handling this situation in your code ? through IPC ? \n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/239331285",
    "html_url": "https://github.com/electron/electron/issues/6820#issuecomment-239331285",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/6820",
    "id": 239331285,
    "user": {
      "login": "nishant09",
      "id": 7454585,
      "avatar_url": "https://avatars2.githubusercontent.com/u/7454585?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nishant09",
      "html_url": "https://github.com/nishant09",
      "followers_url": "https://api.github.com/users/nishant09/followers",
      "following_url": "https://api.github.com/users/nishant09/following{/other_user}",
      "gists_url": "https://api.github.com/users/nishant09/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nishant09/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nishant09/subscriptions",
      "organizations_url": "https://api.github.com/users/nishant09/orgs",
      "repos_url": "https://api.github.com/users/nishant09/repos",
      "events_url": "https://api.github.com/users/nishant09/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nishant09/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-12T00:17:49Z",
    "updated_at": "2016-08-12T00:17:49Z",
    "body": "Forgive me some of the questions are silly. I'm pretty much new to the Electron and JS :)\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/239332906",
    "html_url": "https://github.com/electron/electron/issues/6820#issuecomment-239332906",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/6820",
    "id": 239332906,
    "user": {
      "login": "MarshallOfSound",
      "id": 6634592,
      "avatar_url": "https://avatars0.githubusercontent.com/u/6634592?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarshallOfSound",
      "html_url": "https://github.com/MarshallOfSound",
      "followers_url": "https://api.github.com/users/MarshallOfSound/followers",
      "following_url": "https://api.github.com/users/MarshallOfSound/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarshallOfSound/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarshallOfSound/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarshallOfSound/subscriptions",
      "organizations_url": "https://api.github.com/users/MarshallOfSound/orgs",
      "repos_url": "https://api.github.com/users/MarshallOfSound/repos",
      "events_url": "https://api.github.com/users/MarshallOfSound/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarshallOfSound/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-12T00:30:19Z",
    "updated_at": "2016-08-12T00:30:19Z",
    "body": "@nishant09 Can you post your code snippet and I'll take a look üëç \n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/239342052",
    "html_url": "https://github.com/electron/electron/issues/6820#issuecomment-239342052",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/6820",
    "id": 239342052,
    "user": {
      "login": "nishant09",
      "id": 7454585,
      "avatar_url": "https://avatars2.githubusercontent.com/u/7454585?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nishant09",
      "html_url": "https://github.com/nishant09",
      "followers_url": "https://api.github.com/users/nishant09/followers",
      "following_url": "https://api.github.com/users/nishant09/following{/other_user}",
      "gists_url": "https://api.github.com/users/nishant09/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nishant09/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nishant09/subscriptions",
      "organizations_url": "https://api.github.com/users/nishant09/orgs",
      "repos_url": "https://api.github.com/users/nishant09/repos",
      "events_url": "https://api.github.com/users/nishant09/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nishant09/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-12T01:43:46Z",
    "updated_at": "2016-08-12T01:44:28Z",
    "body": ".....\n    return showErrorMessage(\n        \"Storage Explorer Error\", // Localize\n        `An unexpected error happened:\\n\\n${stack || message || name}`, // Localize\n        [\"Restart\", \"Close Application\", \"Ignore\"], // Localize\n        2).then((response) => {\n            switch (response) {\n                case 0:\n                    // The user wants to restart, create the window again\n                    createMainWindow();\n                    break;\n                case 1:\n                    // The user wants to close the app.\n                    process.exit(-1);\n                    break;\n                // Response 2, the user wants to ignore the error\n                // and continue running.\n            }\n        });\n};\n\nfunction rendererProcessCrashHandler() {\n    telemetryManager.sendError(\"StorageExplorerRendererProcessCrash\");\n\n```\nreturn showErrorMessage(\n    \"Storage Explorer has stopped working\", // Localize\n    \"A problem caused Storage Explorer to stop working correctly. Storage Explorer can check for a solution and try to restart the program.\", // Localize\n    [\"Restart\", \"Close Application\"], // Localize\n    1).then((response) => {\n        switch (response) {\n            case 0:\n                //  The user wants to restart, create the window again\n                createMainWindow();\n                break;\n            default:\n                // The user wants to close the app.\n                process.exit(-1);\n        }\n    });\n```\n\n};\n\nfunction mainProcessGPUCrashHandler() {\n    telemetryManager.sendError(\"StorageExplorerMainProcessGPUCrash\");\n\n```\nreturn showErrorMessage(\n    \"Storage Explorer has stopped working\", // Localize\n    \"A problem caused Storage Explorer to stop working correctly. Please close the program.\", // Localize\n    [\"Close Application\"],\n    0).then(() => {\n        process.exit(-1);\n    });\n```\n\n};\n\nfunction onMainWindowClosed() {\n    mainWindow = null;\n    app.quit();\n};\n\nfunction createMainWindow() {\n    // Destroy the window if it was open already.\n    if (mainWindow) {\n        mainWindow.removeListener(\"closed\", onMainWindowClosed);\n        mainWindow.close();\n        mainWindow = null;\n    }\n\n```\n// Create the window\nmainWindow = new BrowserWindow({\n    title: packageInfo.displayName,\n    width: 1000,\n    height: 768,\n    \"min-width\": 1000,\n    \"min-height\": 768,\n    icon: __dirname + \"/icon.png\" // Linux icon on launcher\n});\n\n// Enable this to show developer tools if there is an exception before the application is fully initialized\n// mainWindow.toggleDevTools();\n\nvar preventBubbling = (e: Event) => {\n    e.preventDefault();\n    return false;\n};\n\n// Prevent the window to navigate to other pages.\n// i.e: When droping a file to the app.\nmainWindow.webContents.on(\"will-navigate\", preventBubbling);\n\n// Remove the reference of the window to avoid memory leaks\n// when the app is closed.\nmainWindow.on(\"closed\", onMainWindowClosed);\n\n// Handle process crashes unexpectly\n// Documentation: http://electron.atom.io/docs/all/#event-crashed\nmainWindow.webContents.on(\"crashed\", rendererProcessCrashHandler);\n\n// Load the main page.\nmainWindow.loadUrl(\"file://\" + __dirname + \"/renderer/index.html\");\n```\n\n}\n\n// Handle gpu process crashes unexpectly\n// Documentation: http://electron.atom.io/docs/all/#event-gpu-process-crashed\napp.on(\"gpu-process-crashed\", mainProcessGPUCrashHandler);\n\n// To get custom url proocol in OSX, we need to listen to the open-url event \n// before the ready event since your app is registered to URL schemes\napp.on(\"open-url\", function (event, url) {\n    (<any>global)[constants.macParams] = url;\n});\n\n// Handle uncaught exceptions from rederer processes\nipc.on(constants.UncaughtExceptionRendererEvent, uncaughtJSErrorHandler);\n\n// Get cmd arguments if APP is started from deeplink.\n(<any>global)[constants.sharedObjectName] = { args: process.argv };\n\napp.on(\"ready\", function () {\n    // Set the AppId early once the app is ready.\n    // This allowes the OS to identify the app instance and\n    // not confuse it with another Electron app.\n    // This needs to be executed right after the app is ready.\n    app.setAppUserModelId(\"com.microsoft.StorageExplorer\");\n\n```\n// Prevent the default Menu to appear\nvar menuConfig = menu.buildFromTemplate([]);\nmenu.setApplicationMenu(menuConfig);\n\ncreateMainWindow();\n```\n\n});\n`\nconstants.macParams is globally defined and I'm using it in my renderer process as shown below:\n           var args: string[] = remote.getGlobal(constants.sharedObjectName).args;\n            args.push(remote.getGlobal(constants.macParams));\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/239342594",
    "html_url": "https://github.com/electron/electron/issues/6820#issuecomment-239342594",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/6820",
    "id": 239342594,
    "user": {
      "login": "nishant09",
      "id": 7454585,
      "avatar_url": "https://avatars2.githubusercontent.com/u/7454585?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nishant09",
      "html_url": "https://github.com/nishant09",
      "followers_url": "https://api.github.com/users/nishant09/followers",
      "following_url": "https://api.github.com/users/nishant09/following{/other_user}",
      "gists_url": "https://api.github.com/users/nishant09/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nishant09/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nishant09/subscriptions",
      "organizations_url": "https://api.github.com/users/nishant09/orgs",
      "repos_url": "https://api.github.com/users/nishant09/repos",
      "events_url": "https://api.github.com/users/nishant09/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nishant09/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-12T01:47:57Z",
    "updated_at": "2016-08-12T01:47:57Z",
    "body": "hope the code is in the readable state. This code works ok if the app is not launched yet.\nBut I want to make it work even when the app is already launched and click on the deep link. My renderer process should be invoked as soon as I click on the deep link and \"open-url\" gets triggered and Main process should pass the updated value of the contants.macParams to the renderer process\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/239342805",
    "html_url": "https://github.com/electron/electron/issues/6820#issuecomment-239342805",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/6820",
    "id": 239342805,
    "user": {
      "login": "MarshallOfSound",
      "id": 6634592,
      "avatar_url": "https://avatars0.githubusercontent.com/u/6634592?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarshallOfSound",
      "html_url": "https://github.com/MarshallOfSound",
      "followers_url": "https://api.github.com/users/MarshallOfSound/followers",
      "following_url": "https://api.github.com/users/MarshallOfSound/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarshallOfSound/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarshallOfSound/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarshallOfSound/subscriptions",
      "organizations_url": "https://api.github.com/users/MarshallOfSound/orgs",
      "repos_url": "https://api.github.com/users/MarshallOfSound/repos",
      "events_url": "https://api.github.com/users/MarshallOfSound/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarshallOfSound/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-12T01:49:43Z",
    "updated_at": "2016-08-12T01:49:43Z",
    "body": "> My renderer process should be invoked as soon as I click on the deep link and \"open-url\" gets triggered and Main process should pass the updated value of the contants.macParams to the renderer process\n\n@nishant09 From a quick look through your code you aren't even trying to do that.  Setting a global isn't going to magically reload the renderer process and pass in the new global.  Things don't work like that üòï \n\nYou would need to send the new value that you received in `open-url` into the existing renderer process with IPC\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/239496580",
    "html_url": "https://github.com/electron/electron/issues/6820#issuecomment-239496580",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/6820",
    "id": 239496580,
    "user": {
      "login": "nishant09",
      "id": 7454585,
      "avatar_url": "https://avatars2.githubusercontent.com/u/7454585?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nishant09",
      "html_url": "https://github.com/nishant09",
      "followers_url": "https://api.github.com/users/nishant09/followers",
      "following_url": "https://api.github.com/users/nishant09/following{/other_user}",
      "gists_url": "https://api.github.com/users/nishant09/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nishant09/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nishant09/subscriptions",
      "organizations_url": "https://api.github.com/users/nishant09/orgs",
      "repos_url": "https://api.github.com/users/nishant09/repos",
      "events_url": "https://api.github.com/users/nishant09/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nishant09/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-12T16:41:16Z",
    "updated_at": "2016-08-12T16:41:16Z",
    "body": "@MarshallOfSound got it. Thanks for reviewing and your feedback. I will look into IPC now.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/239496744",
    "html_url": "https://github.com/electron/electron/issues/6820#issuecomment-239496744",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/6820",
    "id": 239496744,
    "user": {
      "login": "nishant09",
      "id": 7454585,
      "avatar_url": "https://avatars2.githubusercontent.com/u/7454585?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nishant09",
      "html_url": "https://github.com/nishant09",
      "followers_url": "https://api.github.com/users/nishant09/followers",
      "following_url": "https://api.github.com/users/nishant09/following{/other_user}",
      "gists_url": "https://api.github.com/users/nishant09/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nishant09/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nishant09/subscriptions",
      "organizations_url": "https://api.github.com/users/nishant09/orgs",
      "repos_url": "https://api.github.com/users/nishant09/repos",
      "events_url": "https://api.github.com/users/nishant09/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nishant09/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-12T16:41:55Z",
    "updated_at": "2016-08-12T16:41:55Z",
    "body": "could you name the portal where we can ask/discuss questions related to Electron ?\n"
  }
]