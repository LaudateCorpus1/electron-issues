[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/247680730",
    "html_url": "https://github.com/electron/electron/issues/7228#issuecomment-247680730",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7228",
    "id": 247680730,
    "user": {
      "login": "kevinsawicki",
      "id": 671378,
      "avatar_url": "https://avatars0.githubusercontent.com/u/671378?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kevinsawicki",
      "html_url": "https://github.com/kevinsawicki",
      "followers_url": "https://api.github.com/users/kevinsawicki/followers",
      "following_url": "https://api.github.com/users/kevinsawicki/following{/other_user}",
      "gists_url": "https://api.github.com/users/kevinsawicki/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kevinsawicki/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kevinsawicki/subscriptions",
      "organizations_url": "https://api.github.com/users/kevinsawicki/orgs",
      "repos_url": "https://api.github.com/users/kevinsawicki/repos",
      "events_url": "https://api.github.com/users/kevinsawicki/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kevinsawicki/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2016-09-16T19:00:36Z",
    "updated_at": "2016-09-16T19:00:36Z",
    "body": "> In Electron when I open window via (window.open(myURL)) window.opener is replaced with BrowserWindowProxy (Electron API) which does not expose the same window (Window object instance) from which the (window.open(myURL)) was called\n\nWhat APIs are missing on `BrowserWindowProxy` that your app needs?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/247682601",
    "html_url": "https://github.com/electron/electron/issues/7228#issuecomment-247682601",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7228",
    "id": 247682601,
    "user": {
      "login": "hivaga",
      "id": 473649,
      "avatar_url": "https://avatars1.githubusercontent.com/u/473649?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hivaga",
      "html_url": "https://github.com/hivaga",
      "followers_url": "https://api.github.com/users/hivaga/followers",
      "following_url": "https://api.github.com/users/hivaga/following{/other_user}",
      "gists_url": "https://api.github.com/users/hivaga/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hivaga/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hivaga/subscriptions",
      "organizations_url": "https://api.github.com/users/hivaga/orgs",
      "repos_url": "https://api.github.com/users/hivaga/repos",
      "events_url": "https://api.github.com/users/hivaga/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hivaga/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-16T19:09:43Z",
    "updated_at": "2016-09-16T19:10:01Z",
    "body": "It is not about the concrete Window API it is more about the way to share same object instance (or shared memory access on a low level) between different Electron windows. For example I have a AssetsLoaderService instance in MainProcess (Main Window) and it has already loaded a bunch of assets and I want to have access to it in other window instances so that I don't need to load the assets again. Is there a way to share same object instance from Main Window to others ?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/247979159",
    "html_url": "https://github.com/electron/electron/issues/7228#issuecomment-247979159",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7228",
    "id": 247979159,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2016-09-19T12:26:09Z",
    "updated_at": "2016-09-19T12:26:09Z",
    "body": "We will enable it after adding an option to disable node integration in renderer process, and #6919 is an ongoing effort.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/250077054",
    "html_url": "https://github.com/electron/electron/issues/7228#issuecomment-250077054",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7228",
    "id": 250077054,
    "user": {
      "login": "jhgg",
      "id": 5489149,
      "avatar_url": "https://avatars0.githubusercontent.com/u/5489149?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jhgg",
      "html_url": "https://github.com/jhgg",
      "followers_url": "https://api.github.com/users/jhgg/followers",
      "following_url": "https://api.github.com/users/jhgg/following{/other_user}",
      "gists_url": "https://api.github.com/users/jhgg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jhgg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jhgg/subscriptions",
      "organizations_url": "https://api.github.com/users/jhgg/orgs",
      "repos_url": "https://api.github.com/users/jhgg/repos",
      "events_url": "https://api.github.com/users/jhgg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jhgg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-28T05:43:09Z",
    "updated_at": "2016-09-28T05:43:09Z",
    "body": "Just out of curiosity - if you have time to reply - what is the reason for requiring the node integration from being disabled for native window.opener? \n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/251052254",
    "html_url": "https://github.com/electron/electron/issues/7228#issuecomment-251052254",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7228",
    "id": 251052254,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2016-10-03T08:28:28Z",
    "updated_at": "2016-10-03T08:28:40Z",
    "body": "@jhgg It is not safe to have multiple Node.js instances in one process, while native window.opener needs to run multiple pages in one renderer process.\n\nThis will change when Node.js has support for multi-thread.\n"
  }
]