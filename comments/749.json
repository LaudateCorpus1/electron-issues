[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/60705572",
    "html_url": "https://github.com/electron/electron/issues/749#issuecomment-60705572",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/749",
    "id": 60705572,
    "user": {
      "login": "cigitia",
      "id": 6068566,
      "avatar_url": "https://avatars2.githubusercontent.com/u/6068566?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cigitia",
      "html_url": "https://github.com/cigitia",
      "followers_url": "https://api.github.com/users/cigitia/followers",
      "following_url": "https://api.github.com/users/cigitia/following{/other_user}",
      "gists_url": "https://api.github.com/users/cigitia/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cigitia/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cigitia/subscriptions",
      "organizations_url": "https://api.github.com/users/cigitia/orgs",
      "repos_url": "https://api.github.com/users/cigitia/repos",
      "events_url": "https://api.github.com/users/cigitia/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cigitia/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-28T03:34:03Z",
    "updated_at": "2015-02-11T01:20:04Z",
    "body": "Correction: though it’s otherwise undocumented, [<del>node-webkit</del> <ins>nw.js</ins> appears to already support both creating `File` objects from file-path strings and then adding them to `FileList`s](https://github.com/rogerwang/node-webkit/blob/0afb5476f5cbd29d7efa299acedc28d86ae7cdd9/tests/automatic_tests/filevalue/index.html). These in turn can be used to set the value of `<input type=\"file\">` elements’ `files` properties. Similar functionality in atom-shell would be very welcome.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/113885453",
    "html_url": "https://github.com/electron/electron/issues/749#issuecomment-113885453",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/749",
    "id": 113885453,
    "user": {
      "login": "ghost",
      "id": 10137,
      "avatar_url": "https://avatars0.githubusercontent.com/u/10137?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-21T11:10:11Z",
    "updated_at": "2015-06-21T11:10:11Z",
    "body": "Hello!\nHas there been any progress on this issue since it was logged?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/141740615",
    "html_url": "https://github.com/electron/electron/issues/749#issuecomment-141740615",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/749",
    "id": 141740615,
    "user": {
      "login": "fritx",
      "id": 6647633,
      "avatar_url": "https://avatars1.githubusercontent.com/u/6647633?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fritx",
      "html_url": "https://github.com/fritx",
      "followers_url": "https://api.github.com/users/fritx/followers",
      "following_url": "https://api.github.com/users/fritx/following{/other_user}",
      "gists_url": "https://api.github.com/users/fritx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fritx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fritx/subscriptions",
      "organizations_url": "https://api.github.com/users/fritx/orgs",
      "repos_url": "https://api.github.com/users/fritx/repos",
      "events_url": "https://api.github.com/users/fritx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fritx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-20T03:23:37Z",
    "updated_at": "2015-09-20T03:23:37Z",
    "body": "Hello!\nHas there been any progress on this issue since it was logged?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/145764807",
    "html_url": "https://github.com/electron/electron/issues/749#issuecomment-145764807",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/749",
    "id": 145764807,
    "user": {
      "login": "erikmellum",
      "id": 6475033,
      "avatar_url": "https://avatars2.githubusercontent.com/u/6475033?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/erikmellum",
      "html_url": "https://github.com/erikmellum",
      "followers_url": "https://api.github.com/users/erikmellum/followers",
      "following_url": "https://api.github.com/users/erikmellum/following{/other_user}",
      "gists_url": "https://api.github.com/users/erikmellum/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/erikmellum/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/erikmellum/subscriptions",
      "organizations_url": "https://api.github.com/users/erikmellum/orgs",
      "repos_url": "https://api.github.com/users/erikmellum/repos",
      "events_url": "https://api.github.com/users/erikmellum/events{/privacy}",
      "received_events_url": "https://api.github.com/users/erikmellum/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-06T07:11:37Z",
    "updated_at": "2015-10-06T08:25:33Z",
    "body": "This is a feature that would be incredibly useful. It's near impossible to programmatically upload a file in electron right now. \n\nhttps://developer.mozilla.org/en-US/docs/Extensions/Using_the_DOM_File_API_in_chrome_code\n\nI imagine it would like like this:\n\n`var file = File(dsFile.path);`\nand then I could do something like:\n`fd.append('attachment', file);`\nto build a form with a file without using the input dialog!\n\nMy app is for managing code projects, and you can push the code to an endpoint on the internet. I know where the file I need to upload is based on the path the files are stored, so why should I make them go through the extra step of selecting it for me?\n\nMore detail: http://stackoverflow.com/questions/8390855/how-to-instantiate-a-file-object-in-javascript\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/159834555",
    "html_url": "https://github.com/electron/electron/issues/749#issuecomment-159834555",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/749",
    "id": 159834555,
    "user": {
      "login": "lordgreg",
      "id": 480546,
      "avatar_url": "https://avatars3.githubusercontent.com/u/480546?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lordgreg",
      "html_url": "https://github.com/lordgreg",
      "followers_url": "https://api.github.com/users/lordgreg/followers",
      "following_url": "https://api.github.com/users/lordgreg/following{/other_user}",
      "gists_url": "https://api.github.com/users/lordgreg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lordgreg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lordgreg/subscriptions",
      "organizations_url": "https://api.github.com/users/lordgreg/orgs",
      "repos_url": "https://api.github.com/users/lordgreg/repos",
      "events_url": "https://api.github.com/users/lordgreg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lordgreg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-26T07:26:15Z",
    "updated_at": "2015-11-26T07:26:15Z",
    "body": "Has there been any news about this subject lately?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/166926760",
    "html_url": "https://github.com/electron/electron/issues/749#issuecomment-166926760",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/749",
    "id": 166926760,
    "user": {
      "login": "kit92",
      "id": 5752403,
      "avatar_url": "https://avatars2.githubusercontent.com/u/5752403?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kit92",
      "html_url": "https://github.com/kit92",
      "followers_url": "https://api.github.com/users/kit92/followers",
      "following_url": "https://api.github.com/users/kit92/following{/other_user}",
      "gists_url": "https://api.github.com/users/kit92/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kit92/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kit92/subscriptions",
      "organizations_url": "https://api.github.com/users/kit92/orgs",
      "repos_url": "https://api.github.com/users/kit92/repos",
      "events_url": "https://api.github.com/users/kit92/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kit92/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-23T15:43:50Z",
    "updated_at": "2015-12-23T15:43:50Z",
    "body": "Does anyone know where in the chromium blink JS engine I could find the handler for this? I would be willing to dive in the code and see if I could make the change to the methods to make this work. I'd just rather not have to read all the chromium code to find this one issue. \n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/213822739",
    "html_url": "https://github.com/electron/electron/issues/749#issuecomment-213822739",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/749",
    "id": 213822739,
    "user": {
      "login": "svbatalov",
      "id": 304616,
      "avatar_url": "https://avatars2.githubusercontent.com/u/304616?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svbatalov",
      "html_url": "https://github.com/svbatalov",
      "followers_url": "https://api.github.com/users/svbatalov/followers",
      "following_url": "https://api.github.com/users/svbatalov/following{/other_user}",
      "gists_url": "https://api.github.com/users/svbatalov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svbatalov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svbatalov/subscriptions",
      "organizations_url": "https://api.github.com/users/svbatalov/orgs",
      "repos_url": "https://api.github.com/users/svbatalov/repos",
      "events_url": "https://api.github.com/users/svbatalov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svbatalov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-23T20:15:43Z",
    "updated_at": "2016-04-23T20:15:43Z",
    "body": "Hi.\nWe are making a browser automation tool (called The Bots Factory, or TBF) and one of our 'bots' required setting files in file input without user interaction. The trick that finally worked is to use chrome remote debugging, something like this:\n\n```\n// wv -- WebView\nvar wc = wv.getWebContents();\ntry {\n  wc.debugger.attach(\"1.1\");\n} catch (err) {\n  console.error(\"Debugger attach failed : \", err);\n};\n\nwc.debugger.sendCommand(\"DOM.getDocument\", {}, function (err, res) {\n  wc.debugger.sendCommand(\"DOM.querySelector\", {\n    nodeId: res.root.nodeId,\n    selector: \"#file\"  // CSS selector of input[type=file] element\n  }, function (err, res) {\n    wc.debugger.sendCommand(\"DOM.setFileInputFiles\", {\n      nodeId: res.nodeId,\n      files: ['/tmp/tst']  // Actual list of paths\n    }, function (err, res) {\n      wc.debugger.detach();\n    });\n  });\n});\n```\n\nNote that the DevTools for the webview (in this case) must be closed for this to work.\n\nRelevant pages:\n- [Chrome remote debugging protocol 1.1](http://chromedevtools.github.io/debugger-protocol-viewer-1.1/DOM/)\n- [WebContents debugger API](http://electron.atom.io/docs/v0.37.2/api/web-contents/#webcontentsdebugger)\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/251515649",
    "html_url": "https://github.com/electron/electron/issues/749#issuecomment-251515649",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/749",
    "id": 251515649,
    "user": {
      "login": "rosshinkley",
      "id": 1823131,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1823131?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rosshinkley",
      "html_url": "https://github.com/rosshinkley",
      "followers_url": "https://api.github.com/users/rosshinkley/followers",
      "following_url": "https://api.github.com/users/rosshinkley/following{/other_user}",
      "gists_url": "https://api.github.com/users/rosshinkley/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rosshinkley/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rosshinkley/subscriptions",
      "organizations_url": "https://api.github.com/users/rosshinkley/orgs",
      "repos_url": "https://api.github.com/users/rosshinkley/repos",
      "events_url": "https://api.github.com/users/rosshinkley/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rosshinkley/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-04T21:14:08Z",
    "updated_at": "2016-10-04T21:14:08Z",
    "body": "@svbatalov's example works, but it appears that the MIME type determination based on the registry/XDG is skipped (it looks like [`include_platform_types` might be false?](https://github.com/segmentio/nightmare/issues/787)).  Some spot-checking leads me to believe that the [hard coded](https://cs.chromium.org/chromium/src/net/base/mime_util.cc?sq=package:chromium&rcl=1475162463&l=64-112) MIME types will get determined properly, but anything else will fall to the default of `application/octet-stream`.\n\nIs there a way to force the type check or explicitly set the type from the debugger?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/254465230",
    "html_url": "https://github.com/electron/electron/issues/749#issuecomment-254465230",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/749",
    "id": 254465230,
    "user": {
      "login": "idododu",
      "id": 7663884,
      "avatar_url": "https://avatars3.githubusercontent.com/u/7663884?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/idododu",
      "html_url": "https://github.com/idododu",
      "followers_url": "https://api.github.com/users/idododu/followers",
      "following_url": "https://api.github.com/users/idododu/following{/other_user}",
      "gists_url": "https://api.github.com/users/idododu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/idododu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/idododu/subscriptions",
      "organizations_url": "https://api.github.com/users/idododu/orgs",
      "repos_url": "https://api.github.com/users/idododu/repos",
      "events_url": "https://api.github.com/users/idododu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/idododu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-18T10:11:52Z",
    "updated_at": "2016-10-18T10:11:52Z",
    "body": "+1\n\nI am doing a upload app using electron and an opensource js upload library, and it works great in a webview.\nI would like to add a feature: when open this app, it will continue to upload the file.\nIf I could set default files list for input file, then it will be easy to implement.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/254757151",
    "html_url": "https://github.com/electron/electron/issues/749#issuecomment-254757151",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/749",
    "id": 254757151,
    "user": {
      "login": "idododu",
      "id": 7663884,
      "avatar_url": "https://avatars3.githubusercontent.com/u/7663884?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/idododu",
      "html_url": "https://github.com/idododu",
      "followers_url": "https://api.github.com/users/idododu/followers",
      "following_url": "https://api.github.com/users/idododu/following{/other_user}",
      "gists_url": "https://api.github.com/users/idododu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/idododu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/idododu/subscriptions",
      "organizations_url": "https://api.github.com/users/idododu/orgs",
      "repos_url": "https://api.github.com/users/idododu/repos",
      "events_url": "https://api.github.com/users/idododu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/idododu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-19T09:08:27Z",
    "updated_at": "2016-10-19T09:08:27Z",
    "body": "@svbatalov , \n1. should I put your codes in main process or render process?\n2. do I have to use a webview tag in my html file?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/254915838",
    "html_url": "https://github.com/electron/electron/issues/749#issuecomment-254915838",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/749",
    "id": 254915838,
    "user": {
      "login": "svbatalov",
      "id": 304616,
      "avatar_url": "https://avatars2.githubusercontent.com/u/304616?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/svbatalov",
      "html_url": "https://github.com/svbatalov",
      "followers_url": "https://api.github.com/users/svbatalov/followers",
      "following_url": "https://api.github.com/users/svbatalov/following{/other_user}",
      "gists_url": "https://api.github.com/users/svbatalov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/svbatalov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/svbatalov/subscriptions",
      "organizations_url": "https://api.github.com/users/svbatalov/orgs",
      "repos_url": "https://api.github.com/users/svbatalov/repos",
      "events_url": "https://api.github.com/users/svbatalov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/svbatalov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-19T19:28:32Z",
    "updated_at": "2016-10-19T19:28:32Z",
    "body": "AFAICT this approach should work as long as corresponding [webContents](http://electron.atom.io/docs/api/web-contents/#class-debugger) is available (mind the DevTools restriction). Take a look at the following [gist](https://gist.github.com/svbatalov/316da55cb0fb03e30eb1be1b49afd734) for simple demonstration (most of the code is identical to the above).\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/255003448",
    "html_url": "https://github.com/electron/electron/issues/749#issuecomment-255003448",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/749",
    "id": 255003448,
    "user": {
      "login": "idododu",
      "id": 7663884,
      "avatar_url": "https://avatars3.githubusercontent.com/u/7663884?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/idododu",
      "html_url": "https://github.com/idododu",
      "followers_url": "https://api.github.com/users/idododu/followers",
      "following_url": "https://api.github.com/users/idododu/following{/other_user}",
      "gists_url": "https://api.github.com/users/idododu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/idododu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/idododu/subscriptions",
      "organizations_url": "https://api.github.com/users/idododu/orgs",
      "repos_url": "https://api.github.com/users/idododu/repos",
      "events_url": "https://api.github.com/users/idododu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/idododu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-20T03:59:31Z",
    "updated_at": "2016-10-20T05:31:29Z",
    "body": "Tried your git, it works great!!!\n\ndetach debugger to avoid 'another debugger has been attached' error!\n\n```\ntry {\n        if(wc.debugger.isAttached()) {\n            wc.debugger.detach();\n        }\n        wc.debugger.attach(\"1.1\");\n    } catch (err) {\n        console.error(\"Debugger attach failed : \", err);\n    }\n```\n"
  }
]