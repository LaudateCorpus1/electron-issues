[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/311067680",
    "html_url": "https://github.com/electron/electron/issues/9862#issuecomment-311067680",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/9862",
    "id": 311067680,
    "user": {
      "login": "MarshallOfSound",
      "id": 6634592,
      "avatar_url": "https://avatars0.githubusercontent.com/u/6634592?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarshallOfSound",
      "html_url": "https://github.com/MarshallOfSound",
      "followers_url": "https://api.github.com/users/MarshallOfSound/followers",
      "following_url": "https://api.github.com/users/MarshallOfSound/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarshallOfSound/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarshallOfSound/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarshallOfSound/subscriptions",
      "organizations_url": "https://api.github.com/users/MarshallOfSound/orgs",
      "repos_url": "https://api.github.com/users/MarshallOfSound/repos",
      "events_url": "https://api.github.com/users/MarshallOfSound/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarshallOfSound/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-26T14:00:14Z",
    "updated_at": "2017-06-26T14:00:14Z",
    "body": "`mainWindow.removeAllListeners('close');` this is almost certainly your problem, I can't verify now but Electron almost certainly internally listens for that even as well and removing all listeners removes Electron's listeners as well.\r\n\r\nIn general it is good practice to be more explicit when removing listeners, pass it the exact function you want to unregister as well as the event name to ensure no side effects."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/311070172",
    "html_url": "https://github.com/electron/electron/issues/9862#issuecomment-311070172",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/9862",
    "id": 311070172,
    "user": {
      "login": "four-eyes-04-04",
      "id": 21032419,
      "avatar_url": "https://avatars3.githubusercontent.com/u/21032419?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/four-eyes-04-04",
      "html_url": "https://github.com/four-eyes-04-04",
      "followers_url": "https://api.github.com/users/four-eyes-04-04/followers",
      "following_url": "https://api.github.com/users/four-eyes-04-04/following{/other_user}",
      "gists_url": "https://api.github.com/users/four-eyes-04-04/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/four-eyes-04-04/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/four-eyes-04-04/subscriptions",
      "organizations_url": "https://api.github.com/users/four-eyes-04-04/orgs",
      "repos_url": "https://api.github.com/users/four-eyes-04-04/repos",
      "events_url": "https://api.github.com/users/four-eyes-04-04/events{/privacy}",
      "received_events_url": "https://api.github.com/users/four-eyes-04-04/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-26T14:09:26Z",
    "updated_at": "2017-06-26T14:09:26Z",
    "body": "But I use anonymous functions for listeners, like in the `app.on('ready')`. Would I be required to use named functions?"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/311071822",
    "html_url": "https://github.com/electron/electron/issues/9862#issuecomment-311071822",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/9862",
    "id": 311071822,
    "user": {
      "login": "MarshallOfSound",
      "id": 6634592,
      "avatar_url": "https://avatars0.githubusercontent.com/u/6634592?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarshallOfSound",
      "html_url": "https://github.com/MarshallOfSound",
      "followers_url": "https://api.github.com/users/MarshallOfSound/followers",
      "following_url": "https://api.github.com/users/MarshallOfSound/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarshallOfSound/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarshallOfSound/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarshallOfSound/subscriptions",
      "organizations_url": "https://api.github.com/users/MarshallOfSound/orgs",
      "repos_url": "https://api.github.com/users/MarshallOfSound/repos",
      "events_url": "https://api.github.com/users/MarshallOfSound/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarshallOfSound/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-26T14:14:55Z",
    "updated_at": "2017-06-26T14:14:55Z",
    "body": "@four-eyes-04-04 If you want to safely remove a listener yes, you need to keep a reference to it. You can do this through a named function `function foo () {}` or still using an arrow function `const foo = () => {}`"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/311074002",
    "html_url": "https://github.com/electron/electron/issues/9862#issuecomment-311074002",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/9862",
    "id": 311074002,
    "user": {
      "login": "four-eyes-04-04",
      "id": 21032419,
      "avatar_url": "https://avatars3.githubusercontent.com/u/21032419?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/four-eyes-04-04",
      "html_url": "https://github.com/four-eyes-04-04",
      "followers_url": "https://api.github.com/users/four-eyes-04-04/followers",
      "following_url": "https://api.github.com/users/four-eyes-04-04/following{/other_user}",
      "gists_url": "https://api.github.com/users/four-eyes-04-04/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/four-eyes-04-04/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/four-eyes-04-04/subscriptions",
      "organizations_url": "https://api.github.com/users/four-eyes-04-04/orgs",
      "repos_url": "https://api.github.com/users/four-eyes-04-04/repos",
      "events_url": "https://api.github.com/users/four-eyes-04-04/events{/privacy}",
      "received_events_url": "https://api.github.com/users/four-eyes-04-04/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-26T14:22:27Z",
    "updated_at": "2017-06-26T14:22:27Z",
    "body": "@MarshallOfSound Okay, but from the [docs](https://electron.atom.io/docs/all/#ipcmainremovealllistenerschannel) I saw that `removeAllListeners` only accepts one parameter, should I use `removeListener` over `removeAllListeners`? also shouldn't `app.quit()` be enough? I mean it should remove all listeners by default right since we are quitting the application."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/311074928",
    "html_url": "https://github.com/electron/electron/issues/9862#issuecomment-311074928",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/9862",
    "id": 311074928,
    "user": {
      "login": "MarshallOfSound",
      "id": 6634592,
      "avatar_url": "https://avatars0.githubusercontent.com/u/6634592?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarshallOfSound",
      "html_url": "https://github.com/MarshallOfSound",
      "followers_url": "https://api.github.com/users/MarshallOfSound/followers",
      "following_url": "https://api.github.com/users/MarshallOfSound/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarshallOfSound/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarshallOfSound/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarshallOfSound/subscriptions",
      "organizations_url": "https://api.github.com/users/MarshallOfSound/orgs",
      "repos_url": "https://api.github.com/users/MarshallOfSound/repos",
      "events_url": "https://api.github.com/users/MarshallOfSound/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarshallOfSound/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-26T14:25:23Z",
    "updated_at": "2017-06-26T14:25:23Z",
    "body": "To remove a single listener you should use `removeListener`.\r\n\r\nCalling `app.quit()` will not remove listeners, it will still emit several events while quitting the application, some of which you can call `event.preventDefault()` to stop the quitting process."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/311078000",
    "html_url": "https://github.com/electron/electron/issues/9862#issuecomment-311078000",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/9862",
    "id": 311078000,
    "user": {
      "login": "four-eyes-04-04",
      "id": 21032419,
      "avatar_url": "https://avatars3.githubusercontent.com/u/21032419?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/four-eyes-04-04",
      "html_url": "https://github.com/four-eyes-04-04",
      "followers_url": "https://api.github.com/users/four-eyes-04-04/followers",
      "following_url": "https://api.github.com/users/four-eyes-04-04/following{/other_user}",
      "gists_url": "https://api.github.com/users/four-eyes-04-04/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/four-eyes-04-04/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/four-eyes-04-04/subscriptions",
      "organizations_url": "https://api.github.com/users/four-eyes-04-04/orgs",
      "repos_url": "https://api.github.com/users/four-eyes-04-04/repos",
      "events_url": "https://api.github.com/users/four-eyes-04-04/events{/privacy}",
      "received_events_url": "https://api.github.com/users/four-eyes-04-04/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-26T14:35:39Z",
    "updated_at": "2017-06-26T14:35:39Z",
    "body": "I did as you said, now the only event listener that I have is on the `app` object, and the `on ready`, now this is the only script that I have.\r\n\r\n```\r\nimport electron from 'electron';\r\nimport path from 'path';\r\nimport url from 'url';\r\n\r\nconst Browser = electron.BrowserWindow;\r\nconst app = electron.app;\r\n\r\nlet mainWindow;\r\n\r\nconst appReadyEvent = () => {\r\n  mainWindow = new Browser({\r\n    minWidth: 1024,\r\n    minHeight: 600,\r\n    width: 1024,\r\n    height: 600\r\n  });\r\n\r\n  mainWindow.loadURL(url.format({\r\n    pathname: path.join(__dirname, 'main.html'),\r\n    protocol: 'file',\r\n    slashes: true\r\n  }));\r\n}\r\n\r\napp.on('ready', appReadyEvent);\r\n\r\napp.on('window-close-all', () => {\r\n  app.quit();\r\n});\r\n```\r\n\r\nthe problem still persists."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/311080172",
    "html_url": "https://github.com/electron/electron/issues/9862#issuecomment-311080172",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/9862",
    "id": 311080172,
    "user": {
      "login": "four-eyes-04-04",
      "id": 21032419,
      "avatar_url": "https://avatars3.githubusercontent.com/u/21032419?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/four-eyes-04-04",
      "html_url": "https://github.com/four-eyes-04-04",
      "followers_url": "https://api.github.com/users/four-eyes-04-04/followers",
      "following_url": "https://api.github.com/users/four-eyes-04-04/following{/other_user}",
      "gists_url": "https://api.github.com/users/four-eyes-04-04/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/four-eyes-04-04/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/four-eyes-04-04/subscriptions",
      "organizations_url": "https://api.github.com/users/four-eyes-04-04/orgs",
      "repos_url": "https://api.github.com/users/four-eyes-04-04/repos",
      "events_url": "https://api.github.com/users/four-eyes-04-04/events{/privacy}",
      "received_events_url": "https://api.github.com/users/four-eyes-04-04/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-26T14:43:08Z",
    "updated_at": "2017-06-26T14:43:08Z",
    "body": "I created a repo for it at https://github.com/four-eyes-04-04/1-helloworld-electron"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/311091761",
    "html_url": "https://github.com/electron/electron/issues/9862#issuecomment-311091761",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/9862",
    "id": 311091761,
    "user": {
      "login": "four-eyes-04-04",
      "id": 21032419,
      "avatar_url": "https://avatars3.githubusercontent.com/u/21032419?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/four-eyes-04-04",
      "html_url": "https://github.com/four-eyes-04-04",
      "followers_url": "https://api.github.com/users/four-eyes-04-04/followers",
      "following_url": "https://api.github.com/users/four-eyes-04-04/following{/other_user}",
      "gists_url": "https://api.github.com/users/four-eyes-04-04/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/four-eyes-04-04/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/four-eyes-04-04/subscriptions",
      "organizations_url": "https://api.github.com/users/four-eyes-04-04/orgs",
      "repos_url": "https://api.github.com/users/four-eyes-04-04/repos",
      "events_url": "https://api.github.com/users/four-eyes-04-04/events{/privacy}",
      "received_events_url": "https://api.github.com/users/four-eyes-04-04/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-26T15:21:28Z",
    "updated_at": "2017-06-26T15:21:39Z",
    "body": "After reading [https://github.com/electron/electron/issues/405#issuecomment-46930226](this comment) at issue #405, I was able to solve the problem, seems that `window-close-all` is actually `window-all-closed`, so to remove the processes hanging around when the application was closed, you need to do this.\r\n\r\n```\r\napp.on('window-all-closed', () => {\r\n  app.quit();\r\n});\r\n```\r\n\r\nBut **WHY**?"
  }
]