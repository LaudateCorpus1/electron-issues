[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/63916450",
    "html_url": "https://github.com/electron/electron/issues/838#issuecomment-63916450",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/838",
    "id": 63916450,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2014-11-21T02:38:20Z",
    "updated_at": "2014-11-21T02:38:20Z",
    "body": "Can you provide a minimal app that can show this problem?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/63994139",
    "html_url": "https://github.com/electron/electron/issues/838#issuecomment-63994139",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/838",
    "id": 63994139,
    "user": {
      "login": "brandonecraig",
      "id": 5140118,
      "avatar_url": "https://avatars0.githubusercontent.com/u/5140118?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brandonecraig",
      "html_url": "https://github.com/brandonecraig",
      "followers_url": "https://api.github.com/users/brandonecraig/followers",
      "following_url": "https://api.github.com/users/brandonecraig/following{/other_user}",
      "gists_url": "https://api.github.com/users/brandonecraig/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brandonecraig/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brandonecraig/subscriptions",
      "organizations_url": "https://api.github.com/users/brandonecraig/orgs",
      "repos_url": "https://api.github.com/users/brandonecraig/repos",
      "events_url": "https://api.github.com/users/brandonecraig/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brandonecraig/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-21T16:20:52Z",
    "updated_at": "2014-11-21T16:20:52Z",
    "body": "Here is a very simple protractor test using a sample angular app provided by protractor. \n\natom-shell-spec.js\n\n```\ndescribe('protractor with atom-shell', function() {\n    it('should find angular', function() {\n      browser.get(' http://juliemr.github.io/protractor-demo/');\n    });\n});\n```\n\nAnd a config file using selenium webdriver + atom shell.\n\nconfig.js\n\n```\nexports.config = {\n  seleniumAddress: 'http://localhost:9515',\n  specs: ['./atomSpec.js'],\n  capabilities: {\n    browserName: \"chrome\",\n    chromeOptions: {\n      binary: \"/Applications/Atom.app/Contents/MacOS/Atom\",\n      args: [\"--test-type=webdriver\"]\n    }\n  }\n};\n```\n\nThis is the output when we run \"protractor config.js\"\n\n```\n  1) protractor with atom-shell should find angular\n   Message:\n     Error: Angular could not be found on the page http://juliemr.github.io/protractor-demo/ : angular never provided resumeBootstrap\n   Stacktrace:\n     Error: Angular could not be found on the page http://juliemr.github.io/protractor-demo/ : angular never provided resumeBootstrap\n==== async task ====\nProtractor.get(http://juliemr.github.io/protractor-demo/) - test for angular\n    at [object Object].<anonymous> (/Users/brandon.craig/atomSpec.js:46:15)\n==== async task ====\nAsynchronous test function: it()\nError\n    at [object Object].<anonymous> (/Users/brandon.craig/atomSpec.js:45:5)\n    at Object.<anonymous> (/Users/brandon.craig/atomSpec.js:44:1)\n\nFinished in 16.284 seconds\n1 test, 1 assertion, 1 failure\n```\n\nWhen you run the same test with this config file (which uses Chrome instead of Atom Shell) it passes.\n\n```\nexports.config = {\n  seleniumAddress: 'http://localhost:9515',\n  specs: ['./atomSpec.js'],\n  capabilities: {\n    browserName: \"chrome\",\n    chromeOptions: {\n      binary: \"/Applications/Google Chrome.app/Contents/MacOS/Google Chrome\"\n    }\n  }\n};\n```\n\nFrom what I've gathered, angular.resumeBootstrap() is supposed to be defined when window.name has the prefix 'NG_DEFER_BOOTSTRAP!'. This prefix is set by protractor and but then is presumably reset at some point during the rendering process and thus angular.resumeBootstrap() is never defined.\n\nPlease let me know if you need any more information. \n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/69119855",
    "html_url": "https://github.com/electron/electron/issues/838#issuecomment-69119855",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/838",
    "id": 69119855,
    "user": {
      "login": "mkeesey",
      "id": 1136507,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1136507?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mkeesey",
      "html_url": "https://github.com/mkeesey",
      "followers_url": "https://api.github.com/users/mkeesey/followers",
      "following_url": "https://api.github.com/users/mkeesey/following{/other_user}",
      "gists_url": "https://api.github.com/users/mkeesey/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mkeesey/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mkeesey/subscriptions",
      "organizations_url": "https://api.github.com/users/mkeesey/orgs",
      "repos_url": "https://api.github.com/users/mkeesey/repos",
      "events_url": "https://api.github.com/users/mkeesey/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mkeesey/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-08T00:55:10Z",
    "updated_at": "2015-01-08T00:55:10Z",
    "body": "Specifically, `window.name` does not appear to be preserved on a newly loaded page after executing `window.location.replace(\"http://some-web-address-here\")`, so the process that protractor uses to inform angular to hold off on bootstrapping doesn't work quite right. I modified the above code to test for this more specifically. This assumes that Atom.app resides in the current working directory. The test passes when the `binary: \"./Atom.app/Contents/MacOS/Atom\",` line in config.js is commented out (which uses the system-installed Chrome binary) but fails when using the Atom binary.\n\natom-shell-spec.js\n\n``` javascript\ndescribe('protractor with atom-shell', function() {\n    it('should preserve window.name between pages', function() {\n        browser.driver.get('http://www.google.com/');  //Running directly with the wrapped driver so it doesn't look for angular\n        browser.executeScript(function() { window.name = \"HELLO\"; });\n        browser.executeScript('window.location.replace(\"http://www.example.com\")');\n        expect(browser.executeScript('return window.name;')).toEqual('HELLO');\n    });\n});\n```\n\nconfig.js\n\n``` javascript\nexports.config = {\n    seleniumAddress: 'http://localhost:4444/wd/hub',\n    specs: ['./atom-shell-spec.js'],\n    capabilities: {\n        browserName: \"chrome\",\n        chromeOptions: {\n            binary: \"./Atom.app/Contents/MacOS/Atom\",\n            args: [\"--test-type=webdriver\"]\n        }\n    }\n};\n```\n\nAfter sticking these files into a directory with Atom.app, install protractor if necessary with the steps under Setup at http://angular.github.io/protractor/#/tutorial, then just run `protractor config.js`\n\n@zcbenz - do you have an idea of a good place for me to start looking for where this problem may be caused?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/69230341",
    "html_url": "https://github.com/electron/electron/issues/838#issuecomment-69230341",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/838",
    "id": 69230341,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2015-01-08T19:03:40Z",
    "updated_at": "2015-01-08T19:03:40Z",
    "body": "This bug seems weird to me, I don't know where could be the problem, but to solve it I would try to check if the same bug exists in Content Shell, if it does then I will check Chrome browser's code to find out what they had done, if it does not then I will check what things Content Shell may have done but we didn't.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/69238914",
    "html_url": "https://github.com/electron/electron/issues/838#issuecomment-69238914",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/838",
    "id": 69238914,
    "user": {
      "login": "mkeesey",
      "id": 1136507,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1136507?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mkeesey",
      "html_url": "https://github.com/mkeesey",
      "followers_url": "https://api.github.com/users/mkeesey/followers",
      "following_url": "https://api.github.com/users/mkeesey/following{/other_user}",
      "gists_url": "https://api.github.com/users/mkeesey/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mkeesey/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mkeesey/subscriptions",
      "organizations_url": "https://api.github.com/users/mkeesey/orgs",
      "repos_url": "https://api.github.com/users/mkeesey/repos",
      "events_url": "https://api.github.com/users/mkeesey/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mkeesey/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-08T19:57:45Z",
    "updated_at": "2015-01-08T19:57:45Z",
    "body": "I'll take a look at those, thanks!\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/69671853",
    "html_url": "https://github.com/electron/electron/issues/838#issuecomment-69671853",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/838",
    "id": 69671853,
    "user": {
      "login": "mkeesey",
      "id": 1136507,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1136507?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mkeesey",
      "html_url": "https://github.com/mkeesey",
      "followers_url": "https://api.github.com/users/mkeesey/followers",
      "following_url": "https://api.github.com/users/mkeesey/following{/other_user}",
      "gists_url": "https://api.github.com/users/mkeesey/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mkeesey/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mkeesey/subscriptions",
      "organizations_url": "https://api.github.com/users/mkeesey/orgs",
      "repos_url": "https://api.github.com/users/mkeesey/repos",
      "events_url": "https://api.github.com/users/mkeesey/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mkeesey/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-13T00:02:02Z",
    "updated_at": "2015-01-13T00:02:02Z",
    "body": "So the same bug doesn't exist in Content Shell - it has been difficult so far to figure out what is being done differently in Content Shell that isn't being done in the Atom Shell. Attaching a debugger, I don't see Content Shell calling `DOMWindowV8Internal::nameAttributeSetterCallback` when navigating between pages. This makes me believe that it isn't doing anything special to persist this value, as it looks like this is the only function that can modify the name attribute on the DOM's window object. It does get called (as I would expect) whenever the value is set via javascript.\n\nI'm in the process of rebuilding libchromiumcontent etc with debugging symbols to try to see what does it in Atom.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/93104709",
    "html_url": "https://github.com/electron/electron/issues/838#issuecomment-93104709",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/838",
    "id": 93104709,
    "user": {
      "login": "mkeesey",
      "id": 1136507,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1136507?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mkeesey",
      "html_url": "https://github.com/mkeesey",
      "followers_url": "https://api.github.com/users/mkeesey/followers",
      "following_url": "https://api.github.com/users/mkeesey/following{/other_user}",
      "gists_url": "https://api.github.com/users/mkeesey/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mkeesey/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mkeesey/subscriptions",
      "organizations_url": "https://api.github.com/users/mkeesey/orgs",
      "repos_url": "https://api.github.com/users/mkeesey/repos",
      "events_url": "https://api.github.com/users/mkeesey/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mkeesey/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-14T23:00:11Z",
    "updated_at": "2015-04-14T23:00:11Z",
    "body": "As you probably guessed, I haven't really had time to work on this. It wasn't really clear to me why this was happened - this property seems to get persisted with some magic down in V8 land. In any case, a workaround we found is detailed in this issue: https://github.com/angular/protractor/issues/1464 .\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/217355250",
    "html_url": "https://github.com/electron/electron/issues/838#issuecomment-217355250",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/838",
    "id": 217355250,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2016-05-06T06:09:21Z",
    "updated_at": "2016-05-06T06:09:21Z",
    "body": "I'm closing this since no one is paying attention to it, and there are workarounds for it.\n"
  }
]