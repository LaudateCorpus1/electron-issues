[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/88703617",
    "html_url": "https://github.com/electron/electron/issues/1344#issuecomment-88703617",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1344",
    "id": 88703617,
    "user": {
      "login": "maxogden",
      "id": 39759,
      "avatar_url": "https://avatars3.githubusercontent.com/u/39759?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maxogden",
      "html_url": "https://github.com/maxogden",
      "followers_url": "https://api.github.com/users/maxogden/followers",
      "following_url": "https://api.github.com/users/maxogden/following{/other_user}",
      "gists_url": "https://api.github.com/users/maxogden/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maxogden/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maxogden/subscriptions",
      "organizations_url": "https://api.github.com/users/maxogden/orgs",
      "repos_url": "https://api.github.com/users/maxogden/repos",
      "events_url": "https://api.github.com/users/maxogden/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maxogden/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-02T02:32:01Z",
    "updated_at": "2015-04-02T02:32:01Z",
    "body": "@luicaps docs are here https://github.com/atom/atom-shell/blob/master/docs/api/shell.md#shellopenexternalurl\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/138328385",
    "html_url": "https://github.com/electron/electron/issues/1344#issuecomment-138328385",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1344",
    "id": 138328385,
    "user": {
      "login": "AlicanC",
      "id": 412180,
      "avatar_url": "https://avatars1.githubusercontent.com/u/412180?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AlicanC",
      "html_url": "https://github.com/AlicanC",
      "followers_url": "https://api.github.com/users/AlicanC/followers",
      "following_url": "https://api.github.com/users/AlicanC/following{/other_user}",
      "gists_url": "https://api.github.com/users/AlicanC/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AlicanC/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AlicanC/subscriptions",
      "organizations_url": "https://api.github.com/users/AlicanC/orgs",
      "repos_url": "https://api.github.com/users/AlicanC/repos",
      "events_url": "https://api.github.com/users/AlicanC/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AlicanC/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-07T15:48:52Z",
    "updated_at": "2015-09-07T15:48:52Z",
    "body": "On my setup, I tried both `shell.openExternal('http://example.com')` and `shell.openItem('http://example.com')` and both opened the website in the background.\n\nI ended up using `child_process.execSync('start http://example.com')` on Win32 and `child_process.execSync('open http://example.com')` on Darwin so the browser actually pops up and gets focus.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/149800318",
    "html_url": "https://github.com/electron/electron/issues/1344#issuecomment-149800318",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1344",
    "id": 149800318,
    "user": {
      "login": "suchipi",
      "id": 1341513,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1341513?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/suchipi",
      "html_url": "https://github.com/suchipi",
      "followers_url": "https://api.github.com/users/suchipi/followers",
      "following_url": "https://api.github.com/users/suchipi/following{/other_user}",
      "gists_url": "https://api.github.com/users/suchipi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/suchipi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/suchipi/subscriptions",
      "organizations_url": "https://api.github.com/users/suchipi/orgs",
      "repos_url": "https://api.github.com/users/suchipi/repos",
      "events_url": "https://api.github.com/users/suchipi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/suchipi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-21T07:07:34Z",
    "updated_at": "2015-10-21T07:07:34Z",
    "body": "On Linux, you can use xdg-open:\n`child_process.execSync('xdg-open http://example.com')`\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/150031171",
    "html_url": "https://github.com/electron/electron/issues/1344#issuecomment-150031171",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1344",
    "id": 150031171,
    "user": {
      "login": "AlicanC",
      "id": 412180,
      "avatar_url": "https://avatars1.githubusercontent.com/u/412180?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AlicanC",
      "html_url": "https://github.com/AlicanC",
      "followers_url": "https://api.github.com/users/AlicanC/followers",
      "following_url": "https://api.github.com/users/AlicanC/following{/other_user}",
      "gists_url": "https://api.github.com/users/AlicanC/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AlicanC/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AlicanC/subscriptions",
      "organizations_url": "https://api.github.com/users/AlicanC/orgs",
      "repos_url": "https://api.github.com/users/AlicanC/repos",
      "events_url": "https://api.github.com/users/AlicanC/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AlicanC/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-21T21:35:22Z",
    "updated_at": "2015-10-21T21:35:22Z",
    "body": "I have actually decided to use [node-open](https://github.com/pwnall/node-open). You should give it a try if you don't want to mess with escaping and such.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/168730855",
    "html_url": "https://github.com/electron/electron/issues/1344#issuecomment-168730855",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1344",
    "id": 168730855,
    "user": {
      "login": "havenchyk",
      "id": 1291032,
      "avatar_url": "https://avatars2.githubusercontent.com/u/1291032?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/havenchyk",
      "html_url": "https://github.com/havenchyk",
      "followers_url": "https://api.github.com/users/havenchyk/followers",
      "following_url": "https://api.github.com/users/havenchyk/following{/other_user}",
      "gists_url": "https://api.github.com/users/havenchyk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/havenchyk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/havenchyk/subscriptions",
      "organizations_url": "https://api.github.com/users/havenchyk/orgs",
      "repos_url": "https://api.github.com/users/havenchyk/repos",
      "events_url": "https://api.github.com/users/havenchyk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/havenchyk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-04T16:48:59Z",
    "updated_at": "2016-01-04T16:48:59Z",
    "body": "Guys, but your solutions are great, but I'm wondering how to intercept attempt to open url like \"http://someurl.com\" and then open in with `shell.openExternal`? Service worker allows to catch only requests to the files on the same domain. Is there ability to do this? /cc @maxogden @AlicanC \n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/171512775",
    "html_url": "https://github.com/electron/electron/issues/1344#issuecomment-171512775",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1344",
    "id": 171512775,
    "user": {
      "login": "rubencodes",
      "id": 1036549,
      "avatar_url": "https://avatars2.githubusercontent.com/u/1036549?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rubencodes",
      "html_url": "https://github.com/rubencodes",
      "followers_url": "https://api.github.com/users/rubencodes/followers",
      "following_url": "https://api.github.com/users/rubencodes/following{/other_user}",
      "gists_url": "https://api.github.com/users/rubencodes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rubencodes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rubencodes/subscriptions",
      "organizations_url": "https://api.github.com/users/rubencodes/orgs",
      "repos_url": "https://api.github.com/users/rubencodes/repos",
      "events_url": "https://api.github.com/users/rubencodes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rubencodes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-14T02:38:55Z",
    "updated_at": "2016-01-14T02:38:55Z",
    "body": "Same question here as @havenchyk, is there a way to tell electron to open links external by default?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/171516261",
    "html_url": "https://github.com/electron/electron/issues/1344#issuecomment-171516261",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1344",
    "id": 171516261,
    "user": {
      "login": "suchipi",
      "id": 1341513,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1341513?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/suchipi",
      "html_url": "https://github.com/suchipi",
      "followers_url": "https://api.github.com/users/suchipi/followers",
      "following_url": "https://api.github.com/users/suchipi/following{/other_user}",
      "gists_url": "https://api.github.com/users/suchipi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/suchipi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/suchipi/subscriptions",
      "organizations_url": "https://api.github.com/users/suchipi/orgs",
      "repos_url": "https://api.github.com/users/suchipi/repos",
      "events_url": "https://api.github.com/users/suchipi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/suchipi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-14T03:02:14Z",
    "updated_at": "2016-01-14T03:03:38Z",
    "body": "If your app only uses one window, and you can guarantee that every external link in your app opens in a new window (via eg. `target=\"_blank\"`), you can do something like:\n\n```\nwebContents.on('new-window', function(event, url){\n  event.preventDefault();\n  open(url);\n});\n```\n\nWhere `webContents` is your main BrowserWindow's webContents and `open` is a function that opens the url in your browser (I use [node-open](https://www.npmjs.com/package/open) as recommended by AlicanC).\n\nIt'd be nice if there was an event fired when _any_ link is clicked, so the app could decide if it should open in the browser, but I haven't found such an event if it exists.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/171516636",
    "html_url": "https://github.com/electron/electron/issues/1344#issuecomment-171516636",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1344",
    "id": 171516636,
    "user": {
      "login": "rubencodes",
      "id": 1036549,
      "avatar_url": "https://avatars2.githubusercontent.com/u/1036549?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rubencodes",
      "html_url": "https://github.com/rubencodes",
      "followers_url": "https://api.github.com/users/rubencodes/followers",
      "following_url": "https://api.github.com/users/rubencodes/following{/other_user}",
      "gists_url": "https://api.github.com/users/rubencodes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rubencodes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rubencodes/subscriptions",
      "organizations_url": "https://api.github.com/users/rubencodes/orgs",
      "repos_url": "https://api.github.com/users/rubencodes/repos",
      "events_url": "https://api.github.com/users/rubencodes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rubencodes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-14T03:06:08Z",
    "updated_at": "2016-01-14T03:06:58Z",
    "body": "I found this code snippet on S.O.:\n\n```\n    var shell = require('electron').shell;\n    //open links externally by default\n    $(document).on('click', 'a[href^=\"http\"]', function(event) {\n        event.preventDefault();\n        shell.openExternal(this.href);\n    });\n```\n\nDropped it in my main index file, it seems to be working as far as I can tell, even for dynamically generated links. I'm too noob at electron to know if there are any drawbacks to this I should watch out for. Thoughts?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/208839713",
    "html_url": "https://github.com/electron/electron/issues/1344#issuecomment-208839713",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1344",
    "id": 208839713,
    "user": {
      "login": "pravdomil",
      "id": 2387356,
      "avatar_url": "https://avatars1.githubusercontent.com/u/2387356?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pravdomil",
      "html_url": "https://github.com/pravdomil",
      "followers_url": "https://api.github.com/users/pravdomil/followers",
      "following_url": "https://api.github.com/users/pravdomil/following{/other_user}",
      "gists_url": "https://api.github.com/users/pravdomil/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pravdomil/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pravdomil/subscriptions",
      "organizations_url": "https://api.github.com/users/pravdomil/orgs",
      "repos_url": "https://api.github.com/users/pravdomil/repos",
      "events_url": "https://api.github.com/users/pravdomil/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pravdomil/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-12T10:35:50Z",
    "updated_at": "2016-04-12T10:35:50Z",
    "body": "I'm using this piece of code:\n\n``` js\nvar handleRedirect = (e, url) => {\n  if(url != webContents.getURL()) {\n    e.preventDefault()\n    require('electron').shell.openExternal(url)\n  }\n}\n\nwebContents.on('will-navigate', handleRedirect)\nwebContents.on('new-window', handleRedirect)\n```\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/218495898",
    "html_url": "https://github.com/electron/electron/issues/1344#issuecomment-218495898",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1344",
    "id": 218495898,
    "user": {
      "login": "peterlavey",
      "id": 9827886,
      "avatar_url": "https://avatars0.githubusercontent.com/u/9827886?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/peterlavey",
      "html_url": "https://github.com/peterlavey",
      "followers_url": "https://api.github.com/users/peterlavey/followers",
      "following_url": "https://api.github.com/users/peterlavey/following{/other_user}",
      "gists_url": "https://api.github.com/users/peterlavey/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/peterlavey/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/peterlavey/subscriptions",
      "organizations_url": "https://api.github.com/users/peterlavey/orgs",
      "repos_url": "https://api.github.com/users/peterlavey/repos",
      "events_url": "https://api.github.com/users/peterlavey/events{/privacy}",
      "received_events_url": "https://api.github.com/users/peterlavey/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-11T15:30:33Z",
    "updated_at": "2016-05-11T15:30:33Z",
    "body": "First declare a spawn proccess\n\n`app.controller('GuideCtrl', ['$scope', ($scope)=>{\n      const spawn = require('child_process').spawn;\n\n```\n  $scope.openBrowser=(url)=>{\n     let exec = spawn('explore', [url], {});\n     exec.stdout.on('data', (data)=> {\n        console.log('stdout: ' + data)\n     });\n  }\n```\n\n   }])`\n\nand before call the method\n\n`<a ng-click=\"openBrowser('https://google.com')\">Goto google</a>`\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/262619122",
    "html_url": "https://github.com/electron/electron/issues/1344#issuecomment-262619122",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1344",
    "id": 262619122,
    "user": {
      "login": "greggman",
      "id": 234804,
      "avatar_url": "https://avatars1.githubusercontent.com/u/234804?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/greggman",
      "html_url": "https://github.com/greggman",
      "followers_url": "https://api.github.com/users/greggman/followers",
      "following_url": "https://api.github.com/users/greggman/following{/other_user}",
      "gists_url": "https://api.github.com/users/greggman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/greggman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/greggman/subscriptions",
      "organizations_url": "https://api.github.com/users/greggman/orgs",
      "repos_url": "https://api.github.com/users/greggman/repos",
      "events_url": "https://api.github.com/users/greggman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/greggman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-23T20:11:22Z",
    "updated_at": "2016-11-23T20:11:22Z",
    "body": "Does `shell.openExternal` have any security issues? For example if links come off the net then raw net data is being passed to `shell.openExternal` or any of the other functions above. Does `shell.openExternal` make sure nothing bad's going to happen? Do I need to filter for schemas?\r\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/264662585",
    "html_url": "https://github.com/electron/electron/issues/1344#issuecomment-264662585",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1344",
    "id": 264662585,
    "user": {
      "login": "stevenaubertin",
      "id": 6411530,
      "avatar_url": "https://avatars1.githubusercontent.com/u/6411530?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stevenaubertin",
      "html_url": "https://github.com/stevenaubertin",
      "followers_url": "https://api.github.com/users/stevenaubertin/followers",
      "following_url": "https://api.github.com/users/stevenaubertin/following{/other_user}",
      "gists_url": "https://api.github.com/users/stevenaubertin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stevenaubertin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stevenaubertin/subscriptions",
      "organizations_url": "https://api.github.com/users/stevenaubertin/orgs",
      "repos_url": "https://api.github.com/users/stevenaubertin/repos",
      "events_url": "https://api.github.com/users/stevenaubertin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stevenaubertin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-03T20:11:53Z",
    "updated_at": "2016-12-03T20:12:15Z",
    "body": "Base on the code from @rubencodes , i used : \r\n\r\n ```\r\n    const shell = require('electron').shell;\r\n    $('.open-in-browser').click((event) => {\r\n            event.preventDefault();\r\n            shell.openExternal(event.target.href);\r\n    });\r\n```\r\n\r\n\r\nThen you just have to drop the 'open-in-browser' class to each elements you want to open in the browser."
  }
]