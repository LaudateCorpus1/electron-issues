[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/125174291",
    "html_url": "https://github.com/electron/electron/issues/2244#issuecomment-125174291",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2244",
    "id": 125174291,
    "user": {
      "login": "teamrun",
      "id": 2055081,
      "avatar_url": "https://avatars3.githubusercontent.com/u/2055081?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/teamrun",
      "html_url": "https://github.com/teamrun",
      "followers_url": "https://api.github.com/users/teamrun/followers",
      "following_url": "https://api.github.com/users/teamrun/following{/other_user}",
      "gists_url": "https://api.github.com/users/teamrun/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/teamrun/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/teamrun/subscriptions",
      "organizations_url": "https://api.github.com/users/teamrun/orgs",
      "repos_url": "https://api.github.com/users/teamrun/repos",
      "events_url": "https://api.github.com/users/teamrun/events{/privacy}",
      "received_events_url": "https://api.github.com/users/teamrun/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-27T11:36:41Z",
    "updated_at": "2015-07-27T11:36:41Z",
    "body": "Can not change application's icon via copy-paste after cmd-i. i guess it's the same reason.\n\n[How can I change an application icon in Mac OS X](http://superuser.com/questions/37811/how-can-i-change-an-application-icon-in-mac-os-x)\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/125298155",
    "html_url": "https://github.com/electron/electron/issues/2244#issuecomment-125298155",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2244",
    "id": 125298155,
    "user": {
      "login": "CxRes",
      "id": 2706227,
      "avatar_url": "https://avatars1.githubusercontent.com/u/2706227?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CxRes",
      "html_url": "https://github.com/CxRes",
      "followers_url": "https://api.github.com/users/CxRes/followers",
      "following_url": "https://api.github.com/users/CxRes/following{/other_user}",
      "gists_url": "https://api.github.com/users/CxRes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CxRes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CxRes/subscriptions",
      "organizations_url": "https://api.github.com/users/CxRes/orgs",
      "repos_url": "https://api.github.com/users/CxRes/repos",
      "events_url": "https://api.github.com/users/CxRes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CxRes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-27T18:30:47Z",
    "updated_at": "2015-07-27T18:30:47Z",
    "body": "To further the above request, It would be really cool if electron could handle file pointers natively.\n\nFor example if I cut/copy a file in explorer or finder and then use the paste method to tell me which file was on the clipboard. \n\nSimilarily, if I have loaded the metadata of a bunch of files using the fs module in node and then use the cut/copy to inform the clipboard of their selection, then it should be possible to paste it in explorer/finder.\n\nMy use case is developing a node based explorer/finder app that is cross platform which should appear native to the user.\n\nThanks a ton if you consider my request and I would be happy to make a separate ticket if you so desire.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/141994298",
    "html_url": "https://github.com/electron/electron/issues/2244#issuecomment-141994298",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2244",
    "id": 141994298,
    "user": {
      "login": "bpasero",
      "id": 900690,
      "avatar_url": "https://avatars0.githubusercontent.com/u/900690?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bpasero",
      "html_url": "https://github.com/bpasero",
      "followers_url": "https://api.github.com/users/bpasero/followers",
      "following_url": "https://api.github.com/users/bpasero/following{/other_user}",
      "gists_url": "https://api.github.com/users/bpasero/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bpasero/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bpasero/subscriptions",
      "organizations_url": "https://api.github.com/users/bpasero/orgs",
      "repos_url": "https://api.github.com/users/bpasero/repos",
      "events_url": "https://api.github.com/users/bpasero/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bpasero/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-21T14:11:35Z",
    "updated_at": "2015-09-21T14:11:35Z",
    "body": "+1!\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/145976389",
    "html_url": "https://github.com/electron/electron/issues/2244#issuecomment-145976389",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2244",
    "id": 145976389,
    "user": {
      "login": "gaohailang",
      "id": 697853,
      "avatar_url": "https://avatars1.githubusercontent.com/u/697853?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gaohailang",
      "html_url": "https://github.com/gaohailang",
      "followers_url": "https://api.github.com/users/gaohailang/followers",
      "following_url": "https://api.github.com/users/gaohailang/following{/other_user}",
      "gists_url": "https://api.github.com/users/gaohailang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gaohailang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gaohailang/subscriptions",
      "organizations_url": "https://api.github.com/users/gaohailang/orgs",
      "repos_url": "https://api.github.com/users/gaohailang/repos",
      "events_url": "https://api.github.com/users/gaohailang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gaohailang/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-06T19:43:34Z",
    "updated_at": "2015-10-06T19:43:34Z",
    "body": "+1\ni want to achieve a function when user drags a gif in electron work like in MacOS's finder drag, not browser which only capture only one frame of gif.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/151768768",
    "html_url": "https://github.com/electron/electron/issues/2244#issuecomment-151768768",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2244",
    "id": 151768768,
    "user": {
      "login": "luan007",
      "id": 1134623,
      "avatar_url": "https://avatars0.githubusercontent.com/u/1134623?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luan007",
      "html_url": "https://github.com/luan007",
      "followers_url": "https://api.github.com/users/luan007/followers",
      "following_url": "https://api.github.com/users/luan007/following{/other_user}",
      "gists_url": "https://api.github.com/users/luan007/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luan007/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luan007/subscriptions",
      "organizations_url": "https://api.github.com/users/luan007/orgs",
      "repos_url": "https://api.github.com/users/luan007/repos",
      "events_url": "https://api.github.com/users/luan007/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luan007/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-28T08:50:23Z",
    "updated_at": "2015-10-28T08:50:23Z",
    "body": "Also +1 on this issue.. \n\nMy 2cents on OSX though:\n\nfirst do `npm install nodobjc` <-- this seems failing for a while, you may try cloning the nodobjc repo and do `npm install` in base directory... \n\nthen in your app:\n\n``` javascript\n\nvar $ = require('nodobjc')\n\n$.framework('Foundation')\n$.framework('AppKit')\n\nvar pb = $.NSPasteboard('generalPasteboard');\nvar pool = $.NSAutoreleasePool('alloc')('init')\n\nfunction fetch(t){\n    var dt = pb('dataForType', t);\n    var str = $.NSString('alloc')('initWithData', dt, 'encoding', $.NSUTF8StringEncoding);\n    console.log(t, \":\");\n    console.log(str);\n}\n\nvar prev = pb('changeCount');\nsetInterval(function () {\n    if (pb('changeCount') == prev) {\n        return;\n    }\n    prev = pb('changeCount');\n    console.log(pb('types'));\n    fetch($.NSFilenamesPboardType);\n    fetch($.NSStringPboardType);\n    fetch($('public.html'));\n    fetch($('public.rtf'));\n    fetch($('WebURLsWithTitlesPboardType'));\n    // fetch($('com.apple.icns'));\n    // fetch($('public.png'));\n    // fetch($('public.tiff'));\n}, 1000);\n\n```\n\nCode above wraps around obj-c's NSPasteboard instance to get new data with setInterval, \n(http://stackoverflow.com/questions/3610600/get-notified-when-something-is-added-to-nspasteboard)\nand basic 'Types' are shown in the snippet. \n\nAs for @teamrun 's need, NSFilenamesPboardType would suffice as what you might want is the 'real path' of the file (multi-select should work, too)\n\nWould love to see official implementations :bulb:  keep hacking\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/230090723",
    "html_url": "https://github.com/electron/electron/issues/2244#issuecomment-230090723",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2244",
    "id": 230090723,
    "user": {
      "login": "MrSnappingTurtle",
      "id": 8148243,
      "avatar_url": "https://avatars1.githubusercontent.com/u/8148243?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MrSnappingTurtle",
      "html_url": "https://github.com/MrSnappingTurtle",
      "followers_url": "https://api.github.com/users/MrSnappingTurtle/followers",
      "following_url": "https://api.github.com/users/MrSnappingTurtle/following{/other_user}",
      "gists_url": "https://api.github.com/users/MrSnappingTurtle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MrSnappingTurtle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MrSnappingTurtle/subscriptions",
      "organizations_url": "https://api.github.com/users/MrSnappingTurtle/orgs",
      "repos_url": "https://api.github.com/users/MrSnappingTurtle/repos",
      "events_url": "https://api.github.com/users/MrSnappingTurtle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MrSnappingTurtle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-02T08:26:52Z",
    "updated_at": "2016-07-02T08:26:52Z",
    "body": "+1.\n\n I'm writing a clipboard manager and it would be awesome if I could have actual files work with it.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/231270107",
    "html_url": "https://github.com/electron/electron/issues/2244#issuecomment-231270107",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2244",
    "id": 231270107,
    "user": {
      "login": "f111fei",
      "id": 7069719,
      "avatar_url": "https://avatars0.githubusercontent.com/u/7069719?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/f111fei",
      "html_url": "https://github.com/f111fei",
      "followers_url": "https://api.github.com/users/f111fei/followers",
      "following_url": "https://api.github.com/users/f111fei/following{/other_user}",
      "gists_url": "https://api.github.com/users/f111fei/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/f111fei/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/f111fei/subscriptions",
      "organizations_url": "https://api.github.com/users/f111fei/orgs",
      "repos_url": "https://api.github.com/users/f111fei/repos",
      "events_url": "https://api.github.com/users/f111fei/events{/privacy}",
      "received_events_url": "https://api.github.com/users/f111fei/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-08T04:03:10Z",
    "updated_at": "2016-07-08T04:03:10Z",
    "body": "+10086\nAdobe Air had supported this feature.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/236439265",
    "html_url": "https://github.com/electron/electron/issues/2244#issuecomment-236439265",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2244",
    "id": 236439265,
    "user": {
      "login": "bertofer",
      "id": 1634229,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1634229?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bertofer",
      "html_url": "https://github.com/bertofer",
      "followers_url": "https://api.github.com/users/bertofer/followers",
      "following_url": "https://api.github.com/users/bertofer/following{/other_user}",
      "gists_url": "https://api.github.com/users/bertofer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bertofer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bertofer/subscriptions",
      "organizations_url": "https://api.github.com/users/bertofer/orgs",
      "repos_url": "https://api.github.com/users/bertofer/repos",
      "events_url": "https://api.github.com/users/bertofer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bertofer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-31T16:18:49Z",
    "updated_at": "2016-07-31T16:18:49Z",
    "body": "+1\n\nWorking on a file manager, this would be ideal to have. I will look for alternatives while this gets some progress, will post here if I find something. Thanks @luan007 I will have a look at your solution! Looks good for OS X!\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/261046272",
    "html_url": "https://github.com/electron/electron/issues/2244#issuecomment-261046272",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2244",
    "id": 261046272,
    "user": {
      "login": "redhotbeani",
      "id": 13960841,
      "avatar_url": "https://avatars0.githubusercontent.com/u/13960841?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/redhotbeani",
      "html_url": "https://github.com/redhotbeani",
      "followers_url": "https://api.github.com/users/redhotbeani/followers",
      "following_url": "https://api.github.com/users/redhotbeani/following{/other_user}",
      "gists_url": "https://api.github.com/users/redhotbeani/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/redhotbeani/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/redhotbeani/subscriptions",
      "organizations_url": "https://api.github.com/users/redhotbeani/orgs",
      "repos_url": "https://api.github.com/users/redhotbeani/repos",
      "events_url": "https://api.github.com/users/redhotbeani/events{/privacy}",
      "received_events_url": "https://api.github.com/users/redhotbeani/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-16T19:28:29Z",
    "updated_at": "2016-11-16T19:28:29Z",
    "body": "+1 \nWould be nice if I could select an image in Windows Explorer and copy it into our Electron app. As mentioned before, Adobe Air supported this feature. But we've switched to Electron because Air has an outdated webkit browser.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/262674267",
    "html_url": "https://github.com/electron/electron/issues/2244#issuecomment-262674267",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2244",
    "id": 262674267,
    "user": {
      "login": "Augus",
      "id": 1012267,
      "avatar_url": "https://avatars2.githubusercontent.com/u/1012267?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Augus",
      "html_url": "https://github.com/Augus",
      "followers_url": "https://api.github.com/users/Augus/followers",
      "following_url": "https://api.github.com/users/Augus/following{/other_user}",
      "gists_url": "https://api.github.com/users/Augus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Augus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Augus/subscriptions",
      "organizations_url": "https://api.github.com/users/Augus/orgs",
      "repos_url": "https://api.github.com/users/Augus/repos",
      "events_url": "https://api.github.com/users/Augus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Augus/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-24T02:10:37Z",
    "updated_at": "2016-11-24T02:10:37Z",
    "body": "+1"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/262793459",
    "html_url": "https://github.com/electron/electron/issues/2244#issuecomment-262793459",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2244",
    "id": 262793459,
    "user": {
      "login": "Augus",
      "id": 1012267,
      "avatar_url": "https://avatars2.githubusercontent.com/u/1012267?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Augus",
      "html_url": "https://github.com/Augus",
      "followers_url": "https://api.github.com/users/Augus/followers",
      "following_url": "https://api.github.com/users/Augus/following{/other_user}",
      "gists_url": "https://api.github.com/users/Augus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Augus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Augus/subscriptions",
      "organizations_url": "https://api.github.com/users/Augus/orgs",
      "repos_url": "https://api.github.com/users/Augus/repos",
      "events_url": "https://api.github.com/users/Augus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Augus/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-24T14:52:16Z",
    "updated_at": "2016-11-24T14:52:16Z",
    "body": "Thank You @luan007 \r\n\r\n`var $ = require('nodobjc')\r\n\r\nvar paths = ['/file-path-1', '/file-path-2']\r\ncopyFilesToClipboard(paths);\r\n\r\nfunction copyFilesToClipboard (paths) {\r\n\r\n\t$.framework('Foundation')\r\n\t$.framework('AppKit')\r\n\r\n\tvar pasteboard = $.NSPasteboard('generalPasteboard');\r\n\tvar changeCount = pasteboard('clearContents');\r\n\tvar filesToCopy = $.NSMutableArray('alloc')('init');\r\n\r\n\tpaths.forEach(function (image) {\r\n\t\tvar string = $.NSString('stringWithUTF8String', image);\r\n\t\tfilesToCopy('addObject', $.NSURL('alloc')('initFileURLWithPath', string));\r\n\t});\r\n\r\n\tpasteboard('writeObjects', filesToCopy);\r\n\r\n};\r\n\r\n\r\n`"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/269235418",
    "html_url": "https://github.com/electron/electron/issues/2244#issuecomment-269235418",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2244",
    "id": 269235418,
    "user": {
      "login": "s-a",
      "id": 1270662,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1270662?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/s-a",
      "html_url": "https://github.com/s-a",
      "followers_url": "https://api.github.com/users/s-a/followers",
      "following_url": "https://api.github.com/users/s-a/following{/other_user}",
      "gists_url": "https://api.github.com/users/s-a/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/s-a/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/s-a/subscriptions",
      "organizations_url": "https://api.github.com/users/s-a/orgs",
      "repos_url": "https://api.github.com/users/s-a/repos",
      "events_url": "https://api.github.com/users/s-a/events{/privacy}",
      "received_events_url": "https://api.github.com/users/s-a/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-26T19:09:32Z",
    "updated_at": "2016-12-26T19:09:32Z",
    "body": "Any news about this topic? "
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/269246310",
    "html_url": "https://github.com/electron/electron/issues/2244#issuecomment-269246310",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2244",
    "id": 269246310,
    "user": {
      "login": "hokein",
      "id": 2557445,
      "avatar_url": "https://avatars2.githubusercontent.com/u/2557445?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hokein",
      "html_url": "https://github.com/hokein",
      "followers_url": "https://api.github.com/users/hokein/followers",
      "following_url": "https://api.github.com/users/hokein/following{/other_user}",
      "gists_url": "https://api.github.com/users/hokein/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hokein/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hokein/subscriptions",
      "organizations_url": "https://api.github.com/users/hokein/orgs",
      "repos_url": "https://api.github.com/users/hokein/repos",
      "events_url": "https://api.github.com/users/hokein/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hokein/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-26T22:36:18Z",
    "updated_at": "2016-12-26T22:36:18Z",
    "body": "The issue has been fixed in chrome 48 (https://bugs.chromium.org/p/chromium/issues/detail?id=553686). It should work in the latest electron."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/269808822",
    "html_url": "https://github.com/electron/electron/issues/2244#issuecomment-269808822",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2244",
    "id": 269808822,
    "user": {
      "login": "s-a",
      "id": 1270662,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1270662?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/s-a",
      "html_url": "https://github.com/s-a",
      "followers_url": "https://api.github.com/users/s-a/followers",
      "following_url": "https://api.github.com/users/s-a/following{/other_user}",
      "gists_url": "https://api.github.com/users/s-a/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/s-a/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/s-a/subscriptions",
      "organizations_url": "https://api.github.com/users/s-a/orgs",
      "repos_url": "https://api.github.com/users/s-a/repos",
      "events_url": "https://api.github.com/users/s-a/events{/privacy}",
      "received_events_url": "https://api.github.com/users/s-a/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-30T18:59:48Z",
    "updated_at": "2016-12-30T18:59:48Z",
    "body": "Mentioned method ```copyFilesToClipboard``` does not work on windows 10.\r\n\r\n    var $ = require('nodobjc')\r\n    \r\n    var paths = ['c:\\\\git\\\\sulu\\\\clipboard.js', 'c:\\\\git\\\\sulu\\\\Gruntfile.js']\r\n    \r\n    function copyFilesToClipboard (paths) {\r\n    \r\n    \t$.framework('Foundation')\r\n    \t$.framework('AppKit')\r\n    \r\n    \tvar pasteboard = $.NSPasteboard('generalPasteboard');\r\n    \tvar changeCount = pasteboard('clearContents');\r\n    \tvar filesToCopy = $.NSMutableArray('alloc')('init');\r\n    \r\n    \tpaths.forEach(function (image) {\r\n    \t\tvar string = $.NSString('stringWithUTF8String', image);\r\n    \t\tfilesToCopy('addObject', $.NSURL('alloc')('initFileURLWithPath', string));\r\n    \t});\r\n    \r\n    \tpasteboard('writeObjects', filesToCopy);\r\n    };\r\n    \r\n    copyFilesToClipboard(paths);\r\n\r\nWhen I execute this script i get...\r\n```shell\r\nC:\\git\\test>node clipboard.js\r\nC:\\git\\test\\node_modules\\ffi\\lib\\dynamic_library.js:74\r\n    throw new Error('Dynamic Linking Error: ' + err)\r\n    ^\r\n\r\nError: Dynamic Linking Error: Win32 error 126\r\n    at new DynamicLibrary (C:\\git\\test\\node_modules\\ffi\\lib\\dynamic_library.js:74:11)\r\n    at new Library (C:\\git\\test\\node_modules\\ffi\\lib\\library.js:45:12)\r\n    at C:\\git\\test\\node_modules\\nodobjc\\lib\\core.js:20:14\r\n    at Object.<anonymous> (C:\\git\\test\\node_modules\\nodobjc\\lib\\core.js:410:3)\r\n    at Module._compile (module.js:571:32)\r\n    at Object.Module._extensions..js (module.js:580:10)\r\n    at Module.load (module.js:488:32)\r\n    at tryModuleLoad (module.js:447:12)\r\n    at Function.Module._load (module.js:439:3)\r\n    at Module.require (module.js:498:17)\r\n\r\n```\r\n "
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/270606537",
    "html_url": "https://github.com/electron/electron/issues/2244#issuecomment-270606537",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2244",
    "id": 270606537,
    "user": {
      "login": "bravekingzhang",
      "id": 4476322,
      "avatar_url": "https://avatars0.githubusercontent.com/u/4476322?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bravekingzhang",
      "html_url": "https://github.com/bravekingzhang",
      "followers_url": "https://api.github.com/users/bravekingzhang/followers",
      "following_url": "https://api.github.com/users/bravekingzhang/following{/other_user}",
      "gists_url": "https://api.github.com/users/bravekingzhang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bravekingzhang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bravekingzhang/subscriptions",
      "organizations_url": "https://api.github.com/users/bravekingzhang/orgs",
      "repos_url": "https://api.github.com/users/bravekingzhang/repos",
      "events_url": "https://api.github.com/users/bravekingzhang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bravekingzhang/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-05T09:58:39Z",
    "updated_at": "2017-01-05T09:58:39Z",
    "body": "I found a solution:\r\n\r\n```javascript\r\nconst clipboardWatcher = require('electron-clipboard-watcher')\r\n\r\n\tclipboardWatcher({\r\n\t\t// (optional) delay in ms between polls\r\n\t\twatchDelay: 1000,\r\n\r\n\t\t// handler for when image data is copied into the clipboard\r\n\t\tonImageChange: function (nativeImage) {\r\n\t\t\t//console.log(nativeImage.toDataURL())\r\n\t\t\tmainWindow.webContents.send('onImageChange', nativeImage.toDataURL())\r\n\t\t},\r\n\r\n\t\t// handler for when text data is copied into the clipboard\r\n\t\t//\t\tonTextChange: function (text) {\r\n\t\t//\t\t\tmainWindow.webContents.send('onTextChange', text)\r\n\t\t//\t\t}\r\n\t})\r\n```\r\n\r\nthe idea is\r\n\r\nwatch clipboard onImageChange in main process `can get nativeImage` ,then , send to the`DataURL` to  render process\r\n\r\nthe demo can be show here \r\n\r\nhttps://github.com/bravekingzhang/httpImage\r\n\r\n![image](https://cloud.githubusercontent.com/assets/4476322/21676417/7c4ed808-d370-11e6-9510-5191a79c9332.png)\r\n"
  }
]