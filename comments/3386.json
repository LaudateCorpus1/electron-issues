[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/155451676",
    "html_url": "https://github.com/electron/electron/issues/3386#issuecomment-155451676",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/3386",
    "id": 155451676,
    "user": {
      "login": "AoDev",
      "id": 1526150,
      "avatar_url": "https://avatars2.githubusercontent.com/u/1526150?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AoDev",
      "html_url": "https://github.com/AoDev",
      "followers_url": "https://api.github.com/users/AoDev/followers",
      "following_url": "https://api.github.com/users/AoDev/following{/other_user}",
      "gists_url": "https://api.github.com/users/AoDev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AoDev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AoDev/subscriptions",
      "organizations_url": "https://api.github.com/users/AoDev/orgs",
      "repos_url": "https://api.github.com/users/AoDev/repos",
      "events_url": "https://api.github.com/users/AoDev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AoDev/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-10T15:28:26Z",
    "updated_at": "2015-11-10T15:28:26Z",
    "body": "Note: I have tried with current latest electron version: 0.34.3. Same problem.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/155454390",
    "html_url": "https://github.com/electron/electron/issues/3386#issuecomment-155454390",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/3386",
    "id": 155454390,
    "user": {
      "login": "dkfiresky",
      "id": 2175645,
      "avatar_url": "https://avatars2.githubusercontent.com/u/2175645?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dkfiresky",
      "html_url": "https://github.com/dkfiresky",
      "followers_url": "https://api.github.com/users/dkfiresky/followers",
      "following_url": "https://api.github.com/users/dkfiresky/following{/other_user}",
      "gists_url": "https://api.github.com/users/dkfiresky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dkfiresky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dkfiresky/subscriptions",
      "organizations_url": "https://api.github.com/users/dkfiresky/orgs",
      "repos_url": "https://api.github.com/users/dkfiresky/repos",
      "events_url": "https://api.github.com/users/dkfiresky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dkfiresky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-10T15:33:32Z",
    "updated_at": "2015-11-10T15:33:32Z",
    "body": "@AoDev\n\n> ### [IPC Renderer](http://electron.atom.io/docs/v0.34.0/api/ipc-renderer/)\n> \n> Note: If you want to make use of modules in the main process from the renderer process, you might consider using the [remote](http://electron.atom.io/docs/v0.34.0/api/remote/) module.\n\nSo this code:\n\n``` js\n// WINDOW process\nvar ipc = window.require('ipc')\n```\n\nshould be replaced with this:\n\n``` js\n// WINDOW process\nvar remote = require('remote')\nvar ipc = remote.require('ipc')\n```\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/155517988",
    "html_url": "https://github.com/electron/electron/issues/3386#issuecomment-155517988",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/3386",
    "id": 155517988,
    "user": {
      "login": "AoDev",
      "id": 1526150,
      "avatar_url": "https://avatars2.githubusercontent.com/u/1526150?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AoDev",
      "html_url": "https://github.com/AoDev",
      "followers_url": "https://api.github.com/users/AoDev/followers",
      "following_url": "https://api.github.com/users/AoDev/following{/other_user}",
      "gists_url": "https://api.github.com/users/AoDev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AoDev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AoDev/subscriptions",
      "organizations_url": "https://api.github.com/users/AoDev/orgs",
      "repos_url": "https://api.github.com/users/AoDev/repos",
      "events_url": "https://api.github.com/users/AoDev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AoDev/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-10T18:11:20Z",
    "updated_at": "2015-11-10T18:11:20Z",
    "body": "@dkfiresky I found a solution. I mistakenly thought that the ipc module could be used to send events from main process to a renderer process. Instead, one must use the `webContents.send` method.\n\nRegarding your code, all examples in the documentation show that `ipc` is required without the remote module.\n\nIn the end I had to do this:\n\n``` js\n// MAIN process\nvar globalShortcut = require('global-shortcut')\nwin = new BrowserWindow({ width: 960, height: 600 })\n...\n  globalShortcut.register('MediaPlayPause', function () {\n    win.webContents.send('playPause')\n  })\n```\n\n``` js\n// WINDOW process\nvar ipc = window.require('ipc')\n...\nipc.on('playPause', function () {\n  console.log('playPause pressed')\n})\n```\n\nBut I still don't understand why \"`ipc.send` is not a function\".\nThank you for helping.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/155572698",
    "html_url": "https://github.com/electron/electron/issues/3386#issuecomment-155572698",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/3386",
    "id": 155572698,
    "user": {
      "login": "paulcbetts",
      "id": 1396,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1396?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulcbetts",
      "html_url": "https://github.com/paulcbetts",
      "followers_url": "https://api.github.com/users/paulcbetts/followers",
      "following_url": "https://api.github.com/users/paulcbetts/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulcbetts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulcbetts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulcbetts/subscriptions",
      "organizations_url": "https://api.github.com/users/paulcbetts/orgs",
      "repos_url": "https://api.github.com/users/paulcbetts/repos",
      "events_url": "https://api.github.com/users/paulcbetts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulcbetts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-10T21:28:51Z",
    "updated_at": "2015-11-10T21:29:10Z",
    "body": "> But I still don't understand why \"ipc.send is not a function\".\n\n@AoDev Where would it send to?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/155576264",
    "html_url": "https://github.com/electron/electron/issues/3386#issuecomment-155576264",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/3386",
    "id": 155576264,
    "user": {
      "login": "AoDev",
      "id": 1526150,
      "avatar_url": "https://avatars2.githubusercontent.com/u/1526150?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AoDev",
      "html_url": "https://github.com/AoDev",
      "followers_url": "https://api.github.com/users/AoDev/followers",
      "following_url": "https://api.github.com/users/AoDev/following{/other_user}",
      "gists_url": "https://api.github.com/users/AoDev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AoDev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AoDev/subscriptions",
      "organizations_url": "https://api.github.com/users/AoDev/orgs",
      "repos_url": "https://api.github.com/users/AoDev/repos",
      "events_url": "https://api.github.com/users/AoDev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AoDev/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-10T21:44:23Z",
    "updated_at": "2015-11-10T21:44:23Z",
    "body": "Like I said, I didn't see that it could not be used to send messages from the main process to the renderer process. Missed this part: \"It is also possible to send messages from the main process to the renderer process, see WebContents.send for more information.\"\n\nI thought the IPC module was some kind of API to an event bus where events can be emitted both by the main process and the renderer process. So to answer your question @paulcbetts , I thought I could emit an event from the main process with `ipc.send` and listen to it from the renderer process with `ipc.on` and wouldn't need another module for that.\n\nThere are multiple examples like here http://electron.atom.io/docs/v0.34.0/api/ipc-main-process/\nwhere there is `ipc.send`.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/155587171",
    "html_url": "https://github.com/electron/electron/issues/3386#issuecomment-155587171",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/3386",
    "id": 155587171,
    "user": {
      "login": "justinmchase",
      "id": 10974,
      "avatar_url": "https://avatars1.githubusercontent.com/u/10974?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/justinmchase",
      "html_url": "https://github.com/justinmchase",
      "followers_url": "https://api.github.com/users/justinmchase/followers",
      "following_url": "https://api.github.com/users/justinmchase/following{/other_user}",
      "gists_url": "https://api.github.com/users/justinmchase/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/justinmchase/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/justinmchase/subscriptions",
      "organizations_url": "https://api.github.com/users/justinmchase/orgs",
      "repos_url": "https://api.github.com/users/justinmchase/repos",
      "events_url": "https://api.github.com/users/justinmchase/events{/privacy}",
      "received_events_url": "https://api.github.com/users/justinmchase/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-10T22:24:07Z",
    "updated_at": "2015-11-10T22:24:07Z",
    "body": "@AoDev There is exactly 1 main process, and potentially many render processes. When you're in the main process you can't just do `ipc.send` because it can't know which window you want to send to. So instead you must specify which window you want to send your message to by using `win.webContents.send` or in the ipc event handler there is a `event.sender` which you can also send messages back to.\n\nBut that's why there is no send on the ipc module in the main process. Arguably it could be:\n\n```\nipc.send = function (w, m, a) {\n  w.webContents.send(m, a);\n};\n\nipc.send(browserWindow, 'message', args);\n```\n\nBut that is somewhat redundant.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/155588339",
    "html_url": "https://github.com/electron/electron/issues/3386#issuecomment-155588339",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/3386",
    "id": 155588339,
    "user": {
      "login": "skhameneh",
      "id": 1191370,
      "avatar_url": "https://avatars2.githubusercontent.com/u/1191370?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/skhameneh",
      "html_url": "https://github.com/skhameneh",
      "followers_url": "https://api.github.com/users/skhameneh/followers",
      "following_url": "https://api.github.com/users/skhameneh/following{/other_user}",
      "gists_url": "https://api.github.com/users/skhameneh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/skhameneh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/skhameneh/subscriptions",
      "organizations_url": "https://api.github.com/users/skhameneh/orgs",
      "repos_url": "https://api.github.com/users/skhameneh/repos",
      "events_url": "https://api.github.com/users/skhameneh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/skhameneh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-10T22:29:26Z",
    "updated_at": "2015-11-10T22:29:26Z",
    "body": "Suggestion: Make invoking ipc.send() from main process throw an informative error.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/155590011",
    "html_url": "https://github.com/electron/electron/issues/3386#issuecomment-155590011",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/3386",
    "id": 155590011,
    "user": {
      "login": "AoDev",
      "id": 1526150,
      "avatar_url": "https://avatars2.githubusercontent.com/u/1526150?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AoDev",
      "html_url": "https://github.com/AoDev",
      "followers_url": "https://api.github.com/users/AoDev/followers",
      "following_url": "https://api.github.com/users/AoDev/following{/other_user}",
      "gists_url": "https://api.github.com/users/AoDev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AoDev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AoDev/subscriptions",
      "organizations_url": "https://api.github.com/users/AoDev/orgs",
      "repos_url": "https://api.github.com/users/AoDev/repos",
      "events_url": "https://api.github.com/users/AoDev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AoDev/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-10T22:36:53Z",
    "updated_at": "2015-11-10T22:36:53Z",
    "body": "@justinmchase I thought that it would be a global thing, that any process from any window could subscribe to if needed, so no need to say to who goes the message, but more like \"this happened\" anyone is welcome to listen and do anything with it.\nFor example in my app, I am listening to a global keypressed event. The OS is not sending the message to a particular app, it's the app that decides to listen to this event and do something.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/155595450",
    "html_url": "https://github.com/electron/electron/issues/3386#issuecomment-155595450",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/3386",
    "id": 155595450,
    "user": {
      "login": "AoDev",
      "id": 1526150,
      "avatar_url": "https://avatars2.githubusercontent.com/u/1526150?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AoDev",
      "html_url": "https://github.com/AoDev",
      "followers_url": "https://api.github.com/users/AoDev/followers",
      "following_url": "https://api.github.com/users/AoDev/following{/other_user}",
      "gists_url": "https://api.github.com/users/AoDev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AoDev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AoDev/subscriptions",
      "organizations_url": "https://api.github.com/users/AoDev/orgs",
      "repos_url": "https://api.github.com/users/AoDev/repos",
      "events_url": "https://api.github.com/users/AoDev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AoDev/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-10T23:01:50Z",
    "updated_at": "2015-11-10T23:01:50Z",
    "body": "@skhameneh Good idea : )\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/155609981",
    "html_url": "https://github.com/electron/electron/issues/3386#issuecomment-155609981",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/3386",
    "id": 155609981,
    "user": {
      "login": "justinmchase",
      "id": 10974,
      "avatar_url": "https://avatars1.githubusercontent.com/u/10974?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/justinmchase",
      "html_url": "https://github.com/justinmchase",
      "followers_url": "https://api.github.com/users/justinmchase/followers",
      "following_url": "https://api.github.com/users/justinmchase/following{/other_user}",
      "gists_url": "https://api.github.com/users/justinmchase/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/justinmchase/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/justinmchase/subscriptions",
      "organizations_url": "https://api.github.com/users/justinmchase/orgs",
      "repos_url": "https://api.github.com/users/justinmchase/repos",
      "events_url": "https://api.github.com/users/justinmchase/events{/privacy}",
      "received_events_url": "https://api.github.com/users/justinmchase/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-11T00:16:03Z",
    "updated_at": "2015-11-11T00:16:03Z",
    "body": "I think we've almost got a pull request worthy feature here :) how about this (psuedo code):\n\n```\nfunction send(message, args, /*optional*/targetWin) {\n  if (!app.isReady) throw new Error('You must wait for the app ready event.');\n\n  var targets;\n  if (targetWin) {\n    targets = [targetWin];\n  } else {\n    targets = BrowserWindow.getAllWindows();\n  }\n\n  if (!targets || !targets.length) \n    throw new Error('A browser window must be present to send a message from the main process.');\n\n  targets.forEach(function (target) {\n    target.webContents.send(message, args);\n  });\n}\n\nmodule.exports = {\n  ...,\n  send: send\n};\n```\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/155653601",
    "html_url": "https://github.com/electron/electron/issues/3386#issuecomment-155653601",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/3386",
    "id": 155653601,
    "user": {
      "login": "paulcbetts",
      "id": 1396,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1396?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulcbetts",
      "html_url": "https://github.com/paulcbetts",
      "followers_url": "https://api.github.com/users/paulcbetts/followers",
      "following_url": "https://api.github.com/users/paulcbetts/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulcbetts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulcbetts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulcbetts/subscriptions",
      "organizations_url": "https://api.github.com/users/paulcbetts/orgs",
      "repos_url": "https://api.github.com/users/paulcbetts/repos",
      "events_url": "https://api.github.com/users/paulcbetts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulcbetts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-11T03:45:57Z",
    "updated_at": "2015-11-11T03:45:57Z",
    "body": "I'm not very +1 on this because it's not consistent - in a renderer, `ipc.send` sends to a single place. In the browser, `ipc.send` sends to some renderers (Browser Windows) but not others (WebView tags), and is multicast.\n\nI'm into the `targetWin` property though, and having it just be another way to call `target.webContents.send`\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/155719034",
    "html_url": "https://github.com/electron/electron/issues/3386#issuecomment-155719034",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/3386",
    "id": 155719034,
    "user": {
      "login": "AoDev",
      "id": 1526150,
      "avatar_url": "https://avatars2.githubusercontent.com/u/1526150?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AoDev",
      "html_url": "https://github.com/AoDev",
      "followers_url": "https://api.github.com/users/AoDev/followers",
      "following_url": "https://api.github.com/users/AoDev/following{/other_user}",
      "gists_url": "https://api.github.com/users/AoDev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AoDev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AoDev/subscriptions",
      "organizations_url": "https://api.github.com/users/AoDev/orgs",
      "repos_url": "https://api.github.com/users/AoDev/repos",
      "events_url": "https://api.github.com/users/AoDev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AoDev/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-11T09:52:47Z",
    "updated_at": "2015-11-11T09:54:35Z",
    "body": "Hi, although it was not my intention to turn this into a feature request, all of you have given interesting ideas.\n\nAs a developer (who did not read the docs well enough, hence this issue), I wish I had a simple stream of events that can be used by all windows and the main process. Whether it is ipc or another module, I wish I could simply do:\n\n``` js\n// listen from windows (renderer) or main process\nvar mainStream = require('main-stream')\nmainStream.on('someEvent', function(event) {\n  doSomething(event)\n})\n```\n\n``` js\n// emit from windows (renderer) or main process\nvar mainStream = require('main-stream')\nvar payload = 'some data'\nmainStream.emit('someEvent', payload)\n```\n\nI think it's quite simple, especially to synchronise multiple windows if necessary.\n\nRegarding `ipc.send` in the main process, whether it ends up being there (with `targetWin` property) or not, I wish I had at least a descriptive error message like @skhameneh said :)\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/155822827",
    "html_url": "https://github.com/electron/electron/issues/3386#issuecomment-155822827",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/3386",
    "id": 155822827,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2015-11-11T15:49:39Z",
    "updated_at": "2015-11-11T15:49:39Z",
    "body": "On master branch we have renamed the `ipc` module to `ipcRenderer` and `ipcMain`, so hopefully users won't be surprised `ipc.send` is in renderer process but not in main process anymore.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/230992916",
    "html_url": "https://github.com/electron/electron/issues/3386#issuecomment-230992916",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/3386",
    "id": 230992916,
    "user": {
      "login": "HoverBaum",
      "id": 7557414,
      "avatar_url": "https://avatars3.githubusercontent.com/u/7557414?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/HoverBaum",
      "html_url": "https://github.com/HoverBaum",
      "followers_url": "https://api.github.com/users/HoverBaum/followers",
      "following_url": "https://api.github.com/users/HoverBaum/following{/other_user}",
      "gists_url": "https://api.github.com/users/HoverBaum/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/HoverBaum/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/HoverBaum/subscriptions",
      "organizations_url": "https://api.github.com/users/HoverBaum/orgs",
      "repos_url": "https://api.github.com/users/HoverBaum/repos",
      "events_url": "https://api.github.com/users/HoverBaum/events{/privacy}",
      "received_events_url": "https://api.github.com/users/HoverBaum/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-07T06:33:38Z",
    "updated_at": "2016-07-07T06:33:38Z",
    "body": "This just threw me off big time. Also had the `ipc.send is not a function` error.\n\nSo I googled around and found that there was now this `ipcMain` thing. Required that and still the same error. Really confused me because I thought to myself 'well now I am using the thing to send from the main process, hell I am even sure it is the main process'. Only after reading through this did I realize how it works.\n\nI mean it makes perfect sense that the main process catering to many rendering processes need to know which one to send to. But it still seems that there could be a better error message here.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/244055236",
    "html_url": "https://github.com/electron/electron/issues/3386#issuecomment-244055236",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/3386",
    "id": 244055236,
    "user": {
      "login": "samuelcesc",
      "id": 3446181,
      "avatar_url": "https://avatars1.githubusercontent.com/u/3446181?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/samuelcesc",
      "html_url": "https://github.com/samuelcesc",
      "followers_url": "https://api.github.com/users/samuelcesc/followers",
      "following_url": "https://api.github.com/users/samuelcesc/following{/other_user}",
      "gists_url": "https://api.github.com/users/samuelcesc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/samuelcesc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/samuelcesc/subscriptions",
      "organizations_url": "https://api.github.com/users/samuelcesc/orgs",
      "repos_url": "https://api.github.com/users/samuelcesc/repos",
      "events_url": "https://api.github.com/users/samuelcesc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/samuelcesc/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-01T11:48:37Z",
    "updated_at": "2016-09-01T11:48:37Z",
    "body": "Really an issue. Still throws the same error.\n\nWould be really glad if this issue can be fixed.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/244055868",
    "html_url": "https://github.com/electron/electron/issues/3386#issuecomment-244055868",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/3386",
    "id": 244055868,
    "user": {
      "login": "MarshallOfSound",
      "id": 6634592,
      "avatar_url": "https://avatars0.githubusercontent.com/u/6634592?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarshallOfSound",
      "html_url": "https://github.com/MarshallOfSound",
      "followers_url": "https://api.github.com/users/MarshallOfSound/followers",
      "following_url": "https://api.github.com/users/MarshallOfSound/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarshallOfSound/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarshallOfSound/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarshallOfSound/subscriptions",
      "organizations_url": "https://api.github.com/users/MarshallOfSound/orgs",
      "repos_url": "https://api.github.com/users/MarshallOfSound/repos",
      "events_url": "https://api.github.com/users/MarshallOfSound/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarshallOfSound/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-01T11:51:45Z",
    "updated_at": "2016-09-01T11:51:45Z",
    "body": "I don't see how this is an issue.\n\nYou are trying to call a function that doesn't exist, and can't be implemented?\n"
  }
]