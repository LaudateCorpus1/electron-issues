[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/95864651",
    "html_url": "https://github.com/electron/electron/issues/1472#issuecomment-95864651",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1472",
    "id": 95864651,
    "user": {
      "login": "deepak1556",
      "id": 964386,
      "avatar_url": "https://avatars2.githubusercontent.com/u/964386?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/deepak1556",
      "html_url": "https://github.com/deepak1556",
      "followers_url": "https://api.github.com/users/deepak1556/followers",
      "following_url": "https://api.github.com/users/deepak1556/following{/other_user}",
      "gists_url": "https://api.github.com/users/deepak1556/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/deepak1556/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/deepak1556/subscriptions",
      "organizations_url": "https://api.github.com/users/deepak1556/orgs",
      "repos_url": "https://api.github.com/users/deepak1556/repos",
      "events_url": "https://api.github.com/users/deepak1556/events{/privacy}",
      "received_events_url": "https://api.github.com/users/deepak1556/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-24T09:10:30Z",
    "updated_at": "2015-04-24T09:10:30Z",
    "body": "Actually the `promiseRejectCallback` was patched to introduce the hook for io.js. [Removing](https://github.com/iojs/io.js/blob/master/src/node.cc#L990) it will restore the behaviour to chromium but you will lose the `unhandledrejection` hook. Besides the hook was provided for userland to use it and I believe its best to not add to electron, besides the process object is present on both browser and render process for use ;) Maybe add this hook behaviour to docs on process object to be clear.. Thoughts ?\n\n/cc @zcbenz , @paulcbetts \n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/96110113",
    "html_url": "https://github.com/electron/electron/issues/1472#issuecomment-96110113",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1472",
    "id": 96110113,
    "user": {
      "login": "paulcbetts",
      "id": 1396,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1396?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulcbetts",
      "html_url": "https://github.com/paulcbetts",
      "followers_url": "https://api.github.com/users/paulcbetts/followers",
      "following_url": "https://api.github.com/users/paulcbetts/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulcbetts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulcbetts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulcbetts/subscriptions",
      "organizations_url": "https://api.github.com/users/paulcbetts/orgs",
      "repos_url": "https://api.github.com/users/paulcbetts/repos",
      "events_url": "https://api.github.com/users/paulcbetts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulcbetts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-25T00:40:09Z",
    "updated_at": "2015-04-25T00:40:09Z",
    "body": "What happens in DevTools because of this? Do we lose all of the DevTools debugging features around promises? I'd rather have it the Chromium way than the io.js way if that's the case\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/96117636",
    "html_url": "https://github.com/electron/electron/issues/1472#issuecomment-96117636",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1472",
    "id": 96117636,
    "user": {
      "login": "mark-hahn",
      "id": 811455,
      "avatar_url": "https://avatars1.githubusercontent.com/u/811455?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mark-hahn",
      "html_url": "https://github.com/mark-hahn",
      "followers_url": "https://api.github.com/users/mark-hahn/followers",
      "following_url": "https://api.github.com/users/mark-hahn/following{/other_user}",
      "gists_url": "https://api.github.com/users/mark-hahn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mark-hahn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mark-hahn/subscriptions",
      "organizations_url": "https://api.github.com/users/mark-hahn/orgs",
      "repos_url": "https://api.github.com/users/mark-hahn/repos",
      "events_url": "https://api.github.com/users/mark-hahn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mark-hahn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-25T01:19:20Z",
    "updated_at": "2015-04-25T01:19:20Z",
    "body": "> Do we lose all of the DevTools debugging features around promises?\n\nPretty much.  They are a pita.\n\nOn Fri, Apr 24, 2015 at 5:40 PM, Paul Betts notifications@github.com\nwrote:\n\n> What happens in DevTools because of this? Do we lose all of the DevTools\n> debugging features around promises? I'd rather have it the Chromium way\n> than the io.js way if that's the case\n> \n> â€”\n> Reply to this email directly or view it on GitHub\n> https://github.com/atom/electron/issues/1472#issuecomment-96110113.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/96120748",
    "html_url": "https://github.com/electron/electron/issues/1472#issuecomment-96120748",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1472",
    "id": 96120748,
    "user": {
      "login": "deepak1556",
      "id": 964386,
      "avatar_url": "https://avatars2.githubusercontent.com/u/964386?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/deepak1556",
      "html_url": "https://github.com/deepak1556",
      "followers_url": "https://api.github.com/users/deepak1556/followers",
      "following_url": "https://api.github.com/users/deepak1556/following{/other_user}",
      "gists_url": "https://api.github.com/users/deepak1556/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/deepak1556/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/deepak1556/subscriptions",
      "organizations_url": "https://api.github.com/users/deepak1556/orgs",
      "repos_url": "https://api.github.com/users/deepak1556/repos",
      "events_url": "https://api.github.com/users/deepak1556/events{/privacy}",
      "received_events_url": "https://api.github.com/users/deepak1556/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-25T01:51:48Z",
    "updated_at": "2015-04-25T01:51:48Z",
    "body": "@paulcbetts nope , this is just the unhandled rejection case instead of having the chromium devtools handling it the default way like this\n![screen shot 2015-04-25 at 7 07 10 am](https://cloud.githubusercontent.com/assets/964386/7330975/2880d324-eb1a-11e4-8e32-70a09a3b281f.png)\n\nYou will now have to use this hook to get the same behaviour. Not sure if we can patch to retain iojs behaviour on browser and chromium behaviour on renderer. But I am -1 on doing a destructive patch to iojs just for this case though. Besides this is some interesting discussion https://github.com/iojs/io.js/issues/830\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/97316078",
    "html_url": "https://github.com/electron/electron/issues/1472#issuecomment-97316078",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1472",
    "id": 97316078,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2015-04-29T06:01:59Z",
    "updated_at": "2015-04-29T06:01:59Z",
    "body": "The ideal way to deal with this is to follow how we handled `uncaughtException`: we disable the global error handler in io.js, and setup a default `window.onerror` handler to forward the error to `uncaughtException` handler if there is one. So apps can handle errors like browser if they don't have a `uncaughtException` handler, otherwise they handle errors like io.js.\n\nUnfortunately there is no global promise rejection handler like `onerror` in browser, Chrome just prints the error message to devtools and doesn't give user a chance to handle that. But we can still setup a default `unhandledRejection` handler which just prints the error like Chrome if apps don't have a `unhandledRejection` handler, so we can achieve the same effect.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/97319595",
    "html_url": "https://github.com/electron/electron/issues/1472#issuecomment-97319595",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1472",
    "id": 97319595,
    "user": {
      "login": "deepak1556",
      "id": 964386,
      "avatar_url": "https://avatars2.githubusercontent.com/u/964386?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/deepak1556",
      "html_url": "https://github.com/deepak1556",
      "followers_url": "https://api.github.com/users/deepak1556/followers",
      "following_url": "https://api.github.com/users/deepak1556/following{/other_user}",
      "gists_url": "https://api.github.com/users/deepak1556/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/deepak1556/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/deepak1556/subscriptions",
      "organizations_url": "https://api.github.com/users/deepak1556/orgs",
      "repos_url": "https://api.github.com/users/deepak1556/repos",
      "events_url": "https://api.github.com/users/deepak1556/events{/privacy}",
      "received_events_url": "https://api.github.com/users/deepak1556/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-29T06:17:18Z",
    "updated_at": "2015-04-29T06:17:18Z",
    "body": "@zcbenz shouldn't that be left to the users of electron ? If we provide the handling wouldn't it be like iojs providing the hook and handling it at the same time.. That's why I was against it.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/97321581",
    "html_url": "https://github.com/electron/electron/issues/1472#issuecomment-97321581",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1472",
    "id": 97321581,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2015-04-29T06:28:39Z",
    "updated_at": "2015-04-29T06:28:39Z",
    "body": "@deepak1556 We can patch io.js to make it emit `_unhandledRejection` instead of `unhandledRejection`, and in electron we handle `_unhandledRejection` and decide whether to print it to console or forward it to `process`'s `unhandledRejection` handlers.\n\nBut honestly I think we should just disable the promise rejection handler in io.js, it is just a little new feature in recent io.js and no one will be using it except for those server apps.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/97323788",
    "html_url": "https://github.com/electron/electron/issues/1472#issuecomment-97323788",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1472",
    "id": 97323788,
    "user": {
      "login": "deepak1556",
      "id": 964386,
      "avatar_url": "https://avatars2.githubusercontent.com/u/964386?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/deepak1556",
      "html_url": "https://github.com/deepak1556",
      "followers_url": "https://api.github.com/users/deepak1556/followers",
      "following_url": "https://api.github.com/users/deepak1556/following{/other_user}",
      "gists_url": "https://api.github.com/users/deepak1556/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/deepak1556/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/deepak1556/subscriptions",
      "organizations_url": "https://api.github.com/users/deepak1556/orgs",
      "repos_url": "https://api.github.com/users/deepak1556/repos",
      "events_url": "https://api.github.com/users/deepak1556/events{/privacy}",
      "received_events_url": "https://api.github.com/users/deepak1556/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-29T06:38:57Z",
    "updated_at": "2015-04-29T06:38:57Z",
    "body": "If there isn't much of a use case , I m in for the second option, that way we can stay on track with chromium.. Maybe they can decide to track unhandled rejection differently in future when the standard is clear..\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/175214345",
    "html_url": "https://github.com/electron/electron/issues/1472#issuecomment-175214345",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1472",
    "id": 175214345,
    "user": {
      "login": "cdaringe",
      "id": 1003261,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1003261?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cdaringe",
      "html_url": "https://github.com/cdaringe",
      "followers_url": "https://api.github.com/users/cdaringe/followers",
      "following_url": "https://api.github.com/users/cdaringe/following{/other_user}",
      "gists_url": "https://api.github.com/users/cdaringe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cdaringe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cdaringe/subscriptions",
      "organizations_url": "https://api.github.com/users/cdaringe/orgs",
      "repos_url": "https://api.github.com/users/cdaringe/repos",
      "events_url": "https://api.github.com/users/cdaringe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cdaringe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-26T20:33:15Z",
    "updated_at": "2016-01-26T20:33:15Z",
    "body": "hi all.  I'm still not clear what the best practice is.  it seems that my `process.on('unhandledRejection, ...)` in the renderer isn't being recognized in the `0.36.x`.  per @zcbenz 's mark on Apr 29, it may be disabled now?  can someone clarify?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/175256295",
    "html_url": "https://github.com/electron/electron/issues/1472#issuecomment-175256295",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1472",
    "id": 175256295,
    "user": {
      "login": "cdaringe",
      "id": 1003261,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1003261?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cdaringe",
      "html_url": "https://github.com/cdaringe",
      "followers_url": "https://api.github.com/users/cdaringe/followers",
      "following_url": "https://api.github.com/users/cdaringe/following{/other_user}",
      "gists_url": "https://api.github.com/users/cdaringe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cdaringe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cdaringe/subscriptions",
      "organizations_url": "https://api.github.com/users/cdaringe/orgs",
      "repos_url": "https://api.github.com/users/cdaringe/repos",
      "events_url": "https://api.github.com/users/cdaringe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cdaringe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-26T22:09:48Z",
    "updated_at": "2016-01-26T22:09:48Z",
    "body": "nevermind.  the event is present and working properly.  yahoo!  was using a vendor lib that was swallowing the rejected promise unexpectedly.\n"
  }
]