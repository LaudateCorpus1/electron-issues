[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/57490492",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-57490492",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 57490492,
    "user": {
      "login": "Subash",
      "id": 3478693,
      "avatar_url": "https://avatars1.githubusercontent.com/u/3478693?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Subash",
      "html_url": "https://github.com/Subash",
      "followers_url": "https://api.github.com/users/Subash/followers",
      "following_url": "https://api.github.com/users/Subash/following{/other_user}",
      "gists_url": "https://api.github.com/users/Subash/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Subash/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Subash/subscriptions",
      "organizations_url": "https://api.github.com/users/Subash/orgs",
      "repos_url": "https://api.github.com/users/Subash/repos",
      "events_url": "https://api.github.com/users/Subash/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Subash/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-01T16:07:07Z",
    "updated_at": "2014-10-01T16:07:07Z",
    "body": "+100, That would be very very helpful to reduce the size of app.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/57504592",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-57504592",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 57504592,
    "user": {
      "login": "ghost",
      "id": 10137,
      "avatar_url": "https://avatars0.githubusercontent.com/u/10137?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-01T17:36:57Z",
    "updated_at": "2014-10-01T17:36:57Z",
    "body": "Can the `.asar` extension be changed? It sounds really weird in hungarian. Basically it would mean `the shit` in a bad way ([link](https://translate.google.com/#hu/en/a%20szar)).\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/57764907",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-57764907",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 57764907,
    "user": {
      "login": "YurySolovyov",
      "id": 2168518,
      "avatar_url": "https://avatars3.githubusercontent.com/u/2168518?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/YurySolovyov",
      "html_url": "https://github.com/YurySolovyov",
      "followers_url": "https://api.github.com/users/YurySolovyov/followers",
      "following_url": "https://api.github.com/users/YurySolovyov/following{/other_user}",
      "gists_url": "https://api.github.com/users/YurySolovyov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/YurySolovyov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/YurySolovyov/subscriptions",
      "organizations_url": "https://api.github.com/users/YurySolovyov/orgs",
      "repos_url": "https://api.github.com/users/YurySolovyov/repos",
      "events_url": "https://api.github.com/users/YurySolovyov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/YurySolovyov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-03T07:37:53Z",
    "updated_at": "2014-10-03T07:37:53Z",
    "body": "`.apak?` with all seriousness, there are tons of languages, so almost any extension can sound weird in some of them.\n\nIMO runtime installation and updating should be as easy as possible. Many runtimes have very annoying notifications. Also, if you are going to do this, some additional manifest metadata should be provided, because newer app versions may not work on old runtime, so you need to compare current runtime version with version in app manifest( possibly even versions range as in node packages ), and then if runtime needs to be updated, make this process as easy as possible. I don't know what easy is for most people, but for me it is just window with progress bar or status messages (\"Downloading... 57%\", \"Updating...\")\nI'm not sure but background updates may also be considered. It may be some update service or just runtime download while app is running and update when app closes.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/59858135",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-59858135",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 59858135,
    "user": {
      "login": "malcolmalex",
      "id": 3139618,
      "avatar_url": "https://avatars3.githubusercontent.com/u/3139618?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/malcolmalex",
      "html_url": "https://github.com/malcolmalex",
      "followers_url": "https://api.github.com/users/malcolmalex/followers",
      "following_url": "https://api.github.com/users/malcolmalex/following{/other_user}",
      "gists_url": "https://api.github.com/users/malcolmalex/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/malcolmalex/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/malcolmalex/subscriptions",
      "organizations_url": "https://api.github.com/users/malcolmalex/orgs",
      "repos_url": "https://api.github.com/users/malcolmalex/repos",
      "events_url": "https://api.github.com/users/malcolmalex/events{/privacy}",
      "received_events_url": "https://api.github.com/users/malcolmalex/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-20T23:44:35Z",
    "updated_at": "2014-10-20T23:44:35Z",
    "body": "+1 for this. I'm working on an application that I have to deliver for mac and windows, and this would simplify the delivery considerably. \n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/60110131",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-60110131",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 60110131,
    "user": {
      "login": "joshuawarner32",
      "id": 182686,
      "avatar_url": "https://avatars0.githubusercontent.com/u/182686?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/joshuawarner32",
      "html_url": "https://github.com/joshuawarner32",
      "followers_url": "https://api.github.com/users/joshuawarner32/followers",
      "following_url": "https://api.github.com/users/joshuawarner32/following{/other_user}",
      "gists_url": "https://api.github.com/users/joshuawarner32/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/joshuawarner32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/joshuawarner32/subscriptions",
      "organizations_url": "https://api.github.com/users/joshuawarner32/orgs",
      "repos_url": "https://api.github.com/users/joshuawarner32/repos",
      "events_url": "https://api.github.com/users/joshuawarner32/events{/privacy}",
      "received_events_url": "https://api.github.com/users/joshuawarner32/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-22T16:08:22Z",
    "updated_at": "2014-10-22T16:08:22Z",
    "body": "This would be awesome!\n\nA few thoughts:\n- As @YuriSolovyov said, we need a way to declare what versions of the atom-runtime a particular asar is compatible with. Preferably, this should also allow specifying an exact version, since this lessens the burden on QA when releasing an asar-based app.\n  - To support that, we'd need to allow having multiple versions of the atom-runtime installed side-by-side, potentially invisibly to the user.\n  - Note that this is somewhat at odds with the ideals of limiting download sizes.  However, a company producing multiple asar-based products could standardize internally so all their apps still use the same version.\n- You didn't mention support for auto-updating atom-runtime on Mac, but that would be _very_ useful.\n- Rather than having source-only installations on linux, it would be good to support installing / updating binaries, both through .deb/.rpm packages as well as some method that doesn't require sudo rights to install (i.e. per-user).  For runtimes installed per-user, auto-update would also be very useful.\n- Would there be any support for keeping installed asar files up-to-date - or is that something that'd have to be implemented independently in each app?\n\nLastly, what's the timeline on this effort?  What would be the best way to get started, if I wanted to begin implementing parts of this?  I'm open to contributing.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/60190274",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-60190274",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 60190274,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2014-10-23T04:04:56Z",
    "updated_at": "2014-10-23T04:04:56Z",
    "body": "@joshuawarner32 Currently this is just a rough idea, I plan to work on it after solving some major issues of atom-shell, but it could be months later.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/60231266",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-60231266",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 60231266,
    "user": {
      "login": "YurySolovyov",
      "id": 2168518,
      "avatar_url": "https://avatars3.githubusercontent.com/u/2168518?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/YurySolovyov",
      "html_url": "https://github.com/YurySolovyov",
      "followers_url": "https://api.github.com/users/YurySolovyov/followers",
      "following_url": "https://api.github.com/users/YurySolovyov/following{/other_user}",
      "gists_url": "https://api.github.com/users/YurySolovyov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/YurySolovyov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/YurySolovyov/subscriptions",
      "organizations_url": "https://api.github.com/users/YurySolovyov/orgs",
      "repos_url": "https://api.github.com/users/YurySolovyov/repos",
      "events_url": "https://api.github.com/users/YurySolovyov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/YurySolovyov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-23T12:28:34Z",
    "updated_at": "2014-10-23T12:28:34Z",
    "body": "I think it is also worth looking at existing runtimes and how they are working/updated, how disturbing they are and what other pros and cons.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/78500157",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-78500157",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 78500157,
    "user": {
      "login": "steelbrain",
      "id": 4278113,
      "avatar_url": "https://avatars2.githubusercontent.com/u/4278113?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/steelbrain",
      "html_url": "https://github.com/steelbrain",
      "followers_url": "https://api.github.com/users/steelbrain/followers",
      "following_url": "https://api.github.com/users/steelbrain/following{/other_user}",
      "gists_url": "https://api.github.com/users/steelbrain/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/steelbrain/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/steelbrain/subscriptions",
      "organizations_url": "https://api.github.com/users/steelbrain/orgs",
      "repos_url": "https://api.github.com/users/steelbrain/repos",
      "events_url": "https://api.github.com/users/steelbrain/events{/privacy}",
      "received_events_url": "https://api.github.com/users/steelbrain/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-12T15:15:21Z",
    "updated_at": "2015-03-12T15:15:21Z",
    "body": "> Currently this is just a rough idea, I plan to work on it after solving some major issues of atom-shell, but it could be months later.\n\nIt's been about 5-6 months. It'd be great to have this implemented.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/78785758",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-78785758",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 78785758,
    "user": {
      "login": "joshuawarner32",
      "id": 182686,
      "avatar_url": "https://avatars0.githubusercontent.com/u/182686?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/joshuawarner32",
      "html_url": "https://github.com/joshuawarner32",
      "followers_url": "https://api.github.com/users/joshuawarner32/followers",
      "following_url": "https://api.github.com/users/joshuawarner32/following{/other_user}",
      "gists_url": "https://api.github.com/users/joshuawarner32/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/joshuawarner32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/joshuawarner32/subscriptions",
      "organizations_url": "https://api.github.com/users/joshuawarner32/orgs",
      "repos_url": "https://api.github.com/users/joshuawarner32/repos",
      "events_url": "https://api.github.com/users/joshuawarner32/events{/privacy}",
      "received_events_url": "https://api.github.com/users/joshuawarner32/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-13T04:00:56Z",
    "updated_at": "2015-03-13T04:00:56Z",
    "body": "We've built up an internal implementation of this that fits our particular use-case very well, and we might be able to upstream it.  The danger would be that it's actually too specific to our use-case, and nobody else would be interested in the extra complexity.\n\nHere are the highlights of our design:\n- Deploy .asar.gz files for several different apps on a server\n- Distribute a single build of atom-shell to users, which doesn't bundle any code for specific apps\n- On app startup, download the appropriate .asar.gz file (if it's not there, or there's a more recent one on the server).  Extract it and run the contained app.\n- Our atom-shell build accepts a `--app` argument to specify which app to download/run\n\nIs that sort-of what atom-shell folk had in mind?  Would something like that be useful to other people?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/98557880",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-98557880",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 98557880,
    "user": {
      "login": "tonypee",
      "id": 3086901,
      "avatar_url": "https://avatars1.githubusercontent.com/u/3086901?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tonypee",
      "html_url": "https://github.com/tonypee",
      "followers_url": "https://api.github.com/users/tonypee/followers",
      "following_url": "https://api.github.com/users/tonypee/following{/other_user}",
      "gists_url": "https://api.github.com/users/tonypee/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tonypee/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tonypee/subscriptions",
      "organizations_url": "https://api.github.com/users/tonypee/orgs",
      "repos_url": "https://api.github.com/users/tonypee/repos",
      "events_url": "https://api.github.com/users/tonypee/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tonypee/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-03T23:53:37Z",
    "updated_at": "2015-05-03T23:53:37Z",
    "body": "Like the JRE it could be the ERE (electron runtime environment), with .eapp files (electron app) \n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/98558135",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-98558135",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 98558135,
    "user": {
      "login": "steelbrain",
      "id": 4278113,
      "avatar_url": "https://avatars2.githubusercontent.com/u/4278113?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/steelbrain",
      "html_url": "https://github.com/steelbrain",
      "followers_url": "https://api.github.com/users/steelbrain/followers",
      "following_url": "https://api.github.com/users/steelbrain/following{/other_user}",
      "gists_url": "https://api.github.com/users/steelbrain/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/steelbrain/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/steelbrain/subscriptions",
      "organizations_url": "https://api.github.com/users/steelbrain/orgs",
      "repos_url": "https://api.github.com/users/steelbrain/repos",
      "events_url": "https://api.github.com/users/steelbrain/events{/privacy}",
      "received_events_url": "https://api.github.com/users/steelbrain/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-03T23:59:43Z",
    "updated_at": "2015-05-03T23:59:43Z",
    "body": "-1 for .eapp\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/134698797",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-134698797",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 134698797,
    "user": {
      "login": "LestaD",
      "id": 5620073,
      "avatar_url": "https://avatars3.githubusercontent.com/u/5620073?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LestaD",
      "html_url": "https://github.com/LestaD",
      "followers_url": "https://api.github.com/users/LestaD/followers",
      "following_url": "https://api.github.com/users/LestaD/following{/other_user}",
      "gists_url": "https://api.github.com/users/LestaD/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LestaD/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LestaD/subscriptions",
      "organizations_url": "https://api.github.com/users/LestaD/orgs",
      "repos_url": "https://api.github.com/users/LestaD/repos",
      "events_url": "https://api.github.com/users/LestaD/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LestaD/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-25T18:47:03Z",
    "updated_at": "2015-08-25T18:47:03Z",
    "body": "+1 I need it!\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/134735445",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-134735445",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 134735445,
    "user": {
      "login": "paulcbetts",
      "id": 1396,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1396?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulcbetts",
      "html_url": "https://github.com/paulcbetts",
      "followers_url": "https://api.github.com/users/paulcbetts/followers",
      "following_url": "https://api.github.com/users/paulcbetts/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulcbetts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulcbetts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulcbetts/subscriptions",
      "organizations_url": "https://api.github.com/users/paulcbetts/orgs",
      "repos_url": "https://api.github.com/users/paulcbetts/repos",
      "events_url": "https://api.github.com/users/paulcbetts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulcbetts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-25T20:46:58Z",
    "updated_at": "2015-08-25T20:46:58Z",
    "body": "> On Windows, we can provide installer and auto updater for atom-runtime, and register the .asar file type to be opened with it.\n\nInstall Steam on Windows and check out how they create game shortcuts, they actually use a protocol handler, it's relatively clever\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/136557721",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-136557721",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 136557721,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2015-09-01T02:42:26Z",
    "updated_at": "2015-09-01T02:42:26Z",
    "body": ":+1: on the Steam model.\n\nThere is no technical obstacle on implementing this, the whole thing can just be an Electron app itself. But the problem is it is not easy to implement neither, taking all the details into account, I think it requires a small team working full time on it, I'm not sure whether it would ever happen.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/136568392",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-136568392",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 136568392,
    "user": {
      "login": "paulcbetts",
      "id": 1396,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1396?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulcbetts",
      "html_url": "https://github.com/paulcbetts",
      "followers_url": "https://api.github.com/users/paulcbetts/followers",
      "following_url": "https://api.github.com/users/paulcbetts/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulcbetts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulcbetts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulcbetts/subscriptions",
      "organizations_url": "https://api.github.com/users/paulcbetts/orgs",
      "repos_url": "https://api.github.com/users/paulcbetts/repos",
      "events_url": "https://api.github.com/users/paulcbetts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulcbetts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-01T03:41:57Z",
    "updated_at": "2015-09-01T03:44:23Z",
    "body": "> But the problem is it is not easy to implement neither, taking all the details into account, I think it requires a small team working full time on it, I'm not sure whether it would ever happen.\n\nThere are a lot of questions in my mind that, while certainly aren't insurmountable, make this plan Difficult. For example, say \"App 1\" requires 0.30.x and cannot run on 0.31.x, and \"App 2\" requires the opposite. Who wins in this scenario?  \n\nIt seems like a lot of effort and infrastructure / trickiness to optimize for something that isn't our biggest problem - disk space and bandwidth, at the expense of developer complexity (i.e. now developers have to create this crazy chain-installer to first install/verify Electron, then install their app)\n\nI don't mean to be hatin' on an idea! I just think that with the time we'd take to do this, we could instead spend it on our big problem - making it super dead easy for new devs to create and publish Electron apps, from their first line of code all the way to shipping it to users\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/136568792",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-136568792",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 136568792,
    "user": {
      "login": "steelbrain",
      "id": 4278113,
      "avatar_url": "https://avatars2.githubusercontent.com/u/4278113?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/steelbrain",
      "html_url": "https://github.com/steelbrain",
      "followers_url": "https://api.github.com/users/steelbrain/followers",
      "following_url": "https://api.github.com/users/steelbrain/following{/other_user}",
      "gists_url": "https://api.github.com/users/steelbrain/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/steelbrain/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/steelbrain/subscriptions",
      "organizations_url": "https://api.github.com/users/steelbrain/orgs",
      "repos_url": "https://api.github.com/users/steelbrain/repos",
      "events_url": "https://api.github.com/users/steelbrain/events{/privacy}",
      "received_events_url": "https://api.github.com/users/steelbrain/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-01T03:46:22Z",
    "updated_at": "2015-09-01T03:47:49Z",
    "body": "@paulcbetts But hey, it's benefits are worth it, aren't they? When updating an app, users will have to download less than an mb instead of ~70mb. Which means we won't even need auto-updating frameworks and all, we will just have to download and extract a micro-zip archive with a couple of files.\n\nI've spent the last three months in a remote area where the speed was less than 128kbps and trust me, the upgrade size is a huge pain in the arse, the worst part is that there's still tons of people still in similar situations\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/136569293",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-136569293",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 136569293,
    "user": {
      "login": "paulcbetts",
      "id": 1396,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1396?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulcbetts",
      "html_url": "https://github.com/paulcbetts",
      "followers_url": "https://api.github.com/users/paulcbetts/followers",
      "following_url": "https://api.github.com/users/paulcbetts/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulcbetts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulcbetts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulcbetts/subscriptions",
      "organizations_url": "https://api.github.com/users/paulcbetts/orgs",
      "repos_url": "https://api.github.com/users/paulcbetts/repos",
      "events_url": "https://api.github.com/users/paulcbetts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulcbetts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-01T03:48:34Z",
    "updated_at": "2015-09-01T03:48:34Z",
    "body": ">  Which means we won't even need auto-updating frameworks and all, we will just have to download and extract a micro-zip archieve with a couple of files.\n\nI don't think that's true though, because almost certainly at some point you'll want to move in an update to a newer version of Electron and then kerplowie, you're in a similar sitch (or at least one that is similarly ugly)\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/136570457",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-136570457",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 136570457,
    "user": {
      "login": "RIAEvangelist",
      "id": 369041,
      "avatar_url": "https://avatars0.githubusercontent.com/u/369041?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RIAEvangelist",
      "html_url": "https://github.com/RIAEvangelist",
      "followers_url": "https://api.github.com/users/RIAEvangelist/followers",
      "following_url": "https://api.github.com/users/RIAEvangelist/following{/other_user}",
      "gists_url": "https://api.github.com/users/RIAEvangelist/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RIAEvangelist/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RIAEvangelist/subscriptions",
      "organizations_url": "https://api.github.com/users/RIAEvangelist/orgs",
      "repos_url": "https://api.github.com/users/RIAEvangelist/repos",
      "events_url": "https://api.github.com/users/RIAEvangelist/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RIAEvangelist/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-01T03:53:56Z",
    "updated_at": "2015-09-01T03:53:56Z",
    "body": "Basic apps now are between 30 and 50 Megs unless you have a crap ton of videos inside your package. I don't think that's a stretch for most people to download. I believe the average youtube video is between 30 and 40 mb...\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/136581156",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-136581156",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 136581156,
    "user": {
      "login": "Tribex",
      "id": 5861371,
      "avatar_url": "https://avatars3.githubusercontent.com/u/5861371?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Tribex",
      "html_url": "https://github.com/Tribex",
      "followers_url": "https://api.github.com/users/Tribex/followers",
      "following_url": "https://api.github.com/users/Tribex/following{/other_user}",
      "gists_url": "https://api.github.com/users/Tribex/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Tribex/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Tribex/subscriptions",
      "organizations_url": "https://api.github.com/users/Tribex/orgs",
      "repos_url": "https://api.github.com/users/Tribex/repos",
      "events_url": "https://api.github.com/users/Tribex/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Tribex/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-01T04:17:49Z",
    "updated_at": "2015-09-01T04:18:16Z",
    "body": "I'd just like to make a note here, in China, the connection speed averages about 20kB/s (Granted I've got a connection slower than ~92% of my city.) Updating Atom/electron usually requires a full day of `wget -c`'ing. unless the taobao mirrors are used.\n\nFor version compatibility, electron development moves too fast to have a catch-all version either, perhaps some sort of wrapper/helper could be used to use/download the requested major version when the app starts?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/136598568",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-136598568",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 136598568,
    "user": {
      "login": "RIAEvangelist",
      "id": 369041,
      "avatar_url": "https://avatars0.githubusercontent.com/u/369041?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RIAEvangelist",
      "html_url": "https://github.com/RIAEvangelist",
      "followers_url": "https://api.github.com/users/RIAEvangelist/followers",
      "following_url": "https://api.github.com/users/RIAEvangelist/following{/other_user}",
      "gists_url": "https://api.github.com/users/RIAEvangelist/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RIAEvangelist/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RIAEvangelist/subscriptions",
      "organizations_url": "https://api.github.com/users/RIAEvangelist/orgs",
      "repos_url": "https://api.github.com/users/RIAEvangelist/repos",
      "events_url": "https://api.github.com/users/RIAEvangelist/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RIAEvangelist/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-01T06:28:03Z",
    "updated_at": "2015-09-01T06:34:39Z",
    "body": "20 kb/s? how can you survive? I can't imagine how difficult that must make things!\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/136599703",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-136599703",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 136599703,
    "user": {
      "login": "RIAEvangelist",
      "id": 369041,
      "avatar_url": "https://avatars0.githubusercontent.com/u/369041?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RIAEvangelist",
      "html_url": "https://github.com/RIAEvangelist",
      "followers_url": "https://api.github.com/users/RIAEvangelist/followers",
      "following_url": "https://api.github.com/users/RIAEvangelist/following{/other_user}",
      "gists_url": "https://api.github.com/users/RIAEvangelist/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RIAEvangelist/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RIAEvangelist/subscriptions",
      "organizations_url": "https://api.github.com/users/RIAEvangelist/orgs",
      "repos_url": "https://api.github.com/users/RIAEvangelist/repos",
      "events_url": "https://api.github.com/users/RIAEvangelist/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RIAEvangelist/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-01T06:35:07Z",
    "updated_at": "2015-09-01T06:35:07Z",
    "body": "@steelbrain not my intention\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/136611872",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-136611872",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 136611872,
    "user": {
      "login": "Tribex",
      "id": 5861371,
      "avatar_url": "https://avatars3.githubusercontent.com/u/5861371?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Tribex",
      "html_url": "https://github.com/Tribex",
      "followers_url": "https://api.github.com/users/Tribex/followers",
      "following_url": "https://api.github.com/users/Tribex/following{/other_user}",
      "gists_url": "https://api.github.com/users/Tribex/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Tribex/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Tribex/subscriptions",
      "organizations_url": "https://api.github.com/users/Tribex/orgs",
      "repos_url": "https://api.github.com/users/Tribex/repos",
      "events_url": "https://api.github.com/users/Tribex/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Tribex/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-01T07:22:55Z",
    "updated_at": "2015-09-01T07:30:12Z",
    "body": "@RIAEvangelist Getting on at the fast times and lots of patience. The speed gets really fast late at night, so just leave downloads running or scheduled while you're sleeping. :3\n\nAnyways, I think it wouldn't be too much work to write a (basic) third-party wrapper, anyone want to try?\n\n.asar files, however, can't easily declare their electron version. Perhaps another program descriptor system would be needed?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/136615754",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-136615754",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 136615754,
    "user": {
      "login": "YurySolovyov",
      "id": 2168518,
      "avatar_url": "https://avatars3.githubusercontent.com/u/2168518?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/YurySolovyov",
      "html_url": "https://github.com/YurySolovyov",
      "followers_url": "https://api.github.com/users/YurySolovyov/followers",
      "following_url": "https://api.github.com/users/YurySolovyov/following{/other_user}",
      "gists_url": "https://api.github.com/users/YurySolovyov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/YurySolovyov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/YurySolovyov/subscriptions",
      "organizations_url": "https://api.github.com/users/YurySolovyov/orgs",
      "repos_url": "https://api.github.com/users/YurySolovyov/repos",
      "events_url": "https://api.github.com/users/YurySolovyov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/YurySolovyov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-01T07:36:47Z",
    "updated_at": "2015-09-01T07:36:47Z",
    "body": "How about some kind of runtime version dispatcher that (downloads if needed and) launchers required   version of runtime for your app? We can add an entry to package.json for that.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/136616563",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-136616563",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 136616563,
    "user": {
      "login": "Tribex",
      "id": 5861371,
      "avatar_url": "https://avatars3.githubusercontent.com/u/5861371?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Tribex",
      "html_url": "https://github.com/Tribex",
      "followers_url": "https://api.github.com/users/Tribex/followers",
      "following_url": "https://api.github.com/users/Tribex/following{/other_user}",
      "gists_url": "https://api.github.com/users/Tribex/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Tribex/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Tribex/subscriptions",
      "organizations_url": "https://api.github.com/users/Tribex/orgs",
      "repos_url": "https://api.github.com/users/Tribex/repos",
      "events_url": "https://api.github.com/users/Tribex/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Tribex/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-01T07:41:18Z",
    "updated_at": "2015-09-01T07:41:18Z",
    "body": "@YuriSolovyov Except that we can't have said runtime handle .json files by default. I suppose it could read the asar file first and view package.json, but that would slow it down a bit.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/136617485",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-136617485",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 136617485,
    "user": {
      "login": "YurySolovyov",
      "id": 2168518,
      "avatar_url": "https://avatars3.githubusercontent.com/u/2168518?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/YurySolovyov",
      "html_url": "https://github.com/YurySolovyov",
      "followers_url": "https://api.github.com/users/YurySolovyov/followers",
      "following_url": "https://api.github.com/users/YurySolovyov/following{/other_user}",
      "gists_url": "https://api.github.com/users/YurySolovyov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/YurySolovyov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/YurySolovyov/subscriptions",
      "organizations_url": "https://api.github.com/users/YurySolovyov/orgs",
      "repos_url": "https://api.github.com/users/YurySolovyov/repos",
      "events_url": "https://api.github.com/users/YurySolovyov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/YurySolovyov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-01T07:46:15Z",
    "updated_at": "2015-09-01T07:46:15Z",
    "body": "@Tribex yes, logic flow is like:\n\n```\n-> associate .asar with runtime\n-> user launches .asar app\n-> dispatcher reads package.json in .asar\n-> (optional) downloads required runtime version if needed\n-> launches app\n```\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/136732824",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-136732824",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 136732824,
    "user": {
      "login": "hokein",
      "id": 2557445,
      "avatar_url": "https://avatars2.githubusercontent.com/u/2557445?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hokein",
      "html_url": "https://github.com/hokein",
      "followers_url": "https://api.github.com/users/hokein/followers",
      "following_url": "https://api.github.com/users/hokein/following{/other_user}",
      "gists_url": "https://api.github.com/users/hokein/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hokein/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hokein/subscriptions",
      "organizations_url": "https://api.github.com/users/hokein/orgs",
      "repos_url": "https://api.github.com/users/hokein/repos",
      "events_url": "https://api.github.com/users/hokein/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hokein/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-01T14:04:51Z",
    "updated_at": "2015-09-01T14:04:51Z",
    "body": "Ideally, the run-time mode should work like the way of Steam or [Chrome App Launcher](https://chrome.google.com/webstore/launcher). The main issue is how we handle apps when the run-time upgrades to new version.\n\nElectron apps suffer from the upgrade of Electron, especially node native modules. The native modules are required to rebuild for each upgrade of Electron due to the C++ ABI issue(There are several **forgot-rebuilt** crash issues reported by users).\n\nSteam doesn't suffer from the pain since every game on Steam is a stand-alone program, actually you can launch the game without Steam Client. Neither does Chrome App Launch, because Chrome apps are written in HTML/JS/CSS which are kinds of interpreted languages, there are no gap running in different versions of Chrome.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/136733841",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-136733841",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 136733841,
    "user": {
      "login": "steelbrain",
      "id": 4278113,
      "avatar_url": "https://avatars2.githubusercontent.com/u/4278113?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/steelbrain",
      "html_url": "https://github.com/steelbrain",
      "followers_url": "https://api.github.com/users/steelbrain/followers",
      "following_url": "https://api.github.com/users/steelbrain/following{/other_user}",
      "gists_url": "https://api.github.com/users/steelbrain/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/steelbrain/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/steelbrain/subscriptions",
      "organizations_url": "https://api.github.com/users/steelbrain/orgs",
      "repos_url": "https://api.github.com/users/steelbrain/repos",
      "events_url": "https://api.github.com/users/steelbrain/events{/privacy}",
      "received_events_url": "https://api.github.com/users/steelbrain/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-01T14:08:15Z",
    "updated_at": "2015-09-01T14:08:15Z",
    "body": "@hokein how about we have a lightweight \"client\" in a native language, that downloads multiple languages, whenever it encounters an app that depends on an uninstalled version of electron it downloads a copy of it, then runs each app with it's specific electron.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/136736029",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-136736029",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 136736029,
    "user": {
      "login": "etiktin",
      "id": 4381579,
      "avatar_url": "https://avatars1.githubusercontent.com/u/4381579?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/etiktin",
      "html_url": "https://github.com/etiktin",
      "followers_url": "https://api.github.com/users/etiktin/followers",
      "following_url": "https://api.github.com/users/etiktin/following{/other_user}",
      "gists_url": "https://api.github.com/users/etiktin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/etiktin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/etiktin/subscriptions",
      "organizations_url": "https://api.github.com/users/etiktin/orgs",
      "repos_url": "https://api.github.com/users/etiktin/repos",
      "events_url": "https://api.github.com/users/etiktin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/etiktin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-01T14:17:25Z",
    "updated_at": "2015-09-01T14:17:25Z",
    "body": "There's a new Electron release about once a week, so the chance that 2 apps have exactly the same version of Electron are slim.\n\nTo support a run time approach, we will probably need to start separating releases to LTS (long term support) versions and bleeding edge versions. The LTS will be for production and the bleeding edge will be for developing and testing. LTS will only get bug fixes and maybe some changes that don't replace the major io.js and content shell versions, so native modules should still work.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/136764427",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-136764427",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 136764427,
    "user": {
      "login": "RIAEvangelist",
      "id": 369041,
      "avatar_url": "https://avatars0.githubusercontent.com/u/369041?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RIAEvangelist",
      "html_url": "https://github.com/RIAEvangelist",
      "followers_url": "https://api.github.com/users/RIAEvangelist/followers",
      "following_url": "https://api.github.com/users/RIAEvangelist/following{/other_user}",
      "gists_url": "https://api.github.com/users/RIAEvangelist/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RIAEvangelist/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RIAEvangelist/subscriptions",
      "organizations_url": "https://api.github.com/users/RIAEvangelist/orgs",
      "repos_url": "https://api.github.com/users/RIAEvangelist/repos",
      "events_url": "https://api.github.com/users/RIAEvangelist/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RIAEvangelist/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-01T15:39:40Z",
    "updated_at": "2015-09-01T15:39:40Z",
    "body": "given what @etiktin has said, unless a user has many electron apps on their system, there would likely be no benefit in download time since they would still have to download the run time most every time.\n\nIn the two weeks I have been looking at electron now I think I have seen 4 releases.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/136892417",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-136892417",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 136892417,
    "user": {
      "login": "Tribex",
      "id": 5861371,
      "avatar_url": "https://avatars3.githubusercontent.com/u/5861371?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Tribex",
      "html_url": "https://github.com/Tribex",
      "followers_url": "https://api.github.com/users/Tribex/followers",
      "following_url": "https://api.github.com/users/Tribex/following{/other_user}",
      "gists_url": "https://api.github.com/users/Tribex/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Tribex/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Tribex/subscriptions",
      "organizations_url": "https://api.github.com/users/Tribex/orgs",
      "repos_url": "https://api.github.com/users/Tribex/repos",
      "events_url": "https://api.github.com/users/Tribex/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Tribex/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-01T23:38:04Z",
    "updated_at": "2015-09-01T23:38:04Z",
    "body": "@etiktin Ideally, if electron follows semver, then an app could declare version ^0.31, and it would use the latest 0.31.x release. That might help things a bit.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/157980607",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-157980607",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 157980607,
    "user": {
      "login": "jorangreef",
      "id": 413206,
      "avatar_url": "https://avatars3.githubusercontent.com/u/413206?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorangreef",
      "html_url": "https://github.com/jorangreef",
      "followers_url": "https://api.github.com/users/jorangreef/followers",
      "following_url": "https://api.github.com/users/jorangreef/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorangreef/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorangreef/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorangreef/subscriptions",
      "organizations_url": "https://api.github.com/users/jorangreef/orgs",
      "repos_url": "https://api.github.com/users/jorangreef/repos",
      "events_url": "https://api.github.com/users/jorangreef/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorangreef/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-19T07:52:55Z",
    "updated_at": "2015-11-19T07:52:55Z",
    "body": "We have an app in production with a semver auto-update mechanism that does the following:\n1. GET a simple HTTP end-point on the server giving the current version (0.3.0, 0.3.1 etc.) and platform (darwin-x64, win32-ia32, win32-x64 etc.) of the app.\n2. The server returns \"304 Not Modified\" or else a JSON manifest if there is a newer version.\n3. The JSON manifest is essentially a nested list of folders, files and symlinks in the newer version.\n4. A folder entry in the JSON manifest looks like this: [name, array of child entries].\n5. A file entry in the JSON manifest looks like this: [name, hash of content, array of hashes of content split into 64KB chunks, an integer flag indicating whether the file is executable or not].\n6. A symlink entry in the JSON manifest looks like this: [name, destination path].\n7. These JSON manifests are created and cached on the server for each version. For each file in the JSON manifest, the server runs a simple deduplication algorithm to split the file into variable length chunks using content-dependent chunking, and then hashes the chunks using SHA256. This ensures that most chunk hashes for different versions of the same file remain the same, even if content is shifted around by a few bytes. The average chunk length is roughly 64KB for optimum deduplication + compression efficiency. If the chunks are larger they will not deduplicate as well, if the chunks are smaller they will not compress as well. The average chunk length will also be increased for very large files to avoid having too many chunk hashes in the metadata.\n8. When the app receives a new JSON manifest from the server, it checks available free disk space and creates a new temporary directory with a universally unique ID. Using its old local manifest as a starting point, it then copies chunks from local files or downloads missing chunks from the server to recreate the new manifest. After creating the new version, it then verifies the directory structure and signatures of all file content. If anything was corrupted in the download, it removes the update.\n9. If the new update verified successfully against the manifest, it then launches the new version of the app at the new update path.\n10. The older version notices that another version is running, and shuts itself down.\n11. The new app waits for the older version to shut down, then copies itself to another temporary directory, renames the older version to an archive directory, and renames the temporary directory to the location of the older version (/Applications/Ronomon.app). It then runs itself again but now from the location of the older version (/Applicatons/Ronomon.app) and then cleans up the archive directory.\n12. If anything goes wrong during the transition, the older version remains at the canonical path until switched by the rename call.\n\nOverall, it's working very well in production. The deduplication and compression means that only about 33% needs to be downloaded for a typical major version update and minor updates require just 1-2 MB depending on the app. The auto-update handles Electron and app code as one atomic unit, and never violates any code signatures in the process.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/157990692",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-157990692",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 157990692,
    "user": {
      "login": "LestaD",
      "id": 5620073,
      "avatar_url": "https://avatars3.githubusercontent.com/u/5620073?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LestaD",
      "html_url": "https://github.com/LestaD",
      "followers_url": "https://api.github.com/users/LestaD/followers",
      "following_url": "https://api.github.com/users/LestaD/following{/other_user}",
      "gists_url": "https://api.github.com/users/LestaD/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LestaD/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LestaD/subscriptions",
      "organizations_url": "https://api.github.com/users/LestaD/orgs",
      "repos_url": "https://api.github.com/users/LestaD/repos",
      "events_url": "https://api.github.com/users/LestaD/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LestaD/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-19T08:43:57Z",
    "updated_at": "2015-11-19T08:43:57Z",
    "body": "`+1` To idea\n`+1` To rename `asar` \n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/158880405",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-158880405",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 158880405,
    "user": {
      "login": "championswimmer",
      "id": 1327050,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1327050?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/championswimmer",
      "html_url": "https://github.com/championswimmer",
      "followers_url": "https://api.github.com/users/championswimmer/followers",
      "following_url": "https://api.github.com/users/championswimmer/following{/other_user}",
      "gists_url": "https://api.github.com/users/championswimmer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/championswimmer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/championswimmer/subscriptions",
      "organizations_url": "https://api.github.com/users/championswimmer/orgs",
      "repos_url": "https://api.github.com/users/championswimmer/repos",
      "events_url": "https://api.github.com/users/championswimmer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/championswimmer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-23T09:01:14Z",
    "updated_at": "2015-11-23T09:01:14Z",
    "body": "I came down to make an issue regarding this. Found this already existed, so I'll put my + :100: to this \nWe totally need a JRE or .NET or Adobe Air like solution, because packing the runtime with each app makes them really bulky. \n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/172585754",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-172585754",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 172585754,
    "user": {
      "login": "PierBover",
      "id": 226483,
      "avatar_url": "https://avatars2.githubusercontent.com/u/226483?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PierBover",
      "html_url": "https://github.com/PierBover",
      "followers_url": "https://api.github.com/users/PierBover/followers",
      "following_url": "https://api.github.com/users/PierBover/following{/other_user}",
      "gists_url": "https://api.github.com/users/PierBover/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PierBover/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PierBover/subscriptions",
      "organizations_url": "https://api.github.com/users/PierBover/orgs",
      "repos_url": "https://api.github.com/users/PierBover/repos",
      "events_url": "https://api.github.com/users/PierBover/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PierBover/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-18T16:52:40Z",
    "updated_at": "2016-01-18T16:52:40Z",
    "body": "Any updates on having a runtime separated from the apps?\n\nIs this closed because a solution has been developed?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/172618888",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-172618888",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 172618888,
    "user": {
      "login": "championswimmer",
      "id": 1327050,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1327050?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/championswimmer",
      "html_url": "https://github.com/championswimmer",
      "followers_url": "https://api.github.com/users/championswimmer/followers",
      "following_url": "https://api.github.com/users/championswimmer/following{/other_user}",
      "gists_url": "https://api.github.com/users/championswimmer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/championswimmer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/championswimmer/subscriptions",
      "organizations_url": "https://api.github.com/users/championswimmer/orgs",
      "repos_url": "https://api.github.com/users/championswimmer/repos",
      "events_url": "https://api.github.com/users/championswimmer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/championswimmer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-18T18:37:38Z",
    "updated_at": "2016-01-18T18:37:38Z",
    "body": "@PierBover this issue is open. \n\nthis - https://github.com/KeitIG/museeks/issues/48 - got closed. in someone else's repository. \n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/172620384",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-172620384",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 172620384,
    "user": {
      "login": "PierBover",
      "id": 226483,
      "avatar_url": "https://avatars2.githubusercontent.com/u/226483?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PierBover",
      "html_url": "https://github.com/PierBover",
      "followers_url": "https://api.github.com/users/PierBover/followers",
      "following_url": "https://api.github.com/users/PierBover/following{/other_user}",
      "gists_url": "https://api.github.com/users/PierBover/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PierBover/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PierBover/subscriptions",
      "organizations_url": "https://api.github.com/users/PierBover/orgs",
      "repos_url": "https://api.github.com/users/PierBover/repos",
      "events_url": "https://api.github.com/users/PierBover/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PierBover/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-18T18:45:23Z",
    "updated_at": "2016-01-18T18:45:23Z",
    "body": "Oh thanks @championswimmer and sorry for the confusion.\n\nSo are there any news on the independent runtime? Is this something that is being worked on?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/172621492",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-172621492",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 172621492,
    "user": {
      "login": "etiktin",
      "id": 4381579,
      "avatar_url": "https://avatars1.githubusercontent.com/u/4381579?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/etiktin",
      "html_url": "https://github.com/etiktin",
      "followers_url": "https://api.github.com/users/etiktin/followers",
      "following_url": "https://api.github.com/users/etiktin/following{/other_user}",
      "gists_url": "https://api.github.com/users/etiktin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/etiktin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/etiktin/subscriptions",
      "organizations_url": "https://api.github.com/users/etiktin/orgs",
      "repos_url": "https://api.github.com/users/etiktin/repos",
      "events_url": "https://api.github.com/users/etiktin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/etiktin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-18T18:51:10Z",
    "updated_at": "2016-01-18T19:31:25Z",
    "body": "@PierBover it's probably not going to happen any time soon due to the current version fragmentation (it's hard to find 2 electron apps that are using the same exact version). Maybe after v1 is released.\n\n@jorangreef do you use your differential update mechanism on all platforms? It would be awesome if you could release that code as a standalone module.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/172677735",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-172677735",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 172677735,
    "user": {
      "login": "KeitIG",
      "id": 1311607,
      "avatar_url": "https://avatars0.githubusercontent.com/u/1311607?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/KeitIG",
      "html_url": "https://github.com/KeitIG",
      "followers_url": "https://api.github.com/users/KeitIG/followers",
      "following_url": "https://api.github.com/users/KeitIG/following{/other_user}",
      "gists_url": "https://api.github.com/users/KeitIG/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/KeitIG/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KeitIG/subscriptions",
      "organizations_url": "https://api.github.com/users/KeitIG/orgs",
      "repos_url": "https://api.github.com/users/KeitIG/repos",
      "events_url": "https://api.github.com/users/KeitIG/events{/privacy}",
      "received_events_url": "https://api.github.com/users/KeitIG/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-18T23:09:56Z",
    "updated_at": "2016-01-18T23:09:56Z",
    "body": "@championswimmer Yep, I've managed to create a build script for my app, so I'm ok distributing my app now. But I'm keeping an eye on this because it would be interesting.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/172750397",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-172750397",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 172750397,
    "user": {
      "login": "jorangreef",
      "id": 413206,
      "avatar_url": "https://avatars3.githubusercontent.com/u/413206?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorangreef",
      "html_url": "https://github.com/jorangreef",
      "followers_url": "https://api.github.com/users/jorangreef/followers",
      "following_url": "https://api.github.com/users/jorangreef/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorangreef/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorangreef/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorangreef/subscriptions",
      "organizations_url": "https://api.github.com/users/jorangreef/orgs",
      "repos_url": "https://api.github.com/users/jorangreef/repos",
      "events_url": "https://api.github.com/users/jorangreef/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorangreef/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-19T06:05:59Z",
    "updated_at": "2016-01-19T06:05:59Z",
    "body": "@etiktin Yes, the differential auto update currently works on all platforms. If it also included a minimal installer which does the download, then the installer could be shared by several apps, and use a cached version of Electron if already available. This would serve to make installs much faster. I would like to open source it if people are interested, and will try to release the code in the next few months.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/186544065",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-186544065",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 186544065,
    "user": {
      "login": "louy2",
      "id": 2263580,
      "avatar_url": "https://avatars3.githubusercontent.com/u/2263580?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/louy2",
      "html_url": "https://github.com/louy2",
      "followers_url": "https://api.github.com/users/louy2/followers",
      "following_url": "https://api.github.com/users/louy2/following{/other_user}",
      "gists_url": "https://api.github.com/users/louy2/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/louy2/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/louy2/subscriptions",
      "organizations_url": "https://api.github.com/users/louy2/orgs",
      "repos_url": "https://api.github.com/users/louy2/repos",
      "events_url": "https://api.github.com/users/louy2/events{/privacy}",
      "received_events_url": "https://api.github.com/users/louy2/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-20T08:45:41Z",
    "updated_at": "2016-02-20T08:45:41Z",
    "body": "> For example, say \"App 1\" requires 0.30.x and cannot run on 0.31.x, and \"App 2\" requires the opposite. Who wins in this scenario? \n\nThen they should install the two versions and there will be two runtimes, just like VS C++ 2008 coexists with 2005. I really like how VS C++ runtimes are installed, the installer would install a required version if there is none, and others can depend on it later, and different runtimes can coexist. Enforcement of version requirements also seems to be more easily done in the installer. \n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/186595285",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-186595285",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 186595285,
    "user": {
      "login": "KeitIG",
      "id": 1311607,
      "avatar_url": "https://avatars0.githubusercontent.com/u/1311607?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/KeitIG",
      "html_url": "https://github.com/KeitIG",
      "followers_url": "https://api.github.com/users/KeitIG/followers",
      "following_url": "https://api.github.com/users/KeitIG/following{/other_user}",
      "gists_url": "https://api.github.com/users/KeitIG/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/KeitIG/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KeitIG/subscriptions",
      "organizations_url": "https://api.github.com/users/KeitIG/orgs",
      "repos_url": "https://api.github.com/users/KeitIG/repos",
      "events_url": "https://api.github.com/users/KeitIG/events{/privacy}",
      "received_events_url": "https://api.github.com/users/KeitIG/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-20T13:24:41Z",
    "updated_at": "2016-02-20T13:24:41Z",
    "body": "@louy2 There is a difference between the Visual C++ example (3 years between releases), and Electron (3 releases per month at least)\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/186609186",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-186609186",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 186609186,
    "user": {
      "login": "championswimmer",
      "id": 1327050,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1327050?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/championswimmer",
      "html_url": "https://github.com/championswimmer",
      "followers_url": "https://api.github.com/users/championswimmer/followers",
      "following_url": "https://api.github.com/users/championswimmer/following{/other_user}",
      "gists_url": "https://api.github.com/users/championswimmer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/championswimmer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/championswimmer/subscriptions",
      "organizations_url": "https://api.github.com/users/championswimmer/orgs",
      "repos_url": "https://api.github.com/users/championswimmer/repos",
      "events_url": "https://api.github.com/users/championswimmer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/championswimmer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-20T14:06:07Z",
    "updated_at": "2016-02-20T14:06:07Z",
    "body": "I'll quip in with a 'this is a broken system' quote here, if majority of\nthe apps in the Electron ecosystem are not compatible with +- 0.0.1 or\n0.1.0 version differences\n\nOn 20 February 2016 at 18:55, Pierre de la Martinière <\nnotifications@github.com> wrote:\n\n> @louy2 https://github.com/louy2 There is a difference between the\n> Visual C++ example (3 years between releases), and Electron (3 releases per\n> month at least)\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/atom/electron/issues/673#issuecomment-186595285.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/198660499",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-198660499",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 198660499,
    "user": {
      "login": "iamtekeste",
      "id": 1515815,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1515815?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/iamtekeste",
      "html_url": "https://github.com/iamtekeste",
      "followers_url": "https://api.github.com/users/iamtekeste/followers",
      "following_url": "https://api.github.com/users/iamtekeste/following{/other_user}",
      "gists_url": "https://api.github.com/users/iamtekeste/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/iamtekeste/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iamtekeste/subscriptions",
      "organizations_url": "https://api.github.com/users/iamtekeste/orgs",
      "repos_url": "https://api.github.com/users/iamtekeste/repos",
      "events_url": "https://api.github.com/users/iamtekeste/events{/privacy}",
      "received_events_url": "https://api.github.com/users/iamtekeste/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-19T07:47:22Z",
    "updated_at": "2016-03-19T07:47:22Z",
    "body": "+1 \n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/200051284",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-200051284",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 200051284,
    "user": {
      "login": "iamale",
      "id": 1298948,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1298948?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/iamale",
      "html_url": "https://github.com/iamale",
      "followers_url": "https://api.github.com/users/iamale/followers",
      "following_url": "https://api.github.com/users/iamale/following{/other_user}",
      "gists_url": "https://api.github.com/users/iamale/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/iamale/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iamale/subscriptions",
      "organizations_url": "https://api.github.com/users/iamale/orgs",
      "repos_url": "https://api.github.com/users/iamale/repos",
      "events_url": "https://api.github.com/users/iamale/events{/privacy}",
      "received_events_url": "https://api.github.com/users/iamale/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-22T22:02:52Z",
    "updated_at": "2016-03-22T22:06:33Z",
    "body": "I've packaged electron to a .deb package using [fpm](https://github.com/jordansissel/fpm). This could be a fair starting point on Linux (Debian- or RPM-based, at least). You can take a look here: [iamale/electron-deb](https://github.com/iamale/electron-deb); also an [example app is there](https://github.com/iamale/electron-deb/tree/master/example). (It will work with asar's as well, just need to add a MIME entry into the runtime package.)\n\nIt would be really great if we had something like that on the other platforms as well! I could probably try to package it for Windows, but I don't use it actively anymore, and din't really have had many experience with it.\n\n(Thanks to @louy2 for pointing out this thread to me!)\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/200052065",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-200052065",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 200052065,
    "user": {
      "login": "iamale",
      "id": 1298948,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1298948?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/iamale",
      "html_url": "https://github.com/iamale",
      "followers_url": "https://api.github.com/users/iamale/followers",
      "following_url": "https://api.github.com/users/iamale/following{/other_user}",
      "gists_url": "https://api.github.com/users/iamale/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/iamale/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iamale/subscriptions",
      "organizations_url": "https://api.github.com/users/iamale/orgs",
      "repos_url": "https://api.github.com/users/iamale/repos",
      "events_url": "https://api.github.com/users/iamale/events{/privacy}",
      "received_events_url": "https://api.github.com/users/iamale/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-22T22:06:09Z",
    "updated_at": "2016-03-22T22:06:09Z",
    "body": "By the way, what's the MIME type for .asar? Would `application/x-asar` do?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/200163744",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-200163744",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 200163744,
    "user": {
      "login": "steelbrain",
      "id": 4278113,
      "avatar_url": "https://avatars2.githubusercontent.com/u/4278113?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/steelbrain",
      "html_url": "https://github.com/steelbrain",
      "followers_url": "https://api.github.com/users/steelbrain/followers",
      "following_url": "https://api.github.com/users/steelbrain/following{/other_user}",
      "gists_url": "https://api.github.com/users/steelbrain/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/steelbrain/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/steelbrain/subscriptions",
      "organizations_url": "https://api.github.com/users/steelbrain/orgs",
      "repos_url": "https://api.github.com/users/steelbrain/repos",
      "events_url": "https://api.github.com/users/steelbrain/events{/privacy}",
      "received_events_url": "https://api.github.com/users/steelbrain/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-23T04:04:05Z",
    "updated_at": "2016-03-23T04:04:05Z",
    "body": "@iamale Instead of `fpm`, have you had a look at [`AppImageKit`](https://github.com/probonopd/AppImageKit). The main benefit that you get is that instead of creating multiple libraries and all, you can target all linux distros with one executable. You also no longer have to ask the user to install any dependencies as they are bundled with the executable. It's a nice project, please take a look.\n\nand about the mime, how about `application/x-electron`?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/200200477",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-200200477",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 200200477,
    "user": {
      "login": "iamale",
      "id": 1298948,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1298948?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/iamale",
      "html_url": "https://github.com/iamale",
      "followers_url": "https://api.github.com/users/iamale/followers",
      "following_url": "https://api.github.com/users/iamale/following{/other_user}",
      "gists_url": "https://api.github.com/users/iamale/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/iamale/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iamale/subscriptions",
      "organizations_url": "https://api.github.com/users/iamale/orgs",
      "repos_url": "https://api.github.com/users/iamale/repos",
      "events_url": "https://api.github.com/users/iamale/events{/privacy}",
      "received_events_url": "https://api.github.com/users/iamale/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-23T06:11:19Z",
    "updated_at": "2016-03-23T06:11:19Z",
    "body": "@steelbrain That's a nice idea. However, this wouldn't solve the original problem: the Electron runtime would have to be packaged with each app (because the images have to be self-contained), which is exactly what this issue is about. Although I think it should be relatively easy to make AppImages out of Electron apps, and I believe this would be great when traditional package management can't be used (rare distros or unpriveleged users). So, thanks for pointing it out!\n\n`application/x-electron` sounds great by the way, probably will stick with it.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/200213876",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-200213876",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 200213876,
    "user": {
      "login": "iamale",
      "id": 1298948,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1298948?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/iamale",
      "html_url": "https://github.com/iamale",
      "followers_url": "https://api.github.com/users/iamale/followers",
      "following_url": "https://api.github.com/users/iamale/following{/other_user}",
      "gists_url": "https://api.github.com/users/iamale/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/iamale/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iamale/subscriptions",
      "organizations_url": "https://api.github.com/users/iamale/orgs",
      "repos_url": "https://api.github.com/users/iamale/repos",
      "events_url": "https://api.github.com/users/iamale/events{/privacy}",
      "received_events_url": "https://api.github.com/users/iamale/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-23T07:00:06Z",
    "updated_at": "2016-03-23T07:00:06Z",
    "body": "Added asar support! Not in the repository yet, will rebuild it later today or maybe tomorrow. For now, you can get the package [on transfer.sh](https://transfer.sh/Izvnt/electron-0.37.2-amd64.deb) (link will be valid for next 2 weeks)\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/216889055",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-216889055",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 216889055,
    "user": {
      "login": "sapioit",
      "id": 3173159,
      "avatar_url": "https://avatars3.githubusercontent.com/u/3173159?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sapioit",
      "html_url": "https://github.com/sapioit",
      "followers_url": "https://api.github.com/users/sapioit/followers",
      "following_url": "https://api.github.com/users/sapioit/following{/other_user}",
      "gists_url": "https://api.github.com/users/sapioit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sapioit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sapioit/subscriptions",
      "organizations_url": "https://api.github.com/users/sapioit/orgs",
      "repos_url": "https://api.github.com/users/sapioit/repos",
      "events_url": "https://api.github.com/users/sapioit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sapioit/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-04T14:50:19Z",
    "updated_at": "2016-05-04T14:50:19Z",
    "body": "You need a asar.json inside the .asar, to tell:\n- recomanded version\n- compatible versions\n  Once that's done, you need one app using electron (any version of it) to check the web for (1) updates for itself (the checker) and (2) the existing versions in your computer, then if a compatible version exists it parses the opening path to the opened .asar, otherwise download the recommended version and check again. The app, itself, can be written in Electron, or python (as it would only require minimal or no UI).\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/216891189",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-216891189",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 216891189,
    "user": {
      "login": "sapioit",
      "id": 3173159,
      "avatar_url": "https://avatars3.githubusercontent.com/u/3173159?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sapioit",
      "html_url": "https://github.com/sapioit",
      "followers_url": "https://api.github.com/users/sapioit/followers",
      "following_url": "https://api.github.com/users/sapioit/following{/other_user}",
      "gists_url": "https://api.github.com/users/sapioit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sapioit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sapioit/subscriptions",
      "organizations_url": "https://api.github.com/users/sapioit/orgs",
      "repos_url": "https://api.github.com/users/sapioit/repos",
      "events_url": "https://api.github.com/users/sapioit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sapioit/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-04T14:56:35Z",
    "updated_at": "2016-05-04T14:56:35Z",
    "body": "The idea is: The app which checks if the electron version required is downloaded haves nothing to do with the electron versions needed.\n\nIf need arises, you could update the content of default_app, as well as the rest of the app, excepting it.\n\nAnd in there, you can have the versions saved with `app.setPath(\"userData\", __dirname + \"/ElectronVersions\");` then those versions could be left there alone, and new ones installed as need arrises. \n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/217097699",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-217097699",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 217097699,
    "user": {
      "login": "probonopd",
      "id": 2480569,
      "avatar_url": "https://avatars0.githubusercontent.com/u/2480569?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/probonopd",
      "html_url": "https://github.com/probonopd",
      "followers_url": "https://api.github.com/users/probonopd/followers",
      "following_url": "https://api.github.com/users/probonopd/following{/other_user}",
      "gists_url": "https://api.github.com/users/probonopd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/probonopd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/probonopd/subscriptions",
      "organizations_url": "https://api.github.com/users/probonopd/orgs",
      "repos_url": "https://api.github.com/users/probonopd/repos",
      "events_url": "https://api.github.com/users/probonopd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/probonopd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-05T08:04:47Z",
    "updated_at": "2016-05-05T08:04:47Z",
    "body": "> Instead of fpm, have you had a look at [AppImageKit](http://appimage.org). \n\nThere is an AppImage of Atom available at https://bintray.com/probono/AppImages/Atom/_latestVersion#files - just download, `chmod a+x`, and run on any not-too-outdated x86_64 Linux distribution.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/217115903",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-217115903",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 217115903,
    "user": {
      "login": "sapioit",
      "id": 3173159,
      "avatar_url": "https://avatars3.githubusercontent.com/u/3173159?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sapioit",
      "html_url": "https://github.com/sapioit",
      "followers_url": "https://api.github.com/users/sapioit/followers",
      "following_url": "https://api.github.com/users/sapioit/following{/other_user}",
      "gists_url": "https://api.github.com/users/sapioit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sapioit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sapioit/subscriptions",
      "organizations_url": "https://api.github.com/users/sapioit/orgs",
      "repos_url": "https://api.github.com/users/sapioit/repos",
      "events_url": "https://api.github.com/users/sapioit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sapioit/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-05T09:57:40Z",
    "updated_at": "2016-05-05T09:57:40Z",
    "body": "The problem is not just linux, we need a way to make it cross-OS, which means we need to be able to have it runing on Linux, Windows and Mac OSx.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/217116446",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-217116446",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 217116446,
    "user": {
      "login": "YurySolovyov",
      "id": 2168518,
      "avatar_url": "https://avatars3.githubusercontent.com/u/2168518?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/YurySolovyov",
      "html_url": "https://github.com/YurySolovyov",
      "followers_url": "https://api.github.com/users/YurySolovyov/followers",
      "following_url": "https://api.github.com/users/YurySolovyov/following{/other_user}",
      "gists_url": "https://api.github.com/users/YurySolovyov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/YurySolovyov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/YurySolovyov/subscriptions",
      "organizations_url": "https://api.github.com/users/YurySolovyov/orgs",
      "repos_url": "https://api.github.com/users/YurySolovyov/repos",
      "events_url": "https://api.github.com/users/YurySolovyov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/YurySolovyov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-05T10:01:31Z",
    "updated_at": "2016-05-05T10:01:31Z",
    "body": "Some kind of os-specific launcher that looks up if runtime is available and up-to-date/compatible with asar package\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/222123758",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-222123758",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 222123758,
    "user": {
      "login": "yan-foto",
      "id": 1678441,
      "avatar_url": "https://avatars2.githubusercontent.com/u/1678441?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yan-foto",
      "html_url": "https://github.com/yan-foto",
      "followers_url": "https://api.github.com/users/yan-foto/followers",
      "following_url": "https://api.github.com/users/yan-foto/following{/other_user}",
      "gists_url": "https://api.github.com/users/yan-foto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yan-foto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yan-foto/subscriptions",
      "organizations_url": "https://api.github.com/users/yan-foto/orgs",
      "repos_url": "https://api.github.com/users/yan-foto/repos",
      "events_url": "https://api.github.com/users/yan-foto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yan-foto/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-27T11:28:14Z",
    "updated_at": "2016-06-21T16:02:37Z",
    "body": "(many years later) Let me summarize the discussion:\n1. @zcbenz [proposes](https://github.com/electron/electron/issues/673#issue-44580957) a runtime which manages local Electron instances so `.asar` packages are only distributed and bundling Electron binaries are avoided. The runtime manages also execution of `.asar` packages.\n2. @YurySolovyov [suggests](https://github.com/electron/electron/issues/673#issuecomment-57764907) enhancement of manifest file with additional information (e.g. required Electron version) so runtime knows which version is to be used for which `.asar` package. An overview of this approach is given [here](https://github.com/electron/electron/issues/673#issuecomment-136617485).\n3. @joshuawarner32 [introduces](https://github.com/electron/electron/issues/673#issuecomment-60110131) the idea of multiple runtime versions, binary packaging (e.g. as `.deb`), and autoupdate for `.asar` packages. [Moreover](https://github.com/electron/electron/issues/673#issuecomment-78785758) the idea of a distribution server is considered.\n4. @paulcbetts [suggests](https://github.com/electron/electron/issues/673#issuecomment-134735445) to take a look as Steam model and implement something similar. He [points out](https://github.com/electron/electron/issues/673#issuecomment-136568392) the complications bound with the idea of a local runtime which supports different Electron versions, etc.\n5. [people discuss internet speed in china and their childhood affairs]\n6. @hokein [points out](https://github.com/electron/electron/issues/673#issuecomment-136732824) the complications when the runtime is upgraded. Specially wrt. native modules which are required to be built again against Electron headers.\n7. @etiktin [wants](https://github.com/electron/electron/issues/673#issuecomment-136736029) to have LTS and bleeding edge versions so production-ready apps use LTS rather than bleeding edge.\n8. @Tribex [says](https://github.com/electron/electron/issues/673#issuecomment-136892417) if we stick to [semantic versioning](http://semver.org/) we don't need to have a local instance of _all_ versions, but only those which are incompatible.\n9. @jorangreef [provides](https://github.com/electron/electron/issues/673#issuecomment-157980607) an example of differential auto-update system already in production for their own application.\n10. @iamale [has built](https://github.com/electron/electron/issues/673#issuecomment-200051284) an fpm package of Electron to execute `.asar` packages.\n\n_disclaimer: I tried to include only main points of discussion. Please excuse if I missed anything!_\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/222220657",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-222220657",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 222220657,
    "user": {
      "login": "yan-foto",
      "id": 1678441,
      "avatar_url": "https://avatars2.githubusercontent.com/u/1678441?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yan-foto",
      "html_url": "https://github.com/yan-foto",
      "followers_url": "https://api.github.com/users/yan-foto/followers",
      "following_url": "https://api.github.com/users/yan-foto/following{/other_user}",
      "gists_url": "https://api.github.com/users/yan-foto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yan-foto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yan-foto/subscriptions",
      "organizations_url": "https://api.github.com/users/yan-foto/orgs",
      "repos_url": "https://api.github.com/users/yan-foto/repos",
      "events_url": "https://api.github.com/users/yan-foto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yan-foto/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-27T18:30:18Z",
    "updated_at": "2016-05-27T18:49:16Z",
    "body": "I read the discussion up to here, [tried to summarize](https://github.com/electron/electron/issues/673#issuecomment-222123758) the main points and wanted to address some of them. The idea of a runtime with \"deep platform integrations\" goes beyond a simple local instance. A minimum viable product is to be define, which acts as a system-wide runtime. I also added a nice-to-have feature which might come handy. The last section describes what changes/features needs to be implemented. \n\n### Rationale:\n\nWhat is being done by most of developers (i.e. bundling Electron binaries) is like linking all shared libraries statically! It's like delivering an oven with every pizza we sell.\n\n### MVP:\n- **Environment manager**: keeps track of locally available Electron instances. It can be used to decide which package is compatible with which instance (using enhanced `package.json` [see bellow]). It should also take care of setting correct environment variables for packages to run.\n- **Update manager**: the possibility of of automatic updating (+ notification) and differential auto-update has been discussed. It would be nice to have it as a daemon which takes care of updating local instances to latest versions.\n\n### Nice to have:\n- **Package/Dependency manager**: just like [Atom's `apm`](https://github.com/atom/apm), a package manager is needed to download `.asar` packages (from GitHub or a given URL, etc.) and install them locally (comparable with [`apt-get`](https://help.ubuntu.com/community/AptGet/Howto) in Ubuntu or [`brew`](http://brew.sh/) in Mac).\n\n### Requirements:\n- **Enhanced manifest files**: `package.json` should also contain a [semver](https://docs.npmjs.com/misc/semver) (or semver range) to denote which Electron version is required.\n- **Defined installing/uninstalling procedure**: ATM the `.asar` package contains everything needed to run an application. It is, however, possible to deliver only the source and download dependency modules at installation. If we get too courageous we can have some kind of _global_ directory containing dependencies for all applications (npm 3's [flat structure](https://docs.npmjs.com/how-npm-works/npm3) might help). This, however, can get really complicated, really fast (e.g. when uninstalling an app).\n- **Multiple local runtimes**: if semantic versioning has been applied up to now there are only two incompatible versions out there `0.x` and `1.x`. The minor versions and patches **should be** backwards compatible, so we only need the latest version of `0.x` and `1.x` on the system.\n\n<hr>\n\n### Inspirations:\n- Environment/dependency manager: Python's [`virtualenv`](http://docs.python-guide.org/en/latest/dev/virtualenvs/), Ruby's [`rbenv`](https://github.com/rbenv/rbenv), and also see [`ruby-build`](https://github.com/rbenv/ruby-build#readme).\n- Package manager: Python's [`pip`](https://pypi.python.org/pypi/pip/), Atom's [`apm`](https://github.com/atom/apm).\n- Update manager: [Chromium's `zygote` process](https://chromium.googlesource.com/chromium/src/+/master/docs/linux_zygote.md) has an interesting approach to _silent, background_ updates.\n- Code translators (to adapt to new APIs): Pythons [`2to3`](https://docs.python.org/2/library/2to3.html).\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/227386350",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-227386350",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 227386350,
    "user": {
      "login": "Simran-B",
      "id": 7819991,
      "avatar_url": "https://avatars0.githubusercontent.com/u/7819991?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Simran-B",
      "html_url": "https://github.com/Simran-B",
      "followers_url": "https://api.github.com/users/Simran-B/followers",
      "following_url": "https://api.github.com/users/Simran-B/following{/other_user}",
      "gists_url": "https://api.github.com/users/Simran-B/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Simran-B/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Simran-B/subscriptions",
      "organizations_url": "https://api.github.com/users/Simran-B/orgs",
      "repos_url": "https://api.github.com/users/Simran-B/repos",
      "events_url": "https://api.github.com/users/Simran-B/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Simran-B/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-21T09:21:13Z",
    "updated_at": "2016-06-21T09:21:41Z",
    "body": "`epm` (electron package manager) seems to be taken already as name...\nMaybe call the runtime `elec` and the apps `.tron`? There are probably some trademark issues with TRON but it would sound cool ;)\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/227550760",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-227550760",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 227550760,
    "user": {
      "login": "sapioit",
      "id": 3173159,
      "avatar_url": "https://avatars3.githubusercontent.com/u/3173159?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sapioit",
      "html_url": "https://github.com/sapioit",
      "followers_url": "https://api.github.com/users/sapioit/followers",
      "following_url": "https://api.github.com/users/sapioit/following{/other_user}",
      "gists_url": "https://api.github.com/users/sapioit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sapioit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sapioit/subscriptions",
      "organizations_url": "https://api.github.com/users/sapioit/orgs",
      "repos_url": "https://api.github.com/users/sapioit/repos",
      "events_url": "https://api.github.com/users/sapioit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sapioit/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-21T19:47:29Z",
    "updated_at": "2016-06-21T19:47:29Z",
    "body": "Maybe `uepm` (universal electron package manager), since it-s meant to be run on all OS-es supported by Electron... or `epmc` (electron package management center) and the file `.epack` (electron package). The extension, at least, sounds better than `.tron` and cannot be confused with a movie (\"gimme that tron thing, dude\" _hands you  the movie_).\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/227557951",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-227557951",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 227557951,
    "user": {
      "login": "kapouer",
      "id": 131406,
      "avatar_url": "https://avatars2.githubusercontent.com/u/131406?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kapouer",
      "html_url": "https://github.com/kapouer",
      "followers_url": "https://api.github.com/users/kapouer/followers",
      "following_url": "https://api.github.com/users/kapouer/following{/other_user}",
      "gists_url": "https://api.github.com/users/kapouer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kapouer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kapouer/subscriptions",
      "organizations_url": "https://api.github.com/users/kapouer/orgs",
      "repos_url": "https://api.github.com/users/kapouer/repos",
      "events_url": "https://api.github.com/users/kapouer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kapouer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-21T20:14:59Z",
    "updated_at": "2016-06-21T20:15:33Z",
    "body": "There are also a host of words in the theoretical physics field related to electron\n- fermion\n- lepton\n- charge\n- coulomb\n- pauli\n\nAnd, not related directly, but somewhat more accorded to what's happening with a package manager,\n- boson\n  ;)\n  (i believe photon has already been taken)\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/227559712",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-227559712",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 227559712,
    "user": {
      "login": "YurySolovyov",
      "id": 2168518,
      "avatar_url": "https://avatars3.githubusercontent.com/u/2168518?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/YurySolovyov",
      "html_url": "https://github.com/YurySolovyov",
      "followers_url": "https://api.github.com/users/YurySolovyov/followers",
      "following_url": "https://api.github.com/users/YurySolovyov/following{/other_user}",
      "gists_url": "https://api.github.com/users/YurySolovyov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/YurySolovyov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/YurySolovyov/subscriptions",
      "organizations_url": "https://api.github.com/users/YurySolovyov/orgs",
      "repos_url": "https://api.github.com/users/YurySolovyov/repos",
      "events_url": "https://api.github.com/users/YurySolovyov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/YurySolovyov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-21T20:21:46Z",
    "updated_at": "2016-06-21T20:21:46Z",
    "body": "@kapouer +quark? not sure if it is taken though\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/227648159",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-227648159",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 227648159,
    "user": {
      "login": "sapioit",
      "id": 3173159,
      "avatar_url": "https://avatars3.githubusercontent.com/u/3173159?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sapioit",
      "html_url": "https://github.com/sapioit",
      "followers_url": "https://api.github.com/users/sapioit/followers",
      "following_url": "https://api.github.com/users/sapioit/following{/other_user}",
      "gists_url": "https://api.github.com/users/sapioit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sapioit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sapioit/subscriptions",
      "organizations_url": "https://api.github.com/users/sapioit/orgs",
      "repos_url": "https://api.github.com/users/sapioit/repos",
      "events_url": "https://api.github.com/users/sapioit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sapioit/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-22T05:35:57Z",
    "updated_at": "2016-06-22T05:35:57Z",
    "body": "Quark is taken, the rest I don't know. But why must we keep the status quo, when this suggestions list is suggesting NOT maintaining the status quo? But since we're at it, why not name it Hauldron? Taken fron LHC. Collider is not a good idea, it's giving the product a negative shade, because it's meaning is tightly linked to war...\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/227688244",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-227688244",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 227688244,
    "user": {
      "login": "YurySolovyov",
      "id": 2168518,
      "avatar_url": "https://avatars3.githubusercontent.com/u/2168518?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/YurySolovyov",
      "html_url": "https://github.com/YurySolovyov",
      "followers_url": "https://api.github.com/users/YurySolovyov/followers",
      "following_url": "https://api.github.com/users/YurySolovyov/following{/other_user}",
      "gists_url": "https://api.github.com/users/YurySolovyov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/YurySolovyov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/YurySolovyov/subscriptions",
      "organizations_url": "https://api.github.com/users/YurySolovyov/orgs",
      "repos_url": "https://api.github.com/users/YurySolovyov/repos",
      "events_url": "https://api.github.com/users/YurySolovyov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/YurySolovyov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-22T09:17:18Z",
    "updated_at": "2016-06-22T09:17:18Z",
    "body": "`Particle(s)` ? Quite long though.\n[List of particles in wiki](https://en.wikipedia.org/wiki/List_of_particles#Elementary_particles)\n\nWhile naming is important, I still think we need to investigate runtime/update/packaging/distribution semantics first.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/227694055",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-227694055",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 227694055,
    "user": {
      "login": "gunn",
      "id": 42500,
      "avatar_url": "https://avatars3.githubusercontent.com/u/42500?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gunn",
      "html_url": "https://github.com/gunn",
      "followers_url": "https://api.github.com/users/gunn/followers",
      "following_url": "https://api.github.com/users/gunn/following{/other_user}",
      "gists_url": "https://api.github.com/users/gunn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gunn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gunn/subscriptions",
      "organizations_url": "https://api.github.com/users/gunn/orgs",
      "repos_url": "https://api.github.com/users/gunn/repos",
      "events_url": "https://api.github.com/users/gunn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gunn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-22T09:41:07Z",
    "updated_at": "2016-06-22T09:41:07Z",
    "body": "**`lepton`** seems perfect since its the family of particles to which the electron belongs.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/229090572",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-229090572",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 229090572,
    "user": {
      "login": "iamale",
      "id": 1298948,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1298948?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/iamale",
      "html_url": "https://github.com/iamale",
      "followers_url": "https://api.github.com/users/iamale/followers",
      "following_url": "https://api.github.com/users/iamale/following{/other_user}",
      "gists_url": "https://api.github.com/users/iamale/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/iamale/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iamale/subscriptions",
      "organizations_url": "https://api.github.com/users/iamale/orgs",
      "repos_url": "https://api.github.com/users/iamale/repos",
      "events_url": "https://api.github.com/users/iamale/events{/privacy}",
      "received_events_url": "https://api.github.com/users/iamale/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-28T15:43:59Z",
    "updated_at": "2016-06-28T15:43:59Z",
    "body": "A bit out-of-scope idea: a more generic runtime manager would be even more awesome (and not really harder to implement). For example, we could include @nwjs binaries as well and manage it in the same version-manager-thingy as well (just like @asdf-vm, but for GUI runtimes).\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/229635056",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-229635056",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 229635056,
    "user": {
      "login": "iamale",
      "id": 1298948,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1298948?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/iamale",
      "html_url": "https://github.com/iamale",
      "followers_url": "https://api.github.com/users/iamale/followers",
      "following_url": "https://api.github.com/users/iamale/following{/other_user}",
      "gists_url": "https://api.github.com/users/iamale/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/iamale/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iamale/subscriptions",
      "organizations_url": "https://api.github.com/users/iamale/orgs",
      "repos_url": "https://api.github.com/users/iamale/repos",
      "events_url": "https://api.github.com/users/iamale/events{/privacy}",
      "received_events_url": "https://api.github.com/users/iamale/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-30T11:42:59Z",
    "updated_at": "2016-06-30T16:56:23Z",
    "body": "Quick and dirty: https://github.com/iamale/lepton. Supports only fixed version for now (semver is the next thing to do), and apps are unpacked (i. e. no .asar-s yet).\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/229790597",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-229790597",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 229790597,
    "user": {
      "login": "sapioit",
      "id": 3173159,
      "avatar_url": "https://avatars3.githubusercontent.com/u/3173159?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sapioit",
      "html_url": "https://github.com/sapioit",
      "followers_url": "https://api.github.com/users/sapioit/followers",
      "following_url": "https://api.github.com/users/sapioit/following{/other_user}",
      "gists_url": "https://api.github.com/users/sapioit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sapioit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sapioit/subscriptions",
      "organizations_url": "https://api.github.com/users/sapioit/orgs",
      "repos_url": "https://api.github.com/users/sapioit/repos",
      "events_url": "https://api.github.com/users/sapioit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sapioit/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-30T21:13:10Z",
    "updated_at": "2016-06-30T21:13:10Z",
    "body": "Nice!\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/231024225",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-231024225",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 231024225,
    "user": {
      "login": "pavankumarkatakam",
      "id": 6078669,
      "avatar_url": "https://avatars1.githubusercontent.com/u/6078669?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pavankumarkatakam",
      "html_url": "https://github.com/pavankumarkatakam",
      "followers_url": "https://api.github.com/users/pavankumarkatakam/followers",
      "following_url": "https://api.github.com/users/pavankumarkatakam/following{/other_user}",
      "gists_url": "https://api.github.com/users/pavankumarkatakam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pavankumarkatakam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pavankumarkatakam/subscriptions",
      "organizations_url": "https://api.github.com/users/pavankumarkatakam/orgs",
      "repos_url": "https://api.github.com/users/pavankumarkatakam/repos",
      "events_url": "https://api.github.com/users/pavankumarkatakam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pavankumarkatakam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-07T09:08:08Z",
    "updated_at": "2016-07-07T09:08:08Z",
    "body": "+1\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/231070828",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-231070828",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 231070828,
    "user": {
      "login": "sapioit",
      "id": 3173159,
      "avatar_url": "https://avatars3.githubusercontent.com/u/3173159?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sapioit",
      "html_url": "https://github.com/sapioit",
      "followers_url": "https://api.github.com/users/sapioit/followers",
      "following_url": "https://api.github.com/users/sapioit/following{/other_user}",
      "gists_url": "https://api.github.com/users/sapioit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sapioit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sapioit/subscriptions",
      "organizations_url": "https://api.github.com/users/sapioit/orgs",
      "repos_url": "https://api.github.com/users/sapioit/repos",
      "events_url": "https://api.github.com/users/sapioit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sapioit/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-07T13:02:41Z",
    "updated_at": "2016-07-07T13:02:41Z",
    "body": "Even if no .asar, @iamale, as long as you have any way to know which file to open, I think it should be alright. Like, for example, you could have a `file.something` with json code linking to `package.json` so it knows what to open...\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/231075512",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-231075512",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 231075512,
    "user": {
      "login": "YurySolovyov",
      "id": 2168518,
      "avatar_url": "https://avatars3.githubusercontent.com/u/2168518?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/YurySolovyov",
      "html_url": "https://github.com/YurySolovyov",
      "followers_url": "https://api.github.com/users/YurySolovyov/followers",
      "following_url": "https://api.github.com/users/YurySolovyov/following{/other_user}",
      "gists_url": "https://api.github.com/users/YurySolovyov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/YurySolovyov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/YurySolovyov/subscriptions",
      "organizations_url": "https://api.github.com/users/YurySolovyov/orgs",
      "repos_url": "https://api.github.com/users/YurySolovyov/repos",
      "events_url": "https://api.github.com/users/YurySolovyov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/YurySolovyov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-07T13:21:55Z",
    "updated_at": "2016-07-07T13:27:21Z",
    "body": "This is quite crazy idea, but what about using `electron` field in `package.json` to make\nany (well, not like ANY, but any prepared) npm  package executable?\nLike:\n\n``` json\nelectron: {\n  \"main\": \"index.js\",\n  \"runtime\": \">= 1.2\"\n}\n```\n\nThis could be achieved by adding ability for `electron` to install npm packages and making them executable and visible for host system.\nJust like\n\n``` bash\nelectron install atom\n```\n\nFor this to work, we would need to split `electron` command and actual runtime bundles.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/231103965",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-231103965",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 231103965,
    "user": {
      "login": "sapioit",
      "id": 3173159,
      "avatar_url": "https://avatars3.githubusercontent.com/u/3173159?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sapioit",
      "html_url": "https://github.com/sapioit",
      "followers_url": "https://api.github.com/users/sapioit/followers",
      "following_url": "https://api.github.com/users/sapioit/following{/other_user}",
      "gists_url": "https://api.github.com/users/sapioit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sapioit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sapioit/subscriptions",
      "organizations_url": "https://api.github.com/users/sapioit/orgs",
      "repos_url": "https://api.github.com/users/sapioit/repos",
      "events_url": "https://api.github.com/users/sapioit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sapioit/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-07T14:58:47Z",
    "updated_at": "2016-07-07T14:59:46Z",
    "body": "but what about renaming the package.json to `package.electron` and have it's content something like this?\n\n``` json\nrun:{\n  \"name\"    : \"zDillinger\",\n  \"version\" : \"0.0.1-1\",\n  \"main\"    : \"main.js\"\n},\nelectron: {\n  \"recommended\": \"1.2\",\n  \"compatible\": [\n    \"1.2.1-1.2.5\",\n    \"1.3,1.3.0.1\",\n    \"1.1\"\n  ]\n}\n```\n\nIn this example, it would recommend using electron 1.2, if it is not found also checks if there is any version between 1.2.1 and 1.2.5, if not checks for 1.3.1, then for 1.3.0.1, if not it checks for 1.1 and if not, downloads 1.2. \n\nMaybe there could be something like it automaticly downloads the recommended version, and it it cannot, then it checks for the compatible versions. And take each and every one of the compatible ones and check them, and if none work, ask the user if they want to not use a incompatible version, and if they press `no`, it would run with a incompatible version found on the PC, and if none is found, instead of asking to use an incompatible version, show an error pop-up saying that there is no Electron instalation detected.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/231110684",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-231110684",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 231110684,
    "user": {
      "login": "Tribex",
      "id": 5861371,
      "avatar_url": "https://avatars3.githubusercontent.com/u/5861371?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Tribex",
      "html_url": "https://github.com/Tribex",
      "followers_url": "https://api.github.com/users/Tribex/followers",
      "following_url": "https://api.github.com/users/Tribex/following{/other_user}",
      "gists_url": "https://api.github.com/users/Tribex/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Tribex/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Tribex/subscriptions",
      "organizations_url": "https://api.github.com/users/Tribex/orgs",
      "repos_url": "https://api.github.com/users/Tribex/repos",
      "events_url": "https://api.github.com/users/Tribex/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Tribex/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-07T15:20:08Z",
    "updated_at": "2016-07-07T15:20:18Z",
    "body": "@sapioit Having a separate manifest sounds like a good idea to me. Having a custom file extension would simplify things quite a bit. (Though .electron seems a bit long.)\n\nMaybe according to @iamale 's lepton, .lept?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/231113089",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-231113089",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 231113089,
    "user": {
      "login": "YurySolovyov",
      "id": 2168518,
      "avatar_url": "https://avatars3.githubusercontent.com/u/2168518?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/YurySolovyov",
      "html_url": "https://github.com/YurySolovyov",
      "followers_url": "https://api.github.com/users/YurySolovyov/followers",
      "following_url": "https://api.github.com/users/YurySolovyov/following{/other_user}",
      "gists_url": "https://api.github.com/users/YurySolovyov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/YurySolovyov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/YurySolovyov/subscriptions",
      "organizations_url": "https://api.github.com/users/YurySolovyov/orgs",
      "repos_url": "https://api.github.com/users/YurySolovyov/repos",
      "events_url": "https://api.github.com/users/YurySolovyov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/YurySolovyov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-07T15:26:51Z",
    "updated_at": "2016-07-07T15:26:51Z",
    "body": "I don't see any benefit from not using `package.json`, electron field does the isolation part. Babel and ESlint use this technique and doing just fine.\nThis makes it much easier to publish apps directly to/via npm.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/231117545",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-231117545",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 231117545,
    "user": {
      "login": "lenovouser",
      "id": 7549136,
      "avatar_url": "https://avatars2.githubusercontent.com/u/7549136?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lenovouser",
      "html_url": "https://github.com/lenovouser",
      "followers_url": "https://api.github.com/users/lenovouser/followers",
      "following_url": "https://api.github.com/users/lenovouser/following{/other_user}",
      "gists_url": "https://api.github.com/users/lenovouser/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lenovouser/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lenovouser/subscriptions",
      "organizations_url": "https://api.github.com/users/lenovouser/orgs",
      "repos_url": "https://api.github.com/users/lenovouser/repos",
      "events_url": "https://api.github.com/users/lenovouser/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lenovouser/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-07T15:39:09Z",
    "updated_at": "2016-07-07T15:39:09Z",
    "body": "Yeah, I second @YurySolovyov - I think putting it in the `package.json` is more appropriate \n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/231122069",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-231122069",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 231122069,
    "user": {
      "login": "Tribex",
      "id": 5861371,
      "avatar_url": "https://avatars3.githubusercontent.com/u/5861371?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Tribex",
      "html_url": "https://github.com/Tribex",
      "followers_url": "https://api.github.com/users/Tribex/followers",
      "following_url": "https://api.github.com/users/Tribex/following{/other_user}",
      "gists_url": "https://api.github.com/users/Tribex/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Tribex/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Tribex/subscriptions",
      "organizations_url": "https://api.github.com/users/Tribex/orgs",
      "repos_url": "https://api.github.com/users/Tribex/repos",
      "events_url": "https://api.github.com/users/Tribex/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Tribex/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-07T15:52:06Z",
    "updated_at": "2016-07-07T15:52:06Z",
    "body": "@YurySolovyov The advantage of an additional file is that the runtime can register a handler for the additional file's extension and run automatically as the default opener of the file. Whereas to do this with package.json would require registering the handler for every JSON file, which would be a pain for users.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/231124974",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-231124974",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 231124974,
    "user": {
      "login": "YurySolovyov",
      "id": 2168518,
      "avatar_url": "https://avatars3.githubusercontent.com/u/2168518?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/YurySolovyov",
      "html_url": "https://github.com/YurySolovyov",
      "followers_url": "https://api.github.com/users/YurySolovyov/followers",
      "following_url": "https://api.github.com/users/YurySolovyov/following{/other_user}",
      "gists_url": "https://api.github.com/users/YurySolovyov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/YurySolovyov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/YurySolovyov/subscriptions",
      "organizations_url": "https://api.github.com/users/YurySolovyov/orgs",
      "repos_url": "https://api.github.com/users/YurySolovyov/repos",
      "events_url": "https://api.github.com/users/YurySolovyov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/YurySolovyov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-07T16:00:42Z",
    "updated_at": "2016-07-07T16:00:42Z",
    "body": "@Tribex fair point.\nMaybe package.electron can be just some kind of link that tells the runtime `\"Hey, take a look at package.json, it should contain the info on how to launch it\"`. This was a \"crazy\" idea, so yeah, I'm fine with tweaking it.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/231126361",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-231126361",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 231126361,
    "user": {
      "login": "sapioit",
      "id": 3173159,
      "avatar_url": "https://avatars3.githubusercontent.com/u/3173159?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sapioit",
      "html_url": "https://github.com/sapioit",
      "followers_url": "https://api.github.com/users/sapioit/followers",
      "following_url": "https://api.github.com/users/sapioit/following{/other_user}",
      "gists_url": "https://api.github.com/users/sapioit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sapioit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sapioit/subscriptions",
      "organizations_url": "https://api.github.com/users/sapioit/orgs",
      "repos_url": "https://api.github.com/users/sapioit/repos",
      "events_url": "https://api.github.com/users/sapioit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sapioit/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-07T16:05:20Z",
    "updated_at": "2016-07-07T16:05:20Z",
    "body": "I agree with @tribex, we do need EITHER a separate file, or to rename the package.json. to something else.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/231127231",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-231127231",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 231127231,
    "user": {
      "login": "sapioit",
      "id": 3173159,
      "avatar_url": "https://avatars3.githubusercontent.com/u/3173159?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sapioit",
      "html_url": "https://github.com/sapioit",
      "followers_url": "https://api.github.com/users/sapioit/followers",
      "following_url": "https://api.github.com/users/sapioit/following{/other_user}",
      "gists_url": "https://api.github.com/users/sapioit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sapioit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sapioit/subscriptions",
      "organizations_url": "https://api.github.com/users/sapioit/orgs",
      "repos_url": "https://api.github.com/users/sapioit/repos",
      "events_url": "https://api.github.com/users/sapioit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sapioit/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-07T16:08:18Z",
    "updated_at": "2016-07-07T16:08:18Z",
    "body": "@wurysolovoyov you can't do that. The only thing you can open a file is having an extension attached to it, in which case every extension will open with the same software. So unless you're ok with being unable to open a `.json` with anything else than `electron` (which would just error out, unless a proper electron app is opened), you can still do that, but let us, the ones who want to be able to open `.json` files, be able to open them with the program we want to open them with.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/231127470",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-231127470",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 231127470,
    "user": {
      "login": "sapioit",
      "id": 3173159,
      "avatar_url": "https://avatars3.githubusercontent.com/u/3173159?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sapioit",
      "html_url": "https://github.com/sapioit",
      "followers_url": "https://api.github.com/users/sapioit/followers",
      "following_url": "https://api.github.com/users/sapioit/following{/other_user}",
      "gists_url": "https://api.github.com/users/sapioit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sapioit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sapioit/subscriptions",
      "organizations_url": "https://api.github.com/users/sapioit/orgs",
      "repos_url": "https://api.github.com/users/sapioit/repos",
      "events_url": "https://api.github.com/users/sapioit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sapioit/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-07T16:09:07Z",
    "updated_at": "2016-07-07T16:09:07Z",
    "body": "Otherwise you won't be able to edit the file, without either opeining the editor first, or changing what to open `.json` with every minute or so.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/231127663",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-231127663",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 231127663,
    "user": {
      "login": "sapioit",
      "id": 3173159,
      "avatar_url": "https://avatars3.githubusercontent.com/u/3173159?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sapioit",
      "html_url": "https://github.com/sapioit",
      "followers_url": "https://api.github.com/users/sapioit/followers",
      "following_url": "https://api.github.com/users/sapioit/following{/other_user}",
      "gists_url": "https://api.github.com/users/sapioit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sapioit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sapioit/subscriptions",
      "organizations_url": "https://api.github.com/users/sapioit/orgs",
      "repos_url": "https://api.github.com/users/sapioit/repos",
      "events_url": "https://api.github.com/users/sapioit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sapioit/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-07T16:09:48Z",
    "updated_at": "2016-07-07T16:09:48Z",
    "body": "I mean @YurySolovyov not @wurysolovoyov \n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/231129187",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-231129187",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 231129187,
    "user": {
      "login": "YurySolovyov",
      "id": 2168518,
      "avatar_url": "https://avatars3.githubusercontent.com/u/2168518?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/YurySolovyov",
      "html_url": "https://github.com/YurySolovyov",
      "followers_url": "https://api.github.com/users/YurySolovyov/followers",
      "following_url": "https://api.github.com/users/YurySolovyov/following{/other_user}",
      "gists_url": "https://api.github.com/users/YurySolovyov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/YurySolovyov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/YurySolovyov/subscriptions",
      "organizations_url": "https://api.github.com/users/YurySolovyov/orgs",
      "repos_url": "https://api.github.com/users/YurySolovyov/repos",
      "events_url": "https://api.github.com/users/YurySolovyov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/YurySolovyov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-07T16:15:16Z",
    "updated_at": "2016-07-07T16:15:16Z",
    "body": "Maybe I don't stated it clear: the purpose of `package.electron` is only to serve as a marker that this directory is an app, so that runtime can refer to `package.json` that is in the same folder, and launch an app. If you open `package.json` directly, it will open up in whatever is associated with `.json` in your OS.\n\nSort of like shortcut system.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/231130821",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-231130821",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 231130821,
    "user": {
      "login": "Tribex",
      "id": 5861371,
      "avatar_url": "https://avatars3.githubusercontent.com/u/5861371?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Tribex",
      "html_url": "https://github.com/Tribex",
      "followers_url": "https://api.github.com/users/Tribex/followers",
      "following_url": "https://api.github.com/users/Tribex/following{/other_user}",
      "gists_url": "https://api.github.com/users/Tribex/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Tribex/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Tribex/subscriptions",
      "organizations_url": "https://api.github.com/users/Tribex/orgs",
      "repos_url": "https://api.github.com/users/Tribex/repos",
      "events_url": "https://api.github.com/users/Tribex/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Tribex/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-07T16:21:03Z",
    "updated_at": "2016-07-07T16:21:03Z",
    "body": "@YurySolovyov In that case it's just a matter of taste as to if we define that information in package.json or package.electron. I would personally keep it separate simply because it seems cleaner to me. Perhaps the engines property in package.json would suffice, though.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/231131466",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-231131466",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 231131466,
    "user": {
      "login": "YurySolovyov",
      "id": 2168518,
      "avatar_url": "https://avatars3.githubusercontent.com/u/2168518?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/YurySolovyov",
      "html_url": "https://github.com/YurySolovyov",
      "followers_url": "https://api.github.com/users/YurySolovyov/followers",
      "following_url": "https://api.github.com/users/YurySolovyov/following{/other_user}",
      "gists_url": "https://api.github.com/users/YurySolovyov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/YurySolovyov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/YurySolovyov/subscriptions",
      "organizations_url": "https://api.github.com/users/YurySolovyov/orgs",
      "repos_url": "https://api.github.com/users/YurySolovyov/repos",
      "events_url": "https://api.github.com/users/YurySolovyov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/YurySolovyov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-07T16:23:24Z",
    "updated_at": "2016-07-07T16:23:24Z",
    "body": "@Tribex it is also a requirement for publishing app to npm - having valid `package.json`\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/231132793",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-231132793",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 231132793,
    "user": {
      "login": "Tribex",
      "id": 5861371,
      "avatar_url": "https://avatars3.githubusercontent.com/u/5861371?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Tribex",
      "html_url": "https://github.com/Tribex",
      "followers_url": "https://api.github.com/users/Tribex/followers",
      "following_url": "https://api.github.com/users/Tribex/following{/other_user}",
      "gists_url": "https://api.github.com/users/Tribex/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Tribex/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Tribex/subscriptions",
      "organizations_url": "https://api.github.com/users/Tribex/orgs",
      "repos_url": "https://api.github.com/users/Tribex/repos",
      "events_url": "https://api.github.com/users/Tribex/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Tribex/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-07T16:28:08Z",
    "updated_at": "2016-07-07T16:28:08Z",
    "body": "@YurySolovyov Right. If we used package.electron package.json would still be present. .electron would only be used to define runtime information, or, in the case of your suggestion, just be a marker.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/231160077",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-231160077",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 231160077,
    "user": {
      "login": "sapioit",
      "id": 3173159,
      "avatar_url": "https://avatars3.githubusercontent.com/u/3173159?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sapioit",
      "html_url": "https://github.com/sapioit",
      "followers_url": "https://api.github.com/users/sapioit/followers",
      "following_url": "https://api.github.com/users/sapioit/following{/other_user}",
      "gists_url": "https://api.github.com/users/sapioit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sapioit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sapioit/subscriptions",
      "organizations_url": "https://api.github.com/users/sapioit/orgs",
      "repos_url": "https://api.github.com/users/sapioit/repos",
      "events_url": "https://api.github.com/users/sapioit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sapioit/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-07T18:06:39Z",
    "updated_at": "2016-07-07T18:06:39Z",
    "body": "Basicly, the `package.electron` would only be there as a **launchable** _marker_, so the package.json would still be present with it's own data, but that's why a separate file would be needed: **_double click opens the app**_. I would still like to be able to rename the `package.electron` to `my-app.electron` or `my-app.electron`.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/231160983",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-231160983",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 231160983,
    "user": {
      "login": "YurySolovyov",
      "id": 2168518,
      "avatar_url": "https://avatars3.githubusercontent.com/u/2168518?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/YurySolovyov",
      "html_url": "https://github.com/YurySolovyov",
      "followers_url": "https://api.github.com/users/YurySolovyov/followers",
      "following_url": "https://api.github.com/users/YurySolovyov/following{/other_user}",
      "gists_url": "https://api.github.com/users/YurySolovyov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/YurySolovyov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/YurySolovyov/subscriptions",
      "organizations_url": "https://api.github.com/users/YurySolovyov/orgs",
      "repos_url": "https://api.github.com/users/YurySolovyov/repos",
      "events_url": "https://api.github.com/users/YurySolovyov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/YurySolovyov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-07T18:09:55Z",
    "updated_at": "2016-07-07T18:09:55Z",
    "body": "@sapioit sure, that's the whole point of having `.electron` file, you can name it whatever you want, as long as it has `.electron` extension.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/231163624",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-231163624",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 231163624,
    "user": {
      "login": "Tribex",
      "id": 5861371,
      "avatar_url": "https://avatars3.githubusercontent.com/u/5861371?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Tribex",
      "html_url": "https://github.com/Tribex",
      "followers_url": "https://api.github.com/users/Tribex/followers",
      "following_url": "https://api.github.com/users/Tribex/following{/other_user}",
      "gists_url": "https://api.github.com/users/Tribex/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Tribex/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Tribex/subscriptions",
      "organizations_url": "https://api.github.com/users/Tribex/orgs",
      "repos_url": "https://api.github.com/users/Tribex/repos",
      "events_url": "https://api.github.com/users/Tribex/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Tribex/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-07T18:19:27Z",
    "updated_at": "2016-07-07T18:19:27Z",
    "body": "It still doesn't seem very clean to me to have the runtime handler have to look at *.electron, then at package.json to determine which version of electron to run, which then reads package.json again. \n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/231166111",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-231166111",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 231166111,
    "user": {
      "login": "YurySolovyov",
      "id": 2168518,
      "avatar_url": "https://avatars3.githubusercontent.com/u/2168518?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/YurySolovyov",
      "html_url": "https://github.com/YurySolovyov",
      "followers_url": "https://api.github.com/users/YurySolovyov/followers",
      "following_url": "https://api.github.com/users/YurySolovyov/following{/other_user}",
      "gists_url": "https://api.github.com/users/YurySolovyov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/YurySolovyov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/YurySolovyov/subscriptions",
      "organizations_url": "https://api.github.com/users/YurySolovyov/orgs",
      "repos_url": "https://api.github.com/users/YurySolovyov/repos",
      "events_url": "https://api.github.com/users/YurySolovyov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/YurySolovyov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-07T18:28:34Z",
    "updated_at": "2016-07-07T18:28:34Z",
    "body": "@Tribex why do you think package.json would be read twice?\n- If we put runtime info into `.electron` file, runtime would launch app using `package.json` assuming everything is correct and fail-fast if its not.\n- If we put runtime into `package.json` directly or under `electron` section, that would also require only 1 read. This way, I'm not sure what to put into `.electron` file (ideas?), I'd be fine even with it being empty.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/231166619",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-231166619",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 231166619,
    "user": {
      "login": "sapioit",
      "id": 3173159,
      "avatar_url": "https://avatars3.githubusercontent.com/u/3173159?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sapioit",
      "html_url": "https://github.com/sapioit",
      "followers_url": "https://api.github.com/users/sapioit/followers",
      "following_url": "https://api.github.com/users/sapioit/following{/other_user}",
      "gists_url": "https://api.github.com/users/sapioit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sapioit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sapioit/subscriptions",
      "organizations_url": "https://api.github.com/users/sapioit/orgs",
      "repos_url": "https://api.github.com/users/sapioit/repos",
      "events_url": "https://api.github.com/users/sapioit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sapioit/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-07T18:30:28Z",
    "updated_at": "2016-07-07T18:30:28Z",
    "body": "@tribex The `.electron` could point to the `package.json`, just in case, for some reasons, the package.json is renamed. This way, you could have a `package.json` for `NPM` and a different `package.json` (maybe `electron.json`) for the Electron. Why? Maybe you want your app have the package.json to know what things to import with the package manager, but once imported, you want to run it without needing to move or rename files.\n\n**_`app.electron`**_\n\n``` json\n{\n  \"package\": \"package.json\",\n  \"recommended\": \"1.2\",\n  \"compatible\": [\n    \"1.2.1-1.2.5\",\n    \"1.3,1.3.0.1\",\n    \"1.1\"\n  ]\n}\n```\n\nor \n\n**_`myapp.electron`**_\n\n``` json\n{\n  \"package\": \"electron.json\",\n  \"recommended\": \"1.2\",\n  \"compatible\": [\n    \"1.2.1-1.2.5\",\n    \"1.3,1.3.0.1\",\n    \"1.1\"\n  ]\n}\n```\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/231167208",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-231167208",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 231167208,
    "user": {
      "login": "sapioit",
      "id": 3173159,
      "avatar_url": "https://avatars3.githubusercontent.com/u/3173159?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sapioit",
      "html_url": "https://github.com/sapioit",
      "followers_url": "https://api.github.com/users/sapioit/followers",
      "following_url": "https://api.github.com/users/sapioit/following{/other_user}",
      "gists_url": "https://api.github.com/users/sapioit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sapioit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sapioit/subscriptions",
      "organizations_url": "https://api.github.com/users/sapioit/orgs",
      "repos_url": "https://api.github.com/users/sapioit/repos",
      "events_url": "https://api.github.com/users/sapioit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sapioit/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-07T18:32:34Z",
    "updated_at": "2016-07-07T18:32:34Z",
    "body": "Or, if we put everything into `package.json`, we could have the `.electron` only link to the `.json` we want to use to open the app, so:\n\n**_`app.electron`**_\n\n``` json\n{\n  \"package\": \"package.json\"\n}\n```\n\nor \n\n**_`myapp.electron`**_\n\n``` json\n{\n  \"package\": \"electron.json\"\n}\n```\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/231168179",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-231168179",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 231168179,
    "user": {
      "login": "sapioit",
      "id": 3173159,
      "avatar_url": "https://avatars3.githubusercontent.com/u/3173159?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sapioit",
      "html_url": "https://github.com/sapioit",
      "followers_url": "https://api.github.com/users/sapioit/followers",
      "following_url": "https://api.github.com/users/sapioit/following{/other_user}",
      "gists_url": "https://api.github.com/users/sapioit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sapioit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sapioit/subscriptions",
      "organizations_url": "https://api.github.com/users/sapioit/orgs",
      "repos_url": "https://api.github.com/users/sapioit/repos",
      "events_url": "https://api.github.com/users/sapioit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sapioit/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-07T18:36:05Z",
    "updated_at": "2016-07-07T18:36:05Z",
    "body": "Also, maybe you want to have two launchers in the same directory, one for the client and one for the server, with the client using the files of the server to launch a local server with only one player. This way, you won't need to duplicate all 99% of the files (assuming you have a game that uses 500+ MB of files) and 5-6 files different, and have them in two separate directories, but just have one extra file to be able to launch the server on it's own. **Literally, the same as having multiple executables in the same directory.**\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/231173765",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-231173765",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 231173765,
    "user": {
      "login": "StreetStrider",
      "id": 2124761,
      "avatar_url": "https://avatars0.githubusercontent.com/u/2124761?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/StreetStrider",
      "html_url": "https://github.com/StreetStrider",
      "followers_url": "https://api.github.com/users/StreetStrider/followers",
      "following_url": "https://api.github.com/users/StreetStrider/following{/other_user}",
      "gists_url": "https://api.github.com/users/StreetStrider/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/StreetStrider/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/StreetStrider/subscriptions",
      "organizations_url": "https://api.github.com/users/StreetStrider/orgs",
      "repos_url": "https://api.github.com/users/StreetStrider/repos",
      "events_url": "https://api.github.com/users/StreetStrider/events{/privacy}",
      "received_events_url": "https://api.github.com/users/StreetStrider/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-07T18:56:10Z",
    "updated_at": "2016-07-07T18:56:10Z",
    "body": "Separate `package.electron` should be named `package.electron.json` or something that has extension `.json` for the sake of editors and IDE to determine syntax properly.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/231175352",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-231175352",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 231175352,
    "user": {
      "login": "YurySolovyov",
      "id": 2168518,
      "avatar_url": "https://avatars3.githubusercontent.com/u/2168518?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/YurySolovyov",
      "html_url": "https://github.com/YurySolovyov",
      "followers_url": "https://api.github.com/users/YurySolovyov/followers",
      "following_url": "https://api.github.com/users/YurySolovyov/following{/other_user}",
      "gists_url": "https://api.github.com/users/YurySolovyov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/YurySolovyov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/YurySolovyov/subscriptions",
      "organizations_url": "https://api.github.com/users/YurySolovyov/orgs",
      "repos_url": "https://api.github.com/users/YurySolovyov/repos",
      "events_url": "https://api.github.com/users/YurySolovyov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/YurySolovyov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-07T19:01:50Z",
    "updated_at": "2016-07-07T19:02:43Z",
    "body": "@StreetStrider I'd rather teached IDEs that `.electron` is actually valid `.json`.\nAnd this also brings us to point we [discussed](https://github.com/electron/electron/issues/673#issuecomment-231127231) with @sapioit about `.json` associations. I don't think any popular OS supports double extension associations. (`.foo.bar`)\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/231175559",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-231175559",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 231175559,
    "user": {
      "login": "sapioit",
      "id": 3173159,
      "avatar_url": "https://avatars3.githubusercontent.com/u/3173159?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sapioit",
      "html_url": "https://github.com/sapioit",
      "followers_url": "https://api.github.com/users/sapioit/followers",
      "following_url": "https://api.github.com/users/sapioit/following{/other_user}",
      "gists_url": "https://api.github.com/users/sapioit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sapioit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sapioit/subscriptions",
      "organizations_url": "https://api.github.com/users/sapioit/orgs",
      "repos_url": "https://api.github.com/users/sapioit/repos",
      "events_url": "https://api.github.com/users/sapioit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sapioit/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-07T19:02:32Z",
    "updated_at": "2016-07-07T19:02:32Z",
    "body": "You can have the .json extension added when you edit it. or right click and open with an editor, but just like Adobe Air, which, by default, opens the file with their launcher, allowing the user to open the file with an editor, that would cause no problems.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/231176724",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-231176724",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 231176724,
    "user": {
      "login": "Tribex",
      "id": 5861371,
      "avatar_url": "https://avatars3.githubusercontent.com/u/5861371?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Tribex",
      "html_url": "https://github.com/Tribex",
      "followers_url": "https://api.github.com/users/Tribex/followers",
      "following_url": "https://api.github.com/users/Tribex/following{/other_user}",
      "gists_url": "https://api.github.com/users/Tribex/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Tribex/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Tribex/subscriptions",
      "organizations_url": "https://api.github.com/users/Tribex/orgs",
      "repos_url": "https://api.github.com/users/Tribex/repos",
      "events_url": "https://api.github.com/users/Tribex/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Tribex/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-07T19:07:04Z",
    "updated_at": "2016-07-07T19:07:04Z",
    "body": "@sapioit Fair point, I guess I agree with you then about pointing to the package.json.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/231180985",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-231180985",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 231180985,
    "user": {
      "login": "baconbrad",
      "id": 4763342,
      "avatar_url": "https://avatars1.githubusercontent.com/u/4763342?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/baconbrad",
      "html_url": "https://github.com/baconbrad",
      "followers_url": "https://api.github.com/users/baconbrad/followers",
      "following_url": "https://api.github.com/users/baconbrad/following{/other_user}",
      "gists_url": "https://api.github.com/users/baconbrad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/baconbrad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/baconbrad/subscriptions",
      "organizations_url": "https://api.github.com/users/baconbrad/orgs",
      "repos_url": "https://api.github.com/users/baconbrad/repos",
      "events_url": "https://api.github.com/users/baconbrad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/baconbrad/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-07T19:23:40Z",
    "updated_at": "2016-07-07T19:23:40Z",
    "body": "To me a runtime and a player are two separate things. This is coming off more as a player now. And it doesn't seem like it would get any widespread use outside of a technically inclined community that are used to the concepts of package managers.\n\nThe issue at hand is to create a runtime. Kind of like JRE and .Net. Not a player.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/231181754",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-231181754",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 231181754,
    "user": {
      "login": "Tribex",
      "id": 5861371,
      "avatar_url": "https://avatars3.githubusercontent.com/u/5861371?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Tribex",
      "html_url": "https://github.com/Tribex",
      "followers_url": "https://api.github.com/users/Tribex/followers",
      "following_url": "https://api.github.com/users/Tribex/following{/other_user}",
      "gists_url": "https://api.github.com/users/Tribex/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Tribex/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Tribex/subscriptions",
      "organizations_url": "https://api.github.com/users/Tribex/orgs",
      "repos_url": "https://api.github.com/users/Tribex/repos",
      "events_url": "https://api.github.com/users/Tribex/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Tribex/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-07T19:26:41Z",
    "updated_at": "2016-07-07T19:26:41Z",
    "body": "@baconface Perhaps you could elaborate? It's unclear what the distinction you are making here is.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/231182003",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-231182003",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 231182003,
    "user": {
      "login": "YurySolovyov",
      "id": 2168518,
      "avatar_url": "https://avatars3.githubusercontent.com/u/2168518?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/YurySolovyov",
      "html_url": "https://github.com/YurySolovyov",
      "followers_url": "https://api.github.com/users/YurySolovyov/followers",
      "following_url": "https://api.github.com/users/YurySolovyov/following{/other_user}",
      "gists_url": "https://api.github.com/users/YurySolovyov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/YurySolovyov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/YurySolovyov/subscriptions",
      "organizations_url": "https://api.github.com/users/YurySolovyov/orgs",
      "repos_url": "https://api.github.com/users/YurySolovyov/repos",
      "events_url": "https://api.github.com/users/YurySolovyov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/YurySolovyov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-07T19:27:41Z",
    "updated_at": "2016-07-07T19:27:41Z",
    "body": "@baconface yeah, but both JRE and .Net are installable too.\nWithout JRE, `.jar` files are as useless as packages without `electron` runtime.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/231184228",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-231184228",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 231184228,
    "user": {
      "login": "Tribex",
      "id": 5861371,
      "avatar_url": "https://avatars3.githubusercontent.com/u/5861371?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Tribex",
      "html_url": "https://github.com/Tribex",
      "followers_url": "https://api.github.com/users/Tribex/followers",
      "following_url": "https://api.github.com/users/Tribex/following{/other_user}",
      "gists_url": "https://api.github.com/users/Tribex/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Tribex/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Tribex/subscriptions",
      "organizations_url": "https://api.github.com/users/Tribex/orgs",
      "repos_url": "https://api.github.com/users/Tribex/repos",
      "events_url": "https://api.github.com/users/Tribex/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Tribex/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-07T19:36:39Z",
    "updated_at": "2016-07-07T19:36:39Z",
    "body": "Ideally this tool would be distributed with or as the primary method of installing electron, ideally alleviating the spread issue.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/231224525",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-231224525",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 231224525,
    "user": {
      "login": "sapioit",
      "id": 3173159,
      "avatar_url": "https://avatars3.githubusercontent.com/u/3173159?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sapioit",
      "html_url": "https://github.com/sapioit",
      "followers_url": "https://api.github.com/users/sapioit/followers",
      "following_url": "https://api.github.com/users/sapioit/following{/other_user}",
      "gists_url": "https://api.github.com/users/sapioit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sapioit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sapioit/subscriptions",
      "organizations_url": "https://api.github.com/users/sapioit/orgs",
      "repos_url": "https://api.github.com/users/sapioit/repos",
      "events_url": "https://api.github.com/users/sapioit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sapioit/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-07T22:17:08Z",
    "updated_at": "2016-07-07T22:17:08Z",
    "body": "For this you would only need a tiny tool to make an executable which would launch a certain file, namely the `.electron` imputed. Simple as that. \n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/231238858",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-231238858",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 231238858,
    "user": {
      "login": "iamale",
      "id": 1298948,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1298948?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/iamale",
      "html_url": "https://github.com/iamale",
      "followers_url": "https://api.github.com/users/iamale/followers",
      "following_url": "https://api.github.com/users/iamale/following{/other_user}",
      "gists_url": "https://api.github.com/users/iamale/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/iamale/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iamale/subscriptions",
      "organizations_url": "https://api.github.com/users/iamale/orgs",
      "repos_url": "https://api.github.com/users/iamale/repos",
      "events_url": "https://api.github.com/users/iamale/events{/privacy}",
      "received_events_url": "https://api.github.com/users/iamale/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-07T23:39:36Z",
    "updated_at": "2016-07-07T23:39:36Z",
    "body": "`.lept` looks awesome, thanks!\n\nI personally think there's no need to invent any new configuration, `pkg.engines` looks quite straightforward to me here (it should allow for some complicated semver expressions though, like `1.x || >=2.5.0 || 5.0.0 - 7.2.3` from [npm's docs](https://docs.npmjs.com/misc/semver), so no need for `{ recommended, compatible, etc }`-structures like in @sapioit's examples, I believe). (I've added a `lepton` field though, because `scripts.run` is usually invoked by `npm start`, and lepton somewhat breaks semantics of it by adding its own `$VARIABLES`.)\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/231241658",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-231241658",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 231241658,
    "user": {
      "login": "iamale",
      "id": 1298948,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1298948?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/iamale",
      "html_url": "https://github.com/iamale",
      "followers_url": "https://api.github.com/users/iamale/followers",
      "following_url": "https://api.github.com/users/iamale/following{/other_user}",
      "gists_url": "https://api.github.com/users/iamale/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/iamale/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iamale/subscriptions",
      "organizations_url": "https://api.github.com/users/iamale/orgs",
      "repos_url": "https://api.github.com/users/iamale/repos",
      "events_url": "https://api.github.com/users/iamale/events{/privacy}",
      "received_events_url": "https://api.github.com/users/iamale/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-07T23:57:56Z",
    "updated_at": "2016-07-08T04:11:37Z",
    "body": "> Or, if we put everything into package.json, we could have the .electron only link to the .json we want to use to open the app\n\nDoesn't seem to me like a great idea either. If we have a package with multiple entry points, we still could have them all in one package.json, like we have a `scripts` map now. I'm thinking of something like so:\n\n``` js\n// package.json\n{\n  \"engines\": {\n    \"node\": \"4.x\",\n    \"electron\": \"1.x\"\n  },\n  \"lepton\": {\n    \"run\": \"$ELECTRON .\",\n    \"server\": \"$NODE ./server.js\",\n    \"server-debug\": \"$NODE ./server.js --debug\"\n  }\n}\n```\n\n``` bash\n# lepton-run [DIR OR TARBALL] [CONFIGURATION]\n$ lepton-run . # the default configuration is `run`\n$ lepton-run . server\n$ lepton-run . server-debug\n```\n\n---\n\nThen, if you really want this as executable files, on Linux / macOS you can use simple shell scripts (3 lines including #!shebang), and on Windows... well... ¯\\_(ツ)_/¯\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/231245452",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-231245452",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 231245452,
    "user": {
      "login": "sapioit",
      "id": 3173159,
      "avatar_url": "https://avatars3.githubusercontent.com/u/3173159?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sapioit",
      "html_url": "https://github.com/sapioit",
      "followers_url": "https://api.github.com/users/sapioit/followers",
      "following_url": "https://api.github.com/users/sapioit/following{/other_user}",
      "gists_url": "https://api.github.com/users/sapioit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sapioit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sapioit/subscriptions",
      "organizations_url": "https://api.github.com/users/sapioit/orgs",
      "repos_url": "https://api.github.com/users/sapioit/repos",
      "events_url": "https://api.github.com/users/sapioit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sapioit/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-08T00:26:26Z",
    "updated_at": "2016-07-08T00:26:26Z",
    "body": "First, you might want to take a look at this article, which offers a better alternative to semver, while still being compatible with pretty much everything out there: [**`Release.Breaking.Feature.Fix` or why the Semantic Version should be replaced with Explicit Versioning as soon as possible**](https://medium.com/sapioit/92fc1f6bc73c#.vdln38kq7)\n\nSecond, the question is how to actually differentiate them. I mean, if `server.js` already accepts the `--debug` argument, why bother with that and not allow the people to have their own file configs. Maybe the server requires different configurations than the client, like the client working on `2.2-2.4` and the server working only on `1.4-1.9.2.1`...\nDoing as you sugested, we would only be more limited.\n\nAlso, what about using more variables, not only `--debug`? How am I going to run it with more variables like it? Is it safe to do that? After all, if I wanted one file to do that, I could have done it even having separate files, but this way it messes up with the possible outcomes of runing the `.lept` file with parameters. \n\nIf I wanted to run the server with the debug parameter, wouldn't I simply launch the .lept with the `--debug` argument? Or I could make another file to launch that file with the `--debug` argument. Isn't it that simple?\nI hope I'm making sense... \n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/231250624",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-231250624",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 231250624,
    "user": {
      "login": "iamale",
      "id": 1298948,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1298948?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/iamale",
      "html_url": "https://github.com/iamale",
      "followers_url": "https://api.github.com/users/iamale/followers",
      "following_url": "https://api.github.com/users/iamale/following{/other_user}",
      "gists_url": "https://api.github.com/users/iamale/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/iamale/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iamale/subscriptions",
      "organizations_url": "https://api.github.com/users/iamale/orgs",
      "repos_url": "https://api.github.com/users/iamale/repos",
      "events_url": "https://api.github.com/users/iamale/events{/privacy}",
      "received_events_url": "https://api.github.com/users/iamale/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-08T01:05:01Z",
    "updated_at": "2016-07-08T01:15:27Z",
    "body": "> First, you might want to take a look at this article, which offers a better alternative to semver\n\nI think this is a great idea! I don't think Electron is going to switch to this versioning scheme, though. I also believe that while it's great for end-user products, we don't really need it for libraries and engines and runtimes and stuff. **Ideally, user shouldn't even know which version of Electron they are running** (unless they want to).\n\n> Maybe the server requires different configurations than the client\n\nThis could be a problem, but I can't imagine a project which would need more than one version of a runtime.\n\n> If I wanted to run the server with the debug parameter, wouldn't I simply launch the .lept with the --debug argument?\n\nYeah, why not:\n\n``` bash\n# lepton-run [DIR OR TARBALL] [CONFIGURATION] ARGS...\n$ lepton-run . server --debug --myoption=5\n# resolves to:\n$ path/to/node ./server.js --debug --myoption=5\n```\n\nThis dual-config package.json is great for cases when the server a) shares a lot of codebase with client, and b) is intended to be run by end users. In other cases it would make sense to separate it all into two repos/packages, each with its own package.json.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/231344603",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-231344603",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 231344603,
    "user": {
      "login": "sapioit",
      "id": 3173159,
      "avatar_url": "https://avatars3.githubusercontent.com/u/3173159?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sapioit",
      "html_url": "https://github.com/sapioit",
      "followers_url": "https://api.github.com/users/sapioit/followers",
      "following_url": "https://api.github.com/users/sapioit/following{/other_user}",
      "gists_url": "https://api.github.com/users/sapioit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sapioit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sapioit/subscriptions",
      "organizations_url": "https://api.github.com/users/sapioit/orgs",
      "repos_url": "https://api.github.com/users/sapioit/repos",
      "events_url": "https://api.github.com/users/sapioit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sapioit/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-08T12:14:40Z",
    "updated_at": "2016-07-08T12:15:57Z",
    "body": "It's not for Electron, but for the projects you build. Electron, likely, has it's own system derived from the Semantic Versioning to fit their needs, and it's unlikely that they're going to change it, but for Lepton and other projects that aren't so far in **_`development hell`**_, it might be a good idea to skip Semantic versioning altogether.\n\n> > If I wanted to run the server with the debug parameter, wouldn't I simply launch the .lept with the --debug argument?\n> \n> Yeah, why not:\n> \n> ``` txt\n> # lepton-run [DIR OR TARBALL] [CONFIGURATION] ARGS...\n> $ lepton-run . server --debug --myoption=5\n> # resolves to:\n> $ path/to/node ./server.js --debug --myoption=5\n> ```\n\nNo, I don't mean in the config, but through the launcher. So this:\n\n``` txt\n# lepton-run [DIR OR TARBALL] [CONFIGURATION] ARGS...\n$ lepton-run . server --debug \n```\n\nBut launch the `.lept` with the `--myoption=5` argument without touching the files (besides opening them). Since I'm pretty sure you can \"_push_\" the argument through the launcher, you can also remove the need for `--debug`, too, since you'll launch it with the custom argument if you want to.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/231345557",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-231345557",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 231345557,
    "user": {
      "login": "sapioit",
      "id": 3173159,
      "avatar_url": "https://avatars3.githubusercontent.com/u/3173159?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sapioit",
      "html_url": "https://github.com/sapioit",
      "followers_url": "https://api.github.com/users/sapioit/followers",
      "following_url": "https://api.github.com/users/sapioit/following{/other_user}",
      "gists_url": "https://api.github.com/users/sapioit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sapioit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sapioit/subscriptions",
      "organizations_url": "https://api.github.com/users/sapioit/orgs",
      "repos_url": "https://api.github.com/users/sapioit/repos",
      "events_url": "https://api.github.com/users/sapioit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sapioit/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-08T12:20:05Z",
    "updated_at": "2016-07-08T12:20:05Z",
    "body": "But on one thing I think we can agree: The users do want to be on a stable version that they are getting support for. That's why I made the \"**Release**\" it's own number, because the people are unlikely to remember many numbers, but they usually do remember the first one.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/231346741",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-231346741",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 231346741,
    "user": {
      "login": "YurySolovyov",
      "id": 2168518,
      "avatar_url": "https://avatars3.githubusercontent.com/u/2168518?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/YurySolovyov",
      "html_url": "https://github.com/YurySolovyov",
      "followers_url": "https://api.github.com/users/YurySolovyov/followers",
      "following_url": "https://api.github.com/users/YurySolovyov/following{/other_user}",
      "gists_url": "https://api.github.com/users/YurySolovyov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/YurySolovyov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/YurySolovyov/subscriptions",
      "organizations_url": "https://api.github.com/users/YurySolovyov/orgs",
      "repos_url": "https://api.github.com/users/YurySolovyov/repos",
      "events_url": "https://api.github.com/users/YurySolovyov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/YurySolovyov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-08T12:26:48Z",
    "updated_at": "2016-07-08T12:27:05Z",
    "body": "@sapioit if `\"Release\"` field is for end-users, what are other ones for? For end user this should not matter at all, if new version available and it requires updated runtime(via bump in package.json), then runtime should be updated too.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/231353871",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-231353871",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 231353871,
    "user": {
      "login": "sapioit",
      "id": 3173159,
      "avatar_url": "https://avatars3.githubusercontent.com/u/3173159?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sapioit",
      "html_url": "https://github.com/sapioit",
      "followers_url": "https://api.github.com/users/sapioit/followers",
      "following_url": "https://api.github.com/users/sapioit/following{/other_user}",
      "gists_url": "https://api.github.com/users/sapioit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sapioit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sapioit/subscriptions",
      "organizations_url": "https://api.github.com/users/sapioit/orgs",
      "repos_url": "https://api.github.com/users/sapioit/repos",
      "events_url": "https://api.github.com/users/sapioit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sapioit/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-08T13:04:13Z",
    "updated_at": "2016-07-08T13:04:13Z",
    "body": "Here are the problems:\n1. Users want to know which version they're being offered **support** for.\n2. They don't want to remember a lot of _useless numbers_, so if they choose to remember the version, they're more likely to remember version **`13` than version `1.7`** (for example).\n3. Some people don't want to update untill a certain things happens, like how quite a bit of **nVidia Drivers** are not being updated because since the Thunderbolt compatibility was added, their graphics card(s) get randomly ejected (depending on the user/case, either after booting the computer, after opening a game or a few minutes into playing the game). This is a good example of a reason (but there are many others, like **the KMPlayer's ads or `locked on` automatic updates**) which keep the users from using the latest version of a product. This makes it easier to look at the changelog, by removing complexity from it.\n\nThose are just some of the reasons... if you could go into more details, I could also go into more details and explain you better why those choices were made.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/231356862",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-231356862",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 231356862,
    "user": {
      "login": "YurySolovyov",
      "id": 2168518,
      "avatar_url": "https://avatars3.githubusercontent.com/u/2168518?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/YurySolovyov",
      "html_url": "https://github.com/YurySolovyov",
      "followers_url": "https://api.github.com/users/YurySolovyov/followers",
      "following_url": "https://api.github.com/users/YurySolovyov/following{/other_user}",
      "gists_url": "https://api.github.com/users/YurySolovyov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/YurySolovyov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/YurySolovyov/subscriptions",
      "organizations_url": "https://api.github.com/users/YurySolovyov/orgs",
      "repos_url": "https://api.github.com/users/YurySolovyov/repos",
      "events_url": "https://api.github.com/users/YurySolovyov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/YurySolovyov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-08T13:18:33Z",
    "updated_at": "2016-07-08T13:18:33Z",
    "body": "@sapioit Isn't semver ranges like `>= 12.1` flexible enough for declaring support?\nIf there is a new version of runtime available, and it satisfies version range, all next launches of an app should use latest possible runtime.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/231373122",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-231373122",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 231373122,
    "user": {
      "login": "sapioit",
      "id": 3173159,
      "avatar_url": "https://avatars3.githubusercontent.com/u/3173159?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sapioit",
      "html_url": "https://github.com/sapioit",
      "followers_url": "https://api.github.com/users/sapioit/followers",
      "following_url": "https://api.github.com/users/sapioit/following{/other_user}",
      "gists_url": "https://api.github.com/users/sapioit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sapioit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sapioit/subscriptions",
      "organizations_url": "https://api.github.com/users/sapioit/orgs",
      "repos_url": "https://api.github.com/users/sapioit/repos",
      "events_url": "https://api.github.com/users/sapioit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sapioit/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-08T14:24:13Z",
    "updated_at": "2016-07-08T14:24:13Z",
    "body": "Should they? But what if they decide not to, due to technical limitations (like the thing with KMPlayer's ads and nVidia Drivers)?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/231374035",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-231374035",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 231374035,
    "user": {
      "login": "YurySolovyov",
      "id": 2168518,
      "avatar_url": "https://avatars3.githubusercontent.com/u/2168518?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/YurySolovyov",
      "html_url": "https://github.com/YurySolovyov",
      "followers_url": "https://api.github.com/users/YurySolovyov/followers",
      "following_url": "https://api.github.com/users/YurySolovyov/following{/other_user}",
      "gists_url": "https://api.github.com/users/YurySolovyov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/YurySolovyov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/YurySolovyov/subscriptions",
      "organizations_url": "https://api.github.com/users/YurySolovyov/orgs",
      "repos_url": "https://api.github.com/users/YurySolovyov/repos",
      "events_url": "https://api.github.com/users/YurySolovyov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/YurySolovyov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-08T14:27:43Z",
    "updated_at": "2016-07-08T14:27:43Z",
    "body": "@sapioit Then just make sure you stated your runtime range properly\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/231382169",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-231382169",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 231382169,
    "user": {
      "login": "Tribex",
      "id": 5861371,
      "avatar_url": "https://avatars3.githubusercontent.com/u/5861371?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Tribex",
      "html_url": "https://github.com/Tribex",
      "followers_url": "https://api.github.com/users/Tribex/followers",
      "following_url": "https://api.github.com/users/Tribex/following{/other_user}",
      "gists_url": "https://api.github.com/users/Tribex/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Tribex/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Tribex/subscriptions",
      "organizations_url": "https://api.github.com/users/Tribex/orgs",
      "repos_url": "https://api.github.com/users/Tribex/repos",
      "events_url": "https://api.github.com/users/Tribex/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Tribex/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-08T14:57:32Z",
    "updated_at": "2016-07-08T14:57:32Z",
    "body": "@sapioit @YurySolovyov Is this discussion relevant here? A runtime manager would have to follow whatever versioning system electron is using. I believe a discussion of what versioning system electron _should_ be using belongs in another issue.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/231384150",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-231384150",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 231384150,
    "user": {
      "login": "YurySolovyov",
      "id": 2168518,
      "avatar_url": "https://avatars3.githubusercontent.com/u/2168518?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/YurySolovyov",
      "html_url": "https://github.com/YurySolovyov",
      "followers_url": "https://api.github.com/users/YurySolovyov/followers",
      "following_url": "https://api.github.com/users/YurySolovyov/following{/other_user}",
      "gists_url": "https://api.github.com/users/YurySolovyov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/YurySolovyov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/YurySolovyov/subscriptions",
      "organizations_url": "https://api.github.com/users/YurySolovyov/orgs",
      "repos_url": "https://api.github.com/users/YurySolovyov/repos",
      "events_url": "https://api.github.com/users/YurySolovyov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/YurySolovyov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-08T15:04:38Z",
    "updated_at": "2016-07-08T15:04:38Z",
    "body": "@Tribex somewhat. I was trying to say that we should not overcomplicate things that are already basically solved. But I agree that runtime manager should do simplest possible thing in this regard.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/231388690",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-231388690",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 231388690,
    "user": {
      "login": "sapioit",
      "id": 3173159,
      "avatar_url": "https://avatars3.githubusercontent.com/u/3173159?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sapioit",
      "html_url": "https://github.com/sapioit",
      "followers_url": "https://api.github.com/users/sapioit/followers",
      "following_url": "https://api.github.com/users/sapioit/following{/other_user}",
      "gists_url": "https://api.github.com/users/sapioit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sapioit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sapioit/subscriptions",
      "organizations_url": "https://api.github.com/users/sapioit/orgs",
      "repos_url": "https://api.github.com/users/sapioit/repos",
      "events_url": "https://api.github.com/users/sapioit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sapioit/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-08T15:21:34Z",
    "updated_at": "2016-07-08T15:21:34Z",
    "body": "@yurysolovyov So why not simply allow as many sections in the version number as the player wants? \n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/231414748",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-231414748",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 231414748,
    "user": {
      "login": "iamale",
      "id": 1298948,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1298948?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/iamale",
      "html_url": "https://github.com/iamale",
      "followers_url": "https://api.github.com/users/iamale/followers",
      "following_url": "https://api.github.com/users/iamale/following{/other_user}",
      "gists_url": "https://api.github.com/users/iamale/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/iamale/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iamale/subscriptions",
      "organizations_url": "https://api.github.com/users/iamale/orgs",
      "repos_url": "https://api.github.com/users/iamale/repos",
      "events_url": "https://api.github.com/users/iamale/events{/privacy}",
      "received_events_url": "https://api.github.com/users/iamale/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-08T17:01:48Z",
    "updated_at": "2016-07-08T17:01:48Z",
    "body": "@sapioit\n\n> It's not for Electron, but for the projects you build.\n\nLepton doesn't have a versioning scheme assigned (yet), and packages (apps) can use any versioning scheme they want. We need to handle this (for example, if we want to support updating apps through the Lepton itself).\n\nRuntimes, ideally, should use semver, as they're not products, but again, any 3-number versioning is supported now (developers would need to be careful with specifying ranges, though). If we ever need to support more than 3 numbers (like with your Explicit Versioning proposal), we'd need to extend the parser (for Python, I suggest forking [k-bx/python-semver](https://github.com/k-bx/python-semver) or [podhmo/python-semver](https://github.com/podhmo/python-semver) — the former has updated more recently, while the former follows the node-semver API more tightly and is what I'm currently using).\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/231424599",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-231424599",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 231424599,
    "user": {
      "login": "championswimmer",
      "id": 1327050,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1327050?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/championswimmer",
      "html_url": "https://github.com/championswimmer",
      "followers_url": "https://api.github.com/users/championswimmer/followers",
      "following_url": "https://api.github.com/users/championswimmer/following{/other_user}",
      "gists_url": "https://api.github.com/users/championswimmer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/championswimmer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/championswimmer/subscriptions",
      "organizations_url": "https://api.github.com/users/championswimmer/orgs",
      "repos_url": "https://api.github.com/users/championswimmer/repos",
      "events_url": "https://api.github.com/users/championswimmer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/championswimmer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-08T17:41:45Z",
    "updated_at": "2016-07-08T17:41:45Z",
    "body": "Can I just say that having a runtime package manager written in python for a nodejs project is just a bad idea.\nJust let's not do it. Whatever it is called, lepton, or whatever. Let's write it in node, or use something else. And let's not spam this issue with needless mails about how you think you know better than the well thought semantic versioning scheme \n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/231441797",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-231441797",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 231441797,
    "user": {
      "login": "Tribex",
      "id": 5861371,
      "avatar_url": "https://avatars3.githubusercontent.com/u/5861371?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Tribex",
      "html_url": "https://github.com/Tribex",
      "followers_url": "https://api.github.com/users/Tribex/followers",
      "following_url": "https://api.github.com/users/Tribex/following{/other_user}",
      "gists_url": "https://api.github.com/users/Tribex/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Tribex/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Tribex/subscriptions",
      "organizations_url": "https://api.github.com/users/Tribex/orgs",
      "repos_url": "https://api.github.com/users/Tribex/repos",
      "events_url": "https://api.github.com/users/Tribex/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Tribex/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-08T18:47:42Z",
    "updated_at": "2016-07-08T18:47:54Z",
    "body": "@championswimmer It would be interesting to build the runtime manager with a version of electron packaged with it, and a UI to show when other versions are being downloaded.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/231445577",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-231445577",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 231445577,
    "user": {
      "login": "iamale",
      "id": 1298948,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1298948?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/iamale",
      "html_url": "https://github.com/iamale",
      "followers_url": "https://api.github.com/users/iamale/followers",
      "following_url": "https://api.github.com/users/iamale/following{/other_user}",
      "gists_url": "https://api.github.com/users/iamale/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/iamale/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iamale/subscriptions",
      "organizations_url": "https://api.github.com/users/iamale/orgs",
      "repos_url": "https://api.github.com/users/iamale/repos",
      "events_url": "https://api.github.com/users/iamale/events{/privacy}",
      "received_events_url": "https://api.github.com/users/iamale/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-08T19:03:06Z",
    "updated_at": "2016-07-08T19:03:06Z",
    "body": "@championswimmer [iamale/lepton](https://github.com/iamale/lepton) is sort of kind of throwaway reference implementation: I just put it up to test various ideas floating around this thread, nothing more.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/231454635",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-231454635",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 231454635,
    "user": {
      "login": "YurySolovyov",
      "id": 2168518,
      "avatar_url": "https://avatars3.githubusercontent.com/u/2168518?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/YurySolovyov",
      "html_url": "https://github.com/YurySolovyov",
      "followers_url": "https://api.github.com/users/YurySolovyov/followers",
      "following_url": "https://api.github.com/users/YurySolovyov/following{/other_user}",
      "gists_url": "https://api.github.com/users/YurySolovyov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/YurySolovyov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/YurySolovyov/subscriptions",
      "organizations_url": "https://api.github.com/users/YurySolovyov/orgs",
      "repos_url": "https://api.github.com/users/YurySolovyov/repos",
      "events_url": "https://api.github.com/users/YurySolovyov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/YurySolovyov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-08T19:44:25Z",
    "updated_at": "2016-07-08T19:44:25Z",
    "body": "@iamale maybe you should state it in readme to avoid confusion then?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/231507286",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-231507286",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 231507286,
    "user": {
      "login": "iamale",
      "id": 1298948,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1298948?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/iamale",
      "html_url": "https://github.com/iamale",
      "followers_url": "https://api.github.com/users/iamale/followers",
      "following_url": "https://api.github.com/users/iamale/following{/other_user}",
      "gists_url": "https://api.github.com/users/iamale/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/iamale/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iamale/subscriptions",
      "organizations_url": "https://api.github.com/users/iamale/orgs",
      "repos_url": "https://api.github.com/users/iamale/repos",
      "events_url": "https://api.github.com/users/iamale/events{/privacy}",
      "received_events_url": "https://api.github.com/users/iamale/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-09T01:38:42Z",
    "updated_at": "2016-07-09T01:38:42Z",
    "body": "@YurySolovyov Done!\n\nAs for the real implementation, we have two options: either we use node.js, or a compiled language like C/++ or Go; and for node, we'd have to bundle node.js with it (or maybe just run it on one of electron instances downloaded? We'll need to ensure that it runs on _any_ sane electron version, though).\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/231508161",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-231508161",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 231508161,
    "user": {
      "login": "Tribex",
      "id": 5861371,
      "avatar_url": "https://avatars3.githubusercontent.com/u/5861371?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Tribex",
      "html_url": "https://github.com/Tribex",
      "followers_url": "https://api.github.com/users/Tribex/followers",
      "following_url": "https://api.github.com/users/Tribex/following{/other_user}",
      "gists_url": "https://api.github.com/users/Tribex/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Tribex/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Tribex/subscriptions",
      "organizations_url": "https://api.github.com/users/Tribex/orgs",
      "repos_url": "https://api.github.com/users/Tribex/repos",
      "events_url": "https://api.github.com/users/Tribex/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Tribex/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-09T01:53:27Z",
    "updated_at": "2016-07-09T01:53:27Z",
    "body": "@iamale Not really, we just have to run off a default installed version. After that updates can switch it to newer version in-place.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/231530232",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-231530232",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 231530232,
    "user": {
      "login": "sapioit",
      "id": 3173159,
      "avatar_url": "https://avatars3.githubusercontent.com/u/3173159?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sapioit",
      "html_url": "https://github.com/sapioit",
      "followers_url": "https://api.github.com/users/sapioit/followers",
      "following_url": "https://api.github.com/users/sapioit/following{/other_user}",
      "gists_url": "https://api.github.com/users/sapioit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sapioit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sapioit/subscriptions",
      "organizations_url": "https://api.github.com/users/sapioit/orgs",
      "repos_url": "https://api.github.com/users/sapioit/repos",
      "events_url": "https://api.github.com/users/sapioit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sapioit/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-09T11:41:21Z",
    "updated_at": "2016-07-09T11:41:21Z",
    "body": "I'd rather choose to use one certain version, because if needed, everything can be updated...\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/232915871",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-232915871",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 232915871,
    "user": {
      "login": "enlight",
      "id": 233003,
      "avatar_url": "https://avatars3.githubusercontent.com/u/233003?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/enlight",
      "html_url": "https://github.com/enlight",
      "followers_url": "https://api.github.com/users/enlight/followers",
      "following_url": "https://api.github.com/users/enlight/following{/other_user}",
      "gists_url": "https://api.github.com/users/enlight/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/enlight/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/enlight/subscriptions",
      "organizations_url": "https://api.github.com/users/enlight/orgs",
      "repos_url": "https://api.github.com/users/enlight/repos",
      "events_url": "https://api.github.com/users/enlight/events{/privacy}",
      "received_events_url": "https://api.github.com/users/enlight/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-15T10:20:38Z",
    "updated_at": "2016-07-15T10:20:38Z",
    "body": "**Lepton** might not be such a great name now that it's an [image format](https://github.com/dropbox/lepton).\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/232935699",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-232935699",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 232935699,
    "user": {
      "login": "sapioit",
      "id": 3173159,
      "avatar_url": "https://avatars3.githubusercontent.com/u/3173159?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sapioit",
      "html_url": "https://github.com/sapioit",
      "followers_url": "https://api.github.com/users/sapioit/followers",
      "following_url": "https://api.github.com/users/sapioit/following{/other_user}",
      "gists_url": "https://api.github.com/users/sapioit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sapioit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sapioit/subscriptions",
      "organizations_url": "https://api.github.com/users/sapioit/orgs",
      "repos_url": "https://api.github.com/users/sapioit/repos",
      "events_url": "https://api.github.com/users/sapioit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sapioit/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-15T12:09:57Z",
    "updated_at": "2016-07-15T12:09:57Z",
    "body": "So... what do we call it now? `Hadron`?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/232937584",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-232937584",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 232937584,
    "user": {
      "login": "Tribex",
      "id": 5861371,
      "avatar_url": "https://avatars3.githubusercontent.com/u/5861371?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Tribex",
      "html_url": "https://github.com/Tribex",
      "followers_url": "https://api.github.com/users/Tribex/followers",
      "following_url": "https://api.github.com/users/Tribex/following{/other_user}",
      "gists_url": "https://api.github.com/users/Tribex/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Tribex/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Tribex/subscriptions",
      "organizations_url": "https://api.github.com/users/Tribex/orgs",
      "repos_url": "https://api.github.com/users/Tribex/repos",
      "events_url": "https://api.github.com/users/Tribex/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Tribex/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-15T12:21:26Z",
    "updated_at": "2016-07-15T12:21:26Z",
    "body": "Quark? If someone wants to take the name \"Muon\" I can rename one of my projects.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/232940134",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-232940134",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 232940134,
    "user": {
      "login": "YurySolovyov",
      "id": 2168518,
      "avatar_url": "https://avatars3.githubusercontent.com/u/2168518?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/YurySolovyov",
      "html_url": "https://github.com/YurySolovyov",
      "followers_url": "https://api.github.com/users/YurySolovyov/followers",
      "following_url": "https://api.github.com/users/YurySolovyov/following{/other_user}",
      "gists_url": "https://api.github.com/users/YurySolovyov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/YurySolovyov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/YurySolovyov/subscriptions",
      "organizations_url": "https://api.github.com/users/YurySolovyov/orgs",
      "repos_url": "https://api.github.com/users/YurySolovyov/repos",
      "events_url": "https://api.github.com/users/YurySolovyov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/YurySolovyov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-15T12:35:37Z",
    "updated_at": "2016-07-15T12:35:37Z",
    "body": "Isn't naming actually the least important part here?\nDid we agreed on install/update/runtime semantics?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/232947492",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-232947492",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 232947492,
    "user": {
      "login": "Jop-V",
      "id": 2750434,
      "avatar_url": "https://avatars2.githubusercontent.com/u/2750434?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Jop-V",
      "html_url": "https://github.com/Jop-V",
      "followers_url": "https://api.github.com/users/Jop-V/followers",
      "following_url": "https://api.github.com/users/Jop-V/following{/other_user}",
      "gists_url": "https://api.github.com/users/Jop-V/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Jop-V/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Jop-V/subscriptions",
      "organizations_url": "https://api.github.com/users/Jop-V/orgs",
      "repos_url": "https://api.github.com/users/Jop-V/repos",
      "events_url": "https://api.github.com/users/Jop-V/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Jop-V/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-15T13:14:18Z",
    "updated_at": "2016-07-15T13:14:18Z",
    "body": "Why not just `electron`...\n\n> Op 15 jul. 2016 om 13:22 heeft Joshua Bemenderfer notifications@github.com het volgende geschreven:\n> \n> Quark? If someone wants to take the name \"Muon\" I can rename one of my projects.\n> \n> —\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub, or mute the thread.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/232976428",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-232976428",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 232976428,
    "user": {
      "login": "sapioit",
      "id": 3173159,
      "avatar_url": "https://avatars3.githubusercontent.com/u/3173159?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sapioit",
      "html_url": "https://github.com/sapioit",
      "followers_url": "https://api.github.com/users/sapioit/followers",
      "following_url": "https://api.github.com/users/sapioit/following{/other_user}",
      "gists_url": "https://api.github.com/users/sapioit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sapioit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sapioit/subscriptions",
      "organizations_url": "https://api.github.com/users/sapioit/orgs",
      "repos_url": "https://api.github.com/users/sapioit/repos",
      "events_url": "https://api.github.com/users/sapioit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sapioit/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-15T15:03:18Z",
    "updated_at": "2016-07-15T15:03:18Z",
    "body": "@yurisolovyov I think we agreed... more or less.\n@job-v That's what I've been suggesting all along. Just let's pick one and stick with it.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/232979959",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-232979959",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 232979959,
    "user": {
      "login": "YurySolovyov",
      "id": 2168518,
      "avatar_url": "https://avatars3.githubusercontent.com/u/2168518?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/YurySolovyov",
      "html_url": "https://github.com/YurySolovyov",
      "followers_url": "https://api.github.com/users/YurySolovyov/followers",
      "following_url": "https://api.github.com/users/YurySolovyov/following{/other_user}",
      "gists_url": "https://api.github.com/users/YurySolovyov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/YurySolovyov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/YurySolovyov/subscriptions",
      "organizations_url": "https://api.github.com/users/YurySolovyov/orgs",
      "repos_url": "https://api.github.com/users/YurySolovyov/repos",
      "events_url": "https://api.github.com/users/YurySolovyov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/YurySolovyov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-15T15:14:34Z",
    "updated_at": "2016-07-15T15:14:34Z",
    "body": "@zcbenz are you observing this thread?\nIf so, it would be nice to have some vision on how this should work to get some directions here.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/269279802",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-269279802",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 269279802,
    "user": {
      "login": "alnour-altegany",
      "id": 6137428,
      "avatar_url": "https://avatars0.githubusercontent.com/u/6137428?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alnour-altegany",
      "html_url": "https://github.com/alnour-altegany",
      "followers_url": "https://api.github.com/users/alnour-altegany/followers",
      "following_url": "https://api.github.com/users/alnour-altegany/following{/other_user}",
      "gists_url": "https://api.github.com/users/alnour-altegany/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alnour-altegany/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alnour-altegany/subscriptions",
      "organizations_url": "https://api.github.com/users/alnour-altegany/orgs",
      "repos_url": "https://api.github.com/users/alnour-altegany/repos",
      "events_url": "https://api.github.com/users/alnour-altegany/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alnour-altegany/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-27T06:59:41Z",
    "updated_at": "2016-12-27T06:59:41Z",
    "body": "hi\r\nany updates about this **electron runtime** ?\r\n@zcbenz what do you think about all the discussion about :\r\n- selecting electron version\r\n- installing the appropriate version\r\n- prepare it to work in win, linux, mac\r\n- what tool use to build with it (python, node, go, c++) ?\r\n@YurySolovyov @sapioit thanks for your awesome ideas\r\n@iamale is your solution work for debian based destros 'ubuntu ...'"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/269282193",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-269282193",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 269282193,
    "user": {
      "login": "iamale",
      "id": 1298948,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1298948?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/iamale",
      "html_url": "https://github.com/iamale",
      "followers_url": "https://api.github.com/users/iamale/followers",
      "following_url": "https://api.github.com/users/iamale/following{/other_user}",
      "gists_url": "https://api.github.com/users/iamale/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/iamale/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iamale/subscriptions",
      "organizations_url": "https://api.github.com/users/iamale/orgs",
      "repos_url": "https://api.github.com/users/iamale/repos",
      "events_url": "https://api.github.com/users/iamale/events{/privacy}",
      "received_events_url": "https://api.github.com/users/iamale/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-27T07:16:41Z",
    "updated_at": "2016-12-27T07:16:41Z",
    "body": "@alnour-altegani \r\nYeah, it would work for any dpkg-based distributions because we don't depend on outside packages. RPM packages can be generated in a similar way, why not?\r\n\r\nI'm thinking of starting a central repo for all the Electron things, so i. e. you could run:\r\n\r\n```\r\nsudo sh -c \"echo 'deb https://epkg.example.org/ /' > /etc/apt/sources.list.d/epkg.list\"\r\nsudo apt-get update\r\nsudo apt-get install min-browser  # or whatever\r\n```"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/269297529",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-269297529",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 269297529,
    "user": {
      "login": "alnour-altegany",
      "id": 6137428,
      "avatar_url": "https://avatars0.githubusercontent.com/u/6137428?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alnour-altegany",
      "html_url": "https://github.com/alnour-altegany",
      "followers_url": "https://api.github.com/users/alnour-altegany/followers",
      "following_url": "https://api.github.com/users/alnour-altegany/following{/other_user}",
      "gists_url": "https://api.github.com/users/alnour-altegany/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alnour-altegany/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alnour-altegany/subscriptions",
      "organizations_url": "https://api.github.com/users/alnour-altegany/orgs",
      "repos_url": "https://api.github.com/users/alnour-altegany/repos",
      "events_url": "https://api.github.com/users/alnour-altegany/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alnour-altegany/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-27T09:06:01Z",
    "updated_at": "2016-12-27T09:06:01Z",
    "body": "@iamale I think make electron as deb package and use it as dependaces in application to be installed manually or from centeral repository for many electron version deb packages .\r\nand then use this package after installation to run the user application "
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/269392137",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-269392137",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 269392137,
    "user": {
      "login": "sapioit",
      "id": 3173159,
      "avatar_url": "https://avatars3.githubusercontent.com/u/3173159?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sapioit",
      "html_url": "https://github.com/sapioit",
      "followers_url": "https://api.github.com/users/sapioit/followers",
      "following_url": "https://api.github.com/users/sapioit/following{/other_user}",
      "gists_url": "https://api.github.com/users/sapioit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sapioit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sapioit/subscriptions",
      "organizations_url": "https://api.github.com/users/sapioit/orgs",
      "repos_url": "https://api.github.com/users/sapioit/repos",
      "events_url": "https://api.github.com/users/sapioit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sapioit/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-27T22:31:37Z",
    "updated_at": "2016-12-27T22:31:37Z",
    "body": "If anyone starts working on something for this, maybe link to it here..."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/276587887",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-276587887",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 276587887,
    "user": {
      "login": "iamale",
      "id": 1298948,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1298948?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/iamale",
      "html_url": "https://github.com/iamale",
      "followers_url": "https://api.github.com/users/iamale/followers",
      "following_url": "https://api.github.com/users/iamale/following{/other_user}",
      "gists_url": "https://api.github.com/users/iamale/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/iamale/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iamale/subscriptions",
      "organizations_url": "https://api.github.com/users/iamale/orgs",
      "repos_url": "https://api.github.com/users/iamale/repos",
      "events_url": "https://api.github.com/users/iamale/events{/privacy}",
      "received_events_url": "https://api.github.com/users/iamale/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-01T07:08:14Z",
    "updated_at": "2017-02-01T07:08:14Z",
    "body": "@sapioit I've started working on a Linux (APT/RPM) solution. A simple service that you upload .asar to and it gets converted to packages and added to the repositories. Should be extendable to Windows and macOS as well, but no promises on that for now."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/276613808",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-276613808",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 276613808,
    "user": {
      "login": "sapioit",
      "id": 3173159,
      "avatar_url": "https://avatars3.githubusercontent.com/u/3173159?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sapioit",
      "html_url": "https://github.com/sapioit",
      "followers_url": "https://api.github.com/users/sapioit/followers",
      "following_url": "https://api.github.com/users/sapioit/following{/other_user}",
      "gists_url": "https://api.github.com/users/sapioit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sapioit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sapioit/subscriptions",
      "organizations_url": "https://api.github.com/users/sapioit/orgs",
      "repos_url": "https://api.github.com/users/sapioit/repos",
      "events_url": "https://api.github.com/users/sapioit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sapioit/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-01T09:42:14Z",
    "updated_at": "2017-02-01T09:42:14Z",
    "body": "@iamale Cool! Let me know when you get it working on windows."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/277681130",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-277681130",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 277681130,
    "user": {
      "login": "moosingin3space",
      "id": 830082,
      "avatar_url": "https://avatars0.githubusercontent.com/u/830082?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/moosingin3space",
      "html_url": "https://github.com/moosingin3space",
      "followers_url": "https://api.github.com/users/moosingin3space/followers",
      "following_url": "https://api.github.com/users/moosingin3space/following{/other_user}",
      "gists_url": "https://api.github.com/users/moosingin3space/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/moosingin3space/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/moosingin3space/subscriptions",
      "organizations_url": "https://api.github.com/users/moosingin3space/orgs",
      "repos_url": "https://api.github.com/users/moosingin3space/repos",
      "events_url": "https://api.github.com/users/moosingin3space/events{/privacy}",
      "received_events_url": "https://api.github.com/users/moosingin3space/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-06T13:31:40Z",
    "updated_at": "2017-02-06T13:31:40Z",
    "body": "What about making a Flatpak runtime for Linux? This way, the runtime can be shared between multiple apps, and you get sandboxing too.\r\n\r\nWith Flatpak removing its dependency on `systemd` it'll probably become universal on Linux for upstream packaging. "
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/277684399",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-277684399",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 277684399,
    "user": {
      "login": "iamale",
      "id": 1298948,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1298948?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/iamale",
      "html_url": "https://github.com/iamale",
      "followers_url": "https://api.github.com/users/iamale/followers",
      "following_url": "https://api.github.com/users/iamale/following{/other_user}",
      "gists_url": "https://api.github.com/users/iamale/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/iamale/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iamale/subscriptions",
      "organizations_url": "https://api.github.com/users/iamale/orgs",
      "repos_url": "https://api.github.com/users/iamale/repos",
      "events_url": "https://api.github.com/users/iamale/events{/privacy}",
      "received_events_url": "https://api.github.com/users/iamale/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-06T13:43:44Z",
    "updated_at": "2017-02-06T13:43:44Z",
    "body": "> the runtime can be shared between multiple apps\r\n\r\nI thought that with Flatpak it wouldn't be possible?.."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/277685139",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-277685139",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 277685139,
    "user": {
      "login": "moosingin3space",
      "id": 830082,
      "avatar_url": "https://avatars0.githubusercontent.com/u/830082?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/moosingin3space",
      "html_url": "https://github.com/moosingin3space",
      "followers_url": "https://api.github.com/users/moosingin3space/followers",
      "following_url": "https://api.github.com/users/moosingin3space/following{/other_user}",
      "gists_url": "https://api.github.com/users/moosingin3space/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/moosingin3space/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/moosingin3space/subscriptions",
      "organizations_url": "https://api.github.com/users/moosingin3space/orgs",
      "repos_url": "https://api.github.com/users/moosingin3space/repos",
      "events_url": "https://api.github.com/users/moosingin3space/events{/privacy}",
      "received_events_url": "https://api.github.com/users/moosingin3space/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-06T13:46:39Z",
    "updated_at": "2017-02-06T13:46:39Z",
    "body": "@iamale Flatpak is designed to share runtimes - app developers choose a runtime, install the SDK for that runtime, then build an app with `flatpak-builder` or similar. Then when the user installs the app, Flatpak installs the associated runtime. "
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/277686196",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-277686196",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 277686196,
    "user": {
      "login": "iamale",
      "id": 1298948,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1298948?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/iamale",
      "html_url": "https://github.com/iamale",
      "followers_url": "https://api.github.com/users/iamale/followers",
      "following_url": "https://api.github.com/users/iamale/following{/other_user}",
      "gists_url": "https://api.github.com/users/iamale/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/iamale/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iamale/subscriptions",
      "organizations_url": "https://api.github.com/users/iamale/orgs",
      "repos_url": "https://api.github.com/users/iamale/repos",
      "events_url": "https://api.github.com/users/iamale/events{/privacy}",
      "received_events_url": "https://api.github.com/users/iamale/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-06T13:50:33Z",
    "updated_at": "2017-02-06T13:50:33Z",
    "body": "@moosingin3space Thanks for explanation! It is definitely worth considering then."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/277687184",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-277687184",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 277687184,
    "user": {
      "login": "moosingin3space",
      "id": 830082,
      "avatar_url": "https://avatars0.githubusercontent.com/u/830082?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/moosingin3space",
      "html_url": "https://github.com/moosingin3space",
      "followers_url": "https://api.github.com/users/moosingin3space/followers",
      "following_url": "https://api.github.com/users/moosingin3space/following{/other_user}",
      "gists_url": "https://api.github.com/users/moosingin3space/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/moosingin3space/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/moosingin3space/subscriptions",
      "organizations_url": "https://api.github.com/users/moosingin3space/orgs",
      "repos_url": "https://api.github.com/users/moosingin3space/repos",
      "events_url": "https://api.github.com/users/moosingin3space/events{/privacy}",
      "received_events_url": "https://api.github.com/users/moosingin3space/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-06T13:54:10Z",
    "updated_at": "2017-02-06T13:54:10Z",
    "body": "The other thing I like about Flatpak is that it has been designed around the use case where a user adds a repo run by the runtime dev and app dev (transparently) and this makes updates automatic. \r\n\r\nThe only things I can see being issues are related to security - need to modify system libraries to use the \"portals\" interface in Flatpak to allow safe exiting of the sandbox. "
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/277721847",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-277721847",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 277721847,
    "user": {
      "login": "moosingin3space",
      "id": 830082,
      "avatar_url": "https://avatars0.githubusercontent.com/u/830082?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/moosingin3space",
      "html_url": "https://github.com/moosingin3space",
      "followers_url": "https://api.github.com/users/moosingin3space/followers",
      "following_url": "https://api.github.com/users/moosingin3space/following{/other_user}",
      "gists_url": "https://api.github.com/users/moosingin3space/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/moosingin3space/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/moosingin3space/subscriptions",
      "organizations_url": "https://api.github.com/users/moosingin3space/orgs",
      "repos_url": "https://api.github.com/users/moosingin3space/repos",
      "events_url": "https://api.github.com/users/moosingin3space/events{/privacy}",
      "received_events_url": "https://api.github.com/users/moosingin3space/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-06T15:46:25Z",
    "updated_at": "2017-02-06T15:46:25Z",
    "body": "There appears to be work on Flatpak here: https://github.com/endlessm/electron-installer-flatpak"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/277761925",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-277761925",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 277761925,
    "user": {
      "login": "ebassi",
      "id": 1665,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1665?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ebassi",
      "html_url": "https://github.com/ebassi",
      "followers_url": "https://api.github.com/users/ebassi/followers",
      "following_url": "https://api.github.com/users/ebassi/following{/other_user}",
      "gists_url": "https://api.github.com/users/ebassi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ebassi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ebassi/subscriptions",
      "organizations_url": "https://api.github.com/users/ebassi/orgs",
      "repos_url": "https://api.github.com/users/ebassi/repos",
      "events_url": "https://api.github.com/users/ebassi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ebassi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-06T18:01:38Z",
    "updated_at": "2017-02-06T18:01:38Z",
    "body": "As a side note, Flatpak is based on the [OSTree](https://github.com/ostreedev/ostree) project, which does content addressing for file system trees. This means that files with identical checksums are automatically de-duplicated on disk, and that updates are performed using static deltas. This means that not only Electron could provide a share runtime that can be independently updated and shared across applications, but also that applications built on identical files would automatically share them on disk, and that once an application and/or a runtime are installed, updates would not require a full download."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/278331350",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-278331350",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 278331350,
    "user": {
      "login": "CxRes",
      "id": 2706227,
      "avatar_url": "https://avatars1.githubusercontent.com/u/2706227?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CxRes",
      "html_url": "https://github.com/CxRes",
      "followers_url": "https://api.github.com/users/CxRes/followers",
      "following_url": "https://api.github.com/users/CxRes/following{/other_user}",
      "gists_url": "https://api.github.com/users/CxRes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CxRes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CxRes/subscriptions",
      "organizations_url": "https://api.github.com/users/CxRes/orgs",
      "repos_url": "https://api.github.com/users/CxRes/repos",
      "events_url": "https://api.github.com/users/CxRes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CxRes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-08T13:40:47Z",
    "updated_at": "2017-02-08T13:40:47Z",
    "body": "Forgive me if this is a bit naive, I am wondering if the possibility of a building a desktop environment as a natural logical progression of the runtime environment has been considered. The idea being that there is a launch app which electron loads on startup (instead of say, atom) with the ability to launch other electron apps (given the large growing library) by spawning new instances of the renderer or maybe even reusing it and have apps open in a new tab. \r\n\r\nChrome as in the OS in my understanding seems to be exactly this (but limiting itself to webapps). Having desktops apps with full fs access through nodejs (as opposed to limitations of chromeAPIs) with electron as a runtime environment on top of Linux (or even replacing or at least augmenting in the beginning explorer.exe in Windows) would be very exciting imho. I think this is a cleaner solution than ChromeOS which is loading what is effectively a runtime and then a browser engine and then hosting an app - here one will load apps directly in the runtime and browser itself will be just another app (and there are so many innovative electron browser projects out in the wild). \r\n\r\nAgain, I am wondering if this has been considered or if there is some project doing this already. If not, perhaps a fairy can put a word in the ears of Github management for taking a lead????  \r\n\r\nPS: One thing I am not suggesting here is porting OS.js (which is a cute little project in itself) to electron  but creating an environment for electron apps (Though I wouldn't be averse to code reuse from OS.js).\r\nPPS: I'll create a separate issue a issue if it is considered worthy enough or if it is a distraction to the issue of a runtime environment. "
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/278494902",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-278494902",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 278494902,
    "user": {
      "login": "sapioit",
      "id": 3173159,
      "avatar_url": "https://avatars3.githubusercontent.com/u/3173159?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sapioit",
      "html_url": "https://github.com/sapioit",
      "followers_url": "https://api.github.com/users/sapioit/followers",
      "following_url": "https://api.github.com/users/sapioit/following{/other_user}",
      "gists_url": "https://api.github.com/users/sapioit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sapioit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sapioit/subscriptions",
      "organizations_url": "https://api.github.com/users/sapioit/orgs",
      "repos_url": "https://api.github.com/users/sapioit/repos",
      "events_url": "https://api.github.com/users/sapioit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sapioit/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-08T23:18:22Z",
    "updated_at": "2017-02-08T23:18:22Z",
    "body": "I do think that a built-in runtime environment would make Electron apps much better. I think packing them should be just zipping the files and renaming the extension to `asar`, but that archive should have two folders, one called `asar`, with the content of the default runtime folder, and one called `enviroment` with files that should overwrite the default config.\r\n\r\nFor example, running a new app would copy the required version of Electron in a temp folder and move the runtime (contents of the `asar` folder) into the default files location, while the optional `enviroment` folder (with 3 subfolders, `windows`, `linux`, `macosx`) should contain files that would be pasted over the default folder, overwriting it's contents.\r\n\r\nThis way, we only need an app or something to assess the `.asar` extension to an app, and have that app access the folder with the downloaded versions of Electron (archived), copy (extract) them into a temp folder, and use the contents of the `.asar` to modify what's needed, then run the Electron instance from that temp folder and wait for it to die in order to force delete the temp folder. For starters, even only getting the default configuration to work with an archive with a custom extension on all supported operating systems would be leaps and bounds more than we already have. After that, we can worry about having a third folder, `config`, where to keep the current config settings, and maybe a `_config` folder inside it, for the default config settings (if we need them)."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/287543429",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-287543429",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 287543429,
    "user": {
      "login": "bryc",
      "id": 1408749,
      "avatar_url": "https://avatars2.githubusercontent.com/u/1408749?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bryc",
      "html_url": "https://github.com/bryc",
      "followers_url": "https://api.github.com/users/bryc/followers",
      "following_url": "https://api.github.com/users/bryc/following{/other_user}",
      "gists_url": "https://api.github.com/users/bryc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bryc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bryc/subscriptions",
      "organizations_url": "https://api.github.com/users/bryc/orgs",
      "repos_url": "https://api.github.com/users/bryc/repos",
      "events_url": "https://api.github.com/users/bryc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bryc/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-18T12:39:11Z",
    "updated_at": "2017-03-18T12:39:11Z",
    "body": "With Chrome packaged apps being phased out soon, people are going to be looking for alternatives. A runtime would be great for those minor projects that aren't always going to have builds/releases available. Since apps are made with web tech just like Chrome apps, it'd be valuable for a user to simply run the app from source. I can't justify porting countless minor projects to Electron if the only way a user can run them is to download a large binary release for each individual script or app, and users cannot take advantage of running the latest commit without building it or downloading Electron's IDE themselves."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/292617796",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-292617796",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 292617796,
    "user": {
      "login": "dezzeus",
      "id": 1730846,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1730846?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dezzeus",
      "html_url": "https://github.com/dezzeus",
      "followers_url": "https://api.github.com/users/dezzeus/followers",
      "following_url": "https://api.github.com/users/dezzeus/following{/other_user}",
      "gists_url": "https://api.github.com/users/dezzeus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dezzeus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dezzeus/subscriptions",
      "organizations_url": "https://api.github.com/users/dezzeus/orgs",
      "repos_url": "https://api.github.com/users/dezzeus/repos",
      "events_url": "https://api.github.com/users/dezzeus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dezzeus/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-07T18:36:08Z",
    "updated_at": "2017-04-07T18:36:08Z",
    "body": "Hi to all, even if I'm not in the JS-centric world, I recently had an idea quite similar to _Electron_ (which I happened to know, but not use for development) but with a broader audience; to put it in a very simple way: _just limit the web technologies to the GUI and provide APIs._\r\n\r\nSo keep goin' with a semantic-versioned shared library / runtime (built on top of _Blink_, _Skia_, etc; perhaps in – \"modern\" – _C++_) and let the developers choose the language by using bindings…\r\ne.g. you want _JS_, use _Node.JS_; you want _C++_, no problem; you want _Python_, with the standard _CPython_ should be possible; anything else ? maybe _SWIG_ can help. In (almost) any case, we win.\r\n\r\nOnce we have the shared (OS-dependent) library / runtime, you resolve the main issue and can elaborate whatever way you think it's best to deliver the rest (other than revolutionize/modernize the GUI-programming approach for the rest of us; a huge step forward!).\r\n\r\nSo the starting point should be the \"split\" (should even have a physics-related name, given the fact that you seems to really care to it) of the _Electron_ project… :)"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/292701747",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-292701747",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 292701747,
    "user": {
      "login": "sapioit",
      "id": 3173159,
      "avatar_url": "https://avatars3.githubusercontent.com/u/3173159?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sapioit",
      "html_url": "https://github.com/sapioit",
      "followers_url": "https://api.github.com/users/sapioit/followers",
      "following_url": "https://api.github.com/users/sapioit/following{/other_user}",
      "gists_url": "https://api.github.com/users/sapioit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sapioit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sapioit/subscriptions",
      "organizations_url": "https://api.github.com/users/sapioit/orgs",
      "repos_url": "https://api.github.com/users/sapioit/repos",
      "events_url": "https://api.github.com/users/sapioit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sapioit/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-08T07:44:40Z",
    "updated_at": "2017-04-08T07:44:40Z",
    "body": "We can't even get done an addon to Electron, but I think that will not have that much success, unless lots of advertising."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/292770840",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-292770840",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 292770840,
    "user": {
      "login": "CxRes",
      "id": 2706227,
      "avatar_url": "https://avatars1.githubusercontent.com/u/2706227?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CxRes",
      "html_url": "https://github.com/CxRes",
      "followers_url": "https://api.github.com/users/CxRes/followers",
      "following_url": "https://api.github.com/users/CxRes/following{/other_user}",
      "gists_url": "https://api.github.com/users/CxRes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CxRes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CxRes/subscriptions",
      "organizations_url": "https://api.github.com/users/CxRes/orgs",
      "repos_url": "https://api.github.com/users/CxRes/repos",
      "events_url": "https://api.github.com/users/CxRes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CxRes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-09T07:58:50Z",
    "updated_at": "2017-04-09T07:58:50Z",
    "body": "@dezzeus There was an effort on this lines before which fizzled out. Have a look at the [thrust runtime](http://www.github.com/breach/thrust) intended to host the [breach browser](http://www.github.com/breach)."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/299012618",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-299012618",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 299012618,
    "user": {
      "login": "eliot-akira",
      "id": 5352434,
      "avatar_url": "https://avatars2.githubusercontent.com/u/5352434?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/eliot-akira",
      "html_url": "https://github.com/eliot-akira",
      "followers_url": "https://api.github.com/users/eliot-akira/followers",
      "following_url": "https://api.github.com/users/eliot-akira/following{/other_user}",
      "gists_url": "https://api.github.com/users/eliot-akira/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/eliot-akira/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/eliot-akira/subscriptions",
      "organizations_url": "https://api.github.com/users/eliot-akira/orgs",
      "repos_url": "https://api.github.com/users/eliot-akira/repos",
      "events_url": "https://api.github.com/users/eliot-akira/events{/privacy}",
      "received_events_url": "https://api.github.com/users/eliot-akira/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-03T19:34:47Z",
    "updated_at": "2017-05-03T19:42:28Z",
    "body": "I read through this long and fascinating thread twice, as I'd love to see more momentum in this direction. Here is the last statement by @zcbenz, I believe is relevant still:\r\n\r\n> There is no technical obstacle on implementing this, the whole thing can just be an Electron app itself. But the problem is it is not easy to implement neither, taking all the details into account, I think _it requires a small team working full time on it_, I'm not sure whether it would ever happen.\r\n\r\n(Added emphasis) - How I interpret this is, if the solution is ever going to be built, it will depend on community effort and/or business needs of GitHub and other organizations with a stake in it.\r\n\r\n[A concise overview by @yan-foto](#issuecomment-222220657) looks like a sensible plan of approach, with clear goals/requirements. There's a [reference implementation/prototype called lepton](https://github.com/iamale/lepton) by @iamale, proposing a \"universal runtime version manager\" targeting Electron. [A comment](#issuecomment-157980607) by @jorangreef was intriguing, as he describes \"an app in production with a semver auto-update mechanism\", with differential update, deduplication (not sure if those two are the same) and compression. Many of the features he described seemed perfect for adapt/adopting.\r\n\r\nThese are definite steps of exploration and progress, and it gives me hope that production-worthy general solution(s) will be born from this process."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/299157198",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-299157198",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 299157198,
    "user": {
      "login": "sapioit",
      "id": 3173159,
      "avatar_url": "https://avatars3.githubusercontent.com/u/3173159?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sapioit",
      "html_url": "https://github.com/sapioit",
      "followers_url": "https://api.github.com/users/sapioit/followers",
      "following_url": "https://api.github.com/users/sapioit/following{/other_user}",
      "gists_url": "https://api.github.com/users/sapioit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sapioit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sapioit/subscriptions",
      "organizations_url": "https://api.github.com/users/sapioit/orgs",
      "repos_url": "https://api.github.com/users/sapioit/repos",
      "events_url": "https://api.github.com/users/sapioit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sapioit/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-04T11:15:51Z",
    "updated_at": "2017-05-04T11:16:05Z",
    "body": "It's nice to see there are still people with faith in humanity. \r\n\r\nThe only thing keeping this from becoming a product is the lack of immediate business opportunities opened by the making of this product (concept)."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/299162044",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-299162044",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 299162044,
    "user": {
      "login": "jorangreef",
      "id": 413206,
      "avatar_url": "https://avatars3.githubusercontent.com/u/413206?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorangreef",
      "html_url": "https://github.com/jorangreef",
      "followers_url": "https://api.github.com/users/jorangreef/followers",
      "following_url": "https://api.github.com/users/jorangreef/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorangreef/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorangreef/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorangreef/subscriptions",
      "organizations_url": "https://api.github.com/users/jorangreef/orgs",
      "repos_url": "https://api.github.com/users/jorangreef/repos",
      "events_url": "https://api.github.com/users/jorangreef/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorangreef/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-04T11:42:50Z",
    "updated_at": "2017-05-05T06:03:13Z",
    "body": "@eliot-akira yes, that's what it is. The code I have written does per-file content-based deduplication (variable-sized chunks) within a file to minimize downloads when only a few bytes within a file change. It also updates only those files which change between versions and updates to the application as a whole are atomic in the face of any errors. Either the new version will launch or the old version will remain in place.\r\n\r\nI would like to open-source the code, and there are some things I would still need to code for the overall idea. It would be great if multiple Electron apps could share a single auto-updater supervisor process (with a local shared immutable cache for deduplication across multiple independent Electron apps).\r\n\r\nThe goal of this whole approach would be to minimize overall download bandwidth required to install and update Electron apps, while keeping Electron apps completely isolated from one another (multiple apps would have their own Electron binaries). A non-goal would be to minimize disk footprint.\r\n\r\nThe first Electron app install would need to be downloaded in full, but subsequent Electron app installs would benefit from the local shared immutable cache."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/299186868",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-299186868",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 299186868,
    "user": {
      "login": "sapioit",
      "id": 3173159,
      "avatar_url": "https://avatars3.githubusercontent.com/u/3173159?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sapioit",
      "html_url": "https://github.com/sapioit",
      "followers_url": "https://api.github.com/users/sapioit/followers",
      "following_url": "https://api.github.com/users/sapioit/following{/other_user}",
      "gists_url": "https://api.github.com/users/sapioit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sapioit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sapioit/subscriptions",
      "organizations_url": "https://api.github.com/users/sapioit/orgs",
      "repos_url": "https://api.github.com/users/sapioit/repos",
      "events_url": "https://api.github.com/users/sapioit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sapioit/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-04T13:36:04Z",
    "updated_at": "2017-05-04T13:36:23Z",
    "body": "Since it's come to auto-update, I have to bring in the versioning problem, and the fact that multiple versioning systems seem to be using different numbers of digits for versioning. I, for one, am using [Explicit Versioning](https://github.com/exadra37-versioning/explicit-versioning)."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/299251198",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-299251198",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 299251198,
    "user": {
      "login": "iamale",
      "id": 1298948,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1298948?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/iamale",
      "html_url": "https://github.com/iamale",
      "followers_url": "https://api.github.com/users/iamale/followers",
      "following_url": "https://api.github.com/users/iamale/following{/other_user}",
      "gists_url": "https://api.github.com/users/iamale/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/iamale/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iamale/subscriptions",
      "organizations_url": "https://api.github.com/users/iamale/orgs",
      "repos_url": "https://api.github.com/users/iamale/repos",
      "events_url": "https://api.github.com/users/iamale/events{/privacy}",
      "received_events_url": "https://api.github.com/users/iamale/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-04T17:17:40Z",
    "updated_at": "2017-05-04T17:18:55Z",
    "body": "We have two types of things that need to be updated here:\r\n- Electron itself, which uses  [Electron Versioning](https://electron.atom.io/docs/tutorial/electron-versioning/#electron-versioning-1) and\r\n- Apps, for which we don't really need to care about SemVer or anything as they generally do not have an API (unless they utilize some kind of addon system maybe).\r\n\r\nAlthough if we do need to support several versioning systems, maybe we could have some setting in `package.json`, like `\"breakingVersionComponents\": 1` for semver and `2` for Explicit Versioning or Electron Versioning?\r\n\r\n(Another option would be to add another separator in version, like `1.3:3.7` which would separate breaking and non-breaking parts. Semver then becomes `x:y.z` and Electron Versioning `x.y:z`. This would break every single tool out there, though, I believe.)"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/299254359",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-299254359",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 299254359,
    "user": {
      "login": "Jop-V",
      "id": 2750434,
      "avatar_url": "https://avatars2.githubusercontent.com/u/2750434?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Jop-V",
      "html_url": "https://github.com/Jop-V",
      "followers_url": "https://api.github.com/users/Jop-V/followers",
      "following_url": "https://api.github.com/users/Jop-V/following{/other_user}",
      "gists_url": "https://api.github.com/users/Jop-V/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Jop-V/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Jop-V/subscriptions",
      "organizations_url": "https://api.github.com/users/Jop-V/orgs",
      "repos_url": "https://api.github.com/users/Jop-V/repos",
      "events_url": "https://api.github.com/users/Jop-V/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Jop-V/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-04T17:30:13Z",
    "updated_at": "2017-05-04T17:30:13Z",
    "body": "@jorangreef If every app still has its own Electron binary, this would not fix the problem of excess RAM usage when having multiple Electron apps open."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/299257634",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-299257634",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 299257634,
    "user": {
      "login": "eliot-akira",
      "id": 5352434,
      "avatar_url": "https://avatars2.githubusercontent.com/u/5352434?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/eliot-akira",
      "html_url": "https://github.com/eliot-akira",
      "followers_url": "https://api.github.com/users/eliot-akira/followers",
      "following_url": "https://api.github.com/users/eliot-akira/following{/other_user}",
      "gists_url": "https://api.github.com/users/eliot-akira/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/eliot-akira/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/eliot-akira/subscriptions",
      "organizations_url": "https://api.github.com/users/eliot-akira/orgs",
      "repos_url": "https://api.github.com/users/eliot-akira/repos",
      "events_url": "https://api.github.com/users/eliot-akira/events{/privacy}",
      "received_events_url": "https://api.github.com/users/eliot-akira/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-04T17:41:08Z",
    "updated_at": "2017-05-04T17:55:49Z",
    "body": "I noticed [an older comment](#issuecomment-78785758) by @joshuawarner32, which I'd overlooked. He mentions an already-working example, not a general-purpose solution yet, but the summary is:\r\n\r\n```\r\n- Deploy .asar.gz files for several different apps on a server\r\n- Distribute a single build of atom-shell to users, which doesn't bundle any code for specific apps\r\n- On app startup, download the appropriate .asar.gz file (if it's not there, or there's a more recent one on the server). Extract it and run the contained app.\r\n- Our atom-shell build accepts a --app argument to specify which app to download/run\r\n```\r\n\r\nAlong with @jorangreef's example (thank you for the further explanation - edit: oh, I didn't realize each app has its own Electron binary, which is a different model than I thought), I see that people are already building their own specific solutions to the problem of a shared runtime - which also provide features of *an app launcher/manager* of some kind. It would be great to see some convergence, to break out some of these features mentioned into general-purpose modules.\r\n\r\nI wonder if there are existing, non-Electron-specific modules that could be leveraged, like the download mechanism: runtime server, versioning, differential updates. Seems a bit daunting to build it all from scratch, if others have \"solved\" some of these areas already. @iamale, thanks for your work on [Lepton](https://github.com/iamale/lepton), in my eyes this is a concrete implementation in the direction of a solution."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/299261004",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-299261004",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 299261004,
    "user": {
      "login": "iamale",
      "id": 1298948,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1298948?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/iamale",
      "html_url": "https://github.com/iamale",
      "followers_url": "https://api.github.com/users/iamale/followers",
      "following_url": "https://api.github.com/users/iamale/following{/other_user}",
      "gists_url": "https://api.github.com/users/iamale/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/iamale/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iamale/subscriptions",
      "organizations_url": "https://api.github.com/users/iamale/orgs",
      "repos_url": "https://api.github.com/users/iamale/repos",
      "events_url": "https://api.github.com/users/iamale/events{/privacy}",
      "received_events_url": "https://api.github.com/users/iamale/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-04T17:53:46Z",
    "updated_at": "2017-05-04T17:53:46Z",
    "body": "Another idea: just publish apps in npm, and make a special npm wrapper that can install and run them. It would be really easy to deploy then and probably easy to use (dependino on quality of the wrapper though) as well. What do you think guys?"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/299265559",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-299265559",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 299265559,
    "user": {
      "login": "YurySolovyov",
      "id": 2168518,
      "avatar_url": "https://avatars3.githubusercontent.com/u/2168518?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/YurySolovyov",
      "html_url": "https://github.com/YurySolovyov",
      "followers_url": "https://api.github.com/users/YurySolovyov/followers",
      "following_url": "https://api.github.com/users/YurySolovyov/following{/other_user}",
      "gists_url": "https://api.github.com/users/YurySolovyov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/YurySolovyov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/YurySolovyov/subscriptions",
      "organizations_url": "https://api.github.com/users/YurySolovyov/orgs",
      "repos_url": "https://api.github.com/users/YurySolovyov/repos",
      "events_url": "https://api.github.com/users/YurySolovyov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/YurySolovyov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-04T18:11:00Z",
    "updated_at": "2017-05-04T18:11:00Z",
    "body": "For oss projects, we could use npm as hosting, for closed source ones, we need to be able to point package manager to .asar file to download, and maybe some more metadata. The question is, what this kind manager will look like (and called)\r\n\r\nAlso, I wonder if we really need a separate command to install apps, maybe just \r\n`electron install atom` would be enough?"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/299275774",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-299275774",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 299275774,
    "user": {
      "login": "zeke",
      "id": 2289,
      "avatar_url": "https://avatars2.githubusercontent.com/u/2289?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zeke",
      "html_url": "https://github.com/zeke",
      "followers_url": "https://api.github.com/users/zeke/followers",
      "following_url": "https://api.github.com/users/zeke/following{/other_user}",
      "gists_url": "https://api.github.com/users/zeke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zeke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zeke/subscriptions",
      "organizations_url": "https://api.github.com/users/zeke/orgs",
      "repos_url": "https://api.github.com/users/zeke/repos",
      "events_url": "https://api.github.com/users/zeke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zeke/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2017-05-04T18:50:11Z",
    "updated_at": "2017-05-04T18:50:11Z",
    "body": "Just saw this on Node Weekly:\r\n\r\n> Electrino is an experimental featherweight alternative to the popular and powerful Electron. It implements a minuscule portion of the APIs available in Electron, but the output app size is much smaller.\r\n\r\nhttps://medium.com/@pauli/put-your-electron-app-on-a-diet-with-electrino-c7ffdf1d6297\r\n\r\nhttps://github.com/pojala/electrino"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/299283168",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-299283168",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 299283168,
    "user": {
      "login": "iamale",
      "id": 1298948,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1298948?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/iamale",
      "html_url": "https://github.com/iamale",
      "followers_url": "https://api.github.com/users/iamale/followers",
      "following_url": "https://api.github.com/users/iamale/following{/other_user}",
      "gists_url": "https://api.github.com/users/iamale/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/iamale/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iamale/subscriptions",
      "organizations_url": "https://api.github.com/users/iamale/orgs",
      "repos_url": "https://api.github.com/users/iamale/repos",
      "events_url": "https://api.github.com/users/iamale/events{/privacy}",
      "received_events_url": "https://api.github.com/users/iamale/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-04T19:19:24Z",
    "updated_at": "2017-05-04T19:19:24Z",
    "body": "@YurySolovyov Closed source projects should have no problem with being published in npm as well — there are a few Node.js ones out there already, i. e. [enclose](https://www.npmjs.com/package/enclose). (Technically, it isn't in npm, just a loader, but I anyway I can't see how sideloading .asar's would help as they still can be unpacked.)"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/299283832",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-299283832",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 299283832,
    "user": {
      "login": "YurySolovyov",
      "id": 2168518,
      "avatar_url": "https://avatars3.githubusercontent.com/u/2168518?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/YurySolovyov",
      "html_url": "https://github.com/YurySolovyov",
      "followers_url": "https://api.github.com/users/YurySolovyov/followers",
      "following_url": "https://api.github.com/users/YurySolovyov/following{/other_user}",
      "gists_url": "https://api.github.com/users/YurySolovyov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/YurySolovyov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/YurySolovyov/subscriptions",
      "organizations_url": "https://api.github.com/users/YurySolovyov/orgs",
      "repos_url": "https://api.github.com/users/YurySolovyov/repos",
      "events_url": "https://api.github.com/users/YurySolovyov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/YurySolovyov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-04T19:21:59Z",
    "updated_at": "2017-05-04T19:21:59Z",
    "body": "I was just trying to think how can we re-use as much of existing ecosystem as possible."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/299297939",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-299297939",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 299297939,
    "user": {
      "login": "sapioit",
      "id": 3173159,
      "avatar_url": "https://avatars3.githubusercontent.com/u/3173159?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sapioit",
      "html_url": "https://github.com/sapioit",
      "followers_url": "https://api.github.com/users/sapioit/followers",
      "following_url": "https://api.github.com/users/sapioit/following{/other_user}",
      "gists_url": "https://api.github.com/users/sapioit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sapioit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sapioit/subscriptions",
      "organizations_url": "https://api.github.com/users/sapioit/orgs",
      "repos_url": "https://api.github.com/users/sapioit/repos",
      "events_url": "https://api.github.com/users/sapioit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sapioit/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-04T20:21:21Z",
    "updated_at": "2017-05-04T20:21:21Z",
    "body": "Not sure we want to..."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/299390645",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-299390645",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 299390645,
    "user": {
      "login": "jorangreef",
      "id": 413206,
      "avatar_url": "https://avatars3.githubusercontent.com/u/413206?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorangreef",
      "html_url": "https://github.com/jorangreef",
      "followers_url": "https://api.github.com/users/jorangreef/followers",
      "following_url": "https://api.github.com/users/jorangreef/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorangreef/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorangreef/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorangreef/subscriptions",
      "organizations_url": "https://api.github.com/users/jorangreef/orgs",
      "repos_url": "https://api.github.com/users/jorangreef/repos",
      "events_url": "https://api.github.com/users/jorangreef/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorangreef/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-05T06:11:20Z",
    "updated_at": "2017-05-05T06:17:21Z",
    "body": "> @jorangreef If every app still has its own Electron binary, this would not fix the problem of excess RAM usage when having multiple Electron apps open.\r\n\r\n@Jop-V No, it wouldn't. I don't want to conflate things and end up with a monster. The idea is to have a great installer/auto-updater that solves most of the problems in the comment that opened this issue: https://github.com/electron/electron/issues/673#issue-44580957\r\n\r\nThe problem is not so much having multiple binaries on disk, but the network impact on a user having to download and auto-update multiple copies of the same binary.\r\n\r\nSolving memory usage is definitely worth doing though. I think there are a variety of ways to do that but they don't necessarily need to be bundled with a deduplicating installer/auto-updater."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/299391046",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-299391046",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 299391046,
    "user": {
      "login": "jorangreef",
      "id": 413206,
      "avatar_url": "https://avatars3.githubusercontent.com/u/413206?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorangreef",
      "html_url": "https://github.com/jorangreef",
      "followers_url": "https://api.github.com/users/jorangreef/followers",
      "following_url": "https://api.github.com/users/jorangreef/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorangreef/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorangreef/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorangreef/subscriptions",
      "organizations_url": "https://api.github.com/users/jorangreef/orgs",
      "repos_url": "https://api.github.com/users/jorangreef/repos",
      "events_url": "https://api.github.com/users/jorangreef/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorangreef/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-05T06:15:15Z",
    "updated_at": "2017-05-05T06:16:02Z",
    "body": "If disk footprint is also an issue, that can be addressed through hardlinks on systems which support it, although that would start to infringe on the idea of isolation between apps (e.g. if one app decides to write to a hardlink shared with something else).\r\n\r\nAlternatively, at least on macOS in the medium term, APFS will copy files by reference, with transparent deduplication under the hood, minimizing disk footprint. This would be better than hardlinks since it would keep isolation intact (copy-on-write)."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/299403483",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-299403483",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 299403483,
    "user": {
      "login": "iamale",
      "id": 1298948,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1298948?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/iamale",
      "html_url": "https://github.com/iamale",
      "followers_url": "https://api.github.com/users/iamale/followers",
      "following_url": "https://api.github.com/users/iamale/following{/other_user}",
      "gists_url": "https://api.github.com/users/iamale/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/iamale/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iamale/subscriptions",
      "organizations_url": "https://api.github.com/users/iamale/orgs",
      "repos_url": "https://api.github.com/users/iamale/repos",
      "events_url": "https://api.github.com/users/iamale/events{/privacy}",
      "received_events_url": "https://api.github.com/users/iamale/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-05T07:49:51Z",
    "updated_at": "2017-05-05T07:49:51Z",
    "body": "@jorangreef What's the point of using separate Electron binaries for apps? What kind of isolation are you talking about? Sorry if that's a stupid question, but I just don't get it."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/299416966",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-299416966",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 299416966,
    "user": {
      "login": "jorangreef",
      "id": 413206,
      "avatar_url": "https://avatars3.githubusercontent.com/u/413206?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorangreef",
      "html_url": "https://github.com/jorangreef",
      "followers_url": "https://api.github.com/users/jorangreef/followers",
      "following_url": "https://api.github.com/users/jorangreef/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorangreef/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorangreef/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorangreef/subscriptions",
      "organizations_url": "https://api.github.com/users/jorangreef/orgs",
      "repos_url": "https://api.github.com/users/jorangreef/repos",
      "events_url": "https://api.github.com/users/jorangreef/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorangreef/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-05T09:05:40Z",
    "updated_at": "2017-05-05T09:05:40Z",
    "body": "@iamale Some apps may target different official versions of Electron, or may distribute a pre-built Electron compiled from modified sources. This approach would work with them all. Even with major differences in binaries (as opposed to JS and asset changes), the deduplication would eliminate 70% or more of download requirements, so apps targeting different binaries would still benefit.\r\n\r\nWith this approach, it's even possible to ship any kind of package (any set of files and directories defined by a JSON manifest), not necessarily only Electron apps. It may as well be a Python app. It's agnostic to any choices the developer wants to make towards how they structure or package their app (files vs asar etc).\r\n\r\nThe main idea is that the ecosystem benefits from very small install/update deltas as more and more apps use the same installer/auto-updater. These days, every app is running their own supervisory auto-updater and it's unnecessary."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/299425083",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-299425083",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 299425083,
    "user": {
      "login": "iamale",
      "id": 1298948,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1298948?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/iamale",
      "html_url": "https://github.com/iamale",
      "followers_url": "https://api.github.com/users/iamale/followers",
      "following_url": "https://api.github.com/users/iamale/following{/other_user}",
      "gists_url": "https://api.github.com/users/iamale/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/iamale/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iamale/subscriptions",
      "organizations_url": "https://api.github.com/users/iamale/orgs",
      "repos_url": "https://api.github.com/users/iamale/repos",
      "events_url": "https://api.github.com/users/iamale/events{/privacy}",
      "received_events_url": "https://api.github.com/users/iamale/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-05T09:49:15Z",
    "updated_at": "2017-05-05T09:49:15Z",
    "body": "@jorangreef Thank you! I guess it's much like classic APT/RPM repositories, just more “smart” (no need to declare your dependencies or whatever)."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/299445672",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-299445672",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 299445672,
    "user": {
      "login": "sapioit",
      "id": 3173159,
      "avatar_url": "https://avatars3.githubusercontent.com/u/3173159?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sapioit",
      "html_url": "https://github.com/sapioit",
      "followers_url": "https://api.github.com/users/sapioit/followers",
      "following_url": "https://api.github.com/users/sapioit/following{/other_user}",
      "gists_url": "https://api.github.com/users/sapioit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sapioit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sapioit/subscriptions",
      "organizations_url": "https://api.github.com/users/sapioit/orgs",
      "repos_url": "https://api.github.com/users/sapioit/repos",
      "events_url": "https://api.github.com/users/sapioit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sapioit/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-05T11:54:39Z",
    "updated_at": "2017-05-05T11:54:54Z",
    "body": ">The question is, what this kind manager will look like (and called)\r\n\r\nWhat about **`Minifitron`** (minified electron)?\r\n\r\nI think the archive file (i.e. `.asar`) shall contain the contents of the folder where the binary of electron is, so we can add or replace the files that deviate from the standard. We shall have each version in a folder or archive and copy it to a new temporary folder for the time it is run.\r\n\r\nAnd there should be an option to have the apps installed or minified, the instalation would leave them as a new instance of electron, while the minified would use md5 to delete the files that have not been changed by the unarchiving of the `.asar` (or what we would be using) and archive that back and replace the original file, as a updated state of the app we used."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/299491852",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-299491852",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 299491852,
    "user": {
      "login": "eliot-akira",
      "id": 5352434,
      "avatar_url": "https://avatars2.githubusercontent.com/u/5352434?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/eliot-akira",
      "html_url": "https://github.com/eliot-akira",
      "followers_url": "https://api.github.com/users/eliot-akira/followers",
      "following_url": "https://api.github.com/users/eliot-akira/following{/other_user}",
      "gists_url": "https://api.github.com/users/eliot-akira/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/eliot-akira/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/eliot-akira/subscriptions",
      "organizations_url": "https://api.github.com/users/eliot-akira/orgs",
      "repos_url": "https://api.github.com/users/eliot-akira/repos",
      "events_url": "https://api.github.com/users/eliot-akira/events{/privacy}",
      "received_events_url": "https://api.github.com/users/eliot-akira/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-05T15:12:30Z",
    "updated_at": "2017-05-07T13:59:33Z",
    "body": "Just to throw in another idea: what if each Electron app *did* contain their own copies of runtimes, but upon launch, they could check if there is an already-running instance of Electron (and its version) - if it's compatible (within semver range, etc.), the app could communicate with it and use that same instance; if not compatible, then the app can start its own instance of Electron. That would seem to address the issue of reducing memory foot-print.\r\n\r\n(Then again, by the time the app is launched, I guess there will already be multiple instances of the runtime anyway..so might not be logical..)"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/299830676",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-299830676",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 299830676,
    "user": {
      "login": "jkurei",
      "id": 1428611,
      "avatar_url": "https://avatars2.githubusercontent.com/u/1428611?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jkurei",
      "html_url": "https://github.com/jkurei",
      "followers_url": "https://api.github.com/users/jkurei/followers",
      "following_url": "https://api.github.com/users/jkurei/following{/other_user}",
      "gists_url": "https://api.github.com/users/jkurei/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jkurei/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jkurei/subscriptions",
      "organizations_url": "https://api.github.com/users/jkurei/orgs",
      "repos_url": "https://api.github.com/users/jkurei/repos",
      "events_url": "https://api.github.com/users/jkurei/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jkurei/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-08T10:26:07Z",
    "updated_at": "2017-05-08T11:53:50Z",
    "body": "@eliot-akira Had a very similar idea while reading this thread.\r\n\r\n> (Then again, by the time the app is launched, I guess there will already be multiple instances of the runtime anyway..so might not be logical..)\r\n\r\nWell, it could load just enough to check this, and after it sees there is not an available \"electron mate\" to share runtime with, load the rest.\r\n\r\nThis would create a lot of security concerns though. An evil app could offer a modified version of the runtime to others, and access their data. May be it could use a shared memory segment, make it read-only, and \"user\" apps (that use the runtime of a previously launched app) could checksum the runtime, but developing these for all the targeted OSes might be a nightmare (I don't even know if this exists in Windows; I assume it must).\r\n\r\nIf only for curiosity's sake, is this non sensical? Would it be as much, or may be much more work than a separate shared runtime? Does it create other additional issues?\r\n\r\nADDED LATER: This might be a far shot, but there exists technologies to deduplicate identical pages on RAM; they're used mostly in virtualization environments and hypervisors. This is the first thing I thought about and ran to check if today's OSes use this, and then may be there would be a way to set electron in a way that this feature can be taken advantage of, but apparently not. "
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/299852292",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-299852292",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 299852292,
    "user": {
      "login": "Jop-V",
      "id": 2750434,
      "avatar_url": "https://avatars2.githubusercontent.com/u/2750434?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Jop-V",
      "html_url": "https://github.com/Jop-V",
      "followers_url": "https://api.github.com/users/Jop-V/followers",
      "following_url": "https://api.github.com/users/Jop-V/following{/other_user}",
      "gists_url": "https://api.github.com/users/Jop-V/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Jop-V/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Jop-V/subscriptions",
      "organizations_url": "https://api.github.com/users/Jop-V/orgs",
      "repos_url": "https://api.github.com/users/Jop-V/repos",
      "events_url": "https://api.github.com/users/Jop-V/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Jop-V/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-08T12:23:22Z",
    "updated_at": "2017-05-08T12:30:22Z",
    "body": "@jorangreef If a developer modified the Electron binary, shouldn't they just create a pull request? "
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/299857248",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-299857248",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 299857248,
    "user": {
      "login": "iamale",
      "id": 1298948,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1298948?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/iamale",
      "html_url": "https://github.com/iamale",
      "followers_url": "https://api.github.com/users/iamale/followers",
      "following_url": "https://api.github.com/users/iamale/following{/other_user}",
      "gists_url": "https://api.github.com/users/iamale/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/iamale/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iamale/subscriptions",
      "organizations_url": "https://api.github.com/users/iamale/orgs",
      "repos_url": "https://api.github.com/users/iamale/repos",
      "events_url": "https://api.github.com/users/iamale/events{/privacy}",
      "received_events_url": "https://api.github.com/users/iamale/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-08T12:48:11Z",
    "updated_at": "2017-05-08T12:48:11Z",
    "body": "@Jop-V They can, but they can maintain their own fork as well. They may even not publish sources if they don't want — MIT license puts no obligations on them."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/299954717",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-299954717",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 299954717,
    "user": {
      "login": "eliot-akira",
      "id": 5352434,
      "avatar_url": "https://avatars2.githubusercontent.com/u/5352434?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/eliot-akira",
      "html_url": "https://github.com/eliot-akira",
      "followers_url": "https://api.github.com/users/eliot-akira/followers",
      "following_url": "https://api.github.com/users/eliot-akira/following{/other_user}",
      "gists_url": "https://api.github.com/users/eliot-akira/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/eliot-akira/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/eliot-akira/subscriptions",
      "organizations_url": "https://api.github.com/users/eliot-akira/orgs",
      "repos_url": "https://api.github.com/users/eliot-akira/repos",
      "events_url": "https://api.github.com/users/eliot-akira/events{/privacy}",
      "received_events_url": "https://api.github.com/users/eliot-akira/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-08T18:43:10Z",
    "updated_at": "2017-05-08T19:01:14Z",
    "body": "@jkurei To explore the idea further, I imagine a couple ways that may work:\r\n\r\n1) A thin native wrapper around Electron or the app itself, that would be the \"launcher\". It checks for an already-running instance of Electron and its version: if compatible, hands over the rest of launch process to that instance and exit; if not, continue launching its own instance of Electron.\r\n\r\n2) A JavaScript library that apps themselves could import into the main process, as a launcher. It could implement a protocol similar to above: broadcast the existence of an Electron instance, and a way for other apps (using the same library) to find and communicate with it - maybe via network port..?"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/299965004",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-299965004",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 299965004,
    "user": {
      "login": "iamale",
      "id": 1298948,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1298948?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/iamale",
      "html_url": "https://github.com/iamale",
      "followers_url": "https://api.github.com/users/iamale/followers",
      "following_url": "https://api.github.com/users/iamale/following{/other_user}",
      "gists_url": "https://api.github.com/users/iamale/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/iamale/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iamale/subscriptions",
      "organizations_url": "https://api.github.com/users/iamale/orgs",
      "repos_url": "https://api.github.com/users/iamale/repos",
      "events_url": "https://api.github.com/users/iamale/events{/privacy}",
      "received_events_url": "https://api.github.com/users/iamale/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-08T19:23:01Z",
    "updated_at": "2017-05-08T19:23:01Z",
    "body": "@eliot-akira I think, by the way, that there is already some kind of primitive \"protocol\" you're talking about; it's that thing behind `app.makeSingleInstance` that somehow detects already running Electron processes and if they are the same app or not (probably by getting full executable path)."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/300007185",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-300007185",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 300007185,
    "user": {
      "login": "eliot-akira",
      "id": 5352434,
      "avatar_url": "https://avatars2.githubusercontent.com/u/5352434?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/eliot-akira",
      "html_url": "https://github.com/eliot-akira",
      "followers_url": "https://api.github.com/users/eliot-akira/followers",
      "following_url": "https://api.github.com/users/eliot-akira/following{/other_user}",
      "gists_url": "https://api.github.com/users/eliot-akira/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/eliot-akira/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/eliot-akira/subscriptions",
      "organizations_url": "https://api.github.com/users/eliot-akira/orgs",
      "repos_url": "https://api.github.com/users/eliot-akira/repos",
      "events_url": "https://api.github.com/users/eliot-akira/events{/privacy}",
      "received_events_url": "https://api.github.com/users/eliot-akira/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-08T22:19:47Z",
    "updated_at": "2017-05-08T22:31:50Z",
    "body": "@iamale I see, the method uses Chromium's native `ProcessSingleton` class, to register the current app directory (as a unique identifier?). Yes, I was picturing something like this, to be initialized before `app.on('ready')`. So, instead of just checking for existing instance of that particular app, it could check for any instance of Electron - then \"hand over the launch process\" if compatible.\r\n\r\nFor another angle, I found a module called [`node-ipc`](https://github.com/RIAEvangelist/node-ipc) that can communicate between separate Node.js processes. Maybe that could be used to manage the launch process purely on JS layer."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/300040475",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-300040475",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 300040475,
    "user": {
      "login": "eliot-akira",
      "id": 5352434,
      "avatar_url": "https://avatars2.githubusercontent.com/u/5352434?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/eliot-akira",
      "html_url": "https://github.com/eliot-akira",
      "followers_url": "https://api.github.com/users/eliot-akira/followers",
      "following_url": "https://api.github.com/users/eliot-akira/following{/other_user}",
      "gists_url": "https://api.github.com/users/eliot-akira/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/eliot-akira/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/eliot-akira/subscriptions",
      "organizations_url": "https://api.github.com/users/eliot-akira/orgs",
      "repos_url": "https://api.github.com/users/eliot-akira/repos",
      "events_url": "https://api.github.com/users/eliot-akira/events{/privacy}",
      "received_events_url": "https://api.github.com/users/eliot-akira/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-09T02:03:08Z",
    "updated_at": "2017-05-09T05:04:21Z",
    "body": "Here's a basic example of sharing a single Electron instance among multiple apps, using `node-ipc` for inter-process communication: https://github.com/eliot-akira/singletron-example.\r\n\r\nThe IPC hub is [its own module](https://github.com/eliot-akira/singletron), a thin wrapper around `node-ipc`. Its initialization is in the main process, `main.js` [at the bottom](https://github.com/eliot-akira/singletron-example/blob/master/main.js#L55).\r\n\r\nWhen started, the app will first attempt to connect with an existing Electron instance. If there's none, it will start a \"server\" that listens for inter-process requests. Any subsequent instances of the app will connect with the first instance, receive its \"config\" (versions of Chrome, Node, Electron), and is able to exchange messages, for example, to request a new window for itself.\r\n\r\nIt's a naive implementation to start with, but what I like about the approach is that it's up to the app to handle how the server/clients should negotiate: checking compatibility, whether to open new windows, pass other config, etc."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/300082943",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-300082943",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 300082943,
    "user": {
      "login": "iamale",
      "id": 1298948,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1298948?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/iamale",
      "html_url": "https://github.com/iamale",
      "followers_url": "https://api.github.com/users/iamale/followers",
      "following_url": "https://api.github.com/users/iamale/following{/other_user}",
      "gists_url": "https://api.github.com/users/iamale/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/iamale/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iamale/subscriptions",
      "organizations_url": "https://api.github.com/users/iamale/orgs",
      "repos_url": "https://api.github.com/users/iamale/repos",
      "events_url": "https://api.github.com/users/iamale/events{/privacy}",
      "received_events_url": "https://api.github.com/users/iamale/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-09T07:23:28Z",
    "updated_at": "2017-05-09T07:23:28Z",
    "body": "@eliot-akira I think specifying a default server ID is a _really-really-bad_ idea at this point: if anybody starts using this for their own purposes, they'll likely just modify your example code for their own needs and break protocol (thus breaking other apps relying on this).\r\n\r\nApart from that, looks good and clean, thank you!\r\n\r\nRe: security concerns: Electron apps are already running with user's privileges, and if we place them in one process tree, they'll indeed have (or be able to gain) access to other Electron instances. However, I think if we're going to mitigate that, everybody being able to supply a patched Electron instance certainly won't help."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/300195528",
    "html_url": "https://github.com/electron/electron/issues/673#issuecomment-300195528",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/673",
    "id": 300195528,
    "user": {
      "login": "eliot-akira",
      "id": 5352434,
      "avatar_url": "https://avatars2.githubusercontent.com/u/5352434?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/eliot-akira",
      "html_url": "https://github.com/eliot-akira",
      "followers_url": "https://api.github.com/users/eliot-akira/followers",
      "following_url": "https://api.github.com/users/eliot-akira/following{/other_user}",
      "gists_url": "https://api.github.com/users/eliot-akira/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/eliot-akira/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/eliot-akira/subscriptions",
      "organizations_url": "https://api.github.com/users/eliot-akira/orgs",
      "repos_url": "https://api.github.com/users/eliot-akira/repos",
      "events_url": "https://api.github.com/users/eliot-akira/events{/privacy}",
      "received_events_url": "https://api.github.com/users/eliot-akira/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-09T15:09:36Z",
    "updated_at": "2017-05-09T15:24:42Z",
    "body": "@iamale Thank you for the feedback. I exposed the option to set server ID, in case some apps wanted to implement their own protocol, rather than a common one for all Electron apps. In fact, there's no such common protocol yet - so, at this point it's not practical for that purpose, for unknown apps to connect and hand over launch process. It was meant to be a proof-of-concept, so I will update the doc to mention that. I'll keep exploring how to make it more practical."
  }
]