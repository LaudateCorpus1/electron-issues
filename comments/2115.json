[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/118303704",
    "html_url": "https://github.com/electron/electron/issues/2115#issuecomment-118303704",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2115",
    "id": 118303704,
    "user": {
      "login": "steelbrain",
      "id": 4278113,
      "avatar_url": "https://avatars2.githubusercontent.com/u/4278113?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/steelbrain",
      "html_url": "https://github.com/steelbrain",
      "followers_url": "https://api.github.com/users/steelbrain/followers",
      "following_url": "https://api.github.com/users/steelbrain/following{/other_user}",
      "gists_url": "https://api.github.com/users/steelbrain/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/steelbrain/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/steelbrain/subscriptions",
      "organizations_url": "https://api.github.com/users/steelbrain/orgs",
      "repos_url": "https://api.github.com/users/steelbrain/repos",
      "events_url": "https://api.github.com/users/steelbrain/events{/privacy}",
      "received_events_url": "https://api.github.com/users/steelbrain/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-03T09:59:12Z",
    "updated_at": "2015-07-03T09:59:12Z",
    "body": "/cc @deepak1556 \n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/118357840",
    "html_url": "https://github.com/electron/electron/issues/2115#issuecomment-118357840",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2115",
    "id": 118357840,
    "user": {
      "login": "deepak1556",
      "id": 964386,
      "avatar_url": "https://avatars2.githubusercontent.com/u/964386?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/deepak1556",
      "html_url": "https://github.com/deepak1556",
      "followers_url": "https://api.github.com/users/deepak1556/followers",
      "following_url": "https://api.github.com/users/deepak1556/following{/other_user}",
      "gists_url": "https://api.github.com/users/deepak1556/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/deepak1556/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/deepak1556/subscriptions",
      "organizations_url": "https://api.github.com/users/deepak1556/orgs",
      "repos_url": "https://api.github.com/users/deepak1556/repos",
      "events_url": "https://api.github.com/users/deepak1556/events{/privacy}",
      "received_events_url": "https://api.github.com/users/deepak1556/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-03T13:56:40Z",
    "updated_at": "2015-07-03T13:56:40Z",
    "body": "Related https://github.com/atom/brightray/pull/119 wasnt sure of the design. `webContents.webRequest` would be better, we can proxy `chrome.*` if needed.\n\n/cc @zcbenz  @hokein  @paulcbetts \n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/122134116",
    "html_url": "https://github.com/electron/electron/issues/2115#issuecomment-122134116",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2115",
    "id": 122134116,
    "user": {
      "login": "Tribex",
      "id": 5861371,
      "avatar_url": "https://avatars3.githubusercontent.com/u/5861371?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Tribex",
      "html_url": "https://github.com/Tribex",
      "followers_url": "https://api.github.com/users/Tribex/followers",
      "following_url": "https://api.github.com/users/Tribex/following{/other_user}",
      "gists_url": "https://api.github.com/users/Tribex/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Tribex/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Tribex/subscriptions",
      "organizations_url": "https://api.github.com/users/Tribex/orgs",
      "repos_url": "https://api.github.com/users/Tribex/repos",
      "events_url": "https://api.github.com/users/Tribex/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Tribex/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-17T00:05:13Z",
    "updated_at": "2015-07-17T00:05:13Z",
    "body": "I too would find this incredibly useful. \n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/122156450",
    "html_url": "https://github.com/electron/electron/issues/2115#issuecomment-122156450",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2115",
    "id": 122156450,
    "user": {
      "login": "paulcbetts",
      "id": 1396,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1396?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulcbetts",
      "html_url": "https://github.com/paulcbetts",
      "followers_url": "https://api.github.com/users/paulcbetts/followers",
      "following_url": "https://api.github.com/users/paulcbetts/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulcbetts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulcbetts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulcbetts/subscriptions",
      "organizations_url": "https://api.github.com/users/paulcbetts/orgs",
      "repos_url": "https://api.github.com/users/paulcbetts/repos",
      "events_url": "https://api.github.com/users/paulcbetts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulcbetts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-17T03:02:15Z",
    "updated_at": "2015-07-17T03:03:06Z",
    "body": "I'm not super excited about this, we have both protocol overrides and Service Workers, I don't know that we need a 3rd independent API to capture and modify HTTP requests, and we've already set a precedent that we're not implementing the Chrome packaged API\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/122156676",
    "html_url": "https://github.com/electron/electron/issues/2115#issuecomment-122156676",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2115",
    "id": 122156676,
    "user": {
      "login": "steelbrain",
      "id": 4278113,
      "avatar_url": "https://avatars2.githubusercontent.com/u/4278113?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/steelbrain",
      "html_url": "https://github.com/steelbrain",
      "followers_url": "https://api.github.com/users/steelbrain/followers",
      "following_url": "https://api.github.com/users/steelbrain/following{/other_user}",
      "gists_url": "https://api.github.com/users/steelbrain/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/steelbrain/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/steelbrain/subscriptions",
      "organizations_url": "https://api.github.com/users/steelbrain/orgs",
      "repos_url": "https://api.github.com/users/steelbrain/repos",
      "events_url": "https://api.github.com/users/steelbrain/events{/privacy}",
      "received_events_url": "https://api.github.com/users/steelbrain/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-17T03:04:41Z",
    "updated_at": "2015-07-17T03:04:41Z",
    "body": "@paulcbetts Our protocol overrides aren't really complete, when we intercept the protocols it loses most of it's info like cookies, custom headers or post data too (maybe?).\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/122156736",
    "html_url": "https://github.com/electron/electron/issues/2115#issuecomment-122156736",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2115",
    "id": 122156736,
    "user": {
      "login": "steelbrain",
      "id": 4278113,
      "avatar_url": "https://avatars2.githubusercontent.com/u/4278113?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/steelbrain",
      "html_url": "https://github.com/steelbrain",
      "followers_url": "https://api.github.com/users/steelbrain/followers",
      "following_url": "https://api.github.com/users/steelbrain/following{/other_user}",
      "gists_url": "https://api.github.com/users/steelbrain/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/steelbrain/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/steelbrain/subscriptions",
      "organizations_url": "https://api.github.com/users/steelbrain/orgs",
      "repos_url": "https://api.github.com/users/steelbrain/repos",
      "events_url": "https://api.github.com/users/steelbrain/events{/privacy}",
      "received_events_url": "https://api.github.com/users/steelbrain/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-17T03:05:15Z",
    "updated_at": "2015-07-17T03:05:15Z",
    "body": "Also, we don't have any concept of Async protocol interception or stuff.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/122162158",
    "html_url": "https://github.com/electron/electron/issues/2115#issuecomment-122162158",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2115",
    "id": 122162158,
    "user": {
      "login": "paulcbetts",
      "id": 1396,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1396?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulcbetts",
      "html_url": "https://github.com/paulcbetts",
      "followers_url": "https://api.github.com/users/paulcbetts/followers",
      "following_url": "https://api.github.com/users/paulcbetts/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulcbetts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulcbetts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulcbetts/subscriptions",
      "organizations_url": "https://api.github.com/users/paulcbetts/orgs",
      "repos_url": "https://api.github.com/users/paulcbetts/repos",
      "events_url": "https://api.github.com/users/paulcbetts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulcbetts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-17T03:53:35Z",
    "updated_at": "2015-07-17T03:53:35Z",
    "body": "> Also, we don't have any concept of Async protocol interception or stuff.\n\nWe do now!\n\n> Our protocol overrides aren't really complete, when we intercept the protocols it loses most of it's info like cookies, custom headers or post data too (maybe?).\n\nSo let's just fix the bug, instead of burning down the world and adding a new API\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/122163536",
    "html_url": "https://github.com/electron/electron/issues/2115#issuecomment-122163536",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2115",
    "id": 122163536,
    "user": {
      "login": "steelbrain",
      "id": 4278113,
      "avatar_url": "https://avatars2.githubusercontent.com/u/4278113?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/steelbrain",
      "html_url": "https://github.com/steelbrain",
      "followers_url": "https://api.github.com/users/steelbrain/followers",
      "following_url": "https://api.github.com/users/steelbrain/following{/other_user}",
      "gists_url": "https://api.github.com/users/steelbrain/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/steelbrain/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/steelbrain/subscriptions",
      "organizations_url": "https://api.github.com/users/steelbrain/orgs",
      "repos_url": "https://api.github.com/users/steelbrain/repos",
      "events_url": "https://api.github.com/users/steelbrain/events{/privacy}",
      "received_events_url": "https://api.github.com/users/steelbrain/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-17T03:57:18Z",
    "updated_at": "2015-07-17T03:57:18Z",
    "body": "> We do now!\n\nSorry but I am unable to find it in the docs :) https://github.com/atom/electron/blob/master/docs/api/protocol.md\n\n> So let's just fix the bug, instead of burning down the world and adding a new API\n\nI agree that the existing protocol stuff is useful, but in our current API we would have to intercept protocols to know about the data flowing between them, You can't implement a download manager that automatically checks the headers of the requests and filters them based on that.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/122168492",
    "html_url": "https://github.com/electron/electron/issues/2115#issuecomment-122168492",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2115",
    "id": 122168492,
    "user": {
      "login": "Tribex",
      "id": 5861371,
      "avatar_url": "https://avatars3.githubusercontent.com/u/5861371?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Tribex",
      "html_url": "https://github.com/Tribex",
      "followers_url": "https://api.github.com/users/Tribex/followers",
      "following_url": "https://api.github.com/users/Tribex/following{/other_user}",
      "gists_url": "https://api.github.com/users/Tribex/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Tribex/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Tribex/subscriptions",
      "organizations_url": "https://api.github.com/users/Tribex/orgs",
      "repos_url": "https://api.github.com/users/Tribex/repos",
      "events_url": "https://api.github.com/users/Tribex/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Tribex/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-17T04:32:04Z",
    "updated_at": "2015-07-17T04:32:11Z",
    "body": "@paulcbetts I haven't done any tests yet, but I have a hunch that protocol overrides won't work inside of a webview/iframe. I'll check ASAP. That's my primary use-case, and I'd like to be able to access _all_ the information on the request, as @steelbrain said. If the current protocol system works with these, I'd be fine leaving this unimplemented. However, it does seem to be a weird way to monitor HTTP requests.\n\nSomething like `webContents.on('request', callback(data))` would feel much more natural.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/122169470",
    "html_url": "https://github.com/electron/electron/issues/2115#issuecomment-122169470",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2115",
    "id": 122169470,
    "user": {
      "login": "alexindigo",
      "id": 127063,
      "avatar_url": "https://avatars0.githubusercontent.com/u/127063?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexindigo",
      "html_url": "https://github.com/alexindigo",
      "followers_url": "https://api.github.com/users/alexindigo/followers",
      "following_url": "https://api.github.com/users/alexindigo/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexindigo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexindigo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexindigo/subscriptions",
      "organizations_url": "https://api.github.com/users/alexindigo/orgs",
      "repos_url": "https://api.github.com/users/alexindigo/repos",
      "events_url": "https://api.github.com/users/alexindigo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexindigo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-17T04:34:24Z",
    "updated_at": "2015-07-17T04:34:24Z",
    "body": "+1 `webview.on('request', callback)` and/or `webview.on('will-navigate', callback)` – with ability to cancel the whole thing.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/122170105",
    "html_url": "https://github.com/electron/electron/issues/2115#issuecomment-122170105",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2115",
    "id": 122170105,
    "user": {
      "login": "Tribex",
      "id": 5861371,
      "avatar_url": "https://avatars3.githubusercontent.com/u/5861371?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Tribex",
      "html_url": "https://github.com/Tribex",
      "followers_url": "https://api.github.com/users/Tribex/followers",
      "following_url": "https://api.github.com/users/Tribex/following{/other_user}",
      "gists_url": "https://api.github.com/users/Tribex/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Tribex/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Tribex/subscriptions",
      "organizations_url": "https://api.github.com/users/Tribex/orgs",
      "repos_url": "https://api.github.com/users/Tribex/repos",
      "events_url": "https://api.github.com/users/Tribex/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Tribex/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-17T04:36:46Z",
    "updated_at": "2015-07-17T04:37:09Z",
    "body": "@alexindigo Yes, this would be a potential use case, and in-fact, one of the main reasons why I'd be interested in this. (For example, see https://github.com/Nateowami/BackLoader) There would be no way to implement the meat of that Chrom(e/ium) extension in an electron-based program.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/122177432",
    "html_url": "https://github.com/electron/electron/issues/2115#issuecomment-122177432",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2115",
    "id": 122177432,
    "user": {
      "login": "Tribex",
      "id": 5861371,
      "avatar_url": "https://avatars3.githubusercontent.com/u/5861371?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Tribex",
      "html_url": "https://github.com/Tribex",
      "followers_url": "https://api.github.com/users/Tribex/followers",
      "following_url": "https://api.github.com/users/Tribex/following{/other_user}",
      "gists_url": "https://api.github.com/users/Tribex/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Tribex/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Tribex/subscriptions",
      "organizations_url": "https://api.github.com/users/Tribex/orgs",
      "repos_url": "https://api.github.com/users/Tribex/repos",
      "events_url": "https://api.github.com/users/Tribex/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Tribex/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-17T05:11:41Z",
    "updated_at": "2015-07-17T05:11:41Z",
    "body": "@paulcbetts, @Tribex Initial tests seem to indicate that the protocol methods do handle requests inside a BrowserWindow, but I cannot get them to be redirected to the default handlers. Anything returned from the handler, null, undefined, or otherwise, causes a segfault.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/122279164",
    "html_url": "https://github.com/electron/electron/issues/2115#issuecomment-122279164",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2115",
    "id": 122279164,
    "user": {
      "login": "alexindigo",
      "id": 127063,
      "avatar_url": "https://avatars0.githubusercontent.com/u/127063?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexindigo",
      "html_url": "https://github.com/alexindigo",
      "followers_url": "https://api.github.com/users/alexindigo/followers",
      "following_url": "https://api.github.com/users/alexindigo/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexindigo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexindigo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexindigo/subscriptions",
      "organizations_url": "https://api.github.com/users/alexindigo/orgs",
      "repos_url": "https://api.github.com/users/alexindigo/repos",
      "events_url": "https://api.github.com/users/alexindigo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexindigo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-17T13:49:53Z",
    "updated_at": "2015-07-17T13:49:53Z",
    "body": "My use case is to be able to show in webview pages from one domain (like my bank) and open other domains (if user ckicked links or other activity) in new window. But of course allowing original page to load external resources (CDN, analytics, ads).\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/122340282",
    "html_url": "https://github.com/electron/electron/issues/2115#issuecomment-122340282",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2115",
    "id": 122340282,
    "user": {
      "login": "paulcbetts",
      "id": 1396,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1396?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulcbetts",
      "html_url": "https://github.com/paulcbetts",
      "followers_url": "https://api.github.com/users/paulcbetts/followers",
      "following_url": "https://api.github.com/users/paulcbetts/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulcbetts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulcbetts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulcbetts/subscriptions",
      "organizations_url": "https://api.github.com/users/paulcbetts/orgs",
      "repos_url": "https://api.github.com/users/paulcbetts/repos",
      "events_url": "https://api.github.com/users/paulcbetts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulcbetts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-17T16:51:23Z",
    "updated_at": "2015-07-17T16:51:23Z",
    "body": ">  Initial tests seem to indicate that the protocol methods do handle requests inside a BrowserWindow, but I cannot get them to be redirected to the default handlers. Anything returned from the handler, null, undefined, or otherwise, causes a segfault.\n\nSo what I'm saying is not trying to assert that it works perfectly _now_, but that we should identify the reasons why it _doesn't_ work perfectly and fix them - I don't mean to say that these existing issues aren't legit\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/122443037",
    "html_url": "https://github.com/electron/electron/issues/2115#issuecomment-122443037",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2115",
    "id": 122443037,
    "user": {
      "login": "Tribex",
      "id": 5861371,
      "avatar_url": "https://avatars3.githubusercontent.com/u/5861371?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Tribex",
      "html_url": "https://github.com/Tribex",
      "followers_url": "https://api.github.com/users/Tribex/followers",
      "following_url": "https://api.github.com/users/Tribex/following{/other_user}",
      "gists_url": "https://api.github.com/users/Tribex/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Tribex/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Tribex/subscriptions",
      "organizations_url": "https://api.github.com/users/Tribex/orgs",
      "repos_url": "https://api.github.com/users/Tribex/repos",
      "events_url": "https://api.github.com/users/Tribex/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Tribex/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-17T23:18:22Z",
    "updated_at": "2015-07-17T23:18:22Z",
    "body": "@paulcbetts Yes, I understand that point, and it would probably be the best idea, but are you sure protocol handlers are the best way to implement features such as this? (Also, how do Service Workers factor in to this issue? Care to elaborate?)\n\nThanks!\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/149539432",
    "html_url": "https://github.com/electron/electron/issues/2115#issuecomment-149539432",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2115",
    "id": 149539432,
    "user": {
      "login": "sisyphsu",
      "id": 3376096,
      "avatar_url": "https://avatars0.githubusercontent.com/u/3376096?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sisyphsu",
      "html_url": "https://github.com/sisyphsu",
      "followers_url": "https://api.github.com/users/sisyphsu/followers",
      "following_url": "https://api.github.com/users/sisyphsu/following{/other_user}",
      "gists_url": "https://api.github.com/users/sisyphsu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sisyphsu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sisyphsu/subscriptions",
      "organizations_url": "https://api.github.com/users/sisyphsu/orgs",
      "repos_url": "https://api.github.com/users/sisyphsu/repos",
      "events_url": "https://api.github.com/users/sisyphsu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sisyphsu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-20T11:54:52Z",
    "updated_at": "2015-10-20T11:54:52Z",
    "body": "This is a interesting issues, I have been searching some way to proxy all http/https request in the <webview> for a long time, it torment me.\n\nBy now, I found some possible way(They will be work in the future):\n1. protocol: Doesn't work.\n2. webRequest: Electron doesn't support chrome.\\* api, and the \"webContents.webRequest\" doesn't exists by now.\n3. Service Worker: It need \"https\", if you want use it in \"file\", wait for https://github.com/atom/electron/pull/2852\n4. Proxy: You can start one http proxy on PORT, and set the command argument \"proxy-server\", but it sames that you cann't proxy&intercept \"https\" request.\n5. Webview#Event: Doesn't work.\n\nIf you are looking for some way to proxy http/https request, just stop here...\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/149540385",
    "html_url": "https://github.com/electron/electron/issues/2115#issuecomment-149540385",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2115",
    "id": 149540385,
    "user": {
      "login": "Tribex",
      "id": 5861371,
      "avatar_url": "https://avatars3.githubusercontent.com/u/5861371?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Tribex",
      "html_url": "https://github.com/Tribex",
      "followers_url": "https://api.github.com/users/Tribex/followers",
      "following_url": "https://api.github.com/users/Tribex/following{/other_user}",
      "gists_url": "https://api.github.com/users/Tribex/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Tribex/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Tribex/subscriptions",
      "organizations_url": "https://api.github.com/users/Tribex/orgs",
      "repos_url": "https://api.github.com/users/Tribex/repos",
      "events_url": "https://api.github.com/users/Tribex/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Tribex/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-20T11:57:17Z",
    "updated_at": "2015-10-20T11:57:17Z",
    "body": "Why doesn't protocol work?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/149546392",
    "html_url": "https://github.com/electron/electron/issues/2115#issuecomment-149546392",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2115",
    "id": 149546392,
    "user": {
      "login": "sisyphsu",
      "id": 3376096,
      "avatar_url": "https://avatars0.githubusercontent.com/u/3376096?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sisyphsu",
      "html_url": "https://github.com/sisyphsu",
      "followers_url": "https://api.github.com/users/sisyphsu/followers",
      "following_url": "https://api.github.com/users/sisyphsu/following{/other_user}",
      "gists_url": "https://api.github.com/users/sisyphsu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sisyphsu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sisyphsu/subscriptions",
      "organizations_url": "https://api.github.com/users/sisyphsu/orgs",
      "repos_url": "https://api.github.com/users/sisyphsu/repos",
      "events_url": "https://api.github.com/users/sisyphsu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sisyphsu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-20T12:13:58Z",
    "updated_at": "2015-10-20T12:13:58Z",
    "body": "@Tribex \nprotocol's callback only provide url, method, referer and session, i can not get the params, headers, cookies(maybe in session), and i don't know how to proxy response, and lack of document......\n\nIf I wrong, please teach me how to proxy request use protocol. :laughing: \n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/149720217",
    "html_url": "https://github.com/electron/electron/issues/2115#issuecomment-149720217",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2115",
    "id": 149720217,
    "user": {
      "login": "Tribex",
      "id": 5861371,
      "avatar_url": "https://avatars3.githubusercontent.com/u/5861371?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Tribex",
      "html_url": "https://github.com/Tribex",
      "followers_url": "https://api.github.com/users/Tribex/followers",
      "following_url": "https://api.github.com/users/Tribex/following{/other_user}",
      "gists_url": "https://api.github.com/users/Tribex/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Tribex/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Tribex/subscriptions",
      "organizations_url": "https://api.github.com/users/Tribex/orgs",
      "repos_url": "https://api.github.com/users/Tribex/repos",
      "events_url": "https://api.github.com/users/Tribex/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Tribex/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-20T22:24:17Z",
    "updated_at": "2015-10-20T22:24:17Z",
    "body": "Yes, I believe checking what's in session would be what's needed. I've toyed around with an earlier version of this, but haven't really tried to determine where everything is.\n"
  }
]