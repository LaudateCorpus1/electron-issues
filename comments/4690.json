[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/192773501",
    "html_url": "https://github.com/electron/electron/issues/4690#issuecomment-192773501",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/4690",
    "id": 192773501,
    "user": {
      "login": "baconbrad",
      "id": 4763342,
      "avatar_url": "https://avatars1.githubusercontent.com/u/4763342?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/baconbrad",
      "html_url": "https://github.com/baconbrad",
      "followers_url": "https://api.github.com/users/baconbrad/followers",
      "following_url": "https://api.github.com/users/baconbrad/following{/other_user}",
      "gists_url": "https://api.github.com/users/baconbrad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/baconbrad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/baconbrad/subscriptions",
      "organizations_url": "https://api.github.com/users/baconbrad/orgs",
      "repos_url": "https://api.github.com/users/baconbrad/repos",
      "events_url": "https://api.github.com/users/baconbrad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/baconbrad/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-06T00:54:40Z",
    "updated_at": "2016-03-06T00:54:40Z",
    "body": "I recommend using a command line arguments management system like [this package](https://www.npmjs.com/package/command-line-args). This will ensure your application can verify the input. Especially if you are depending on other human's input.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/192775451",
    "html_url": "https://github.com/electron/electron/issues/4690#issuecomment-192775451",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/4690",
    "id": 192775451,
    "user": {
      "login": "brian-mann",
      "id": 1268976,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1268976?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brian-mann",
      "html_url": "https://github.com/brian-mann",
      "followers_url": "https://api.github.com/users/brian-mann/followers",
      "following_url": "https://api.github.com/users/brian-mann/following{/other_user}",
      "gists_url": "https://api.github.com/users/brian-mann/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brian-mann/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brian-mann/subscriptions",
      "organizations_url": "https://api.github.com/users/brian-mann/orgs",
      "repos_url": "https://api.github.com/users/brian-mann/repos",
      "events_url": "https://api.github.com/users/brian-mann/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brian-mann/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-06T01:01:30Z",
    "updated_at": "2016-03-06T01:01:30Z",
    "body": "That is what I'm doing - using `minimist`. \n\nThat solves the problem with dasherized arguments like `-v` or `--foo` - however if your CLI tool accepts a non dashed argument this will fail.\n\nImagine something like `gulp`. If you ran `gulp build` in node typically the arguments would look like this:\n\n``` js\n[\n  '/usr/bin/node',\n  '/my-app/node_modules/.bin/gulp',\n  'build'\n]\n```\n\nHowever once you package your electron application the arguments will then become this:\n\n``` js\n[\n  '/MyApp.app/Contents/MacOS/Electron'\n  'build'\n]\n```\n\nDo you see the problem there? \n\nNow let's imagine your application accepts something like a path to a file as its argument. There is no way to tell the difference between what the user is providing via the CLI and what is coming from a standard node `process.argv`. \n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/193038102",
    "html_url": "https://github.com/electron/electron/issues/4690#issuecomment-193038102",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/4690",
    "id": 193038102,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2016-03-07T01:28:23Z",
    "updated_at": "2016-03-07T01:28:32Z",
    "body": "We can probably remove `my-app` from `process.argv` in the default app, so it has the same `process.argv` with packaged app. \n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/193205675",
    "html_url": "https://github.com/electron/electron/issues/4690#issuecomment-193205675",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/4690",
    "id": 193205675,
    "user": {
      "login": "jean-emmanuel",
      "id": 5261671,
      "avatar_url": "https://avatars1.githubusercontent.com/u/5261671?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jean-emmanuel",
      "html_url": "https://github.com/jean-emmanuel",
      "followers_url": "https://api.github.com/users/jean-emmanuel/followers",
      "following_url": "https://api.github.com/users/jean-emmanuel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jean-emmanuel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jean-emmanuel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jean-emmanuel/subscriptions",
      "organizations_url": "https://api.github.com/users/jean-emmanuel/orgs",
      "repos_url": "https://api.github.com/users/jean-emmanuel/repos",
      "events_url": "https://api.github.com/users/jean-emmanuel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jean-emmanuel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-07T11:01:47Z",
    "updated_at": "2016-03-07T11:20:31Z",
    "body": "I had the same issue using [yargs](https://www.npmjs.com/package/yargs). This did the trick for me (assuming your command line switches always start with hyphens) : \n\n```\nif (process.argv[1]&&process.argv[1].indexOf('-')==0) process.argv.unshift('')\n```\n\nedit: i didn't read the whole thread, this doesn't solve it if you accept unhyphenated arguments...\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/193365354",
    "html_url": "https://github.com/electron/electron/issues/4690#issuecomment-193365354",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/4690",
    "id": 193365354,
    "user": {
      "login": "erkyrath",
      "id": 65666,
      "avatar_url": "https://avatars0.githubusercontent.com/u/65666?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/erkyrath",
      "html_url": "https://github.com/erkyrath",
      "followers_url": "https://api.github.com/users/erkyrath/followers",
      "following_url": "https://api.github.com/users/erkyrath/following{/other_user}",
      "gists_url": "https://api.github.com/users/erkyrath/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/erkyrath/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/erkyrath/subscriptions",
      "organizations_url": "https://api.github.com/users/erkyrath/orgs",
      "repos_url": "https://api.github.com/users/erkyrath/repos",
      "events_url": "https://api.github.com/users/erkyrath/events{/privacy}",
      "received_events_url": "https://api.github.com/users/erkyrath/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-07T17:42:36Z",
    "updated_at": "2016-03-07T17:42:36Z",
    "body": "Yes, I ran into this too. My app accepts filename arguments. I had to add a special case to remove `main.js` from the argument list.\n\n(Fortunately my app doesn't deal with Javascript files, so this was a low-impact hack. Still, a hack.)\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/193370141",
    "html_url": "https://github.com/electron/electron/issues/4690#issuecomment-193370141",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/4690",
    "id": 193370141,
    "user": {
      "login": "jean-emmanuel",
      "id": 5261671,
      "avatar_url": "https://avatars1.githubusercontent.com/u/5261671?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jean-emmanuel",
      "html_url": "https://github.com/jean-emmanuel",
      "followers_url": "https://api.github.com/users/jean-emmanuel/followers",
      "following_url": "https://api.github.com/users/jean-emmanuel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jean-emmanuel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jean-emmanuel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jean-emmanuel/subscriptions",
      "organizations_url": "https://api.github.com/users/jean-emmanuel/orgs",
      "repos_url": "https://api.github.com/users/jean-emmanuel/repos",
      "events_url": "https://api.github.com/users/jean-emmanuel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jean-emmanuel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-07T17:55:00Z",
    "updated_at": "2016-03-07T17:55:00Z",
    "body": "You could also define a npm startup script in your package.json that tells the app there is an extra argument not to parse : \n\n```\n    \"scripts\": {\n        \"start\": \"electron . --not-packaged\"\n    }\n```\n\nJust check before parsing process.args if it contains this special switch : \n\n```\nvar n = process.argv.indexOf('--not-packaged')!=-1?2:1\nvar args = minimist(process.argv.slice(n))\n```\n\nThen you would use `npm start -- [options]` if the app is not packaged.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/195529370",
    "html_url": "https://github.com/electron/electron/issues/4690#issuecomment-195529370",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/4690",
    "id": 195529370,
    "user": {
      "login": "xblox",
      "id": 1205100,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1205100?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/xblox",
      "html_url": "https://github.com/xblox",
      "followers_url": "https://api.github.com/users/xblox/followers",
      "following_url": "https://api.github.com/users/xblox/following{/other_user}",
      "gists_url": "https://api.github.com/users/xblox/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/xblox/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/xblox/subscriptions",
      "organizations_url": "https://api.github.com/users/xblox/orgs",
      "repos_url": "https://api.github.com/users/xblox/repos",
      "events_url": "https://api.github.com/users/xblox/events{/privacy}",
      "received_events_url": "https://api.github.com/users/xblox/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-11T20:17:48Z",
    "updated_at": "2016-03-11T20:17:48Z",
    "body": "same here, just that i can't see my args at all with prebuild/electron --myArg=\"test\" in the app with process.argv. There is only a bunch of chrome args. Is that a bug? \n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/203886821",
    "html_url": "https://github.com/electron/electron/issues/4690#issuecomment-203886821",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/4690",
    "id": 203886821,
    "user": {
      "login": "MrSaints",
      "id": 68859,
      "avatar_url": "https://avatars3.githubusercontent.com/u/68859?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MrSaints",
      "html_url": "https://github.com/MrSaints",
      "followers_url": "https://api.github.com/users/MrSaints/followers",
      "following_url": "https://api.github.com/users/MrSaints/following{/other_user}",
      "gists_url": "https://api.github.com/users/MrSaints/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MrSaints/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MrSaints/subscriptions",
      "organizations_url": "https://api.github.com/users/MrSaints/orgs",
      "repos_url": "https://api.github.com/users/MrSaints/repos",
      "events_url": "https://api.github.com/users/MrSaints/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MrSaints/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-31T11:27:59Z",
    "updated_at": "2016-03-31T11:28:13Z",
    "body": "I'm running into the same problem. As a temporary _fix_, I used `sed` during build time to prepend a line to _push_ the process arguments with `--`. e.g.\n\n``` bash\nsed -i \"1s/^/process.argv.unshift(\\\"--\\\");\\n /\" /project/build/artifacts/main.js\n```\n\nEverything works as expected :+1:\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/215455020",
    "html_url": "https://github.com/electron/electron/issues/4690#issuecomment-215455020",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/4690",
    "id": 215455020,
    "user": {
      "login": "tejohnso",
      "id": 1511535,
      "avatar_url": "https://avatars0.githubusercontent.com/u/1511535?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tejohnso",
      "html_url": "https://github.com/tejohnso",
      "followers_url": "https://api.github.com/users/tejohnso/followers",
      "following_url": "https://api.github.com/users/tejohnso/following{/other_user}",
      "gists_url": "https://api.github.com/users/tejohnso/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tejohnso/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tejohnso/subscriptions",
      "organizations_url": "https://api.github.com/users/tejohnso/orgs",
      "repos_url": "https://api.github.com/users/tejohnso/repos",
      "events_url": "https://api.github.com/users/tejohnso/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tejohnso/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-28T15:03:01Z",
    "updated_at": "2016-04-28T15:03:01Z",
    "body": "Yargs conveniently mentions a workaround for Electron and nwjs in their [documentation](https://www.npmjs.com/package/yargs#argv)\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/215457583",
    "html_url": "https://github.com/electron/electron/issues/4690#issuecomment-215457583",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/4690",
    "id": 215457583,
    "user": {
      "login": "xblox",
      "id": 1205100,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1205100?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/xblox",
      "html_url": "https://github.com/xblox",
      "followers_url": "https://api.github.com/users/xblox/followers",
      "following_url": "https://api.github.com/users/xblox/following{/other_user}",
      "gists_url": "https://api.github.com/users/xblox/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/xblox/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/xblox/subscriptions",
      "organizations_url": "https://api.github.com/users/xblox/orgs",
      "repos_url": "https://api.github.com/users/xblox/repos",
      "events_url": "https://api.github.com/users/xblox/events{/privacy}",
      "received_events_url": "https://api.github.com/users/xblox/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-28T15:10:12Z",
    "updated_at": "2016-04-28T15:10:12Z",
    "body": "thanks to @MrSaints . works here too!\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/217435222",
    "html_url": "https://github.com/electron/electron/issues/4690#issuecomment-217435222",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/4690",
    "id": 217435222,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2016-05-06T13:09:08Z",
    "updated_at": "2016-05-06T13:09:08Z",
    "body": "It is too late to change this behavior, this is going to break numerous apps. Instead I have added a `process.defaultApp` property to indicate whether the app is started by being passed as parameter to the default app, so people can use it to correctly handle this when parsing CLI parameters.\n"
  }
]