[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/294937949",
    "html_url": "https://github.com/electron/electron/pull/9224#issuecomment-294937949",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/9224",
    "id": 294937949,
    "user": {
      "login": "poiru",
      "id": 1319028,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1319028?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/poiru",
      "html_url": "https://github.com/poiru",
      "followers_url": "https://api.github.com/users/poiru/followers",
      "following_url": "https://api.github.com/users/poiru/following{/other_user}",
      "gists_url": "https://api.github.com/users/poiru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/poiru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/poiru/subscriptions",
      "organizations_url": "https://api.github.com/users/poiru/orgs",
      "repos_url": "https://api.github.com/users/poiru/repos",
      "events_url": "https://api.github.com/users/poiru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/poiru/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-18T18:27:57Z",
    "updated_at": "2017-04-18T18:27:57Z",
    "body": "Postponed until Electron 2.0."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/294938964",
    "html_url": "https://github.com/electron/electron/pull/9224#issuecomment-294938964",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/9224",
    "id": 294938964,
    "user": {
      "login": "deepak1556",
      "id": 964386,
      "avatar_url": "https://avatars2.githubusercontent.com/u/964386?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/deepak1556",
      "html_url": "https://github.com/deepak1556",
      "followers_url": "https://api.github.com/users/deepak1556/followers",
      "following_url": "https://api.github.com/users/deepak1556/following{/other_user}",
      "gists_url": "https://api.github.com/users/deepak1556/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/deepak1556/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/deepak1556/subscriptions",
      "organizations_url": "https://api.github.com/users/deepak1556/orgs",
      "repos_url": "https://api.github.com/users/deepak1556/repos",
      "events_url": "https://api.github.com/users/deepak1556/events{/privacy}",
      "received_events_url": "https://api.github.com/users/deepak1556/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-18T18:31:39Z",
    "updated_at": "2017-04-19T05:36:46Z",
    "body": "I would prefer implementing this in a way where users can continue the request knowing the outcome without the request being blocked by default, similar to insecure https requests. We can implement this by creating `NavigationThrottles` for non file requests and defer them until user wants to proceed by listening to an `will-start-request` event. The reason to provide such mechanism is there are custom protocols that are made to behave like file schemes so blocking them by default is not good."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/295013191",
    "html_url": "https://github.com/electron/electron/pull/9224#issuecomment-295013191",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/9224",
    "id": 295013191,
    "user": {
      "login": "baconbrad",
      "id": 4763342,
      "avatar_url": "https://avatars1.githubusercontent.com/u/4763342?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/baconbrad",
      "html_url": "https://github.com/baconbrad",
      "followers_url": "https://api.github.com/users/baconbrad/followers",
      "following_url": "https://api.github.com/users/baconbrad/following{/other_user}",
      "gists_url": "https://api.github.com/users/baconbrad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/baconbrad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/baconbrad/subscriptions",
      "organizations_url": "https://api.github.com/users/baconbrad/orgs",
      "repos_url": "https://api.github.com/users/baconbrad/repos",
      "events_url": "https://api.github.com/users/baconbrad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/baconbrad/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-18T23:23:19Z",
    "updated_at": "2017-04-18T23:24:09Z",
    "body": "I think it is wrong to assume a non file:// request is untrusted and insecure. My project would be broken as well as many others. There is a responsibility up to the developers of Electron projects to ensure the content they are pulling in is safe and trusted. We also have no clue why they would want to be pulling in such content and it could be completely intentional. As a result I don't think Electron should police this at all. At the very most make it an optional enhancement but not required.\r\n\r\nElectron intentionally breaks security and the sandbox to make applications possible. The goal here isn't to make a safe web browser."
  }
]