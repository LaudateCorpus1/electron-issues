[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/259980146",
    "html_url": "https://github.com/electron/electron/issues/7940#issuecomment-259980146",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7940",
    "id": 259980146,
    "user": {
      "login": "bridiver",
      "id": 34129,
      "avatar_url": "https://avatars0.githubusercontent.com/u/34129?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bridiver",
      "html_url": "https://github.com/bridiver",
      "followers_url": "https://api.github.com/users/bridiver/followers",
      "following_url": "https://api.github.com/users/bridiver/following{/other_user}",
      "gists_url": "https://api.github.com/users/bridiver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bridiver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bridiver/subscriptions",
      "organizations_url": "https://api.github.com/users/bridiver/orgs",
      "repos_url": "https://api.github.com/users/bridiver/repos",
      "events_url": "https://api.github.com/users/bridiver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bridiver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-11T15:21:31Z",
    "updated_at": "2016-11-11T15:21:31Z",
    "body": "the issue isn't just build time, you also can't have v8 in both the node shared lib and the final electron target because you will get two copies of the v8 singleton. I've been experimenting with using `set_sources_assignment_filter([\"*\"])` in the v8 source sets and I'm making some progress, but no working solution yet\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/260015968",
    "html_url": "https://github.com/electron/electron/issues/7940#issuecomment-260015968",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7940",
    "id": 260015968,
    "user": {
      "login": "bridiver",
      "id": 34129,
      "avatar_url": "https://avatars0.githubusercontent.com/u/34129?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bridiver",
      "html_url": "https://github.com/bridiver",
      "followers_url": "https://api.github.com/users/bridiver/followers",
      "following_url": "https://api.github.com/users/bridiver/following{/other_user}",
      "gists_url": "https://api.github.com/users/bridiver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bridiver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bridiver/subscriptions",
      "organizations_url": "https://api.github.com/users/bridiver/orgs",
      "repos_url": "https://api.github.com/users/bridiver/repos",
      "events_url": "https://api.github.com/users/bridiver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bridiver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-11T17:57:05Z",
    "updated_at": "2016-11-11T17:57:05Z",
    "body": "there is still an easy way to build v8 as a static lib because it still has a gyn file and that's what I used to build the v8 libs for node. `set_sources_assignment_filter([\"*\"])` worked to keep node out of the chromium targets, but I'm hoping that I can use `set_defaults` or similar instead of patching the v8 BUILD.gn to add them all\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/260105860",
    "html_url": "https://github.com/electron/electron/issues/7940#issuecomment-260105860",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7940",
    "id": 260105860,
    "user": {
      "login": "bridiver",
      "id": 34129,
      "avatar_url": "https://avatars0.githubusercontent.com/u/34129?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bridiver",
      "html_url": "https://github.com/bridiver",
      "followers_url": "https://api.github.com/users/bridiver/followers",
      "following_url": "https://api.github.com/users/bridiver/following{/other_user}",
      "gists_url": "https://api.github.com/users/bridiver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bridiver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bridiver/subscriptions",
      "organizations_url": "https://api.github.com/users/bridiver/orgs",
      "repos_url": "https://api.github.com/users/bridiver/repos",
      "events_url": "https://api.github.com/users/bridiver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bridiver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-12T06:49:27Z",
    "updated_at": "2016-11-17T19:45:55Z",
    "body": "this is the patch I used to build v8 using gyp for node and block building it with gn\n\n``` diff\ndiff --git a/BUILD.gn b/BUILD.gn\nindex dcefe37..52b8689 100644\n--- a/BUILD.gn\n+++ b/BUILD.gn\n@@ -45,7 +45,7 @@ declare_args() {\n\n   # Enable ECMAScript Internationalization API. Enabling this feature will\n   # add a dependency on the ICU library.\n-  v8_enable_i18n_support = true\n+  v8_enable_i18n_support = is_component_build\n\n   # Enable slow dchecks.\n   v8_enable_slow_dchecks = false\n@@ -98,6 +98,7 @@ v8_generated_peephole_source = \"$target_gen_dir/bytecode-peephole-table.cc\"\n v8_random_seed = \"314159265\"\n v8_toolset_for_shell = \"host\"\n\n+suppress_v8 = !is_component_build\n ###############################################################################\n # Configurations\n #\n@@ -106,8 +107,13 @@ config(\"internal_config\") {\n\n   include_dirs = [ \".\" ]\n\n+  defines = []\n+  if (suppress_v8) {\n+    defines += [ \"SUPPRESS_V8_SNAPSHOT\" ]\n+  }\n+\n   if (is_component_build) {\n-    defines = [\n+    defines += [\n       \"V8_SHARED\",\n       \"BUILDING_V8_SHARED\",\n     ]\n@@ -133,12 +139,13 @@ config(\"libsampler_config\") {\n # This config should only be applied to code using V8 and not any V8 code\n # itself.\n config(\"external_config\") {\n-  if (is_component_build) {\n+  # if (is_component_build) {\n     defines = [\n       \"V8_SHARED\",\n       \"USING_V8_SHARED\",\n     ]\n-  }\n+  # }\n+\n   include_dirs = [ \"include\" ]\n   libs = []\n   if (is_android && current_toolchain != host_toolchain) {\n@@ -726,6 +733,9 @@ source_set(\"v8_maybe_snapshot\") {\n }\n\n v8_source_set(\"v8_nosnapshot\") {\n+  if (suppress_v8) {\n+    set_sources_assignment_filter([\"*\"])\n+  }\n   visibility = [ \":*\" ]  # Only targets in this file can depend on this.\n\n   deps = [\n@@ -748,6 +758,9 @@ v8_source_set(\"v8_nosnapshot\") {\n }\n\n v8_source_set(\"v8_snapshot\") {\n+  if (suppress_v8) {\n+    set_sources_assignment_filter([\"*\"])\n+  }\n   # Only targets in this file and the top-level visibility target can\n   # depend on this.\n   visibility = [\n@@ -781,6 +794,7 @@ v8_source_set(\"v8_snapshot\") {\n\n if (v8_use_external_startup_data) {\n   v8_source_set(\"v8_external_snapshot\") {\n+\n     visibility = [ \":*\" ]  # Only targets in this file can depend on this.\n\n     deps = [\n@@ -805,6 +819,10 @@ if (v8_use_external_startup_data) {\n }\n\n v8_source_set(\"v8_base\") {\n+  if (suppress_v8) {\n+    set_sources_assignment_filter([\"*\"])\n+  }\n+\n   visibility = [ \":*\" ]  # Only targets in this file can depend on this.\n\n   sources = [\n@@ -1986,8 +2004,10 @@ v8_source_set(\"v8_base\") {\n     \":v8_libsampler\",\n   ]\n\n-  sources += [ v8_generated_peephole_source ]\n-  deps += [ \":run_mkpeephole\" ]\n+  if (!suppress_v8) {\n+    sources += [ v8_generated_peephole_source ]\n+    deps += [ \":run_mkpeephole\" ]\n+  }\n\n   if (is_win) {\n     # TODO(jschuh): crbug.com/167187 fix size_t to int truncations.\n@@ -2001,8 +2021,8 @@ v8_source_set(\"v8_base\") {\n     }\n   } else {\n     sources -= [\n-      \"src/i18n.cc\",\n-      \"src/i18n.h\",\n+      # \"src/i18n.cc\",\n+      # \"src/i18n.h\",\n     ]\n   }\n\n@@ -2013,6 +2033,10 @@ v8_source_set(\"v8_base\") {\n }\n\n v8_source_set(\"v8_libbase\") {\n+  if (suppress_v8) {\n+    set_sources_assignment_filter([\"*\"])\n+  }\n+\n   visibility = [ \":*\" ]  # Only targets in this file can depend on this.\n\n   sources = [\n@@ -2146,6 +2170,10 @@ v8_source_set(\"v8_libbase\") {\n }\n\n v8_source_set(\"v8_libplatform\") {\n+  if (suppress_v8) {\n+    set_sources_assignment_filter([\"*\"])\n+  }\n+\n   sources = [\n     \"//base/trace_event/common/trace_event_common.h\",\n     \"include/libplatform/libplatform.h\",\n@@ -2175,6 +2203,10 @@ v8_source_set(\"v8_libplatform\") {\n }\n\n v8_source_set(\"v8_libsampler\") {\n+  if (suppress_v8) {\n+    set_sources_assignment_filter([\"*\"])\n+  }\n+\n   sources = [\n     \"src/libsampler/sampler.cc\",\n     \"src/libsampler/sampler.h\",\ndiff --git a/src/snapshot/mksnapshot.cc b/src/snapshot/mksnapshot.cc\nindex f4362e5..a32e8b2 100644\n--- a/src/snapshot/mksnapshot.cc\n+++ b/src/snapshot/mksnapshot.cc\n@@ -136,6 +136,7 @@ char* GetExtraCode(char* filename, const char* description) {\n\n\n int main(int argc, char** argv) {\n+#ifndef SUPPRESS_V8_SNAPSHOT\n   // Make mksnapshot runs predictable to create reproducible snapshots.\n   i::FLAG_predictable = true;\n\n@@ -180,5 +181,6 @@ int main(int argc, char** argv) {\n   V8::Dispose();\n   V8::ShutdownPlatform();\n   delete platform;\n+#endif\n   return 0;\n }\n```\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/260882274",
    "html_url": "https://github.com/electron/electron/issues/7940#issuecomment-260882274",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7940",
    "id": 260882274,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2016-11-16T08:18:43Z",
    "updated_at": "2016-11-16T08:18:43Z",
    "body": "@bridiver We still want to build Electron with prebuilt binaries of libchromiumcontent, instead of building Electron as part of Chromium, so only patching V8 is probably not enough, since many other targets in Chromium have also been converted to `source_set`.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/305108732",
    "html_url": "https://github.com/electron/electron/issues/7940#issuecomment-305108732",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7940",
    "id": 305108732,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2017-05-31T07:29:40Z",
    "updated_at": "2017-05-31T07:29:40Z",
    "body": "Closing this since current build workflow works quite good."
  }
]