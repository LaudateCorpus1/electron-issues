[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/293297765",
    "html_url": "https://github.com/electron/electron/issues/9139#issuecomment-293297765",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/9139",
    "id": 293297765,
    "user": {
      "login": "jlongster",
      "id": 17031,
      "avatar_url": "https://avatars1.githubusercontent.com/u/17031?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jlongster",
      "html_url": "https://github.com/jlongster",
      "followers_url": "https://api.github.com/users/jlongster/followers",
      "following_url": "https://api.github.com/users/jlongster/following{/other_user}",
      "gists_url": "https://api.github.com/users/jlongster/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jlongster/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jlongster/subscriptions",
      "organizations_url": "https://api.github.com/users/jlongster/orgs",
      "repos_url": "https://api.github.com/users/jlongster/repos",
      "events_url": "https://api.github.com/users/jlongster/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jlongster/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-11T15:20:38Z",
    "updated_at": "2017-04-11T15:20:38Z",
    "body": "I completely understand the difficulty of keeping up with issues on an active project, but can anyone talk about if this is valid, and if so what kind of timeline to expect on issues like this? Even better, point me to where I could implement this myself and contribute it?"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/293340406",
    "html_url": "https://github.com/electron/electron/issues/9139#issuecomment-293340406",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/9139",
    "id": 293340406,
    "user": {
      "login": "deepak1556",
      "id": 964386,
      "avatar_url": "https://avatars2.githubusercontent.com/u/964386?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/deepak1556",
      "html_url": "https://github.com/deepak1556",
      "followers_url": "https://api.github.com/users/deepak1556/followers",
      "following_url": "https://api.github.com/users/deepak1556/following{/other_user}",
      "gists_url": "https://api.github.com/users/deepak1556/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/deepak1556/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/deepak1556/subscriptions",
      "organizations_url": "https://api.github.com/users/deepak1556/orgs",
      "repos_url": "https://api.github.com/users/deepak1556/repos",
      "events_url": "https://api.github.com/users/deepak1556/events{/privacy}",
      "received_events_url": "https://api.github.com/users/deepak1556/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-11T17:39:21Z",
    "updated_at": "2017-04-11T17:48:03Z",
    "body": "Yup this is definitely good to have feature, Electron by default doesn't parse all node related flags in the normal mode as most of them don't apply.\r\n\r\n> if so what kind of timeline to expect on issues like this?\r\n\r\nUnless someone assigns themselves to work an issue, you can feel free to pick it up. Would be great to leave a comment to avoid duplications.\r\n\r\n> Even better, point me to where I could implement this myself and contribute it?\r\n\r\nYou can check how `debug-brk` flag https://github.com/electron/electron/blob/master/atom/common/node_bindings.cc#L202 is supported, `trace-warnings` should also be implemented in a similar way. Hope that helps!"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/293356699",
    "html_url": "https://github.com/electron/electron/issues/9139#issuecomment-293356699",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/9139",
    "id": 293356699,
    "user": {
      "login": "jlongster",
      "id": 17031,
      "avatar_url": "https://avatars1.githubusercontent.com/u/17031?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jlongster",
      "html_url": "https://github.com/jlongster",
      "followers_url": "https://api.github.com/users/jlongster/followers",
      "following_url": "https://api.github.com/users/jlongster/following{/other_user}",
      "gists_url": "https://api.github.com/users/jlongster/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jlongster/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jlongster/subscriptions",
      "organizations_url": "https://api.github.com/users/jlongster/orgs",
      "repos_url": "https://api.github.com/users/jlongster/repos",
      "events_url": "https://api.github.com/users/jlongster/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jlongster/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-11T18:26:21Z",
    "updated_at": "2017-04-11T18:26:21Z",
    "body": "Thanks! Would something like this work?\r\n\r\n```patch\r\ndiff --git a/atom/common/node_bindings.cc b/atom/common/node_bindings.cc\r\nindex f469677..e397a04 100644\r\n--- a/atom/common/node_bindings.cc\r\n+++ b/atom/common/node_bindings.cc\r\n@@ -198,16 +198,20 @@ node::Environment* NodeBindings::CreateEnvironment(\r\n   process.Set(\"helperExecPath\", helper_exec_path);\r\n \r\n   // Set process._debugWaitConnect if --debug-brk was specified to stop\r\n   // the debugger on the first line\r\n   if (browser_env_ == BROWSER &&\r\n       base::CommandLine::ForCurrentProcess()->HasSwitch(\"debug-brk\"))\r\n     process.Set(\"_debugWaitConnect\", true);\r\n \r\n+  if (browser_env_ != BROWSER &&\r\n+      base::CommandLine::ForCurrentProcess()->HasSwitch(\"trace-warnings\"))\r\n+      process.Set(\"traceProcessWarnings\", true);\r\n+\r\n   return env;\r\n }\r\n \r\n void NodeBindings::LoadEnvironment(node::Environment* env) {\r\n   node::LoadEnvironment(env);\r\n   mate::EmitEvent(env->isolate(), env->process_object(), \"loaded\");\r\n }\r\n ```\r\n\r\nIf I look at the top of the function BROWSER is either a browser, renderer, or worker process. What I'm wanting to debug is the main process. I'm skeptical that this is the wrong place for that. Chrome's devtools already give you the stack for unhandled exceptions in the renderer process (I think). But debugging the main process is harder because you don't have chrome's devtools.\r\n\r\nI'm trying to get a dev build of electron locally to test this but it's taking a long time."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/293368892",
    "html_url": "https://github.com/electron/electron/issues/9139#issuecomment-293368892",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/9139",
    "id": 293368892,
    "user": {
      "login": "jlongster",
      "id": 17031,
      "avatar_url": "https://avatars1.githubusercontent.com/u/17031?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jlongster",
      "html_url": "https://github.com/jlongster",
      "followers_url": "https://api.github.com/users/jlongster/followers",
      "following_url": "https://api.github.com/users/jlongster/following{/other_user}",
      "gists_url": "https://api.github.com/users/jlongster/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jlongster/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jlongster/subscriptions",
      "organizations_url": "https://api.github.com/users/jlongster/orgs",
      "repos_url": "https://api.github.com/users/jlongster/repos",
      "events_url": "https://api.github.com/users/jlongster/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jlongster/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-11T19:05:49Z",
    "updated_at": "2017-04-11T19:05:49Z",
    "body": "So it turns out that I probably shouldn't be doing as much work as I am in the main process. I didn't realize it could still block the render process, so I'm probably going to move all my backend code to its own process which, I think, I could open the Chrome devtools on. I guess most people haven't hit this issue because you don't usually do much work in the main process?\r\n\r\nIn that case I'm not as interested in landing this. I *think* that Chrome's devtools will already have this turned on and I'll see stacks in the devtools."
  }
]