[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/97774826",
    "html_url": "https://github.com/electron/electron/issues/1529#issuecomment-97774826",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1529",
    "id": 97774826,
    "user": {
      "login": "mattcollier",
      "id": 902041,
      "avatar_url": "https://avatars1.githubusercontent.com/u/902041?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattcollier",
      "html_url": "https://github.com/mattcollier",
      "followers_url": "https://api.github.com/users/mattcollier/followers",
      "following_url": "https://api.github.com/users/mattcollier/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattcollier/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattcollier/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattcollier/subscriptions",
      "organizations_url": "https://api.github.com/users/mattcollier/orgs",
      "repos_url": "https://api.github.com/users/mattcollier/repos",
      "events_url": "https://api.github.com/users/mattcollier/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattcollier/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-30T13:16:11Z",
    "updated_at": "2015-04-30T13:16:55Z",
    "body": "I'm not familiar with the errors you're having,  but I have started using pangyp for all my node-gyp needs: https://www.npmjs.com/package/pangyp\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/97883484",
    "html_url": "https://github.com/electron/electron/issues/1529#issuecomment-97883484",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1529",
    "id": 97883484,
    "user": {
      "login": "djohns32",
      "id": 10541004,
      "avatar_url": "https://avatars2.githubusercontent.com/u/10541004?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djohns32",
      "html_url": "https://github.com/djohns32",
      "followers_url": "https://api.github.com/users/djohns32/followers",
      "following_url": "https://api.github.com/users/djohns32/following{/other_user}",
      "gists_url": "https://api.github.com/users/djohns32/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djohns32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djohns32/subscriptions",
      "organizations_url": "https://api.github.com/users/djohns32/orgs",
      "repos_url": "https://api.github.com/users/djohns32/repos",
      "events_url": "https://api.github.com/users/djohns32/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djohns32/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-30T17:09:26Z",
    "updated_at": "2015-04-30T17:09:26Z",
    "body": "Matt,\n\nThanks for the quick response.  When I tried using pangyp, I received a similar error when it tried to download.  That turned out to be related to our strict IT policies.  I went home, installed npm, node-gyp, pangyp and ran configure to get C:\\Users\\david.s.johnson.node-gyp\\1.8.1.  I then brought that to work on a thumb drive.  That solved the download issue but I still get an error about \"Uncaught Error: Module did not self-register.\"\n\nI get \"Uncaught Error: Module did not self-register.\"  when using pangyp or node-gyp to build the Microsoft solution file.  How do I make an app self-register?  I am using the same code from a node-webkit app.  Is there a different procedure for electron/iojs?\n\n//-----------------------------------------------------------------------------\n// Method: init\n//\n//  Node.js method for performing initialization\n//-----------------------------------------------------------------------------\n\nvoid init(Handle<Object> target) {\n    Isolate\\* isolate = Isolate::GetCurrent();\n    HandleScope scope(isolate);\n    const char\\* method = (\"vcxCppServiceLayer::init(): \");\n\n```\nNODE_SET_METHOD(target, \"listSystems\", listSystems);\n\nNODE_SET_METHOD(target, \"search\", search);\n\nNODE_SET_METHOD(target, \"getMetadata\", getMetadata);\n\nNODE_SET_METHOD(target, \"listOperations\", listOperations);\n\nNODE_SET_METHOD(target, \"getPublishedUncUris\", getPublishedUncUris);\n\nNODE_SET_METHOD(target, \"gxpLoadImageAndShow\", gxpLoadImageAndShow);\n\nApiManager::InitializeApi();\n\nxpl_vct_tag_mapping_initialized = false;\n\n// Populate the product_tables array used for controlling which VCT tables get queried and returned\n\nproduct_tables[VCX_IMAGERY].product_table_name = \"products_imagery\";\nproduct_tables[VCX_IMAGERY].query_type = CAT_QUERY_NORMAL;\n\nproduct_tables[VCX_TERRAIN].product_table_name = \"products_terrain\";\nproduct_tables[VCX_TERRAIN].query_type = CAT_QUERY_TERRAIN;\n\nproduct_tables[VCX_VIDEO].product_table_name = \"products_video\";\nproduct_tables[VCX_VIDEO].query_type = CAT_QUERY_VIDEO;\n\nproduct_tables[VCX_VECTOR].product_table_name = \"products_vector\";\nproduct_tables[VCX_VECTOR].query_type = CAT_QUERY_VECTOR;\n\nproduct_tables[VCX_REF_IMAGERY].product_table_name = \"products_ref_imagery\";\nproduct_tables[VCX_REF_IMAGERY].query_type = CAT_QUERY_REFERENCE_IMAGES;\n```\n\n}\n\nNODE_MODULE(vcxCppServiceLayer, init)\n\nHere is the error when trying to run the electron app:\n\nV:\\TrustedData\\electron>StartGxpC.exe electron.bat\n\nV:\\TrustedData\\electron>electron.exe resources\\vcx\\vcx.js\n[10308:0430/095332:ERROR:gl_surface_egl.cc(161)] eglInitialize failed with error UNKNOWN\n[10308:0430/095332:ERROR:gl_surface_win.cc(163)] GLSurfaceEGL::InitializeOneOff failed.\n[10308:0430/095332:ERROR:gpu_child_thread.cc(146)] Exiting GPU process due to errors during initialization\n[7364:0430/095332:INFO:renderer_main.cc(212)] Renderer process started\n[19740:0430/095333:INFO:CONSOLE(118)] \"Uncaught Error: Module did not self-register.\", source: ATOM_SHELL_ASAR.js (\n[19740:0430/095335:INFO:CONSOLE(12)] \"yui: NOT loaded: jsts-all\", source: atom://V:/javascripts/yui-3.6.0/yui/build\n[19740:0430/095335:INFO:CONSOLE(12)] \"yui: NOT loaded: jsts-all\", source: atom://V:/javascripts/yui-3.6.0/yui/build\n[19740:0430/095335:INFO:CONSOLE(12)] \"yui: NOT loaded: jsts-all\", source: atom://V:/javascripts/yui-3.6.0/yui/build\n[19740:0430/095335:INFO:CONSOLE(12)] \"yui: NOT loaded: jsts-all\", source: atom://V:/javascripts/yui-3.6.0/yui/build\n[19740:0430/095335:INFO:CONSOLE(12)] \"yui: NOT loaded: lang\", source: atom://V:/javascripts/yui-3.6.0/yui/build/yui\n[19740:0430/095335:INFO:CONSOLE(12)] \"yui: NOT loaded: array\", source: atom://V:/javascripts/yui-3.6.0/yui/build/yu\n[19740:0430/095335:INFO:CONSOLE(12)] \"yui: NOT loaded: jquery-mods\", source: atom://V:/javascripts/yui-3.6.0/yui/bu\n[19740:0430/095335:INFO:CONSOLE(12)] \"yui: NOT loaded: timeline\", source: atom://V:/javascripts/yui-3.6.0/yui/build\n[19740:0430/095335:INFO:CONSOLE(12)] \"yui: NOT loaded: datejs-all\", source: atom://V:/javascripts/yui-3.6.0/yui/bui\n[19740:0430/095335:INFO:CONSOLE(12)] \"yui: NOT loaded: jsts-all\", source: atom://V:/javascripts/yui-3.6.0/yui/build\n[19740:0430/095335:INFO:CONSOLE(12)] \"yui: NOT loaded: openlayers\", source: atom://V:/javascripts/yui-3.6.0/yui/bui\n[19740:0430/095335:INFO:CONSOLE(12)] \"yui: NOT loaded: proj4js-compressed\", source: atom://V:/javascripts/yui-3.6.0\n[19740:0430/095336:INFO:CONSOLE(110)] \"Uncaught TypeError: Cannot read property 'listSystems' of undefined\", source\n10)\n[19740:0430/095337:INFO:CONSOLE(0)] \"The 'overflowchanged' event is deprecated and may be removed. Please do not us\n[19740:0430/095351:INFO:CONSOLE(110)] \"Uncaught TypeError: Cannot read property 'listSystems' of undefined\", source\n10)\n\nV:\\TrustedData\\electron>type electron.bat\nelectron.exe resources\\vcx\\vcx.js\n\nStartGxpC.exe just sets some or our product specific environment variables.  Without it, I get an error that module cannot be found.  I use it, just like i do with node-webkit, when launching the app.  \n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/97913347",
    "html_url": "https://github.com/electron/electron/issues/1529#issuecomment-97913347",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1529",
    "id": 97913347,
    "user": {
      "login": "djohns32",
      "id": 10541004,
      "avatar_url": "https://avatars2.githubusercontent.com/u/10541004?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djohns32",
      "html_url": "https://github.com/djohns32",
      "followers_url": "https://api.github.com/users/djohns32/followers",
      "following_url": "https://api.github.com/users/djohns32/following{/other_user}",
      "gists_url": "https://api.github.com/users/djohns32/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djohns32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djohns32/subscriptions",
      "organizations_url": "https://api.github.com/users/djohns32/orgs",
      "repos_url": "https://api.github.com/users/djohns32/repos",
      "events_url": "https://api.github.com/users/djohns32/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djohns32/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-30T18:40:08Z",
    "updated_at": "2015-04-30T18:40:08Z",
    "body": "I should have mentioned that the code above is just a snippet showing the init stuff.  I don't think that part has changed as part of converting from nodejs to iojs, right?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/97985296",
    "html_url": "https://github.com/electron/electron/issues/1529#issuecomment-97985296",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1529",
    "id": 97985296,
    "user": {
      "login": "mattcollier",
      "id": 902041,
      "avatar_url": "https://avatars1.githubusercontent.com/u/902041?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattcollier",
      "html_url": "https://github.com/mattcollier",
      "followers_url": "https://api.github.com/users/mattcollier/followers",
      "following_url": "https://api.github.com/users/mattcollier/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattcollier/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattcollier/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattcollier/subscriptions",
      "organizations_url": "https://api.github.com/users/mattcollier/orgs",
      "repos_url": "https://api.github.com/users/mattcollier/repos",
      "events_url": "https://api.github.com/users/mattcollier/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattcollier/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-30T22:11:29Z",
    "updated_at": "2015-04-30T22:11:29Z",
    "body": "OK, the module did not self register I am familiar with.  On Windows, 'node' is actually a batch file that calls iojs and native modules don't like that.  You will need to copy your iojs executable to 'node' as well to satisfy native modules.\n\nNow, I am unclear about exactly what your attempting.  But if you would like to utilize a native module from within Electron, you will need to build your native code against the Electron includes/header, not those of iojs.  You can take a look at this for an example of the syntax:\n\nhttps://github.com/mattcollier/noxious/blob/0dc08e23665925f46c0b8840b6262d60d8740a19/build_win_ia32.bat\n\nThe dist-url may have changed with the project name change.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/98028235",
    "html_url": "https://github.com/electron/electron/issues/1529#issuecomment-98028235",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1529",
    "id": 98028235,
    "user": {
      "login": "djohns32",
      "id": 10541004,
      "avatar_url": "https://avatars2.githubusercontent.com/u/10541004?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djohns32",
      "html_url": "https://github.com/djohns32",
      "followers_url": "https://api.github.com/users/djohns32/followers",
      "following_url": "https://api.github.com/users/djohns32/following{/other_user}",
      "gists_url": "https://api.github.com/users/djohns32/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djohns32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djohns32/subscriptions",
      "organizations_url": "https://api.github.com/users/djohns32/orgs",
      "repos_url": "https://api.github.com/users/djohns32/repos",
      "events_url": "https://api.github.com/users/djohns32/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djohns32/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-01T02:24:34Z",
    "updated_at": "2015-05-01T02:24:34Z",
    "body": "Matt,\n\nThank you very much for your help!  The syntax that you provided was what I needed.  The 32-bit node-webkit app is now running as a 64-bit electron app.  I will mark this as closed.\n\nDave\n"
  }
]