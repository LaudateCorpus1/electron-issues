[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/215927451",
    "html_url": "https://github.com/electron/electron/issues/5344#issuecomment-215927451",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/5344",
    "id": 215927451,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2016-04-30T02:51:31Z",
    "updated_at": "2016-04-30T02:51:31Z",
    "body": "This behavior has been documented in the remote module:\nhttp://electron.atom.io/docs/v0.37.8/api/remote/#passing-callbacks-to-the-main-process\n\nFor unhooking the callback automatically, it is basically impossible to implement since we can never how the callback is going to be used, for example a simple case like: `win.on('event', => remoteCallback)`.\n\nAnd I don't think failing silently is an acceptable solution, it is just ignoring the problem.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/215928393",
    "html_url": "https://github.com/electron/electron/issues/5344#issuecomment-215928393",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/5344",
    "id": 215928393,
    "user": {
      "login": "MarshallOfSound",
      "id": 6634592,
      "avatar_url": "https://avatars0.githubusercontent.com/u/6634592?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarshallOfSound",
      "html_url": "https://github.com/MarshallOfSound",
      "followers_url": "https://api.github.com/users/MarshallOfSound/followers",
      "following_url": "https://api.github.com/users/MarshallOfSound/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarshallOfSound/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarshallOfSound/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarshallOfSound/subscriptions",
      "organizations_url": "https://api.github.com/users/MarshallOfSound/orgs",
      "repos_url": "https://api.github.com/users/MarshallOfSound/repos",
      "events_url": "https://api.github.com/users/MarshallOfSound/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarshallOfSound/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-30T03:10:23Z",
    "updated_at": "2016-04-30T03:10:23Z",
    "body": "I was aware the behaviour was documented I just don't believe the behaviour is correct or expected.  As an example there are always two ways of callbacks in the main process triggering actions in the renderer process.\n1. From the renderer process\n\n``` js\nremote.getGlobal('Thing').on('action' () => {\n    // Do magic\n});\n```\n1.  From the main process\n\n``` js\nThing.on('action', () => {\n    mainWindow.webContents.send('action-happened')\n});\n```\n\nThe first one is broken by reloading the window.  The second one is not.  Can this be reopened to address that issue, I.E. the callback handling logic should attach itself to the BrowserWjndow and at call time fetch webContents.  Not at hook time.\n\nSorry if this isn't clear, typed it up on my phone\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/215937136",
    "html_url": "https://github.com/electron/electron/issues/5344#issuecomment-215937136",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/5344",
    "id": 215937136,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2016-04-30T04:47:24Z",
    "updated_at": "2016-04-30T04:47:24Z",
    "body": "Using your code as example, I think the biggest trouble is how to handle `action-happened` in renderer process, since page is reloaded the original function is gone forever, how is it possible to figure out which function in the new page to be called?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/215937928",
    "html_url": "https://github.com/electron/electron/issues/5344#issuecomment-215937928",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/5344",
    "id": 215937928,
    "user": {
      "login": "MarshallOfSound",
      "id": 6634592,
      "avatar_url": "https://avatars0.githubusercontent.com/u/6634592?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarshallOfSound",
      "html_url": "https://github.com/MarshallOfSound",
      "followers_url": "https://api.github.com/users/MarshallOfSound/followers",
      "following_url": "https://api.github.com/users/MarshallOfSound/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarshallOfSound/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarshallOfSound/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarshallOfSound/subscriptions",
      "organizations_url": "https://api.github.com/users/MarshallOfSound/orgs",
      "repos_url": "https://api.github.com/users/MarshallOfSound/repos",
      "events_url": "https://api.github.com/users/MarshallOfSound/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarshallOfSound/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-30T04:57:01Z",
    "updated_at": "2016-04-30T04:57:01Z",
    "body": "@zcbenz Hmm, I see your point.  In the second example on reload you would have defined a new `ipcRenderer` listener for `action-happened` so the code would work as expected.\n\nHowever by that logic in the first example you would have also called the `remote` listener code again.  So you will have one call that will succeed and the old one which will fail.\n\nCould we simply check if the target `webContents` is destroyed or not before attempting to call a callback on it.  I can't come up with a viable reason to even try call a method on a destroyed webContents and based on these two example that solution would fix the issue and remove the need for a whole load of\n\n``` js\nwindow.onbeforeunload = () => {\n    remote.getGlobal('Thing').unbind(...);\n    remote.getGlobal('Thing').unbind(...);\n    remote.getGlobal('Thing').unbind(...);\n};\n```\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/215939472",
    "html_url": "https://github.com/electron/electron/issues/5344#issuecomment-215939472",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/5344",
    "id": 215939472,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2016-04-30T05:22:12Z",
    "updated_at": "2016-04-30T05:22:12Z",
    "body": "`EventEmitter.on` is not the only case that would involve remote callbacks, for other examples like `dialog .showMessageBox`, `win.capturePage`, `webRequest.beforeRequest` or when you pass `Promise`s, it is impossible to just uninstall the listeners.\n\nIt is possible to just not call the callback when the page is gone, but I don't think we should do that, otherwise every time you reload the page you will leave a bunch of zombie callbacks in the main process which never get cleaned up.\n"
  }
]