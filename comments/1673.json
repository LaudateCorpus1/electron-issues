[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/101538321",
    "html_url": "https://github.com/electron/electron/issues/1673#issuecomment-101538321",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1673",
    "id": 101538321,
    "user": {
      "login": "zaggino",
      "id": 1067319,
      "avatar_url": "https://avatars2.githubusercontent.com/u/1067319?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zaggino",
      "html_url": "https://github.com/zaggino",
      "followers_url": "https://api.github.com/users/zaggino/followers",
      "following_url": "https://api.github.com/users/zaggino/following{/other_user}",
      "gists_url": "https://api.github.com/users/zaggino/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zaggino/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zaggino/subscriptions",
      "organizations_url": "https://api.github.com/users/zaggino/orgs",
      "repos_url": "https://api.github.com/users/zaggino/repos",
      "events_url": "https://api.github.com/users/zaggino/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zaggino/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-13T06:53:08Z",
    "updated_at": "2015-05-13T06:53:08Z",
    "body": "This would be a minimum sample of how Bracekets (and maybe other apps too) work: https://github.com/zaggino/electron-sample\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/101540925",
    "html_url": "https://github.com/electron/electron/issues/1673#issuecomment-101540925",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1673",
    "id": 101540925,
    "user": {
      "login": "ThorstenHans",
      "id": 357884,
      "avatar_url": "https://avatars3.githubusercontent.com/u/357884?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ThorstenHans",
      "html_url": "https://github.com/ThorstenHans",
      "followers_url": "https://api.github.com/users/ThorstenHans/followers",
      "following_url": "https://api.github.com/users/ThorstenHans/following{/other_user}",
      "gists_url": "https://api.github.com/users/ThorstenHans/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ThorstenHans/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ThorstenHans/subscriptions",
      "organizations_url": "https://api.github.com/users/ThorstenHans/orgs",
      "repos_url": "https://api.github.com/users/ThorstenHans/repos",
      "events_url": "https://api.github.com/users/ThorstenHans/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ThorstenHans/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-13T07:01:52Z",
    "updated_at": "2015-05-13T07:01:52Z",
    "body": "what do you mean with \"node-integration\" there are several modules available to both processes `main` and `renderer` you can either use `remote` to interact with node modules form the `renderer` or you can use `ipc` to communicate between both processes. \n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/101629306",
    "html_url": "https://github.com/electron/electron/issues/1673#issuecomment-101629306",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1673",
    "id": 101629306,
    "user": {
      "login": "zaggino",
      "id": 1067319,
      "avatar_url": "https://avatars2.githubusercontent.com/u/1067319?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zaggino",
      "html_url": "https://github.com/zaggino",
      "followers_url": "https://api.github.com/users/zaggino/followers",
      "following_url": "https://api.github.com/users/zaggino/following{/other_user}",
      "gists_url": "https://api.github.com/users/zaggino/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zaggino/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zaggino/subscriptions",
      "organizations_url": "https://api.github.com/users/zaggino/orgs",
      "repos_url": "https://api.github.com/users/zaggino/repos",
      "events_url": "https://api.github.com/users/zaggino/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zaggino/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-13T11:05:54Z",
    "updated_at": "2015-05-13T11:05:54Z",
    "body": "I don't want to open a new process with `window.open`, I just want to open a new window and have control over it like in the traditional browser environment. Is that possible?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/101875020",
    "html_url": "https://github.com/electron/electron/issues/1673#issuecomment-101875020",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1673",
    "id": 101875020,
    "user": {
      "login": "paulcbetts",
      "id": 1396,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1396?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulcbetts",
      "html_url": "https://github.com/paulcbetts",
      "followers_url": "https://api.github.com/users/paulcbetts/followers",
      "following_url": "https://api.github.com/users/paulcbetts/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulcbetts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulcbetts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulcbetts/subscriptions",
      "organizations_url": "https://api.github.com/users/paulcbetts/orgs",
      "repos_url": "https://api.github.com/users/paulcbetts/repos",
      "events_url": "https://api.github.com/users/paulcbetts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulcbetts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-14T01:24:01Z",
    "updated_at": "2015-05-14T01:25:47Z",
    "body": "> 1) should using window.open spawn a window which will have node-integration?\n\nGood question. The ideal answer to this should probably be that it inherits whatever its parent is doing. \n\n> 2) if I spawn a window through BrowserWindow to have proper node-integration, can I access its window object space directly?\n\nNo, you need to call the `executeJavaScript` method. This method returns `void`, but with a few backflips you can make it return a JSONish value asynchronously by injecting some code into the target page that will respond to requests to eval code and send the result back over IPC. Something like:\n\n``` js\n//\n// Inject this into the child window:\n//\n\n  window.rendererEvalAsync = (blob) => {\n    let data = JSON.parse(decodeURIComponent(blob));\n    try {\n      data.result = JSON.stringify(eval(data.code));\n    } catch (error) {\n      data.error = { stack: error.stack, message: error.message };\n    }\n\n    ipc.sendToHost('eval-async', data);\n  };\n\n//\n// In the parent\n//\n\n  // Public: Executes JavaScript in the context of the SSB and returns the\n  // result, as long as it is JSON-serializable (unlike the built-in\n  // executeJavaScript)\n  //\n  // Returns an Observable Promise which is either the return value of the\n  // code that was invoked, or onErrors with the Error that was thrown.\n  executeJavaScript(code) {\n    let msg = { code: code, id: uuid.v4() };\n\n    // TODO: Listen to IPC messages with 'eval-async' and return a Promise.\n    // Our implementation is very Rx'y and I didn't want to make this sample super\n    // complicated\n\n    // NB: This is a secret handshake with the embedded page\n    this.wv.executeJavaScript(`global.rendererEvalAsync(\\\"${encodeURIComponent(JSON.stringify(msg))}\\\")`);\n    return ret;\n  }\n```\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/103391481",
    "html_url": "https://github.com/electron/electron/issues/1673#issuecomment-103391481",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1673",
    "id": 103391481,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2015-05-19T08:09:55Z",
    "updated_at": "2015-05-19T08:09:55Z",
    "body": "The `window.open` in Electron is only used for being compatible with traditional web pages, its API is very limited so it is not possible to find out a behavior that works for all cases. For any complex app it is recommended to use `browser-window` module directly.\n"
  }
]