[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/275714621",
    "html_url": "https://github.com/electron/electron/issues/8522#issuecomment-275714621",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/8522",
    "id": 275714621,
    "user": {
      "login": "gerhardberger",
      "id": 1059699,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1059699?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gerhardberger",
      "html_url": "https://github.com/gerhardberger",
      "followers_url": "https://api.github.com/users/gerhardberger/followers",
      "following_url": "https://api.github.com/users/gerhardberger/following{/other_user}",
      "gists_url": "https://api.github.com/users/gerhardberger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gerhardberger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gerhardberger/subscriptions",
      "organizations_url": "https://api.github.com/users/gerhardberger/orgs",
      "repos_url": "https://api.github.com/users/gerhardberger/repos",
      "events_url": "https://api.github.com/users/gerhardberger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gerhardberger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-27T16:54:32Z",
    "updated_at": "2017-01-27T16:54:32Z",
    "body": "You should try sending input events with [`webContents.sendInputEvent`](https://github.com/electron/electron/blob/master/docs/api/web-contents.md#contentssendinputeventevent). I've tried your example with an offscreen rendered browser window that gets input events with the method above and it's working. I'm on macOS, but I'm fairly certain it works on Windows too.\r\n\r\n![screen shot 2017-01-27 at 5 51 31 pm](https://cloud.githubusercontent.com/assets/1059699/22379351/4a52a33e-e4b9-11e6-905f-56a03ca22a06.png)\r\n\r\nbtw the cursor blinking is working here too, regarding your other issue. #8498\r\n\r\nHow are you running your code if you are sending the input events in C++?"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/275746110",
    "html_url": "https://github.com/electron/electron/issues/8522#issuecomment-275746110",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/8522",
    "id": 275746110,
    "user": {
      "login": "vulture",
      "id": 216979,
      "avatar_url": "https://avatars3.githubusercontent.com/u/216979?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vulture",
      "html_url": "https://github.com/vulture",
      "followers_url": "https://api.github.com/users/vulture/followers",
      "following_url": "https://api.github.com/users/vulture/following{/other_user}",
      "gists_url": "https://api.github.com/users/vulture/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vulture/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vulture/subscriptions",
      "organizations_url": "https://api.github.com/users/vulture/orgs",
      "repos_url": "https://api.github.com/users/vulture/repos",
      "events_url": "https://api.github.com/users/vulture/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vulture/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-27T19:02:44Z",
    "updated_at": "2017-01-27T19:03:03Z",
    "body": "I added some code to call webContents.sendInputEvent on a timer from js land, inside the <script> block:\r\n```\r\n    var myVar = setInterval(myTimer, 1000);\r\n\r\n    function myTimer() {\r\n      var w = require('electron').remote.getCurrentWindow().webContents;\r\n      w.sendInputEvent({        type: 'keyDown',        keyCode: 'Tab'      });\r\n      w.sendInputEvent({        type: 'keyUp',          keyCode: 'Tab'      });\r\n      w.sendInputEvent({        type: 'keyDown',        keyCode: 'End'      });\r\n      w.sendInputEvent({        type: 'keyUp',          keyCode: 'End'      });\r\n      w.sendInputEvent({        type: 'keyDown',        keyCode: 'a'        });\r\n      w.sendInputEvent({        type: 'char',           keyCode: 'a'        });\r\n      w.sendInputEvent({        type: 'keyUp',          keyCode: 'a'        });\r\n    }\r\n```\r\nAlso doesn't work (should cycle through the various elements and hit 'a', which does work, but focus/blur events never occurs). This essentially just calls down to ForwardKeyboardEvent anyway (in atom_api_web_contents.cc), so we're basically calling the same code.\r\n\r\nI'm converting raw Windows events via e.g. WebKeyboardEventBuilder::Build (in chromium) in C++ and then sending them to ForwardKeyboardEvent on the js thread via a uv async callback. This works fine as far as keyboard/mouse/mousewheel functionality itself. If it's working for you on Mac, maybe there's some Mac/Windows difference? Still doesn't work for me in Windows (neither the onblur/onfocus events nor the caret)."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/275752397",
    "html_url": "https://github.com/electron/electron/issues/8522#issuecomment-275752397",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/8522",
    "id": 275752397,
    "user": {
      "login": "vulture",
      "id": 216979,
      "avatar_url": "https://avatars3.githubusercontent.com/u/216979?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vulture",
      "html_url": "https://github.com/vulture",
      "followers_url": "https://api.github.com/users/vulture/followers",
      "following_url": "https://api.github.com/users/vulture/following{/other_user}",
      "gists_url": "https://api.github.com/users/vulture/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vulture/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vulture/subscriptions",
      "organizations_url": "https://api.github.com/users/vulture/orgs",
      "repos_url": "https://api.github.com/users/vulture/repos",
      "events_url": "https://api.github.com/users/vulture/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vulture/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-27T19:28:29Z",
    "updated_at": "2017-01-27T19:28:43Z",
    "body": "Wrote a quick tester to use with stock Electron.exe (instead of our modded one, just to rule out any changes we may have made) and got same results. \r\nimgur album generated from js below: http://imgur.com/a/09Jl1\r\nIf it worked, I'd expect to see focused/blurred rather than only a's in the second box.\r\nIf I change offscreen: true to false, then it works as expected (though in a live window, rather than a paint event).\r\nAlso note the lack of caret in the images (referring to that other issue, again).\r\n\r\nHere is the updated full html:\r\n```\r\n<html><head></head><body>\r\n  <center>\r\n    <font size=+4 color=#1f4fff>Hello world!</font><br>\r\n\r\n    <form action=\"action.cgi\">\r\n      First name: <input type=\"text\" id=\"fname\" onfocus=\"overlayFocus();\" onblur=\"overlayBlur();\"><br>\r\n      Last name: <input type=\"text\" id=\"lname\"><br>\r\n      <input type=\"submit\" value=\"Submit\" onclick=\"return false;\">\r\n    </form>\r\n\r\n  </center>\r\n\r\n\r\n  <script>\r\n    function overlayFocus() { document.getElementById('lname').value = \"focused\"; };\r\n    function overlayBlur() { document.getElementById('lname').value = \"blurred\"; };\r\n\r\n    var myVar = setInterval(myTimer, 1000);\r\n\r\n    function myTimer() {\r\n      var w = require('electron').remote.getCurrentWindow().webContents;\r\n      w.sendInputEvent({        type: 'keyDown',        keyCode: 'Tab'      });\r\n      w.sendInputEvent({        type: 'keyUp',          keyCode: 'Tab'      });\r\n      w.sendInputEvent({        type: 'keyDown',        keyCode: 'End'      });\r\n      w.sendInputEvent({        type: 'keyUp',          keyCode: 'End'      });\r\n      w.sendInputEvent({        type: 'keyDown',        keyCode: 'a'        });\r\n      w.sendInputEvent({        type: 'char',           keyCode: 'a'        });\r\n      w.sendInputEvent({        type: 'keyUp',          keyCode: 'a'        });\r\n    }\r\n\r\n  </script>\r\n\r\n</body></html>\r\n```\r\n\r\nAnd the .js (slightly modified but otherwise same) :\r\n\r\n```\r\nconst {app, BrowserWindow} = require('electron')\r\n\r\napp.disableHardwareAcceleration();\r\n\r\nlet win\r\n\r\nvar pngcount = 0;\r\n\r\napp.once('ready', () => {\r\n  win = new BrowserWindow({\r\n    //show: false,\r\n    //frame: false,\r\n    webPreferences: {\r\n      offscreen: true,\r\n      transparent: true,\r\n    },\r\n  })\r\n\r\n  win.loadURL('... url to the html above ...');\r\n  win.webContents.setFrameRate(30);\r\n\r\n  win.webContents.on('paint', (event, dirty, image) => {\r\n    var str = \"\" + pngcount;\r\n    var pad = \"0000\"\r\n    var ans = pad.substring(0, pad.length - str.length) + str\r\n    var filename = \"/temp/out\" + ans + \".png\";\r\n    var png = image.toPNG()\r\n    var fs = require('fs');\r\n    fs.writeFile(filename, png);\r\n    pngcount++;\r\n  })\r\n})\r\n```\r\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/279944622",
    "html_url": "https://github.com/electron/electron/issues/8522#issuecomment-279944622",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/8522",
    "id": 279944622,
    "user": {
      "login": "gerhardberger",
      "id": 1059699,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1059699?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gerhardberger",
      "html_url": "https://github.com/gerhardberger",
      "followers_url": "https://api.github.com/users/gerhardberger/followers",
      "following_url": "https://api.github.com/users/gerhardberger/following{/other_user}",
      "gists_url": "https://api.github.com/users/gerhardberger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gerhardberger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gerhardberger/subscriptions",
      "organizations_url": "https://api.github.com/users/gerhardberger/orgs",
      "repos_url": "https://api.github.com/users/gerhardberger/repos",
      "events_url": "https://api.github.com/users/gerhardberger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gerhardberger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-15T08:14:35Z",
    "updated_at": "2017-02-15T08:14:35Z",
    "body": "I could reproduce the issue with your code and the problem is that you need to explicitly focus the window. Adding this solved the issue for me:\r\n\r\n``` js\r\n// ...\r\n  win.loadURL('... url to the html above ...');\r\n  win.webContents.setFrameRate(30);\r\n\r\n  win.focusOnWebView(); // you could try `win.focus()` but `focusOnWebView` worked for me best\r\n\r\n  win.webContents.on('paint', (event, dirty, image) => {\r\n    var str = \"\" + pngcount;\r\n// ...\r\n```"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/280123457",
    "html_url": "https://github.com/electron/electron/issues/8522#issuecomment-280123457",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/8522",
    "id": 280123457,
    "user": {
      "login": "vulture",
      "id": 216979,
      "avatar_url": "https://avatars3.githubusercontent.com/u/216979?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vulture",
      "html_url": "https://github.com/vulture",
      "followers_url": "https://api.github.com/users/vulture/followers",
      "following_url": "https://api.github.com/users/vulture/following{/other_user}",
      "gists_url": "https://api.github.com/users/vulture/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vulture/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vulture/subscriptions",
      "organizations_url": "https://api.github.com/users/vulture/orgs",
      "repos_url": "https://api.github.com/users/vulture/repos",
      "events_url": "https://api.github.com/users/vulture/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vulture/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-15T20:06:39Z",
    "updated_at": "2017-02-15T20:06:39Z",
    "body": "Can confirm this fixes it for me. Thanks!"
  }
]