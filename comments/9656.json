[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/305942794",
    "html_url": "https://github.com/electron/electron/issues/9656#issuecomment-305942794",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/9656",
    "id": 305942794,
    "user": {
      "login": "javan",
      "id": 5355,
      "avatar_url": "https://avatars0.githubusercontent.com/u/5355?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/javan",
      "html_url": "https://github.com/javan",
      "followers_url": "https://api.github.com/users/javan/followers",
      "following_url": "https://api.github.com/users/javan/following{/other_user}",
      "gists_url": "https://api.github.com/users/javan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/javan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/javan/subscriptions",
      "organizations_url": "https://api.github.com/users/javan/orgs",
      "repos_url": "https://api.github.com/users/javan/repos",
      "events_url": "https://api.github.com/users/javan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/javan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-03T01:50:05Z",
    "updated_at": "2017-06-03T01:50:05Z",
    "body": "These issues are covered pretty well in https://github.com/electron/electron/blob/master/docs/tutorial/security.md#checklist"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/305943711",
    "html_url": "https://github.com/electron/electron/issues/9656#issuecomment-305943711",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/9656",
    "id": 305943711,
    "user": {
      "login": "sancarn",
      "id": 7938900,
      "avatar_url": "https://avatars2.githubusercontent.com/u/7938900?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sancarn",
      "html_url": "https://github.com/sancarn",
      "followers_url": "https://api.github.com/users/sancarn/followers",
      "following_url": "https://api.github.com/users/sancarn/following{/other_user}",
      "gists_url": "https://api.github.com/users/sancarn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sancarn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sancarn/subscriptions",
      "organizations_url": "https://api.github.com/users/sancarn/orgs",
      "repos_url": "https://api.github.com/users/sancarn/repos",
      "events_url": "https://api.github.com/users/sancarn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sancarn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-03T02:07:13Z",
    "updated_at": "2017-06-03T02:07:43Z",
    "body": "I hadn't ever seen this tutorial... That's a lot more potential issues than I had imagined even. It's good to know that these things will need to be implemented in our dynamic implementation! Thanks for the link!"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/305950410",
    "html_url": "https://github.com/electron/electron/issues/9656#issuecomment-305950410",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/9656",
    "id": 305950410,
    "user": {
      "login": "MarshallOfSound",
      "id": 6634592,
      "avatar_url": "https://avatars0.githubusercontent.com/u/6634592?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarshallOfSound",
      "html_url": "https://github.com/MarshallOfSound",
      "followers_url": "https://api.github.com/users/MarshallOfSound/followers",
      "following_url": "https://api.github.com/users/MarshallOfSound/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarshallOfSound/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarshallOfSound/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarshallOfSound/subscriptions",
      "organizations_url": "https://api.github.com/users/MarshallOfSound/orgs",
      "repos_url": "https://api.github.com/users/MarshallOfSound/repos",
      "events_url": "https://api.github.com/users/MarshallOfSound/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarshallOfSound/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-03T04:32:44Z",
    "updated_at": "2017-06-03T04:32:53Z",
    "body": "Thanks @javan, this use case (and a lot of others) are covered in the linked [security checklist](https://github.com/electron/electron/blob/master/docs/tutorial/security.md#checklist)\r\n\r\nThe bit of information relevant to this is regarding `nodeIntegration` when displaying remote content.\r\n\r\n> Disable the Node integration in all renderers that display remote content (setting nodeIntegration to false in webPreferences)"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/305950620",
    "html_url": "https://github.com/electron/electron/issues/9656#issuecomment-305950620",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/9656",
    "id": 305950620,
    "user": {
      "login": "enlight",
      "id": 233003,
      "avatar_url": "https://avatars3.githubusercontent.com/u/233003?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/enlight",
      "html_url": "https://github.com/enlight",
      "followers_url": "https://api.github.com/users/enlight/followers",
      "following_url": "https://api.github.com/users/enlight/following{/other_user}",
      "gists_url": "https://api.github.com/users/enlight/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/enlight/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/enlight/subscriptions",
      "organizations_url": "https://api.github.com/users/enlight/orgs",
      "repos_url": "https://api.github.com/users/enlight/repos",
      "events_url": "https://api.github.com/users/enlight/events{/privacy}",
      "received_events_url": "https://api.github.com/users/enlight/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-03T04:37:24Z",
    "updated_at": "2017-06-03T04:37:24Z",
    "body": "@tarruda implemented some sandbox functionality in PR #6919 that shipped in Electron 1.4.2, and you can find some discussion on sandboxed webviews in #9611. However, I'd like to emphasize this line by @tarruda in the aforementioned discussion:\r\n\r\n> There's still a lot of work to be done before electron can be considered secure as chromium for running untrusted content."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/305980927",
    "html_url": "https://github.com/electron/electron/issues/9656#issuecomment-305980927",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/9656",
    "id": 305980927,
    "user": {
      "login": "sancarn",
      "id": 7938900,
      "avatar_url": "https://avatars2.githubusercontent.com/u/7938900?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sancarn",
      "html_url": "https://github.com/sancarn",
      "followers_url": "https://api.github.com/users/sancarn/followers",
      "following_url": "https://api.github.com/users/sancarn/following{/other_user}",
      "gists_url": "https://api.github.com/users/sancarn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sancarn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sancarn/subscriptions",
      "organizations_url": "https://api.github.com/users/sancarn/orgs",
      "repos_url": "https://api.github.com/users/sancarn/repos",
      "events_url": "https://api.github.com/users/sancarn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sancarn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-03T15:11:35Z",
    "updated_at": "2017-06-03T15:11:35Z",
    "body": "Thanks all for the feedback! üëç "
  }
]