[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/228512908",
    "html_url": "https://github.com/electron/electron/pull/6229#issuecomment-228512908",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/6229",
    "id": 228512908,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2016-06-25T05:18:11Z",
    "updated_at": "2016-06-25T05:18:11Z",
    "body": "I think the correct place to do this is in the native menu implementation. The `Menu` class is essentially a model, and we should not modify the model when showing the menu.\n\nUsing the mac implementation as example, we need to add an option in `AtomMenuController` to specify whether to show default accelerators for roles, and set the option when creating menus:\n\n``` c++\nvoid TrayIconCocoa::SetContextMenu(ui::SimpleMenuModel* menu_model) {\n  menu_.reset([[AtomMenuController alloc] initWithModel:menu_model\n                                  useDefaultAccelerator:NO]);\n}\n```\n\nThen in the implementation of `AtomMenuController` pass this option when calling `model->GetAcceleratorAt`, and in JS code we can easily decide whether to use default accelerator:\n\n``` js\n    // menu.js\n    getAcceleratorForCommandId: (commandId, useDefaultAccelerator) => {\n      var command = this.commandsMap[commandId]\n      if (command.accelerator)\n        return command.accelerator\n      return useDefaultAccelerator ? roles.getDefaultAccelerator(command.role) : ''\n    },\n```\n\nThis avoid iterating all menu items, and handle the case correctly when Tray and application menu share the same menu.\n\nThe implementation on Windows and Linux would be much complex though since we need to create a subclass of `views::MenuDelegate`.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/230080523",
    "html_url": "https://github.com/electron/electron/pull/6229#issuecomment-230080523",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/6229",
    "id": 230080523,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2016-07-02T03:10:33Z",
    "updated_at": "2016-07-02T03:10:33Z",
    "body": "@kevinsawicki I think this implementation is against the original purpose of `MenuModel`'s design, the model itself should be neutral to all menus and each type of menu should use the same instance of model. But this PR wraps the model inside a new model, and passes the new model to each menu.\n\nThe ideal implementation in my mind is like this: https://github.com/electron/electron/commit/292f3ef13bfff9325cd47d762eecbe30f490ff88.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/231168002",
    "html_url": "https://github.com/electron/electron/pull/6229#issuecomment-231168002",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/6229",
    "id": 231168002,
    "user": {
      "login": "kevinsawicki",
      "id": 671378,
      "avatar_url": "https://avatars0.githubusercontent.com/u/671378?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kevinsawicki",
      "html_url": "https://github.com/kevinsawicki",
      "followers_url": "https://api.github.com/users/kevinsawicki/followers",
      "following_url": "https://api.github.com/users/kevinsawicki/following{/other_user}",
      "gists_url": "https://api.github.com/users/kevinsawicki/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kevinsawicki/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kevinsawicki/subscriptions",
      "organizations_url": "https://api.github.com/users/kevinsawicki/orgs",
      "repos_url": "https://api.github.com/users/kevinsawicki/repos",
      "events_url": "https://api.github.com/users/kevinsawicki/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kevinsawicki/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2016-07-07T18:35:30Z",
    "updated_at": "2016-07-07T18:35:30Z",
    "body": "Closing in favor of #6385\n"
  }
]