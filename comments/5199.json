[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/211830443",
    "html_url": "https://github.com/electron/electron/pull/5199#issuecomment-211830443",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/5199",
    "id": 211830443,
    "user": {
      "login": "deepak1556",
      "id": 964386,
      "avatar_url": "https://avatars2.githubusercontent.com/u/964386?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/deepak1556",
      "html_url": "https://github.com/deepak1556",
      "followers_url": "https://api.github.com/users/deepak1556/followers",
      "following_url": "https://api.github.com/users/deepak1556/following{/other_user}",
      "gists_url": "https://api.github.com/users/deepak1556/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/deepak1556/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/deepak1556/subscriptions",
      "organizations_url": "https://api.github.com/users/deepak1556/orgs",
      "repos_url": "https://api.github.com/users/deepak1556/repos",
      "events_url": "https://api.github.com/users/deepak1556/events{/privacy}",
      "received_events_url": "https://api.github.com/users/deepak1556/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-19T09:49:50Z",
    "updated_at": "2016-04-19T09:49:50Z",
    "body": "We can implement a `IsLoadingToDifferentDocument` which checks if current site instance and pending site instance are different. Frames created from javascript seems to not emit `DidFinishLoad` on parent frame, thats why the current implementation failed.\n\n```\nbool WebContents::IsLoadingToDIfferentDocument() const {\n  return (web_contents()->GetSiteInstance() !=\n          web_contents()->GetPendingSiteInstance());\n}\n```\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/211941027",
    "html_url": "https://github.com/electron/electron/pull/5199#issuecomment-211941027",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/5199",
    "id": 211941027,
    "user": {
      "login": "Mr0grog",
      "id": 74178,
      "avatar_url": "https://avatars3.githubusercontent.com/u/74178?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Mr0grog",
      "html_url": "https://github.com/Mr0grog",
      "followers_url": "https://api.github.com/users/Mr0grog/followers",
      "following_url": "https://api.github.com/users/Mr0grog/following{/other_user}",
      "gists_url": "https://api.github.com/users/Mr0grog/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Mr0grog/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Mr0grog/subscriptions",
      "organizations_url": "https://api.github.com/users/Mr0grog/orgs",
      "repos_url": "https://api.github.com/users/Mr0grog/repos",
      "events_url": "https://api.github.com/users/Mr0grog/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Mr0grog/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-19T14:19:09Z",
    "updated_at": "2016-04-19T14:19:09Z",
    "body": "@robo if you look at #5183, `IsLoadingToDifferentFrame` is what I originally tried and it’s not feasible.\n\nThe point, I think, is to not delay at all if a sub-frame is loading but the main frame is finished. Otherwise we could just listen to `did-frame-finish-load` instead of `did-finish-load` and the problem would be solved.\n\n(Is that what this mechanism is _supposed_ to do? It didn't seem like it should be, but if so, then I guess that's what this should do. As a user of Electron, though, I think that would make me just want to avoid this API and write my own wrapper to WebFrame.)\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/211962942",
    "html_url": "https://github.com/electron/electron/pull/5199#issuecomment-211962942",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/5199",
    "id": 211962942,
    "user": {
      "login": "deepak1556",
      "id": 964386,
      "avatar_url": "https://avatars2.githubusercontent.com/u/964386?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/deepak1556",
      "html_url": "https://github.com/deepak1556",
      "followers_url": "https://api.github.com/users/deepak1556/followers",
      "following_url": "https://api.github.com/users/deepak1556/following{/other_user}",
      "gists_url": "https://api.github.com/users/deepak1556/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/deepak1556/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/deepak1556/subscriptions",
      "organizations_url": "https://api.github.com/users/deepak1556/orgs",
      "repos_url": "https://api.github.com/users/deepak1556/repos",
      "events_url": "https://api.github.com/users/deepak1556/events{/privacy}",
      "received_events_url": "https://api.github.com/users/deepak1556/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-19T14:55:03Z",
    "updated_at": "2016-04-19T14:55:03Z",
    "body": "I believe you tried with `IsLoadingToDifferentDocument` from chromium, it wouldnt serve our purpose as its only helpful under window.history navigations. I was proposing to implement our own version of the method based on siteInstance.\n\n```\ndiff --git a/atom/browser/api/atom_api_web_contents.cc b/atom/browser/api/atom_api_web_contents.cc\nindex 64a76d5..0695866 100644\n--- a/atom/browser/api/atom_api_web_contents.cc\n+++ b/atom/browser/api/atom_api_web_contents.cc\n@@ -793,6 +793,11 @@ bool WebContents::IsLoading() const {\n   return web_contents()->IsLoading();\n }\n\n+bool WebContents::IsLoadingToDifferentDocument() const {\n+  return (web_contents()->GetSiteInstance() !=\n+          web_contents()->GetPendingSiteInstance()) && IsLoading();\n+}\n+\n bool WebContents::IsWaitingForResponse() const {\n   return web_contents()->IsWaitingForResponse();\n }\n@@ -1189,6 +1194,8 @@ void WebContents::BuildPrototype(v8::Isolate* isolate,\n       .SetMethod(\"_getURL\", &WebContents::GetURL)\n       .SetMethod(\"getTitle\", &WebContents::GetTitle)\n       .SetMethod(\"isLoading\", &WebContents::IsLoading)\n+      .SetMethod(\"_isLoadingToDifferentDocument\",\n+                 &WebContents::IsLoadingToDifferentDocument)\n       .SetMethod(\"isWaitingForResponse\", &WebContents::IsWaitingForResponse)\n       .SetMethod(\"_stop\", &WebContents::Stop)\n       .SetMethod(\"_goBack\", &WebContents::GoBack)\ndiff --git a/atom/browser/api/atom_api_web_contents.h b/atom/browser/api/atom_api_web_contents.h\nindex 0cb2a34..e7762bc 100644\n--- a/atom/browser/api/atom_api_web_contents.h\n+++ b/atom/browser/api/atom_api_web_contents.h\n@@ -62,6 +62,7 @@ class WebContents : public mate::TrackableObject<WebContents>,\n   GURL GetURL() const;\n   base::string16 GetTitle() const;\n   bool IsLoading() const;\n+  bool IsLoadingToDifferentDocument() const;\n   bool IsWaitingForResponse() const;\n   void Stop();\n   void ReloadIgnoringCache();\ndiff --git a/lib/browser/api/web-contents.js b/lib/browser/api/web-contents.js\nindex 40efa77..907ac9e 100644\n--- a/lib/browser/api/web-contents.js\n+++ b/lib/browser/api/web-contents.js\n@@ -116,7 +116,7 @@ let wrapWebContents = function (webContents) {\n       callback = hasUserGesture\n       hasUserGesture = false\n     }\n-    if (this.getURL() && !this.isLoading()) {\n+    if (this.getURL() && !this._isLoadingToDifferentDocument()) {\n       return asyncWebFrameMethods.call(this, requestId, 'executeJavaScript', callback, code, hasUserGesture)\n     } else {\n       return this.once('did-finish-load', asyncWebFrameMethods.bind(this, requestId, 'executeJavaScript', callback, code, hasUserGesture))\n```\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/212020317",
    "html_url": "https://github.com/electron/electron/pull/5199#issuecomment-212020317",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/5199",
    "id": 212020317,
    "user": {
      "login": "Mr0grog",
      "id": 74178,
      "avatar_url": "https://avatars3.githubusercontent.com/u/74178?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Mr0grog",
      "html_url": "https://github.com/Mr0grog",
      "followers_url": "https://api.github.com/users/Mr0grog/followers",
      "following_url": "https://api.github.com/users/Mr0grog/following{/other_user}",
      "gists_url": "https://api.github.com/users/Mr0grog/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Mr0grog/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Mr0grog/subscriptions",
      "organizations_url": "https://api.github.com/users/Mr0grog/orgs",
      "repos_url": "https://api.github.com/users/Mr0grog/repos",
      "events_url": "https://api.github.com/users/Mr0grog/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Mr0grog/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-19T17:06:05Z",
    "updated_at": "2016-04-19T17:06:05Z",
    "body": "Oh, sorry, I didn’t understand you meant implementing our own that way! That explains why what you wrote differed from what I remembered reading in Chromium’s source :P\n\nIt should probably be named differently, though, to avoid confusion, since the implementation you are suggesting above has vastly different semantics from the Chromium method.\n\nOther question: the Chromium source says:\n\n> A page's SiteInstance is determined by a combination of where the page comes from (the site) and which frames have references to each other (the instance)… If the user navigates within a site, the same SiteInstance is used. (https://chromium.googlesource.com/chromium/src/+/master/content/public/browser/site_instance.h)\n\n…so it doesn’t seem like comparing the current and pending site instances would accurately tell us whether a page load is happening, e.g. if navigating from `http://example.com/index.html` to `http://example.com/about.html`. Or am I misunderstanding?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/212049129",
    "html_url": "https://github.com/electron/electron/pull/5199#issuecomment-212049129",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/5199",
    "id": 212049129,
    "user": {
      "login": "deepak1556",
      "id": 964386,
      "avatar_url": "https://avatars2.githubusercontent.com/u/964386?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/deepak1556",
      "html_url": "https://github.com/deepak1556",
      "followers_url": "https://api.github.com/users/deepak1556/followers",
      "following_url": "https://api.github.com/users/deepak1556/following{/other_user}",
      "gists_url": "https://api.github.com/users/deepak1556/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/deepak1556/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/deepak1556/subscriptions",
      "organizations_url": "https://api.github.com/users/deepak1556/orgs",
      "repos_url": "https://api.github.com/users/deepak1556/repos",
      "events_url": "https://api.github.com/users/deepak1556/events{/privacy}",
      "received_events_url": "https://api.github.com/users/deepak1556/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-19T18:08:04Z",
    "updated_at": "2016-04-19T18:08:04Z",
    "body": "You are right, but in electron we restart render process for pretty much every navigation. So the check should be valid and it is just to determine main frame navigation, should be used along with `IsLoading`. This is not the best fix, just want to throw some possible ideas.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/212258760",
    "html_url": "https://github.com/electron/electron/pull/5199#issuecomment-212258760",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/5199",
    "id": 212258760,
    "user": {
      "login": "Mr0grog",
      "id": 74178,
      "avatar_url": "https://avatars3.githubusercontent.com/u/74178?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Mr0grog",
      "html_url": "https://github.com/Mr0grog",
      "followers_url": "https://api.github.com/users/Mr0grog/followers",
      "following_url": "https://api.github.com/users/Mr0grog/following{/other_user}",
      "gists_url": "https://api.github.com/users/Mr0grog/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Mr0grog/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Mr0grog/subscriptions",
      "organizations_url": "https://api.github.com/users/Mr0grog/orgs",
      "repos_url": "https://api.github.com/users/Mr0grog/repos",
      "events_url": "https://api.github.com/users/Mr0grog/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Mr0grog/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-20T05:10:39Z",
    "updated_at": "2016-04-20T05:11:13Z",
    "body": "Thanks, @deepak1556. I wound up mostly following your advice, but with a couple changes:\n- I kept the method named `isLoadingMainFrame()` to reduce confusion with `IsLoadingToDifferentDocument` (since they have different semantics). Can rename if that doesn’t seem good.\n- I wound up pulling `GetLastCommittedURL()` into the equation because it turns out we keep the same site instance on the very first navigation (well, that or there’s no pending site instance; I didn’t check which). I _think_ the only instance in which `GetLastCommittedURL()` would be empty is if no previous page had ever been loaded. Let me know if that’s incorrect.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/212274640",
    "html_url": "https://github.com/electron/electron/pull/5199#issuecomment-212274640",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/5199",
    "id": 212274640,
    "user": {
      "login": "deepak1556",
      "id": 964386,
      "avatar_url": "https://avatars2.githubusercontent.com/u/964386?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/deepak1556",
      "html_url": "https://github.com/deepak1556",
      "followers_url": "https://api.github.com/users/deepak1556/followers",
      "following_url": "https://api.github.com/users/deepak1556/following{/other_user}",
      "gists_url": "https://api.github.com/users/deepak1556/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/deepak1556/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/deepak1556/subscriptions",
      "organizations_url": "https://api.github.com/users/deepak1556/orgs",
      "repos_url": "https://api.github.com/users/deepak1556/repos",
      "events_url": "https://api.github.com/users/deepak1556/events{/privacy}",
      "received_events_url": "https://api.github.com/users/deepak1556/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-20T06:03:32Z",
    "updated_at": "2016-04-20T06:03:32Z",
    "body": ":+1: \n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/212394222",
    "html_url": "https://github.com/electron/electron/pull/5199#issuecomment-212394222",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/5199",
    "id": 212394222,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2016-04-20T11:49:53Z",
    "updated_at": "2016-04-20T11:49:53Z",
    "body": "👍 \n"
  }
]