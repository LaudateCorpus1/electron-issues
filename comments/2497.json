[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/130813345",
    "html_url": "https://github.com/electron/electron/issues/2497#issuecomment-130813345",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2497",
    "id": 130813345,
    "user": {
      "login": "mattotodd",
      "id": 1211438,
      "avatar_url": "https://avatars0.githubusercontent.com/u/1211438?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattotodd",
      "html_url": "https://github.com/mattotodd",
      "followers_url": "https://api.github.com/users/mattotodd/followers",
      "following_url": "https://api.github.com/users/mattotodd/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattotodd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattotodd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattotodd/subscriptions",
      "organizations_url": "https://api.github.com/users/mattotodd/orgs",
      "repos_url": "https://api.github.com/users/mattotodd/repos",
      "events_url": "https://api.github.com/users/mattotodd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattotodd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-13T19:32:54Z",
    "updated_at": "2015-08-13T19:33:14Z",
    "body": "Was able to build past the import steps by adding my lib folder to the `include_dirs` of the electron_lib build step,  but now the Electron Framework POSTBUILD step throws:\n\n```\nUndefined symbols for architecture x86_64:\n  \"_OBJC_CLASS_$_FooSettings\", referenced from:\n      objc-class-ref in libelectron_lib.a(electron_lib.platform_util_mac.o)\nld: symbol(s) not found for architecture x86_64\n```\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/130907783",
    "html_url": "https://github.com/electron/electron/issues/2497#issuecomment-130907783",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2497",
    "id": 130907783,
    "user": {
      "login": "paulcbetts",
      "id": 1396,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1396?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulcbetts",
      "html_url": "https://github.com/paulcbetts",
      "followers_url": "https://api.github.com/users/paulcbetts/followers",
      "following_url": "https://api.github.com/users/paulcbetts/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulcbetts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulcbetts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulcbetts/subscriptions",
      "organizations_url": "https://api.github.com/users/paulcbetts/orgs",
      "repos_url": "https://api.github.com/users/paulcbetts/repos",
      "events_url": "https://api.github.com/users/paulcbetts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulcbetts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-14T01:07:27Z",
    "updated_at": "2015-08-14T01:07:40Z",
    "body": "If you want to extend Electron, an easier way would be to create a node.js module that includes your Framework via static linking, then you don't need to modify Electron itself\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/130959707",
    "html_url": "https://github.com/electron/electron/issues/2497#issuecomment-130959707",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2497",
    "id": 130959707,
    "user": {
      "login": "mattotodd",
      "id": 1211438,
      "avatar_url": "https://avatars0.githubusercontent.com/u/1211438?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattotodd",
      "html_url": "https://github.com/mattotodd",
      "followers_url": "https://api.github.com/users/mattotodd/followers",
      "following_url": "https://api.github.com/users/mattotodd/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattotodd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattotodd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattotodd/subscriptions",
      "organizations_url": "https://api.github.com/users/mattotodd/orgs",
      "repos_url": "https://api.github.com/users/mattotodd/repos",
      "events_url": "https://api.github.com/users/mattotodd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattotodd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-14T04:13:38Z",
    "updated_at": "2015-08-14T04:13:38Z",
    "body": "Thanks for the reply @paulcbetts  I'd rather not modify electron if I don't have to\n\nI guess I was thinking since electron was taking care of using the correct mac/windows related code for each platform,  that would be the place for me to add my code.\n\nIf I were to write a node module that used static linking, and needed to use it with both windows and mac versions of electron (the existing library I am trying to link to is written in objective-c for mac, c++ for windows),  would I be making the distinction to use the correct platform library in my javascript code,  or would I have to build a version of the node module for each platform?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/130963911",
    "html_url": "https://github.com/electron/electron/issues/2497#issuecomment-130963911",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2497",
    "id": 130963911,
    "user": {
      "login": "paulcbetts",
      "id": 1396,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1396?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulcbetts",
      "html_url": "https://github.com/paulcbetts",
      "followers_url": "https://api.github.com/users/paulcbetts/followers",
      "following_url": "https://api.github.com/users/paulcbetts/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulcbetts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulcbetts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulcbetts/subscriptions",
      "organizations_url": "https://api.github.com/users/paulcbetts/orgs",
      "repos_url": "https://api.github.com/users/paulcbetts/repos",
      "events_url": "https://api.github.com/users/paulcbetts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulcbetts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-14T04:38:39Z",
    "updated_at": "2015-08-14T04:38:39Z",
    "body": "> or would I have to build a version of the node module for each platform?\n\nYou usually do this via setting up your Gyp file in your native module to include the right native code per-platform. Since native node modules usually get rebuilt from source via `npm rebuild` (then later, electron-rebuild), the appropriate section of your Gyp file will get run\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/131212105",
    "html_url": "https://github.com/electron/electron/issues/2497#issuecomment-131212105",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2497",
    "id": 131212105,
    "user": {
      "login": "mattotodd",
      "id": 1211438,
      "avatar_url": "https://avatars0.githubusercontent.com/u/1211438?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattotodd",
      "html_url": "https://github.com/mattotodd",
      "followers_url": "https://api.github.com/users/mattotodd/followers",
      "following_url": "https://api.github.com/users/mattotodd/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattotodd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattotodd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattotodd/subscriptions",
      "organizations_url": "https://api.github.com/users/mattotodd/orgs",
      "repos_url": "https://api.github.com/users/mattotodd/repos",
      "events_url": "https://api.github.com/users/mattotodd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattotodd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-14T19:11:59Z",
    "updated_at": "2015-08-14T19:11:59Z",
    "body": "ok @paulcbetts been banging my head against this for a while now, and i suspect that the reason I am having trouble with the addon is that it can't be written in objective-c code, or at least when I go to use any mac CoreFoundation (like NSString)  it throws an error.   Do you know, can you only write a node.js addon in pure c++ code.  Can I not take advantage of any mac specific framework? I realize you may not know the answer to this.\n\nIf so, I may need to go back to forking electron, where I can use objective-c code (just having trouble linking my library)\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/131269240",
    "html_url": "https://github.com/electron/electron/issues/2497#issuecomment-131269240",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2497",
    "id": 131269240,
    "user": {
      "login": "paulcbetts",
      "id": 1396,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1396?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulcbetts",
      "html_url": "https://github.com/paulcbetts",
      "followers_url": "https://api.github.com/users/paulcbetts/followers",
      "following_url": "https://api.github.com/users/paulcbetts/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulcbetts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulcbetts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulcbetts/subscriptions",
      "organizations_url": "https://api.github.com/users/paulcbetts/orgs",
      "repos_url": "https://api.github.com/users/paulcbetts/repos",
      "events_url": "https://api.github.com/users/paulcbetts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulcbetts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-14T23:55:35Z",
    "updated_at": "2015-08-14T23:55:35Z",
    "body": "> Do you know, can you only write a node.js addon in pure c++ code. Can I not take advantage of any mac specific framework? I realize you may not know the answer to this.\n\nYou should use Objective-C++ (i.e. C++ classes + you can call Objective-C), the extension is `.mm`\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/158545413",
    "html_url": "https://github.com/electron/electron/issues/2497#issuecomment-158545413",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2497",
    "id": 158545413,
    "user": {
      "login": "gabriel",
      "id": 2669,
      "avatar_url": "https://avatars1.githubusercontent.com/u/2669?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gabriel",
      "html_url": "https://github.com/gabriel",
      "followers_url": "https://api.github.com/users/gabriel/followers",
      "following_url": "https://api.github.com/users/gabriel/following{/other_user}",
      "gists_url": "https://api.github.com/users/gabriel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gabriel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gabriel/subscriptions",
      "organizations_url": "https://api.github.com/users/gabriel/orgs",
      "repos_url": "https://api.github.com/users/gabriel/repos",
      "events_url": "https://api.github.com/users/gabriel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gabriel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-20T22:37:43Z",
    "updated_at": "2015-11-20T22:37:43Z",
    "body": "Are there any examples somewhere of packaging a mac framework as a native node module for use in the Electron app?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/163533494",
    "html_url": "https://github.com/electron/electron/issues/2497#issuecomment-163533494",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2497",
    "id": 163533494,
    "user": {
      "login": "mralexgray",
      "id": 262517,
      "avatar_url": "https://avatars0.githubusercontent.com/u/262517?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mralexgray",
      "html_url": "https://github.com/mralexgray",
      "followers_url": "https://api.github.com/users/mralexgray/followers",
      "following_url": "https://api.github.com/users/mralexgray/following{/other_user}",
      "gists_url": "https://api.github.com/users/mralexgray/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mralexgray/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mralexgray/subscriptions",
      "organizations_url": "https://api.github.com/users/mralexgray/orgs",
      "repos_url": "https://api.github.com/users/mralexgray/repos",
      "events_url": "https://api.github.com/users/mralexgray/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mralexgray/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-10T08:35:20Z",
    "updated_at": "2015-12-10T08:35:20Z",
    "body": "+1 @gabriel re: wanting some concrete examples.\n"
  }
]