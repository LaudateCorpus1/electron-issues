[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/235458440",
    "html_url": "https://github.com/electron/electron/pull/6620#issuecomment-235458440",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/6620",
    "id": 235458440,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2016-07-27T01:49:34Z",
    "updated_at": "2016-07-27T01:49:34Z",
    "body": "👍 \n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/235523114",
    "html_url": "https://github.com/electron/electron/pull/6620#issuecomment-235523114",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/6620",
    "id": 235523114,
    "user": {
      "login": "davej",
      "id": 26971,
      "avatar_url": "https://avatars3.githubusercontent.com/u/26971?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/davej",
      "html_url": "https://github.com/davej",
      "followers_url": "https://api.github.com/users/davej/followers",
      "following_url": "https://api.github.com/users/davej/following{/other_user}",
      "gists_url": "https://api.github.com/users/davej/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/davej/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/davej/subscriptions",
      "organizations_url": "https://api.github.com/users/davej/orgs",
      "repos_url": "https://api.github.com/users/davej/repos",
      "events_url": "https://api.github.com/users/davej/events{/privacy}",
      "received_events_url": "https://api.github.com/users/davej/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-27T08:39:49Z",
    "updated_at": "2016-07-27T08:39:49Z",
    "body": "@kevinsawicki: This is awesome!\n\nMy understanding is that to get selection working with windows (like in your screenshot), we would do something like this:\n\n``` js\nlet win = new BrowserWindow({\n  //...\n})\ntray.on('click', () => {\n  (win.isVisible()) ? win.hide() : win.show()\n})\nwin.on('show', () => {\n  tray.setHighlightMode('always')\n})\nwin.on('hide', () => {\n  tray.setHighlightMode('never')\n})\n```\n\nThe semantics of `always`/`never` highlight mode seems a bit confusing in this case. Maybe it's worth clarifying in the docs because using a window seems to be quite a common case and people might think that they want `selection` mode at first glance.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/235644939",
    "html_url": "https://github.com/electron/electron/pull/6620#issuecomment-235644939",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/6620",
    "id": 235644939,
    "user": {
      "login": "kevinsawicki",
      "id": 671378,
      "avatar_url": "https://avatars0.githubusercontent.com/u/671378?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kevinsawicki",
      "html_url": "https://github.com/kevinsawicki",
      "followers_url": "https://api.github.com/users/kevinsawicki/followers",
      "following_url": "https://api.github.com/users/kevinsawicki/following{/other_user}",
      "gists_url": "https://api.github.com/users/kevinsawicki/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kevinsawicki/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kevinsawicki/subscriptions",
      "organizations_url": "https://api.github.com/users/kevinsawicki/orgs",
      "repos_url": "https://api.github.com/users/kevinsawicki/repos",
      "events_url": "https://api.github.com/users/kevinsawicki/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kevinsawicki/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2016-07-27T16:40:21Z",
    "updated_at": "2016-07-27T16:40:21Z",
    "body": "> The semantics of always/never highlight mode seems a bit confusing in this case. \n\nYeah, because Electron already had a highlight mode API, I went with expanding that API instead of creating a new one that would be used instead of `setHighlightMode`.\n\nI don't think this was completely ideal, but I thought it was the best option to not break existing apps and having a second API would seem be to confusing as well, such as having both `setHightlightMode` and `setHighlightIcon` for example.\n\nYour example looks correct though.\n\nWe could switch `always`/`never` to `on`/`off` but for apps that want to completely disable it, `never` felt like a good choice.\n\n> Maybe it's worth clarifying in the docs because using a window seems to be quite a common case and people might think that they want selection mode at first glance.\n\nYeah, sounds good, any ideas for what to add to the docs to make it clearer would be greatly appreciated.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/235680278",
    "html_url": "https://github.com/electron/electron/pull/6620#issuecomment-235680278",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/6620",
    "id": 235680278,
    "user": {
      "login": "davej",
      "id": 26971,
      "avatar_url": "https://avatars3.githubusercontent.com/u/26971?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/davej",
      "html_url": "https://github.com/davej",
      "followers_url": "https://api.github.com/users/davej/followers",
      "following_url": "https://api.github.com/users/davej/following{/other_user}",
      "gists_url": "https://api.github.com/users/davej/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/davej/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/davej/subscriptions",
      "organizations_url": "https://api.github.com/users/davej/orgs",
      "repos_url": "https://api.github.com/users/davej/repos",
      "events_url": "https://api.github.com/users/davej/events{/privacy}",
      "received_events_url": "https://api.github.com/users/davej/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-27T18:41:49Z",
    "updated_at": "2016-07-27T18:48:35Z",
    "body": "> I don't think this was completely ideal, but I thought it was the best option to not break existing apps and having a second API would seem be to confusing as well, such as having both setHightlightMode and setHighlightIcon for example.\n\nYeah, I understand, that's fair.\n\n> We could switch always/never to on/off but for apps that want to completely disable it, never felt like a good choice.\n\nPersonally I prefer this but `1.3.1` is released so I suppose it's best to stick with `always`/`never`.\n\n> Yeah, sounds good, any ideas for what to add to the docs to make it clearer would be greatly appreciated.\n\nI think having a code example of using tray with a window (like in my original comment) would clear up the ambiguities. Also perhaps emphasise that `selection` is for use with context menus. I can do a PR if you like.\n\nOne final thought, what do you think of coupling the tray with the associated window (just like context menus). You could then toggle the icon based on the visibility of `win`. Perhaps an API like this:\n\n``` js\ntray.setWindow(win)\ntray.setHighlightMode('selection')\n```\n\nor alternatively:\n\n``` js\ntray.setHighlightMode('selection', win)\n```\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/235702835",
    "html_url": "https://github.com/electron/electron/pull/6620#issuecomment-235702835",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/6620",
    "id": 235702835,
    "user": {
      "login": "kevinsawicki",
      "id": 671378,
      "avatar_url": "https://avatars0.githubusercontent.com/u/671378?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kevinsawicki",
      "html_url": "https://github.com/kevinsawicki",
      "followers_url": "https://api.github.com/users/kevinsawicki/followers",
      "following_url": "https://api.github.com/users/kevinsawicki/following{/other_user}",
      "gists_url": "https://api.github.com/users/kevinsawicki/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kevinsawicki/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kevinsawicki/subscriptions",
      "organizations_url": "https://api.github.com/users/kevinsawicki/orgs",
      "repos_url": "https://api.github.com/users/kevinsawicki/repos",
      "events_url": "https://api.github.com/users/kevinsawicki/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kevinsawicki/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2016-07-27T20:02:12Z",
    "updated_at": "2016-07-27T20:02:12Z",
    "body": ">  I can do a PR if you like.\n\nThat would be awesome, thanks 👍 \n\n> One final thought, what do you think of coupling the tray with the associated window\n\nThat is an interesting idea that would definitely save some tray/window boilerplate event code that most apps have but I'm not sure initially whether it is better to have in Electron core or a userland library like `menubar` or something similar.\n"
  }
]