[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/273311214",
    "html_url": "https://github.com/electron/electron/issues/8425#issuecomment-273311214",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/8425",
    "id": 273311214,
    "user": {
      "login": "serapath",
      "id": 1771897,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1771897?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/serapath",
      "html_url": "https://github.com/serapath",
      "followers_url": "https://api.github.com/users/serapath/followers",
      "following_url": "https://api.github.com/users/serapath/following{/other_user}",
      "gists_url": "https://api.github.com/users/serapath/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/serapath/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/serapath/subscriptions",
      "organizations_url": "https://api.github.com/users/serapath/orgs",
      "repos_url": "https://api.github.com/users/serapath/repos",
      "events_url": "https://api.github.com/users/serapath/events{/privacy}",
      "received_events_url": "https://api.github.com/users/serapath/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-17T21:50:25Z",
    "updated_at": "2017-01-17T21:56:10Z",
    "body": "I actually would wish that there would be an additional method, like:\r\n* `(new BrowserWindow()).loadHTML(...)`\r\n\r\nAlternative - maybe i can open an http server on the fly and use it to serve a file on localhost - but i guess that would allow a web browser or a different app to listen to that port...\r\n\r\nIs there a way to provide HTML without creating a separate html file?\r\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/274073510",
    "html_url": "https://github.com/electron/electron/issues/8425#issuecomment-274073510",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/8425",
    "id": 274073510,
    "user": {
      "login": "MarshallOfSound",
      "id": 6634592,
      "avatar_url": "https://avatars0.githubusercontent.com/u/6634592?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarshallOfSound",
      "html_url": "https://github.com/MarshallOfSound",
      "followers_url": "https://api.github.com/users/MarshallOfSound/followers",
      "following_url": "https://api.github.com/users/MarshallOfSound/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarshallOfSound/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarshallOfSound/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarshallOfSound/subscriptions",
      "organizations_url": "https://api.github.com/users/MarshallOfSound/orgs",
      "repos_url": "https://api.github.com/users/MarshallOfSound/repos",
      "events_url": "https://api.github.com/users/MarshallOfSound/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarshallOfSound/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-20T13:36:54Z",
    "updated_at": "2017-01-20T13:36:54Z",
    "body": "I'm like 99% sure this is \"expected\" in a sense.  Whenever you use `require` it scans the current directory and then recursively each directory until you reach the root of the current file system.  When you load an HTML file it has a concept of a \"current directory\".  However the technique you are using does not have a containing directory as such.\r\n\r\nIf you somehow logged out `__dirname` from your text/html trick the current `__dirname` will not be set to a value inside your application.\r\n\r\nFor instance when testing with an Electron Prebuilt (the default app).\r\n\r\n```bash\r\n# In the default app console\r\n__dirname === \"C:\\Users\\Samuel\\.electron\\electron-v1.4.2-win32-x64\\resources\\default_app.asar\"\r\n\r\n# In the \"data/html\" loaded window\r\n__dirname === \"C:\\Users\\Samuel\\.electron\\electron-v1.4.2-win32-x64\\resources\\electron.asar\\renderer\"\r\n```\r\n\r\nThe second path is not even inside the current application ASAR so the require search path will be **completely** different.  I'm pretty sure this is the expected behavior as there is no other logical directory we can assign to this pseudo HTML file."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/274479456",
    "html_url": "https://github.com/electron/electron/issues/8425#issuecomment-274479456",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/8425",
    "id": 274479456,
    "user": {
      "login": "nikita-graf",
      "id": 2078870,
      "avatar_url": "https://avatars2.githubusercontent.com/u/2078870?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nikita-graf",
      "html_url": "https://github.com/nikita-graf",
      "followers_url": "https://api.github.com/users/nikita-graf/followers",
      "following_url": "https://api.github.com/users/nikita-graf/following{/other_user}",
      "gists_url": "https://api.github.com/users/nikita-graf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nikita-graf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nikita-graf/subscriptions",
      "organizations_url": "https://api.github.com/users/nikita-graf/orgs",
      "repos_url": "https://api.github.com/users/nikita-graf/repos",
      "events_url": "https://api.github.com/users/nikita-graf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nikita-graf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-23T12:46:11Z",
    "updated_at": "2017-01-23T12:46:11Z",
    "body": "Here is the code that makes `require` work in `html` template.\r\nhttps://github.com/electron/electron/blob/d0643250f717a9e5d9d4869f72fd5437c88e862f/lib/renderer/init.js#L111\r\nAs a temporary workaround I've set up `module.paths` and `module.filename` inside `data:text/html` template and `require` started working. "
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/274978352",
    "html_url": "https://github.com/electron/electron/issues/8425#issuecomment-274978352",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/8425",
    "id": 274978352,
    "user": {
      "login": "kevinsawicki",
      "id": 671378,
      "avatar_url": "https://avatars0.githubusercontent.com/u/671378?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kevinsawicki",
      "html_url": "https://github.com/kevinsawicki",
      "followers_url": "https://api.github.com/users/kevinsawicki/followers",
      "following_url": "https://api.github.com/users/kevinsawicki/following{/other_user}",
      "gists_url": "https://api.github.com/users/kevinsawicki/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kevinsawicki/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kevinsawicki/subscriptions",
      "organizations_url": "https://api.github.com/users/kevinsawicki/orgs",
      "repos_url": "https://api.github.com/users/kevinsawicki/repos",
      "events_url": "https://api.github.com/users/kevinsawicki/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kevinsawicki/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2017-01-24T23:58:28Z",
    "updated_at": "2017-01-24T23:58:28Z",
    "body": "> I'm like 99% sure this is \"expected\" in a sense. Whenever you use require it scans the current directory and then recursively each directory until you reach the root of the current file system. \r\n\r\nYeah, pages using require from data URLs will probably need to set up the `module` global as @nikita-graf mentioned since Electron only knows how to make relative node requires work when a file URL is used.\r\n\r\nClosing this out since this the expected behavior, thanks @MarshallOfSound for the in-depth explanation üëç "
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/295995877",
    "html_url": "https://github.com/electron/electron/issues/8425#issuecomment-295995877",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/8425",
    "id": 295995877,
    "user": {
      "login": "seanchas116",
      "id": 1025246,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1025246?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/seanchas116",
      "html_url": "https://github.com/seanchas116",
      "followers_url": "https://api.github.com/users/seanchas116/followers",
      "following_url": "https://api.github.com/users/seanchas116/following{/other_user}",
      "gists_url": "https://api.github.com/users/seanchas116/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/seanchas116/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/seanchas116/subscriptions",
      "organizations_url": "https://api.github.com/users/seanchas116/orgs",
      "repos_url": "https://api.github.com/users/seanchas116/repos",
      "events_url": "https://api.github.com/users/seanchas116/events{/privacy}",
      "received_events_url": "https://api.github.com/users/seanchas116/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-21T01:03:06Z",
    "updated_at": "2017-04-21T01:03:06Z",
    "body": "FYI the original 'not working' version now works well as #9095 is merged. \r\nYou can now `require` modules installed in app directory from non-`file:` urls without workarounds."
  }
]