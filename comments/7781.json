[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/256860149",
    "html_url": "https://github.com/electron/electron/issues/7781#issuecomment-256860149",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7781",
    "id": 256860149,
    "user": {
      "login": "jakubzitny",
      "id": 3315662,
      "avatar_url": "https://avatars2.githubusercontent.com/u/3315662?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jakubzitny",
      "html_url": "https://github.com/jakubzitny",
      "followers_url": "https://api.github.com/users/jakubzitny/followers",
      "following_url": "https://api.github.com/users/jakubzitny/following{/other_user}",
      "gists_url": "https://api.github.com/users/jakubzitny/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jakubzitny/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jakubzitny/subscriptions",
      "organizations_url": "https://api.github.com/users/jakubzitny/orgs",
      "repos_url": "https://api.github.com/users/jakubzitny/repos",
      "events_url": "https://api.github.com/users/jakubzitny/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jakubzitny/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-28T08:00:27Z",
    "updated_at": "2016-10-28T08:00:27Z",
    "body": "It should probably have a similar API as `menu` has\n- importing `TouchBar` from `electron` in main process and from `remote` in renderer\n- creating a custom instance with `new TouchBar()`\n- setting it with static method `TouchBar.setApplicationTouchBar(touchBar)`\n\nThe custom instance should have setters for `customizationIdentifier`, `defaultItemIdentifiers`, `customizationAllowedItemIdentifiers` and `principalItemIdentifier`.\n\nI am not sure how to add items from the Catalog. Maybe something like `MenuItem`'s types such as `checkbox`Â or `separator` it should just be enumerated with string ids.\n\nWhat do you think?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/256927050",
    "html_url": "https://github.com/electron/electron/issues/7781#issuecomment-256927050",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7781",
    "id": 256927050,
    "user": {
      "login": "HFreni",
      "id": 5881471,
      "avatar_url": "https://avatars3.githubusercontent.com/u/5881471?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/HFreni",
      "html_url": "https://github.com/HFreni",
      "followers_url": "https://api.github.com/users/HFreni/followers",
      "following_url": "https://api.github.com/users/HFreni/following{/other_user}",
      "gists_url": "https://api.github.com/users/HFreni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/HFreni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/HFreni/subscriptions",
      "organizations_url": "https://api.github.com/users/HFreni/orgs",
      "repos_url": "https://api.github.com/users/HFreni/repos",
      "events_url": "https://api.github.com/users/HFreni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/HFreni/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-28T13:59:03Z",
    "updated_at": "2016-10-28T13:59:03Z",
    "body": "I think that you should also consider adding a setter for `NSTouchBarItemIdentifierOtherItemsProxy` to allow for nested TouchBar `MenuItem`s.\n\nIn terms of adding items from the Catalog, I think that they should be accessible as objects so that a developer can just instantiate a `new MenuItem()` that takes in the array of `defaultItemIdentifiers`\n\nMy 2 cents. \n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/256999806",
    "html_url": "https://github.com/electron/electron/issues/7781#issuecomment-256999806",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7781",
    "id": 256999806,
    "user": {
      "login": "NetOperatorWibby",
      "id": 1288356,
      "avatar_url": "https://avatars2.githubusercontent.com/u/1288356?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/NetOperatorWibby",
      "html_url": "https://github.com/NetOperatorWibby",
      "followers_url": "https://api.github.com/users/NetOperatorWibby/followers",
      "following_url": "https://api.github.com/users/NetOperatorWibby/following{/other_user}",
      "gists_url": "https://api.github.com/users/NetOperatorWibby/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/NetOperatorWibby/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/NetOperatorWibby/subscriptions",
      "organizations_url": "https://api.github.com/users/NetOperatorWibby/orgs",
      "repos_url": "https://api.github.com/users/NetOperatorWibby/repos",
      "events_url": "https://api.github.com/users/NetOperatorWibby/events{/privacy}",
      "received_events_url": "https://api.github.com/users/NetOperatorWibby/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-28T18:52:49Z",
    "updated_at": "2016-10-28T18:52:49Z",
    "body": "We're just deleting comments now? Cool.\n\nAny idea on how to add a screenshot of a `<webview>` to the Touch Bar?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/257009764",
    "html_url": "https://github.com/electron/electron/issues/7781#issuecomment-257009764",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7781",
    "id": 257009764,
    "user": {
      "login": "paulcbetts",
      "id": 1396,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1396?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulcbetts",
      "html_url": "https://github.com/paulcbetts",
      "followers_url": "https://api.github.com/users/paulcbetts/followers",
      "following_url": "https://api.github.com/users/paulcbetts/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulcbetts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulcbetts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulcbetts/subscriptions",
      "organizations_url": "https://api.github.com/users/paulcbetts/orgs",
      "repos_url": "https://api.github.com/users/paulcbetts/repos",
      "events_url": "https://api.github.com/users/paulcbetts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulcbetts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-28T19:38:30Z",
    "updated_at": "2016-10-28T19:38:30Z",
    "body": "@NetOperatorWibby We asked around and I don't think any of the Electron maintainers deleted your comment, if they did then it was accidental. Regardless of how it happened, sorry about the missing message!\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/257025199",
    "html_url": "https://github.com/electron/electron/issues/7781#issuecomment-257025199",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7781",
    "id": 257025199,
    "user": {
      "login": "HFreni",
      "id": 5881471,
      "avatar_url": "https://avatars3.githubusercontent.com/u/5881471?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/HFreni",
      "html_url": "https://github.com/HFreni",
      "followers_url": "https://api.github.com/users/HFreni/followers",
      "following_url": "https://api.github.com/users/HFreni/following{/other_user}",
      "gists_url": "https://api.github.com/users/HFreni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/HFreni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/HFreni/subscriptions",
      "organizations_url": "https://api.github.com/users/HFreni/orgs",
      "repos_url": "https://api.github.com/users/HFreni/repos",
      "events_url": "https://api.github.com/users/HFreni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/HFreni/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-28T20:51:16Z",
    "updated_at": "2016-10-28T20:51:16Z",
    "body": "I was just reading the TouchBar documentation some more, and it seems as if macOS does all of the spacing and rendering, which means that there may not be a possibility to display a `<webview>` container or screenshot within the Touch Bar.\n\nI'm wondering what kind of effort it would require for someone to create a method of displaying webview content within the Touch Bar.\nIn the event that it's possible, it creates an even larger number of use cases for the Touch Bar, including but not limited to games and notifications, plus it would allow developers to unify their user interface and to develop custom `MenuItem`s for their applications. \n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/257034140",
    "html_url": "https://github.com/electron/electron/issues/7781#issuecomment-257034140",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7781",
    "id": 257034140,
    "user": {
      "login": "bengotow",
      "id": 1037212,
      "avatar_url": "https://avatars0.githubusercontent.com/u/1037212?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bengotow",
      "html_url": "https://github.com/bengotow",
      "followers_url": "https://api.github.com/users/bengotow/followers",
      "following_url": "https://api.github.com/users/bengotow/following{/other_user}",
      "gists_url": "https://api.github.com/users/bengotow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bengotow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bengotow/subscriptions",
      "organizations_url": "https://api.github.com/users/bengotow/orgs",
      "repos_url": "https://api.github.com/users/bengotow/repos",
      "events_url": "https://api.github.com/users/bengotow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bengotow/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-28T21:32:50Z",
    "updated_at": "2016-10-28T21:32:50Z",
    "body": "@HFreni I've been reading on Twitter that the TouchBar actually runs WatchOS (which is crazy and super cool.) It seems it's receiving framebuffer data at a low level though, so I imagine we could create a custom TouchBar view and forward it <webview> data! \n\nSource: https://twitter.com/stroughtonsmith/status/791872723681239040\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/257412385",
    "html_url": "https://github.com/electron/electron/issues/7781#issuecomment-257412385",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7781",
    "id": 257412385,
    "user": {
      "login": "davidhariri",
      "id": 5245670,
      "avatar_url": "https://avatars1.githubusercontent.com/u/5245670?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/davidhariri",
      "html_url": "https://github.com/davidhariri",
      "followers_url": "https://api.github.com/users/davidhariri/followers",
      "following_url": "https://api.github.com/users/davidhariri/following{/other_user}",
      "gists_url": "https://api.github.com/users/davidhariri/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/davidhariri/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/davidhariri/subscriptions",
      "organizations_url": "https://api.github.com/users/davidhariri/orgs",
      "repos_url": "https://api.github.com/users/davidhariri/repos",
      "events_url": "https://api.github.com/users/davidhariri/events{/privacy}",
      "received_events_url": "https://api.github.com/users/davidhariri/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-31T20:33:37Z",
    "updated_at": "2016-10-31T20:40:41Z",
    "body": "The main use cases I see are these two types of views:\n1. `ButtonView(onPress:Function, textContent:String/null, graphicContent:URLString/64Blob/null)`\n2. `SimpleView(textContent:String/null, graphicContent:URLString/64Blob/null)`\n\nIf we could have some sort of simple interface for alignment/justification within the parent view (similar to FlexBox?) than that would be a great start for most devs I think!\n\nSide note: It would be _so_ cool to see Git status in Atom in the TouchBar...\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/259913157",
    "html_url": "https://github.com/electron/electron/issues/7781#issuecomment-259913157",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7781",
    "id": 259913157,
    "user": {
      "login": "rootscript",
      "id": 3963009,
      "avatar_url": "https://avatars3.githubusercontent.com/u/3963009?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rootscript",
      "html_url": "https://github.com/rootscript",
      "followers_url": "https://api.github.com/users/rootscript/followers",
      "following_url": "https://api.github.com/users/rootscript/following{/other_user}",
      "gists_url": "https://api.github.com/users/rootscript/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rootscript/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rootscript/subscriptions",
      "organizations_url": "https://api.github.com/users/rootscript/orgs",
      "repos_url": "https://api.github.com/users/rootscript/repos",
      "events_url": "https://api.github.com/users/rootscript/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rootscript/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-11T09:06:42Z",
    "updated_at": "2016-11-11T09:14:39Z",
    "body": "@kevinsawicki @bengotow  - I found this an interesting read: https://www.raywenderlich.com/147118/use-nstouchbar-macos\n\nVisual design guide: https://developer.apple.com/library/content/documentation/UserExperience/Conceptual/OSXHIGuidelines/VisualDesign.html#//apple_ref/doc/uid/20000957-CH106-SW1\n\nList of system icons: https://developer.apple.com/library/content/documentation/UserExperience/Conceptual/OSXHIGuidelines/Icons.html#//apple_ref/doc/uid/20000957-CH107-SW1\n\nStandard controls: https://developer.apple.com/library/content/documentation/UserExperience/Conceptual/OSXHIGuidelines/ControlsandViews.html#//apple_ref/doc/uid/20000957-CH108-SW1\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/262290570",
    "html_url": "https://github.com/electron/electron/issues/7781#issuecomment-262290570",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7781",
    "id": 262290570,
    "user": {
      "login": "mydigitalself",
      "id": 1491887,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1491887?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mydigitalself",
      "html_url": "https://github.com/mydigitalself",
      "followers_url": "https://api.github.com/users/mydigitalself/followers",
      "following_url": "https://api.github.com/users/mydigitalself/following{/other_user}",
      "gists_url": "https://api.github.com/users/mydigitalself/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mydigitalself/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mydigitalself/subscriptions",
      "organizations_url": "https://api.github.com/users/mydigitalself/orgs",
      "repos_url": "https://api.github.com/users/mydigitalself/repos",
      "events_url": "https://api.github.com/users/mydigitalself/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mydigitalself/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-22T16:31:39Z",
    "updated_at": "2016-11-22T16:31:39Z",
    "body": "http://www.iclarified.com/57924/doom-on-the-macbook-pro-touch-bar-video\r\n\r\n#justsayin'  (and apologies for bringing down the tone)"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/262444012",
    "html_url": "https://github.com/electron/electron/issues/7781#issuecomment-262444012",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7781",
    "id": 262444012,
    "user": {
      "login": "bengotow",
      "id": 1037212,
      "avatar_url": "https://avatars0.githubusercontent.com/u/1037212?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bengotow",
      "html_url": "https://github.com/bengotow",
      "followers_url": "https://api.github.com/users/bengotow/followers",
      "following_url": "https://api.github.com/users/bengotow/following{/other_user}",
      "gists_url": "https://api.github.com/users/bengotow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bengotow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bengotow/subscriptions",
      "organizations_url": "https://api.github.com/users/bengotow/orgs",
      "repos_url": "https://api.github.com/users/bengotow/repos",
      "events_url": "https://api.github.com/users/bengotow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bengotow/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-23T06:45:05Z",
    "updated_at": "2016-11-23T06:48:13Z",
    "body": "Hey folks - not sure if anyone's working on this yet. I've been reading through the macOS docs, and I think implementing this well will be quite a bit of work, but it could probably follow the pattern set by Electron's Menu module. Here's an example of what I think the API could look like, accounting for touch bar `popovers` and `groups`, as well as a few must-haves like customization (default true or false) and custom text / button colors.\r\n\r\n```js\r\n\r\nconst bar = TouchBar.buildFromTemplate([\r\n  {\r\n    customizationLabel: 'Skip Track'\r\n    identifier: 'com.myapp.skip-track',\r\n    image: <NativeImage>,\r\n    default: true,\r\n  },\r\n  {\r\n    identifier: TouchBar.ItemIdentifierFixedSpaceLarge,\r\n  },\r\n  {\r\n    customizationLabel: 'Play Controls'\r\n    identifier: 'com.myapp.play-controls',\r\n    type: 'group',\r\n    default: true,\r\n    items: [\r\n      {\r\n        customizationLabel: 'Previous'\r\n        identifier: 'com.myapp.play-controls.prev',\r\n        title: 'Prev',\r\n        labelColor: '#fff',\r\n        bezelColor: 'red',\r\n        click: () => { ... }\r\n      },\r\n      {\r\n        customizationLabel: 'Next'\r\n        identifier: 'com.myapp.play-controls.next',\r\n        title: 'Next',\r\n        click: () => { ... }\r\n      },\r\n    ]\r\n  },\r\n  {\r\n    customizationLabel: 'Advanced'\r\n    identifier: 'com.myapp.advanced',\r\n    type: 'popover',\r\n    default: false,\r\n    items: [\r\n      {\r\n        customizationLabel: 'Advanced - Mute Audio'\r\n        identifier: 'com.myapp.advanced.mute',\r\n        title: 'Mute Audio',\r\n        click: () => { ... }\r\n      },\r\n      {\r\n        customizationLabel: 'Advanced - Apply Crossfade'\r\n        identifier: 'com.myapp.advanced.crossfade',\r\n        title: 'Apply Crossfade',\r\n        click: () => { ... }\r\n      },\r\n    ]\r\n  }\r\n])\r\n\r\nmyEditorArea.addEventListener('focus', () => {\r\n  TouchBar.setActiveTouchBar(bar);\r\n});\r\nmyEditorArea.addEventListener('blur', () => {\r\n  TouchBar.setActiveTouchBar(null);\r\n});\r\n```\r\n\r\nI think the trickiest part is that macOS composes the final touch bar by combining every touch bar in the responder chain, so theoretically if you had something like this (below) where both `my-video-editor` and `my-video-caption` declared touch bars, you'd see the combination of both bars when focused in the caption area:\r\n\r\n```\r\n<div id=\"my-video-editor\">\r\n    <textarea id=\"my-video-caption\">\r\n       <!-- user is focused here -->\r\n    </textarea>\r\n</div>\r\n```\r\n\r\nI think it'd be fine to leave this as an exercise to the reader, but the macOS implementation is pretty sophisticated and \"whitespace-aware\". Doing it right would require more than `Object.assign(barA, barB)`. I think in a first pass, just providing `TouchBar.setActiveTouchBar(bar)` would be good enough, though?\r\n\r\nAlso, anyone know if Chromium is planning to support this on the broader web? Would be a bummer to implement it, only to have them come up with a nice general solution."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/263101510",
    "html_url": "https://github.com/electron/electron/issues/7781#issuecomment-263101510",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7781",
    "id": 263101510,
    "user": {
      "login": "MarshallOfSound",
      "id": 6634592,
      "avatar_url": "https://avatars0.githubusercontent.com/u/6634592?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarshallOfSound",
      "html_url": "https://github.com/MarshallOfSound",
      "followers_url": "https://api.github.com/users/MarshallOfSound/followers",
      "following_url": "https://api.github.com/users/MarshallOfSound/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarshallOfSound/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarshallOfSound/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarshallOfSound/subscriptions",
      "organizations_url": "https://api.github.com/users/MarshallOfSound/orgs",
      "repos_url": "https://api.github.com/users/MarshallOfSound/repos",
      "events_url": "https://api.github.com/users/MarshallOfSound/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarshallOfSound/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-27T04:19:08Z",
    "updated_at": "2016-11-27T11:44:48Z",
    "body": "I got my new MacBook Pro 2016 yesterday and because I have nothing better to do ð I started looking into this.  Initial results are promising but there are a few things that still need to be figured out.\r\n\r\nI'm not even close to an API yet but on the JS side I think it will be best to end up with something like.\r\n\r\n```js\r\nimport { TouchBarButton, TouchBarColorPicker, TouchBarSlider, TouchBarLabel } from 'electron';\r\n\r\nmainWindow.setTouchBar([\r\n  new TouchBarButton({ label: 'My Button', onClick: fn }),\r\n  new TouchBarSlider({ onChange: fn });\r\n]);\r\n```\r\n\r\nNow to answer a few things:\r\n> Also, anyone know if Chromium is planning to support this on the broader web? Would be a bummer to implement it, only to have them come up with a nice general solution.\r\n\r\nLast I checked Chromium wanted to keep the TouchBar a trusted space.  I.e. No website content / extension content.  So I doubt a web friendly API is coming from that direction any time soon ð \r\n\r\n> I think in a first pass, just providing TouchBar.setActiveTouchBar(bar) would be good enough, though?\r\n\r\nRead up above as well, but we need to be setting the active touch bar at a window level not an App level.  Also I think that providing DOM level TouchBar cascading is out of scope of the first run (as you said) and maybe even something that should be handled on the JS side by apps rather than offered by Electron.  There would be many ways users would want it to work so would probably be better off just letting them manipulate an array how they want to.\r\n\r\n>     image: <NativeImage>,\r\n\r\nI haven't even tried to passing a `NativeImage` to a custom item.  Could be fun ð \r\n\r\n> few must-haves like customization \r\n\r\nCustomization is gonna be a fun one (and this is also gonna pop a hole in your API idea).  Basically to create in order to generate the TouchBar a method is called on your `NSTouchBarDelegate` called `makeItemForIdentifier`.  You get passed an identifier and have to generate a `NSTouchBarItem`.  This means we can't let the users assign their own identifiers.  The workaround I have is assigning each `TouchBarItem` created on the JS side a unique JS id and then attending that to standard identifiers.  So for instance at the moment the button identifier is `com.electron.tb.button`, when a new button is created it is assigned the identifier `com.electron.tb.button.1`.  This allows us to correctly create the `NSTouchBarItem` and also use that number from the identifier to fetch the extra settings (color, text, size, Etc.).\r\n\r\nIt's definitely going to be a long road to get this working nicely though ð \r\n\r\nEDIT:  I've gotten to the point where this is working\r\n\r\n```js\r\nmainWindow.setTouchBar(new TouchBar([\r\n  new (TouchBar.Button)({\r\n    label: 'Foo bar',\r\n    click: () => {\r\n      console.log('Foo bar clicked')\r\n    }\r\n  })\r\n]))\r\n```"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/263138191",
    "html_url": "https://github.com/electron/electron/issues/7781#issuecomment-263138191",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7781",
    "id": 263138191,
    "user": {
      "login": "davidhariri",
      "id": 5245670,
      "avatar_url": "https://avatars1.githubusercontent.com/u/5245670?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/davidhariri",
      "html_url": "https://github.com/davidhariri",
      "followers_url": "https://api.github.com/users/davidhariri/followers",
      "following_url": "https://api.github.com/users/davidhariri/following{/other_user}",
      "gists_url": "https://api.github.com/users/davidhariri/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/davidhariri/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/davidhariri/subscriptions",
      "organizations_url": "https://api.github.com/users/davidhariri/orgs",
      "repos_url": "https://api.github.com/users/davidhariri/repos",
      "events_url": "https://api.github.com/users/davidhariri/events{/privacy}",
      "received_events_url": "https://api.github.com/users/davidhariri/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-27T18:29:08Z",
    "updated_at": "2016-11-27T18:29:42Z",
    "body": "Wow, nice work @MarshallOfSound! Looking forward to playing around with this."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/263239833",
    "html_url": "https://github.com/electron/electron/issues/7781#issuecomment-263239833",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7781",
    "id": 263239833,
    "user": {
      "login": "MarshallOfSound",
      "id": 6634592,
      "avatar_url": "https://avatars0.githubusercontent.com/u/6634592?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarshallOfSound",
      "html_url": "https://github.com/MarshallOfSound",
      "followers_url": "https://api.github.com/users/MarshallOfSound/followers",
      "following_url": "https://api.github.com/users/MarshallOfSound/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarshallOfSound/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarshallOfSound/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarshallOfSound/subscriptions",
      "organizations_url": "https://api.github.com/users/MarshallOfSound/orgs",
      "repos_url": "https://api.github.com/users/MarshallOfSound/repos",
      "events_url": "https://api.github.com/users/MarshallOfSound/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarshallOfSound/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-28T10:46:05Z",
    "updated_at": "2016-11-28T10:47:50Z",
    "body": "Current (working) API\r\n\r\n```js\r\nmainWindow.setTouchBar(new TouchBar([\r\n  new (TouchBar.Button)({\r\n    label: 'Hello World!',\r\n    // image: 'path/to/image',\r\n    backgroundColor: \"FF0000\",\r\n    labelColor: \"0000FF\",\r\n    click: () => {\r\n      console.log('Hello World Clicked')\r\n    }\r\n  }),\r\n  new (TouchBar.Label)({\r\n    label: 'This is a Label'\r\n  }),\r\n  new (TouchBar.ColorPicker)({\r\n    change: (newColor) => {\r\n      console.log('Color was changed', newColor)\r\n    }\r\n  }),\r\n  new (TouchBar.Slider)({\r\n    label: 'Slider 123',\r\n    minValue: 50,\r\n    maxValue: 1000,\r\n    initialValue: 300,\r\n    change: (newVal) => {\r\n      console.log('Slider was changed', newVal)\r\n    }\r\n  }),\r\n]))\r\n```\r\n\r\nI'll push my branch soon as a WIP PR so that people can give some implementation feedback."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/263501858",
    "html_url": "https://github.com/electron/electron/issues/7781#issuecomment-263501858",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7781",
    "id": 263501858,
    "user": {
      "login": "MarshallOfSound",
      "id": 6634592,
      "avatar_url": "https://avatars0.githubusercontent.com/u/6634592?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarshallOfSound",
      "html_url": "https://github.com/MarshallOfSound",
      "followers_url": "https://api.github.com/users/MarshallOfSound/followers",
      "following_url": "https://api.github.com/users/MarshallOfSound/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarshallOfSound/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarshallOfSound/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarshallOfSound/subscriptions",
      "organizations_url": "https://api.github.com/users/MarshallOfSound/orgs",
      "repos_url": "https://api.github.com/users/MarshallOfSound/repos",
      "events_url": "https://api.github.com/users/MarshallOfSound/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarshallOfSound/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-29T08:00:53Z",
    "updated_at": "2016-11-29T08:00:53Z",
    "body": "Just pushed my WIP PR up to #8095 \r\n\r\nFeedback is appreciated"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/265988462",
    "html_url": "https://github.com/electron/electron/issues/7781#issuecomment-265988462",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7781",
    "id": 265988462,
    "user": {
      "login": "MiracleBlue",
      "id": 23368,
      "avatar_url": "https://avatars1.githubusercontent.com/u/23368?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MiracleBlue",
      "html_url": "https://github.com/MiracleBlue",
      "followers_url": "https://api.github.com/users/MiracleBlue/followers",
      "following_url": "https://api.github.com/users/MiracleBlue/following{/other_user}",
      "gists_url": "https://api.github.com/users/MiracleBlue/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MiracleBlue/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MiracleBlue/subscriptions",
      "organizations_url": "https://api.github.com/users/MiracleBlue/orgs",
      "repos_url": "https://api.github.com/users/MiracleBlue/repos",
      "events_url": "https://api.github.com/users/MiracleBlue/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MiracleBlue/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-09T11:02:01Z",
    "updated_at": "2016-12-09T11:02:01Z",
    "body": "Wow.  Just wow.  I'm so excited for this.  I'll see if I can give any useful feedback to your PR, really hoping to use this as soon as possible :D just got my new MBP yesterday, the potential for this touch bar thing is huge."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/266867002",
    "html_url": "https://github.com/electron/electron/issues/7781#issuecomment-266867002",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7781",
    "id": 266867002,
    "user": {
      "login": "sunjay",
      "id": 530939,
      "avatar_url": "https://avatars1.githubusercontent.com/u/530939?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sunjay",
      "html_url": "https://github.com/sunjay",
      "followers_url": "https://api.github.com/users/sunjay/followers",
      "following_url": "https://api.github.com/users/sunjay/following{/other_user}",
      "gists_url": "https://api.github.com/users/sunjay/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sunjay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sunjay/subscriptions",
      "organizations_url": "https://api.github.com/users/sunjay/orgs",
      "repos_url": "https://api.github.com/users/sunjay/repos",
      "events_url": "https://api.github.com/users/sunjay/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sunjay/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-13T21:27:05Z",
    "updated_at": "2016-12-13T21:27:05Z",
    "body": "Not sure if this is being considered, but other laptop manufacturers might go copy Apple's touchbar and add their own spin to it. In case that happens, we should try to keep that in mind when designing these APIs so a bunch of code doesn't eventually break. (Unless the plan is to keep an OSX specific TouchBar API and then add a new API for every touch bar)"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/266876678",
    "html_url": "https://github.com/electron/electron/issues/7781#issuecomment-266876678",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7781",
    "id": 266876678,
    "user": {
      "login": "MarshallOfSound",
      "id": 6634592,
      "avatar_url": "https://avatars0.githubusercontent.com/u/6634592?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarshallOfSound",
      "html_url": "https://github.com/MarshallOfSound",
      "followers_url": "https://api.github.com/users/MarshallOfSound/followers",
      "following_url": "https://api.github.com/users/MarshallOfSound/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarshallOfSound/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarshallOfSound/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarshallOfSound/subscriptions",
      "organizations_url": "https://api.github.com/users/MarshallOfSound/orgs",
      "repos_url": "https://api.github.com/users/MarshallOfSound/repos",
      "events_url": "https://api.github.com/users/MarshallOfSound/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarshallOfSound/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-13T22:04:59Z",
    "updated_at": "2016-12-13T22:04:59Z",
    "body": "@sunjay The TouchBarAPI is currently in Objective C which will only ever run or compile on macOS devices.  If another manufacturer adds a device similar to the touch bar their API would be completely different and almost certainly in a different language so it would not causes any clashes ð "
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/267458582",
    "html_url": "https://github.com/electron/electron/issues/7781#issuecomment-267458582",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7781",
    "id": 267458582,
    "user": {
      "login": "mrjacobbloom",
      "id": 2879020,
      "avatar_url": "https://avatars0.githubusercontent.com/u/2879020?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mrjacobbloom",
      "html_url": "https://github.com/mrjacobbloom",
      "followers_url": "https://api.github.com/users/mrjacobbloom/followers",
      "following_url": "https://api.github.com/users/mrjacobbloom/following{/other_user}",
      "gists_url": "https://api.github.com/users/mrjacobbloom/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mrjacobbloom/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mrjacobbloom/subscriptions",
      "organizations_url": "https://api.github.com/users/mrjacobbloom/orgs",
      "repos_url": "https://api.github.com/users/mrjacobbloom/repos",
      "events_url": "https://api.github.com/users/mrjacobbloom/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mrjacobbloom/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-15T22:07:49Z",
    "updated_at": "2016-12-15T22:07:49Z",
    "body": "I think @sunjay means to keep the JS side generalized so that we can use the same code if other manufacturers create similar products, even if the low-level stuff that Electron does is different"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/267592114",
    "html_url": "https://github.com/electron/electron/issues/7781#issuecomment-267592114",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7781",
    "id": 267592114,
    "user": {
      "login": "pozylon",
      "id": 2109393,
      "avatar_url": "https://avatars1.githubusercontent.com/u/2109393?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pozylon",
      "html_url": "https://github.com/pozylon",
      "followers_url": "https://api.github.com/users/pozylon/followers",
      "following_url": "https://api.github.com/users/pozylon/following{/other_user}",
      "gists_url": "https://api.github.com/users/pozylon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pozylon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pozylon/subscriptions",
      "organizations_url": "https://api.github.com/users/pozylon/orgs",
      "repos_url": "https://api.github.com/users/pozylon/repos",
      "events_url": "https://api.github.com/users/pozylon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pozylon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-16T13:17:51Z",
    "updated_at": "2016-12-16T13:17:51Z",
    "body": "@Airhogs777 @sunjay I suppose adding an abstraction layer is fine **if** other operating systems jump on the TouchBar train. But at the moment, there's no need for abstraction.\r\n\r\nWhy?\r\nWatching the Microsoft strategy clearly shows us that they are pushing for \"all-touch\" desktop computing. Universal OS for desktop and tablets, Surface , Surface Studio, ... I don't see a TouchBar fit in there nicely.\r\n\r\nThe Linux/Unix based desktop environment maintainers would have to add TouchBar support for their OS running on Apple hardware. If they are clever (and they are) they are certainly going to avoid using any other API method signatures than Apple.\r\n\r\nAs long Microsoft does not add OS-level support for TouchBar + SDK, no other hardware producer but Apple will release any device."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/269734496",
    "html_url": "https://github.com/electron/electron/issues/7781#issuecomment-269734496",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7781",
    "id": 269734496,
    "user": {
      "login": "wheelhot",
      "id": 12379413,
      "avatar_url": "https://avatars2.githubusercontent.com/u/12379413?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wheelhot",
      "html_url": "https://github.com/wheelhot",
      "followers_url": "https://api.github.com/users/wheelhot/followers",
      "following_url": "https://api.github.com/users/wheelhot/following{/other_user}",
      "gists_url": "https://api.github.com/users/wheelhot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wheelhot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wheelhot/subscriptions",
      "organizations_url": "https://api.github.com/users/wheelhot/orgs",
      "repos_url": "https://api.github.com/users/wheelhot/repos",
      "events_url": "https://api.github.com/users/wheelhot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wheelhot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-30T05:37:43Z",
    "updated_at": "2016-12-30T05:38:39Z",
    "body": "Hmm, here's a simple suggestion for Touchbar v1, it'll probably look like how Safari Touchbar work where you can press the button to enter URL except this will access the command palette and once clicked, it'll display suggestions based on last/common used commands?\r\n\r\nLonger down the road, probably able to use Git to commit?"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/271109655",
    "html_url": "https://github.com/electron/electron/issues/7781#issuecomment-271109655",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7781",
    "id": 271109655,
    "user": {
      "login": "koenpunt",
      "id": 351038,
      "avatar_url": "https://avatars1.githubusercontent.com/u/351038?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/koenpunt",
      "html_url": "https://github.com/koenpunt",
      "followers_url": "https://api.github.com/users/koenpunt/followers",
      "following_url": "https://api.github.com/users/koenpunt/following{/other_user}",
      "gists_url": "https://api.github.com/users/koenpunt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/koenpunt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/koenpunt/subscriptions",
      "organizations_url": "https://api.github.com/users/koenpunt/orgs",
      "repos_url": "https://api.github.com/users/koenpunt/repos",
      "events_url": "https://api.github.com/users/koenpunt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/koenpunt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-07T20:57:03Z",
    "updated_at": "2017-01-07T20:57:03Z",
    "body": "> Also, anyone know if Chromium is planning to support this on the broader web? Would be a bummer to implement it, only to have them come up with a nice general solution.\r\n\r\nThere's this: https://bugs.chromium.org/p/chromium/issues/detail?id=660126"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/278119565",
    "html_url": "https://github.com/electron/electron/issues/7781#issuecomment-278119565",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7781",
    "id": 278119565,
    "user": {
      "login": "davecarlson",
      "id": 299702,
      "avatar_url": "https://avatars3.githubusercontent.com/u/299702?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/davecarlson",
      "html_url": "https://github.com/davecarlson",
      "followers_url": "https://api.github.com/users/davecarlson/followers",
      "following_url": "https://api.github.com/users/davecarlson/following{/other_user}",
      "gists_url": "https://api.github.com/users/davecarlson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/davecarlson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/davecarlson/subscriptions",
      "organizations_url": "https://api.github.com/users/davecarlson/orgs",
      "repos_url": "https://api.github.com/users/davecarlson/repos",
      "events_url": "https://api.github.com/users/davecarlson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/davecarlson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-07T19:50:38Z",
    "updated_at": "2017-02-07T19:50:38Z",
    "body": "any further progress on this ?\r\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/278121145",
    "html_url": "https://github.com/electron/electron/issues/7781#issuecomment-278121145",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7781",
    "id": 278121145,
    "user": {
      "login": "kevinsawicki",
      "id": 671378,
      "avatar_url": "https://avatars0.githubusercontent.com/u/671378?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kevinsawicki",
      "html_url": "https://github.com/kevinsawicki",
      "followers_url": "https://api.github.com/users/kevinsawicki/followers",
      "following_url": "https://api.github.com/users/kevinsawicki/following{/other_user}",
      "gists_url": "https://api.github.com/users/kevinsawicki/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kevinsawicki/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kevinsawicki/subscriptions",
      "organizations_url": "https://api.github.com/users/kevinsawicki/orgs",
      "repos_url": "https://api.github.com/users/kevinsawicki/repos",
      "events_url": "https://api.github.com/users/kevinsawicki/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kevinsawicki/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2017-02-07T19:56:05Z",
    "updated_at": "2017-02-07T19:56:05Z",
    "body": "This is currently blocked on Chrome not supporting building against macOS SDK 10.12 which this pull request requires. Currently pinch zooming breaks in Chrome if you build it with SDK 10.11+.\r\n\r\nIt looks like it is actively being worked on: https://bugs.chromium.org/p/chromium/issues/detail?id=680927\r\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/281981680",
    "html_url": "https://github.com/electron/electron/issues/7781#issuecomment-281981680",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7781",
    "id": 281981680,
    "user": {
      "login": "jpsim",
      "id": 474794,
      "avatar_url": "https://avatars3.githubusercontent.com/u/474794?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jpsim",
      "html_url": "https://github.com/jpsim",
      "followers_url": "https://api.github.com/users/jpsim/followers",
      "following_url": "https://api.github.com/users/jpsim/following{/other_user}",
      "gists_url": "https://api.github.com/users/jpsim/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jpsim/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jpsim/subscriptions",
      "organizations_url": "https://api.github.com/users/jpsim/orgs",
      "repos_url": "https://api.github.com/users/jpsim/repos",
      "events_url": "https://api.github.com/users/jpsim/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jpsim/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-23T12:41:03Z",
    "updated_at": "2017-02-23T12:41:03Z",
    "body": "Touch bar support was added to Chromium according to https://bugs.chromium.org/p/chromium/issues/detail?id=660126."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/284090097",
    "html_url": "https://github.com/electron/electron/issues/7781#issuecomment-284090097",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7781",
    "id": 284090097,
    "user": {
      "login": "kevinsawicki",
      "id": 671378,
      "avatar_url": "https://avatars0.githubusercontent.com/u/671378?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kevinsawicki",
      "html_url": "https://github.com/kevinsawicki",
      "followers_url": "https://api.github.com/users/kevinsawicki/followers",
      "following_url": "https://api.github.com/users/kevinsawicki/following{/other_user}",
      "gists_url": "https://api.github.com/users/kevinsawicki/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kevinsawicki/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kevinsawicki/subscriptions",
      "organizations_url": "https://api.github.com/users/kevinsawicki/orgs",
      "repos_url": "https://api.github.com/users/kevinsawicki/repos",
      "events_url": "https://api.github.com/users/kevinsawicki/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kevinsawicki/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2017-03-03T22:39:00Z",
    "updated_at": "2017-03-03T22:39:00Z",
    "body": "This has landed on master and will be included in the next Electron beta release, 1.6.3, see the [new docs](https://github.com/electron/electron/blob/master/docs/api/touch-bar.md) for more details."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/311189188",
    "html_url": "https://github.com/electron/electron/issues/7781#issuecomment-311189188",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7781",
    "id": 311189188,
    "user": {
      "login": "etiennepinchon",
      "id": 20617726,
      "avatar_url": "https://avatars0.githubusercontent.com/u/20617726?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/etiennepinchon",
      "html_url": "https://github.com/etiennepinchon",
      "followers_url": "https://api.github.com/users/etiennepinchon/followers",
      "following_url": "https://api.github.com/users/etiennepinchon/following{/other_user}",
      "gists_url": "https://api.github.com/users/etiennepinchon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/etiennepinchon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/etiennepinchon/subscriptions",
      "organizations_url": "https://api.github.com/users/etiennepinchon/orgs",
      "repos_url": "https://api.github.com/users/etiennepinchon/repos",
      "events_url": "https://api.github.com/users/etiennepinchon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/etiennepinchon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-26T21:36:12Z",
    "updated_at": "2017-06-26T21:36:12Z",
    "body": "Wait a minute! Is that it? :( I just tried the Touchbar api, at first I was excited, but quickly realized it is far from being usable! Sure you can create a few buttons, sliders and stuff but what about the deeper stuff? \r\n\r\nFor instance being able to trigger a color picker so that it opens without the user to press the button or all the default buttons like the emoji bar? the suggestions bar?\r\nA LOT is missing! :( I know I know haha this is experimental but there is so much possibilities!\r\nIt would be sad to stop here! "
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/311196260",
    "html_url": "https://github.com/electron/electron/issues/7781#issuecomment-311196260",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7781",
    "id": 311196260,
    "user": {
      "login": "MarshallOfSound",
      "id": 6634592,
      "avatar_url": "https://avatars0.githubusercontent.com/u/6634592?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarshallOfSound",
      "html_url": "https://github.com/MarshallOfSound",
      "followers_url": "https://api.github.com/users/MarshallOfSound/followers",
      "following_url": "https://api.github.com/users/MarshallOfSound/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarshallOfSound/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarshallOfSound/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarshallOfSound/subscriptions",
      "organizations_url": "https://api.github.com/users/MarshallOfSound/orgs",
      "repos_url": "https://api.github.com/users/MarshallOfSound/repos",
      "events_url": "https://api.github.com/users/MarshallOfSound/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarshallOfSound/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-26T22:09:30Z",
    "updated_at": "2017-06-26T22:09:30Z",
    "body": "> For instance being able to trigger a color picker so that it opens without the user to press the button\r\n\r\nThere is not way to programattically trigger a touch bar item, check out the color picker docs. \r\n We can change some options but we can't trigger it. \r\nhttps://developer.apple.com/documentation/appkit/nscolorpickertouchbaritem?language=objc\r\n\r\n> the emoji bar\r\n\r\nYou would implement this yourself using the [TouchBarScrubber](https://electron.atom.io/docs/api/touch-bar-scrubber/) item.  There isn't a built in \"emoji picker\" for the touch bar\r\n\r\n> the suggestions bar\r\n\r\nI assume you mean typing suggestions, this is dependent on Chromium's implementation of that feature as the text views in Chromium aren't native text views."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/311261827",
    "html_url": "https://github.com/electron/electron/issues/7781#issuecomment-311261827",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7781",
    "id": 311261827,
    "user": {
      "login": "patrikholcak",
      "id": 72975,
      "avatar_url": "https://avatars2.githubusercontent.com/u/72975?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/patrikholcak",
      "html_url": "https://github.com/patrikholcak",
      "followers_url": "https://api.github.com/users/patrikholcak/followers",
      "following_url": "https://api.github.com/users/patrikholcak/following{/other_user}",
      "gists_url": "https://api.github.com/users/patrikholcak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/patrikholcak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/patrikholcak/subscriptions",
      "organizations_url": "https://api.github.com/users/patrikholcak/orgs",
      "repos_url": "https://api.github.com/users/patrikholcak/repos",
      "events_url": "https://api.github.com/users/patrikholcak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/patrikholcak/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-27T06:04:45Z",
    "updated_at": "2017-06-27T07:02:05Z",
    "body": "Iâve always felt like the electronâs TouchBar api itself is highly developer unfriendly. TouchBar feels more like a UI element that you want to change depending on the state of your app and respond to it (dispatch actions, set state,â¦) and communicating via `ipc`, having to mount and dismount events might be a bit confusing for an inexperienced dev and makes it harder to have more layouts. \r\n\r\nDefining it in components of your app would allow it to respond to the state more easier. I made a small [library](https://github.com/patrikholcak/react-touchbar-electron) (shameless plug) that allows developers to define TouchBar using React components, but Iâm thinking that it might be easier to just port the current api to renderer process (which would also make it library agnostic) and have it communicate via `ipc` for you, AKA:\r\n\r\n```js\r\n// ui-component.js\r\nclass App {\r\n  constructor() {\r\n    new TouchBar({\r\n      items: [\r\n        new TouchBarButton({\r\n          click: this.doSomething\r\n        }),\r\n        new TouchBarSlider({}),\r\n        â¦\r\n      ],\r\n      escapeItem: new TouchBarButton({â¦})\r\n    })\r\n  }\r\n}\r\n```\r\n\r\nCould this be interesting enough for a library/PR?"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/311274099",
    "html_url": "https://github.com/electron/electron/issues/7781#issuecomment-311274099",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7781",
    "id": 311274099,
    "user": {
      "login": "MarshallOfSound",
      "id": 6634592,
      "avatar_url": "https://avatars0.githubusercontent.com/u/6634592?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarshallOfSound",
      "html_url": "https://github.com/MarshallOfSound",
      "followers_url": "https://api.github.com/users/MarshallOfSound/followers",
      "following_url": "https://api.github.com/users/MarshallOfSound/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarshallOfSound/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarshallOfSound/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarshallOfSound/subscriptions",
      "organizations_url": "https://api.github.com/users/MarshallOfSound/orgs",
      "repos_url": "https://api.github.com/users/MarshallOfSound/repos",
      "events_url": "https://api.github.com/users/MarshallOfSound/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarshallOfSound/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-27T07:17:46Z",
    "updated_at": "2017-06-27T07:17:46Z",
    "body": "Renderer wrappers for the touch bar API are definitely things that belong in userland.  The JS API simply gives you maximum access to the native apis.  What you do with that / how you model it is entirely up to you."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/311492741",
    "html_url": "https://github.com/electron/electron/issues/7781#issuecomment-311492741",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7781",
    "id": 311492741,
    "user": {
      "login": "etiennepinchon",
      "id": 20617726,
      "avatar_url": "https://avatars0.githubusercontent.com/u/20617726?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/etiennepinchon",
      "html_url": "https://github.com/etiennepinchon",
      "followers_url": "https://api.github.com/users/etiennepinchon/followers",
      "following_url": "https://api.github.com/users/etiennepinchon/following{/other_user}",
      "gists_url": "https://api.github.com/users/etiennepinchon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/etiennepinchon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/etiennepinchon/subscriptions",
      "organizations_url": "https://api.github.com/users/etiennepinchon/orgs",
      "repos_url": "https://api.github.com/users/etiennepinchon/repos",
      "events_url": "https://api.github.com/users/etiennepinchon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/etiennepinchon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-27T21:33:46Z",
    "updated_at": "2017-06-27T21:33:54Z",
    "body": "@MarshallOfSound Thank you for your details response! \r\n\r\n> There is not way to programatically trigger a touch bar item\r\n\r\nSo let's say I have an non-native color picker in my app, there is not way to open the touchbar color picker to selection mode when my color picker is open ? \r\n\r\nI think this is really the missing key element to get a responsive feeling (UX <-> Touchbar) .\r\n"
  }
]