[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/298396448",
    "html_url": "https://github.com/electron/electron/issues/9302#issuecomment-298396448",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/9302",
    "id": 298396448,
    "user": {
      "login": "kevinsawicki",
      "id": 671378,
      "avatar_url": "https://avatars0.githubusercontent.com/u/671378?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kevinsawicki",
      "html_url": "https://github.com/kevinsawicki",
      "followers_url": "https://api.github.com/users/kevinsawicki/followers",
      "following_url": "https://api.github.com/users/kevinsawicki/following{/other_user}",
      "gists_url": "https://api.github.com/users/kevinsawicki/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kevinsawicki/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kevinsawicki/subscriptions",
      "organizations_url": "https://api.github.com/users/kevinsawicki/orgs",
      "repos_url": "https://api.github.com/users/kevinsawicki/repos",
      "events_url": "https://api.github.com/users/kevinsawicki/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kevinsawicki/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2017-05-01T18:33:17Z",
    "updated_at": "2017-05-01T18:33:17Z",
    "body": "/cc @felixrieseberg is this the expected behavior?"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/299562567",
    "html_url": "https://github.com/electron/electron/issues/9302#issuecomment-299562567",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/9302",
    "id": 299562567,
    "user": {
      "login": "felixrieseberg",
      "id": 1426799,
      "avatar_url": "https://avatars0.githubusercontent.com/u/1426799?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/felixrieseberg",
      "html_url": "https://github.com/felixrieseberg",
      "followers_url": "https://api.github.com/users/felixrieseberg/followers",
      "following_url": "https://api.github.com/users/felixrieseberg/following{/other_user}",
      "gists_url": "https://api.github.com/users/felixrieseberg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/felixrieseberg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/felixrieseberg/subscriptions",
      "organizations_url": "https://api.github.com/users/felixrieseberg/orgs",
      "repos_url": "https://api.github.com/users/felixrieseberg/repos",
      "events_url": "https://api.github.com/users/felixrieseberg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/felixrieseberg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-05T20:03:19Z",
    "updated_at": "2017-05-05T20:03:19Z",
    "body": "Hmmm, I'm not sure why you would want that. Here's my reasoning:\r\n\r\n:one: Read operations will still have to be made against `%APPDATA%`. The system will automatically merge the sandboxed and \"real\" location.\r\n:two: Write operations into the package folder aren't allowed (\"Writes under C:\\Program Files\\WindowsApps\\package_name are not allowed.\")\r\n:three: This is something that is and should be handled by Windows - you as the developer shouldn't worry about the redirection. See:\r\n\r\n> In order to contain app state, the bridge attempts to capture changes the app makes to AppData. All write to the user's AppData folder (e.g., C:\\Users\\user_name\\AppData), including create, delete, and update, are copied on write to a private per-user, per-app location. This creates the illusion that the converted app is editing the real AppData when it is actually modifying a private copy. By redirecting writes this way, the system can track all file modifications made by the app. This allows the system to clean up those files when the app is uninstalled, thus reducing system \"rot\" and providing a better app removal experience for the user.\r\n\r\n@fancyydk What is your use case? It's always possible that I missed something."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/305363443",
    "html_url": "https://github.com/electron/electron/issues/9302#issuecomment-305363443",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/9302",
    "id": 305363443,
    "user": {
      "login": "fancyydk",
      "id": 12807659,
      "avatar_url": "https://avatars0.githubusercontent.com/u/12807659?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fancyydk",
      "html_url": "https://github.com/fancyydk",
      "followers_url": "https://api.github.com/users/fancyydk/followers",
      "following_url": "https://api.github.com/users/fancyydk/following{/other_user}",
      "gists_url": "https://api.github.com/users/fancyydk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fancyydk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fancyydk/subscriptions",
      "organizations_url": "https://api.github.com/users/fancyydk/orgs",
      "repos_url": "https://api.github.com/users/fancyydk/repos",
      "events_url": "https://api.github.com/users/fancyydk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fancyydk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-01T01:29:18Z",
    "updated_at": "2017-06-01T01:29:18Z",
    "body": "Thanks Felix for the response. In my use case, I call `shell.openItem(file)` in which file is some file that exists in %APPDATA%. The system doesn't seem to redirect this path to %LOCALAPPDATA%\\Packages\\_AppName_ and instead still tries to read from that location.\r\n\r\nWriting to that location is different however. The system automatically redirects the write operation to the sandboxed location in %LOCALAPPDATA%."
  }
]