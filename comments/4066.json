[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/170869072",
    "html_url": "https://github.com/electron/electron/issues/4066#issuecomment-170869072",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/4066",
    "id": 170869072,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2016-01-12T10:35:15Z",
    "updated_at": "2016-01-12T10:35:15Z",
    "body": "It is quite a surprise to me that ES6 class methods are not enumerable.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/170870401",
    "html_url": "https://github.com/electron/electron/issues/4066#issuecomment-170870401",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/4066",
    "id": 170870401,
    "user": {
      "login": "parro-it",
      "id": 11197111,
      "avatar_url": "https://avatars1.githubusercontent.com/u/11197111?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/parro-it",
      "html_url": "https://github.com/parro-it",
      "followers_url": "https://api.github.com/users/parro-it/followers",
      "following_url": "https://api.github.com/users/parro-it/following{/other_user}",
      "gists_url": "https://api.github.com/users/parro-it/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/parro-it/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/parro-it/subscriptions",
      "organizations_url": "https://api.github.com/users/parro-it/orgs",
      "repos_url": "https://api.github.com/users/parro-it/repos",
      "events_url": "https://api.github.com/users/parro-it/events{/privacy}",
      "received_events_url": "https://api.github.com/users/parro-it/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-12T10:38:35Z",
    "updated_at": "2016-01-12T10:38:44Z",
    "body": "Taken from Dr. Axel Rauschmayer site: [Prototype methods Foo.prototype.\\* are writable and configurable, but not enumerable.](http://www.2ality.com/2015/02/es6-classes-final.html)\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/171130499",
    "html_url": "https://github.com/electron/electron/issues/4066#issuecomment-171130499",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/4066",
    "id": 171130499,
    "user": {
      "login": "jiaz",
      "id": 610679,
      "avatar_url": "https://avatars3.githubusercontent.com/u/610679?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jiaz",
      "html_url": "https://github.com/jiaz",
      "followers_url": "https://api.github.com/users/jiaz/followers",
      "following_url": "https://api.github.com/users/jiaz/following{/other_user}",
      "gists_url": "https://api.github.com/users/jiaz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jiaz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jiaz/subscriptions",
      "organizations_url": "https://api.github.com/users/jiaz/orgs",
      "repos_url": "https://api.github.com/users/jiaz/repos",
      "events_url": "https://api.github.com/users/jiaz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jiaz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-13T02:08:46Z",
    "updated_at": "2016-01-13T02:08:46Z",
    "body": "@zcbenz Yeah, it's a surprise to me too. For now I can just use prototypes or reconfigure the properties. However to me it seems that it's necessary to provide some long term solution for this since eventually people will start using ES6 syntax and class is a nice feature to group functionalities.\n\nOne idea, is that possible to also include those non-enumerable own properties that are functions?\nThere is a stackoverflow answer here demonstrate some similar ideas:\nhttp://stackoverflow.com/questions/31054910/get-functions-of-a-class\n\nHowever I think this does need some consideration and discussion.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/184917655",
    "html_url": "https://github.com/electron/electron/issues/4066#issuecomment-184917655",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/4066",
    "id": 184917655,
    "user": {
      "login": "Robbilie",
      "id": 406176,
      "avatar_url": "https://avatars1.githubusercontent.com/u/406176?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Robbilie",
      "html_url": "https://github.com/Robbilie",
      "followers_url": "https://api.github.com/users/Robbilie/followers",
      "following_url": "https://api.github.com/users/Robbilie/following{/other_user}",
      "gists_url": "https://api.github.com/users/Robbilie/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Robbilie/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Robbilie/subscriptions",
      "organizations_url": "https://api.github.com/users/Robbilie/orgs",
      "repos_url": "https://api.github.com/users/Robbilie/repos",
      "events_url": "https://api.github.com/users/Robbilie/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Robbilie/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-16T23:23:04Z",
    "updated_at": "2016-02-16T23:23:04Z",
    "body": "I just wrote a whole stack of classes, put them into my main js file and was stuck for hours trying to find out why there were no methods on the classes when getting them with remote.require\n\ni would love to be able to use the syntax instead of rewriting all the classes, is there a way to bypass this issue or any plans for the next release to include such functionality?\n"
  }
]