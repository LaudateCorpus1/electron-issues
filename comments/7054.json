[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/244173348",
    "html_url": "https://github.com/electron/electron/issues/7054#issuecomment-244173348",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7054",
    "id": 244173348,
    "user": {
      "login": "deepak1556",
      "id": 964386,
      "avatar_url": "https://avatars2.githubusercontent.com/u/964386?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/deepak1556",
      "html_url": "https://github.com/deepak1556",
      "followers_url": "https://api.github.com/users/deepak1556/followers",
      "following_url": "https://api.github.com/users/deepak1556/following{/other_user}",
      "gists_url": "https://api.github.com/users/deepak1556/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/deepak1556/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/deepak1556/subscriptions",
      "organizations_url": "https://api.github.com/users/deepak1556/orgs",
      "repos_url": "https://api.github.com/users/deepak1556/repos",
      "events_url": "https://api.github.com/users/deepak1556/events{/privacy}",
      "received_events_url": "https://api.github.com/users/deepak1556/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-01T18:43:54Z",
    "updated_at": "2016-09-01T18:43:54Z",
    "body": "Do you get the expected output in chrome ? Have you verified it has `Access-Control-Expose-Headers` incase its a cors request ?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/244321365",
    "html_url": "https://github.com/electron/electron/issues/7054#issuecomment-244321365",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7054",
    "id": 244321365,
    "user": {
      "login": "1999",
      "id": 73191,
      "avatar_url": "https://avatars3.githubusercontent.com/u/73191?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/1999",
      "html_url": "https://github.com/1999",
      "followers_url": "https://api.github.com/users/1999/followers",
      "following_url": "https://api.github.com/users/1999/following{/other_user}",
      "gists_url": "https://api.github.com/users/1999/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/1999/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/1999/subscriptions",
      "organizations_url": "https://api.github.com/users/1999/orgs",
      "repos_url": "https://api.github.com/users/1999/repos",
      "events_url": "https://api.github.com/users/1999/events{/privacy}",
      "received_events_url": "https://api.github.com/users/1999/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-02T08:58:26Z",
    "updated_at": "2016-09-02T08:59:09Z",
    "body": "This is the code:\n\n``` javascript\nconst headers = new Headers;\nheaders.set('Authorization', 'OAuth ...')\n\nfetch('https://api/v2/issue/changelog', {mode: 'cors', headers}).then(res => {\n  console.log(new Map([...res.headers]))\n})\n```\n\nThis code produces different headers in browser and electon-based app.\nThe problem seems to be somewhere inside the app because `{mode: 'cors'}` does nothing: `Origin` header is not set and this is why server doesn't send `Access-Control-Expose-Headers` header.\nAm I missing smth and there is an opportunity to set Origin header by hands in electron?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/244416413",
    "html_url": "https://github.com/electron/electron/issues/7054#issuecomment-244416413",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7054",
    "id": 244416413,
    "user": {
      "login": "deepak1556",
      "id": 964386,
      "avatar_url": "https://avatars2.githubusercontent.com/u/964386?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/deepak1556",
      "html_url": "https://github.com/deepak1556",
      "followers_url": "https://api.github.com/users/deepak1556/followers",
      "following_url": "https://api.github.com/users/deepak1556/following{/other_user}",
      "gists_url": "https://api.github.com/users/deepak1556/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/deepak1556/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/deepak1556/subscriptions",
      "organizations_url": "https://api.github.com/users/deepak1556/orgs",
      "repos_url": "https://api.github.com/users/deepak1556/repos",
      "events_url": "https://api.github.com/users/deepak1556/events{/privacy}",
      "received_events_url": "https://api.github.com/users/deepak1556/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-02T16:01:32Z",
    "updated_at": "2016-09-02T16:01:32Z",
    "body": "Can't tell whats wrong without a reproducible example or a `log-net-log` trace, would it be possible to provide either one ? As far as I tested origin headers are sent.\n\n> an opportunity to set Origin header by hands in electron\n\nYou can use [ses.webRequest.onBeforeSendHeaders](https://github.com/electron/electron/blob/master/docs/api/session.md#webrequestonbeforesendheadersfilter-listener) to manipulate request headers.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/244612346",
    "html_url": "https://github.com/electron/electron/issues/7054#issuecomment-244612346",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7054",
    "id": 244612346,
    "user": {
      "login": "1999",
      "id": 73191,
      "avatar_url": "https://avatars3.githubusercontent.com/u/73191?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/1999",
      "html_url": "https://github.com/1999",
      "followers_url": "https://api.github.com/users/1999/followers",
      "following_url": "https://api.github.com/users/1999/following{/other_user}",
      "gists_url": "https://api.github.com/users/1999/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/1999/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/1999/subscriptions",
      "organizations_url": "https://api.github.com/users/1999/orgs",
      "repos_url": "https://api.github.com/users/1999/repos",
      "events_url": "https://api.github.com/users/1999/events{/privacy}",
      "received_events_url": "https://api.github.com/users/1999/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-04T16:16:51Z",
    "updated_at": "2016-09-04T16:16:51Z",
    "body": "Sorry for waiting so long. I made a little investigation and it seems like the problem appears when the server's `Access-Control-Allow-Origin` header is set not just to asterisk, but when the server also checks the `Origin` of request and sets response header value to request origin if it's valid.\n\nI wrote a simple express code for that and use it in my gist:\n\n``` javascript\napp.get('/_cors', function (req, res, next) {\n    if (req.headers.origin) {\n        res.set({\n            'Access-Control-Allow-Credentials': true,\n            'Access-Control-Allow-Headers': 'Authorization, If-None-Match, If-Match, Accept, If-Modified-Since, Accept-Encoding, Accept-Language, Content-Type, If-Unmodified-Since',\n            'Access-Control-Allow-Origin': req.headers.origin,\n            'Access-Control-Expose-Headers': 'ETag,Content-Encoding,Vary,Last-Modified,Content-Language,Link,Content-Type'\n        });\n    }\n\n    res.json({\n        request_headers: req.headers\n    });\n});\n```\n\nhttps://gist.github.com/1999/83a4a55b417cfb5ca046a62a36d2ae70\n\n1) I expect 2 headers to be available inside res.headers, instead only one is available\n2) Response JSON shown in devtools console shows that no `Origin` header was among request headers\n3) Code from entrypoint.js outputs 2 response headers when it's run from browser console (`Origin` header is sent)\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/244627584",
    "html_url": "https://github.com/electron/electron/issues/7054#issuecomment-244627584",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7054",
    "id": 244627584,
    "user": {
      "login": "deepak1556",
      "id": 964386,
      "avatar_url": "https://avatars2.githubusercontent.com/u/964386?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/deepak1556",
      "html_url": "https://github.com/deepak1556",
      "followers_url": "https://api.github.com/users/deepak1556/followers",
      "following_url": "https://api.github.com/users/deepak1556/following{/other_user}",
      "gists_url": "https://api.github.com/users/deepak1556/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/deepak1556/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/deepak1556/subscriptions",
      "organizations_url": "https://api.github.com/users/deepak1556/orgs",
      "repos_url": "https://api.github.com/users/deepak1556/repos",
      "events_url": "https://api.github.com/users/deepak1556/events{/privacy}",
      "received_events_url": "https://api.github.com/users/deepak1556/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-04T20:44:06Z",
    "updated_at": "2016-09-04T20:44:06Z",
    "body": "Thanks for the test case, the problem seems to be with `file` scheme not sending `origin: null` in Electron. You can workaround it with a `http(s)` scheme.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/244628930",
    "html_url": "https://github.com/electron/electron/issues/7054#issuecomment-244628930",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7054",
    "id": 244628930,
    "user": {
      "login": "1999",
      "id": 73191,
      "avatar_url": "https://avatars3.githubusercontent.com/u/73191?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/1999",
      "html_url": "https://github.com/1999",
      "followers_url": "https://api.github.com/users/1999/followers",
      "following_url": "https://api.github.com/users/1999/following{/other_user}",
      "gists_url": "https://api.github.com/users/1999/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/1999/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/1999/subscriptions",
      "organizations_url": "https://api.github.com/users/1999/orgs",
      "repos_url": "https://api.github.com/users/1999/repos",
      "events_url": "https://api.github.com/users/1999/events{/privacy}",
      "received_events_url": "https://api.github.com/users/1999/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-04T21:10:16Z",
    "updated_at": "2016-09-04T21:10:16Z",
    "body": "> You can workaround it with a http(s) scheme.\n\neh... can you tell a bit more about it? What should I do to let my client-side code send `Origin` header?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/244643613",
    "html_url": "https://github.com/electron/electron/issues/7054#issuecomment-244643613",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7054",
    "id": 244643613,
    "user": {
      "login": "deepak1556",
      "id": 964386,
      "avatar_url": "https://avatars2.githubusercontent.com/u/964386?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/deepak1556",
      "html_url": "https://github.com/deepak1556",
      "followers_url": "https://api.github.com/users/deepak1556/followers",
      "following_url": "https://api.github.com/users/deepak1556/following{/other_user}",
      "gists_url": "https://api.github.com/users/deepak1556/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/deepak1556/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/deepak1556/subscriptions",
      "organizations_url": "https://api.github.com/users/deepak1556/orgs",
      "repos_url": "https://api.github.com/users/deepak1556/repos",
      "events_url": "https://api.github.com/users/deepak1556/events{/privacy}",
      "received_events_url": "https://api.github.com/users/deepak1556/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-05T01:57:28Z",
    "updated_at": "2016-09-05T01:58:08Z",
    "body": "@zcbenz the cause seems to be enabling `allow_universal_access_from_file_urls` which made the request to be not treated as CORS, can we add a `webPreferences` option to disable it ? This will only affect whether JavaScript running in the context of a file scheme can access content from any origin. If we were to disable it explicitly, it will affect users of custom protocol who might not have CORS enabled.\n\n@1999 i meant serving the file from a local http server instead of loading from file scheme.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/244665230",
    "html_url": "https://github.com/electron/electron/issues/7054#issuecomment-244665230",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7054",
    "id": 244665230,
    "user": {
      "login": "1999",
      "id": 73191,
      "avatar_url": "https://avatars3.githubusercontent.com/u/73191?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/1999",
      "html_url": "https://github.com/1999",
      "followers_url": "https://api.github.com/users/1999/followers",
      "following_url": "https://api.github.com/users/1999/following{/other_user}",
      "gists_url": "https://api.github.com/users/1999/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/1999/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/1999/subscriptions",
      "organizations_url": "https://api.github.com/users/1999/orgs",
      "repos_url": "https://api.github.com/users/1999/repos",
      "events_url": "https://api.github.com/users/1999/events{/privacy}",
      "received_events_url": "https://api.github.com/users/1999/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-05T06:06:40Z",
    "updated_at": "2016-09-05T06:06:40Z",
    "body": "That'a a bit sad because I want my app to be fully working offline. Is there any other workaround for this issue?\nUPD: I've just tried fs.readFileSync + new Blob + URL.createObjectURL + appending script to body, but blob URLs also have this problem.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/246262707",
    "html_url": "https://github.com/electron/electron/issues/7054#issuecomment-246262707",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7054",
    "id": 246262707,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2016-09-12T06:49:49Z",
    "updated_at": "2016-09-12T06:49:49Z",
    "body": "This seems to be caused by the `origin` header not being set in `file:` scheme? Using custom protocols should be able to solve this: http://electron.atom.io/docs/api/protocol/.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/246263834",
    "html_url": "https://github.com/electron/electron/issues/7054#issuecomment-246263834",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7054",
    "id": 246263834,
    "user": {
      "login": "deepak1556",
      "id": 964386,
      "avatar_url": "https://avatars2.githubusercontent.com/u/964386?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/deepak1556",
      "html_url": "https://github.com/deepak1556",
      "followers_url": "https://api.github.com/users/deepak1556/followers",
      "following_url": "https://api.github.com/users/deepak1556/following{/other_user}",
      "gists_url": "https://api.github.com/users/deepak1556/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/deepak1556/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/deepak1556/subscriptions",
      "organizations_url": "https://api.github.com/users/deepak1556/orgs",
      "repos_url": "https://api.github.com/users/deepak1556/repos",
      "events_url": "https://api.github.com/users/deepak1556/events{/privacy}",
      "received_events_url": "https://api.github.com/users/deepak1556/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-12T06:57:12Z",
    "updated_at": "2016-09-12T06:57:12Z",
    "body": "> This seems to be caused by the origin header not being set in file: scheme?\n\nYup, that's because we have enabled the `Content::WebPreferences` option `allow_universal_access_from_file_urls` which makes the request to any origin from `file` scheme not to be treated as CORS. So was thinking if we can provide an option to disable it for users who require the default browser behavior.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/246264780",
    "html_url": "https://github.com/electron/electron/issues/7054#issuecomment-246264780",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7054",
    "id": 246264780,
    "user": {
      "login": "deepak1556",
      "id": 964386,
      "avatar_url": "https://avatars2.githubusercontent.com/u/964386?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/deepak1556",
      "html_url": "https://github.com/deepak1556",
      "followers_url": "https://api.github.com/users/deepak1556/followers",
      "following_url": "https://api.github.com/users/deepak1556/following{/other_user}",
      "gists_url": "https://api.github.com/users/deepak1556/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/deepak1556/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/deepak1556/subscriptions",
      "organizations_url": "https://api.github.com/users/deepak1556/orgs",
      "repos_url": "https://api.github.com/users/deepak1556/repos",
      "events_url": "https://api.github.com/users/deepak1556/events{/privacy}",
      "received_events_url": "https://api.github.com/users/deepak1556/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-12T07:03:12Z",
    "updated_at": "2016-09-12T07:03:12Z",
    "body": "> Using custom protocols should be able to solve this\n\nYup custom protocols can be used too, in that case we can simply document this behavior for `file` scheme ?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/246266454",
    "html_url": "https://github.com/electron/electron/issues/7054#issuecomment-246266454",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7054",
    "id": 246266454,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2016-09-12T07:13:32Z",
    "updated_at": "2016-09-12T07:14:44Z",
    "body": "Adding an option for `allow_universal_access_from_file_urls` is fine, but disabling an feature to enable another one is usually not an option, because users may want both.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/246266920",
    "html_url": "https://github.com/electron/electron/issues/7054#issuecomment-246266920",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7054",
    "id": 246266920,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2016-09-12T07:16:28Z",
    "updated_at": "2016-09-12T07:16:28Z",
    "body": "> Yup custom protocols can be used too, in that case we can simply document this behavior for file scheme ?\n\nYeah it sounds good to me, we can probably have a page listing all limitations of `file` scheme and recommend using custom protocols instead.\n\nI'm closing this since this is a limitation of `file` scheme and customs protocols should be used in this case.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/246319617",
    "html_url": "https://github.com/electron/electron/issues/7054#issuecomment-246319617",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7054",
    "id": 246319617,
    "user": {
      "login": "1999",
      "id": 73191,
      "avatar_url": "https://avatars3.githubusercontent.com/u/73191?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/1999",
      "html_url": "https://github.com/1999",
      "followers_url": "https://api.github.com/users/1999/followers",
      "following_url": "https://api.github.com/users/1999/following{/other_user}",
      "gists_url": "https://api.github.com/users/1999/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/1999/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/1999/subscriptions",
      "organizations_url": "https://api.github.com/users/1999/orgs",
      "repos_url": "https://api.github.com/users/1999/repos",
      "events_url": "https://api.github.com/users/1999/events{/privacy}",
      "received_events_url": "https://api.github.com/users/1999/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-12T11:25:59Z",
    "updated_at": "2016-09-12T11:25:59Z",
    "body": "Thank you guys!\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/246325533",
    "html_url": "https://github.com/electron/electron/issues/7054#issuecomment-246325533",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7054",
    "id": 246325533,
    "user": {
      "login": "1999",
      "id": 73191,
      "avatar_url": "https://avatars3.githubusercontent.com/u/73191?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/1999",
      "html_url": "https://github.com/1999",
      "followers_url": "https://api.github.com/users/1999/followers",
      "following_url": "https://api.github.com/users/1999/following{/other_user}",
      "gists_url": "https://api.github.com/users/1999/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/1999/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/1999/subscriptions",
      "organizations_url": "https://api.github.com/users/1999/orgs",
      "repos_url": "https://api.github.com/users/1999/repos",
      "events_url": "https://api.github.com/users/1999/events{/privacy}",
      "received_events_url": "https://api.github.com/users/1999/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-12T11:57:51Z",
    "updated_at": "2016-09-12T11:57:51Z",
    "body": "Btw, which of the \"registerSmthProtocol\" methods should I use? When I use `registerFileProtocol` or `registerStringProtocol`, Origin header is not sent. `registerHttpProtocol` requires sending redirectRequest as the output, but I want my app to be available offline (at least have a small working set of features).\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/246335171",
    "html_url": "https://github.com/electron/electron/issues/7054#issuecomment-246335171",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7054",
    "id": 246335171,
    "user": {
      "login": "deepak1556",
      "id": 964386,
      "avatar_url": "https://avatars2.githubusercontent.com/u/964386?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/deepak1556",
      "html_url": "https://github.com/deepak1556",
      "followers_url": "https://api.github.com/users/deepak1556/followers",
      "following_url": "https://api.github.com/users/deepak1556/following{/other_user}",
      "gists_url": "https://api.github.com/users/deepak1556/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/deepak1556/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/deepak1556/subscriptions",
      "organizations_url": "https://api.github.com/users/deepak1556/orgs",
      "repos_url": "https://api.github.com/users/deepak1556/repos",
      "events_url": "https://api.github.com/users/deepak1556/events{/privacy}",
      "received_events_url": "https://api.github.com/users/deepak1556/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-12T12:42:41Z",
    "updated_at": "2016-09-12T12:42:41Z",
    "body": "@1999 any custom protocol should support CORS, i tested your example with custom scheme and origin headers are sent.\n\n```\n'use strict';\n\nconst {app, BrowserWindow, session} = require('electron');\nlet win;\n\nfunction createWindow () {\n  win = new BrowserWindow({\n    width: 800,\n    height: 600\n  });\n\n  session.defaultSession.protocol.registerFileProtocol('app', (request, callback) => {\n    callback(__dirname + '/index.html')\n  })\n\n  win.loadURL('app://host')\n  win.on('closed', () => {\n    win = null\n  })\n}\n\napp.on('ready', createWindow)\n```\n\n```\n<script>\n'use strict';\n\nconst url = 'https://pokormikota.ru/_cors';\nconst headers = new Headers;\n\nfetch(url, {headers})\n    .then(res => {\n        return res.json();\n    })\n    .then(json => console.log(json.request_headers))\n    .catch(console.error.bind(console));\n</script>\n\n```\n\noutput:\n\n```\n{\n  \"host\": \"pokormikota.ru\",\n  \"x-real-ip\": \"49.206.116.5\",\n  \"x-forwarded-for\": \"49.206.116.5\",\n  \"x-forwarded-proto\": \"https\",\n  \"connection\": \"close\",\n  \"origin\": \"app://\",\n  \"user-agent\": \"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) PepperMemory/0.0.1 Chrome/52.0.2743.82 Electron/1.3.5 Safari/537.36\",\n  \"accept\": \"*/*\",\n  \"accept-encoding\": \"gzip, deflate\",\n  \"accept-language\": \"en-US\",\n  \"if-none-match\": \"W/\\\"1b6-1bc27e50\\\"\"\n}\n```\n"
  }
]