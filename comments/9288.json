[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/297176467",
    "html_url": "https://github.com/electron/electron/issues/9288#issuecomment-297176467",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/9288",
    "id": 297176467,
    "user": {
      "login": "kevinsawicki",
      "id": 671378,
      "avatar_url": "https://avatars0.githubusercontent.com/u/671378?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kevinsawicki",
      "html_url": "https://github.com/kevinsawicki",
      "followers_url": "https://api.github.com/users/kevinsawicki/followers",
      "following_url": "https://api.github.com/users/kevinsawicki/following{/other_user}",
      "gists_url": "https://api.github.com/users/kevinsawicki/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kevinsawicki/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kevinsawicki/subscriptions",
      "organizations_url": "https://api.github.com/users/kevinsawicki/orgs",
      "repos_url": "https://api.github.com/users/kevinsawicki/repos",
      "events_url": "https://api.github.com/users/kevinsawicki/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kevinsawicki/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2017-04-25T21:53:22Z",
    "updated_at": "2017-04-25T21:53:22Z",
    "body": "You should be able to access DOM elements this way, can you share the code where you saw it freeze/lock up?\r\n\r\nIt might be hanging if the DOM element has lots of properties that are being serialized, https://github.com/electron/electron/issues/7286"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/297196881",
    "html_url": "https://github.com/electron/electron/issues/9288#issuecomment-297196881",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/9288",
    "id": 297196881,
    "user": {
      "login": "shellscape",
      "id": 76371,
      "avatar_url": "https://avatars2.githubusercontent.com/u/76371?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shellscape",
      "html_url": "https://github.com/shellscape",
      "followers_url": "https://api.github.com/users/shellscape/followers",
      "following_url": "https://api.github.com/users/shellscape/following{/other_user}",
      "gists_url": "https://api.github.com/users/shellscape/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shellscape/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shellscape/subscriptions",
      "organizations_url": "https://api.github.com/users/shellscape/orgs",
      "repos_url": "https://api.github.com/users/shellscape/repos",
      "events_url": "https://api.github.com/users/shellscape/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shellscape/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-25T23:46:17Z",
    "updated_at": "2017-04-25T23:46:17Z",
    "body": "I attempted to return the following on google.com with the same results:\r\n\r\n`document.querySelector('body');`\r\n\r\n`document.querySelector('div');`\r\n\r\n`document.querySelectorAll('div')[0];`\r\n\r\nAt a point I thought there might be an operation it was hanging on, so I let the `querySelector('div')` call sit for about 30 minutes while I prepared some food. Unfortunately it was still hung when I returned."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/297198435",
    "html_url": "https://github.com/electron/electron/issues/9288#issuecomment-297198435",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/9288",
    "id": 297198435,
    "user": {
      "login": "kevinsawicki",
      "id": 671378,
      "avatar_url": "https://avatars0.githubusercontent.com/u/671378?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kevinsawicki",
      "html_url": "https://github.com/kevinsawicki",
      "followers_url": "https://api.github.com/users/kevinsawicki/followers",
      "following_url": "https://api.github.com/users/kevinsawicki/following{/other_user}",
      "gists_url": "https://api.github.com/users/kevinsawicki/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kevinsawicki/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kevinsawicki/subscriptions",
      "organizations_url": "https://api.github.com/users/kevinsawicki/orgs",
      "repos_url": "https://api.github.com/users/kevinsawicki/repos",
      "events_url": "https://api.github.com/users/kevinsawicki/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kevinsawicki/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2017-04-25T23:55:00Z",
    "updated_at": "2017-04-25T23:55:00Z",
    "body": "> I attempted to return the following on google.com with the same results:\r\n\r\nCan you try it with a smaller page and see if it returns the expected data? Just to try and confirm it is the large node issue."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/303678933",
    "html_url": "https://github.com/electron/electron/issues/9288#issuecomment-303678933",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/9288",
    "id": 303678933,
    "user": {
      "login": "MaharishiCanada",
      "id": 5099917,
      "avatar_url": "https://avatars0.githubusercontent.com/u/5099917?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MaharishiCanada",
      "html_url": "https://github.com/MaharishiCanada",
      "followers_url": "https://api.github.com/users/MaharishiCanada/followers",
      "following_url": "https://api.github.com/users/MaharishiCanada/following{/other_user}",
      "gists_url": "https://api.github.com/users/MaharishiCanada/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MaharishiCanada/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MaharishiCanada/subscriptions",
      "organizations_url": "https://api.github.com/users/MaharishiCanada/orgs",
      "repos_url": "https://api.github.com/users/MaharishiCanada/repos",
      "events_url": "https://api.github.com/users/MaharishiCanada/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MaharishiCanada/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-24T10:08:09Z",
    "updated_at": "2017-05-24T10:11:50Z",
    "body": "Are all the events available in executeJavaScript? It might be documented that the onload event is not available. I never could catch this event in executeJavaScript.  I know that we have 'did-stop-loading' and 'did-finish-load', but it's not exactly the same as 'onload' directly in a script executed in the renderer.  "
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/303707456",
    "html_url": "https://github.com/electron/electron/issues/9288#issuecomment-303707456",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/9288",
    "id": 303707456,
    "user": {
      "login": "shellscape",
      "id": 76371,
      "avatar_url": "https://avatars2.githubusercontent.com/u/76371?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shellscape",
      "html_url": "https://github.com/shellscape",
      "followers_url": "https://api.github.com/users/shellscape/followers",
      "following_url": "https://api.github.com/users/shellscape/following{/other_user}",
      "gists_url": "https://api.github.com/users/shellscape/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shellscape/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shellscape/subscriptions",
      "organizations_url": "https://api.github.com/users/shellscape/orgs",
      "repos_url": "https://api.github.com/users/shellscape/repos",
      "events_url": "https://api.github.com/users/shellscape/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shellscape/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-24T12:22:15Z",
    "updated_at": "2017-05-24T12:22:15Z",
    "body": "@kevinsawicki I neglected to reply, but fwiw I did try to run the same on a very small page. I posted a bare bones html page to my github pages site that contained a single `div` in the body, and got the same result."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/305725700",
    "html_url": "https://github.com/electron/electron/issues/9288#issuecomment-305725700",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/9288",
    "id": 305725700,
    "user": {
      "login": "MaharishiCanada",
      "id": 5099917,
      "avatar_url": "https://avatars0.githubusercontent.com/u/5099917?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MaharishiCanada",
      "html_url": "https://github.com/MaharishiCanada",
      "followers_url": "https://api.github.com/users/MaharishiCanada/followers",
      "following_url": "https://api.github.com/users/MaharishiCanada/following{/other_user}",
      "gists_url": "https://api.github.com/users/MaharishiCanada/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MaharishiCanada/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MaharishiCanada/subscriptions",
      "organizations_url": "https://api.github.com/users/MaharishiCanada/orgs",
      "repos_url": "https://api.github.com/users/MaharishiCanada/repos",
      "events_url": "https://api.github.com/users/MaharishiCanada/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MaharishiCanada/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-02T08:36:13Z",
    "updated_at": "2017-06-03T20:51:00Z",
    "body": "Note added: The code below actually does not succeed. It returns all the keys, but only with values that are string or numbers.  I keep the code below available anyway, because the window object is partially returned. \r\n\r\nWell, I finally checked and we do have access to many events such as `click`, `change`, etc.  in executeJavaScript. ~~I also succeeded to get the entire window element using executeJavaScript.~~  Here is the code that I used: \r\n\r\n```\r\nvar script =  `Promise.resolve(window);`\r\napp.on('ready', () => {\r\n  var win = new BrowserWindow();\r\n  win.loadURL('file://' + __dirname + '/index.html');\r\n  var maincontents = win.webContents; \r\n  maincontents.on('did-finish-load', () => {\r\n       allwebcontents = webContents.getAllWebContents();\r\n       viewcontents = allwebcontents[1]; // There was a simple webview tag in index.html. \r\n       viewcontents.executeJavaScript(script)\r\n               .then((value) => {console.log(value);  }) // The entire window object of the webview.\r\n               .catch((error) => console.log(error));\r\n  });  \r\n  win.on('closed', () => {win = null});\r\n}); \r\n```"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/305772673",
    "html_url": "https://github.com/electron/electron/issues/9288#issuecomment-305772673",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/9288",
    "id": 305772673,
    "user": {
      "login": "shellscape",
      "id": 76371,
      "avatar_url": "https://avatars2.githubusercontent.com/u/76371?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shellscape",
      "html_url": "https://github.com/shellscape",
      "followers_url": "https://api.github.com/users/shellscape/followers",
      "following_url": "https://api.github.com/users/shellscape/following{/other_user}",
      "gists_url": "https://api.github.com/users/shellscape/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shellscape/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shellscape/subscriptions",
      "organizations_url": "https://api.github.com/users/shellscape/orgs",
      "repos_url": "https://api.github.com/users/shellscape/repos",
      "events_url": "https://api.github.com/users/shellscape/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shellscape/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-02T12:31:42Z",
    "updated_at": "2017-06-02T12:31:42Z",
    "body": "What were the context of the index.html file you used for this example?"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/305943933",
    "html_url": "https://github.com/electron/electron/issues/9288#issuecomment-305943933",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/9288",
    "id": 305943933,
    "user": {
      "login": "MaharishiCanada",
      "id": 5099917,
      "avatar_url": "https://avatars0.githubusercontent.com/u/5099917?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MaharishiCanada",
      "html_url": "https://github.com/MaharishiCanada",
      "followers_url": "https://api.github.com/users/MaharishiCanada/followers",
      "following_url": "https://api.github.com/users/MaharishiCanada/following{/other_user}",
      "gists_url": "https://api.github.com/users/MaharishiCanada/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MaharishiCanada/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MaharishiCanada/subscriptions",
      "organizations_url": "https://api.github.com/users/MaharishiCanada/orgs",
      "repos_url": "https://api.github.com/users/MaharishiCanada/repos",
      "events_url": "https://api.github.com/users/MaharishiCanada/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MaharishiCanada/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-03T02:11:50Z",
    "updated_at": "2017-06-03T02:35:47Z",
    "body": "I realized that it does not work. I am learning about the architecture of Electron.  I start to consider the possibility that HTML DOM  nodes cannot exist in the main process. They can only exist in the renderer. This would explain why I can serialize with `var s = new XMLSerializer(); var str = s.serializeToString(adiv);` and send the string `str` as a resolved promise, but then it is pointless to try to de-serialize it as an HTML DOM node in the main process. The window  object is not an HTML DOM node, so it worked partially.  This is my guess. \r\n\r\nIf this understanding is correct, then it's not really a limitation of executeJavaScript,  but a \"limitation\" inherent to the architecture of Electron and it will be appropriate to better explain where executeJavaScript fits in this overall architecture, especially in terms of HTML DOM nodes.  "
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/309677791",
    "html_url": "https://github.com/electron/electron/issues/9288#issuecomment-309677791",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/9288",
    "id": 309677791,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2017-06-20T08:10:22Z",
    "updated_at": "2017-06-20T08:10:22Z",
    "body": "Data sent back to `executeJavaScript` are passed by IPC so only properties that can be serialized are kept. You can observe same behavior when sending DOM nodes to WebWorkers.\r\n\r\nFor the original issue you posted, sending DOM nodes should not freeze the app, can you provide a minimal app that can reproduce the problem?"
  }
]