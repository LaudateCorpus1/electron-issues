[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/82106755",
    "html_url": "https://github.com/electron/electron/issues/1253#issuecomment-82106755",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1253",
    "id": 82106755,
    "user": {
      "login": "bwin",
      "id": 1673361,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1673361?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bwin",
      "html_url": "https://github.com/bwin",
      "followers_url": "https://api.github.com/users/bwin/followers",
      "following_url": "https://api.github.com/users/bwin/following{/other_user}",
      "gists_url": "https://api.github.com/users/bwin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bwin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bwin/subscriptions",
      "organizations_url": "https://api.github.com/users/bwin/orgs",
      "repos_url": "https://api.github.com/users/bwin/repos",
      "events_url": "https://api.github.com/users/bwin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bwin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-17T05:02:31Z",
    "updated_at": "2015-03-17T05:07:30Z",
    "body": "> My problem is that I have no way of knowing if did-stop-loading will ever fire, as it never fires for non-renderable content.\n\nI think you mean \"if `did-finish-load` will ever fire\". If you don't, it's already too late for me (I was already in bed, but couldn't sleep anyway).\n\nAlso +1 on your prompt.\n\nTL;DR: keep looking for a \"real\" solution.\n\nSo, I can (in a really, really hacky way) determine if the loading failed and all works well, if I test like you showed in your gif (by manually closing the window). If I try to automate that (close the window when it's non-renderable) I have to use a delay before closing the window (for some reason).\nSo even if you would consider doing it this ugly way (not recommended), the delay would be a no-go for your use-case.\nAlso, the more I run it, the more I think the delay should be even longer to not give any false-positives.\n\nSo I wouldn't consider this a solution to your problem (at all), but nonetheless I wanted to share what I tried/did/whatever. Maybe it's best to not look at it?! https://gist.github.com/bwin/973ce7fb8396124a5469\nAlso, I didn't try any other URLs then the 2 you provided. You shouldn't do it my way anyway, so it doesn't matter...\n\nAlso not nice but still better (if there currently is no right way to do it) would be to send a HEAD request and look at the `Content-type`, maybe.\n\n**Edit:** I also tried hooking into `onload` through a preload script and some `webContents.executeJavascript`-things with no luck.\n\n**Edit:** I already feel ashamed for posting this...\n\n@zcbenz can probably tell you how to do it properly.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/82109034",
    "html_url": "https://github.com/electron/electron/issues/1253#issuecomment-82109034",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1253",
    "id": 82109034,
    "user": {
      "login": "bwin",
      "id": 1673361,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1673361?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bwin",
      "html_url": "https://github.com/bwin",
      "followers_url": "https://api.github.com/users/bwin/followers",
      "following_url": "https://api.github.com/users/bwin/following{/other_user}",
      "gists_url": "https://api.github.com/users/bwin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bwin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bwin/subscriptions",
      "organizations_url": "https://api.github.com/users/bwin/orgs",
      "repos_url": "https://api.github.com/users/bwin/repos",
      "events_url": "https://api.github.com/users/bwin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bwin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-17T05:13:00Z",
    "updated_at": "2015-03-17T05:13:00Z",
    "body": "Yeah, this should definitely fire an event. Either `did-fail-load` or something new.\n(Some people may even want to get a \"download as\"-dialog...)\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/82944091",
    "html_url": "https://github.com/electron/electron/issues/1253#issuecomment-82944091",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1253",
    "id": 82944091,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2015-03-18T12:16:14Z",
    "updated_at": "2015-03-18T12:16:14Z",
    "body": "There is a [will-navigate](https://github.com/atom/atom-shell/blob/master/docs/api/browser-window.md#event-will-navigate) event can be used to prevent loading urls.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/83123519",
    "html_url": "https://github.com/electron/electron/issues/1253#issuecomment-83123519",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1253",
    "id": 83123519,
    "user": {
      "login": "maxogden",
      "id": 39759,
      "avatar_url": "https://avatars3.githubusercontent.com/u/39759?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maxogden",
      "html_url": "https://github.com/maxogden",
      "followers_url": "https://api.github.com/users/maxogden/followers",
      "following_url": "https://api.github.com/users/maxogden/following{/other_user}",
      "gists_url": "https://api.github.com/users/maxogden/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maxogden/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maxogden/subscriptions",
      "organizations_url": "https://api.github.com/users/maxogden/orgs",
      "repos_url": "https://api.github.com/users/maxogden/repos",
      "events_url": "https://api.github.com/users/maxogden/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maxogden/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-18T19:04:48Z",
    "updated_at": "2015-03-18T19:04:48Z",
    "body": "@zcbenz `will-navigate` never fires in my example above, I think because I am creating a window, loading 1 URL, and then closing the window.\n\nMy problem is that I have no way of knowing when atom-shell rendered a blank page using the currently available events. What do you think of the `did-fail-load` event that @bwin proposed?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/83159632",
    "html_url": "https://github.com/electron/electron/issues/1253#issuecomment-83159632",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1253",
    "id": 83159632,
    "user": {
      "login": "maxogden",
      "id": 39759,
      "avatar_url": "https://avatars3.githubusercontent.com/u/39759?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maxogden",
      "html_url": "https://github.com/maxogden",
      "followers_url": "https://api.github.com/users/maxogden/followers",
      "following_url": "https://api.github.com/users/maxogden/following{/other_user}",
      "gists_url": "https://api.github.com/users/maxogden/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maxogden/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maxogden/subscriptions",
      "organizations_url": "https://api.github.com/users/maxogden/orgs",
      "repos_url": "https://api.github.com/users/maxogden/repos",
      "events_url": "https://api.github.com/users/maxogden/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maxogden/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-18T20:34:10Z",
    "updated_at": "2015-03-18T20:34:29Z",
    "body": "Maybe chromium has some sort of event for e.g. 'render type'? For example, if I load a `.js` file I get this:\n\n![screen shot 2015-03-18 at 1 31 12 pm](https://cloud.githubusercontent.com/assets/39759/6718735/149d767e-cd73-11e4-93da-3e101cbb0da0.png)\n\nSo somewhere in chromium it knows how to display .js files (e.g. it generates an html page with a span tag etc.). Could this be surfaced through an event in atom-shell?\n\nAlso it would be _really_ cool to have access to the HTTP data (especially the response data). Is this possible? Figuring out the 'render type' of a URI could probably be done pretty reliably with access to the HTTP response data because I'm guessing Chromium uses content-type as the major factor for deciding how to render something\n\n![screen shot 2015-03-18 at 1 32 46 pm](https://cloud.githubusercontent.com/assets/39759/6718765/59afef30-cd73-11e4-9182-4faf483a893d.png)\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/83299776",
    "html_url": "https://github.com/electron/electron/issues/1253#issuecomment-83299776",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1253",
    "id": 83299776,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2015-03-19T03:41:20Z",
    "updated_at": "2015-03-19T03:41:20Z",
    "body": "I agree we should have a way to handle this.\n\nIt is hard to hook before Chromium renders a file though, Chromium just hard coded those things somewhere deep in the source code.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/103989448",
    "html_url": "https://github.com/electron/electron/issues/1253#issuecomment-103989448",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1253",
    "id": 103989448,
    "user": {
      "login": "maxogden",
      "id": 39759,
      "avatar_url": "https://avatars3.githubusercontent.com/u/39759?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maxogden",
      "html_url": "https://github.com/maxogden",
      "followers_url": "https://api.github.com/users/maxogden/followers",
      "following_url": "https://api.github.com/users/maxogden/following{/other_user}",
      "gists_url": "https://api.github.com/users/maxogden/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maxogden/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maxogden/subscriptions",
      "organizations_url": "https://api.github.com/users/maxogden/orgs",
      "repos_url": "https://api.github.com/users/maxogden/repos",
      "events_url": "https://api.github.com/users/maxogden/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maxogden/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-20T18:37:38Z",
    "updated_at": "2015-05-20T18:37:38Z",
    "body": "@zcbenz @deepak1556 awesome!!!\n"
  }
]