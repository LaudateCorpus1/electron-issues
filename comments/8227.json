[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/267797476",
    "html_url": "https://github.com/electron/electron/issues/8227#issuecomment-267797476",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/8227",
    "id": 267797476,
    "user": {
      "login": "enlight",
      "id": 233003,
      "avatar_url": "https://avatars3.githubusercontent.com/u/233003?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/enlight",
      "html_url": "https://github.com/enlight",
      "followers_url": "https://api.github.com/users/enlight/followers",
      "following_url": "https://api.github.com/users/enlight/following{/other_user}",
      "gists_url": "https://api.github.com/users/enlight/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/enlight/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/enlight/subscriptions",
      "organizations_url": "https://api.github.com/users/enlight/orgs",
      "repos_url": "https://api.github.com/users/enlight/repos",
      "events_url": "https://api.github.com/users/enlight/events{/privacy}",
      "received_events_url": "https://api.github.com/users/enlight/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-18T01:21:51Z",
    "updated_at": "2016-12-18T01:21:51Z",
    "body": "GitHub issues are for feature requests and bug reports, questions on how to use Electron should be directed to the [community](https://github.com/electron/electron#community).\r\n\r\nAs the [security guide](http://electron.atom.io/docs/tutorial/security/) states:\r\n> Under no circumstances should you load and execute remote code with Node integration enabled.\r\n> Instead, use only local files (packaged together with your application) to execute Node code.\r\n> To display remote content, use the webview tag and make sure to disable the nodeIntegration.\r\n\r\nSo, please don't enable Node integration if you're loading external sites. If you need to access the Node/Electron API do so in the `preload` script of a `webview`."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/267797568",
    "html_url": "https://github.com/electron/electron/issues/8227#issuecomment-267797568",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/8227",
    "id": 267797568,
    "user": {
      "login": "frankhale",
      "id": 190154,
      "avatar_url": "https://avatars2.githubusercontent.com/u/190154?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frankhale",
      "html_url": "https://github.com/frankhale",
      "followers_url": "https://api.github.com/users/frankhale/followers",
      "following_url": "https://api.github.com/users/frankhale/following{/other_user}",
      "gists_url": "https://api.github.com/users/frankhale/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frankhale/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frankhale/subscriptions",
      "organizations_url": "https://api.github.com/users/frankhale/orgs",
      "repos_url": "https://api.github.com/users/frankhale/repos",
      "events_url": "https://api.github.com/users/frankhale/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frankhale/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-18T01:25:51Z",
    "updated_at": "2016-12-18T01:25:51Z",
    "body": "Are you loading the site into a webview? You can inject jQuery into the webview using the preload script. Have a look at my answer here: https://github.com/electron/electron/issues/2048#issuecomment-115092053"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/267797712",
    "html_url": "https://github.com/electron/electron/issues/8227#issuecomment-267797712",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/8227",
    "id": 267797712,
    "user": {
      "login": "MarshallOfSound",
      "id": 6634592,
      "avatar_url": "https://avatars0.githubusercontent.com/u/6634592?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarshallOfSound",
      "html_url": "https://github.com/MarshallOfSound",
      "followers_url": "https://api.github.com/users/MarshallOfSound/followers",
      "following_url": "https://api.github.com/users/MarshallOfSound/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarshallOfSound/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarshallOfSound/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarshallOfSound/subscriptions",
      "organizations_url": "https://api.github.com/users/MarshallOfSound/orgs",
      "repos_url": "https://api.github.com/users/MarshallOfSound/repos",
      "events_url": "https://api.github.com/users/MarshallOfSound/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarshallOfSound/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-18T01:31:28Z",
    "updated_at": "2016-12-18T01:32:14Z",
    "body": "@frankhale That answer is slightly inaccurate.  You found a way to solve the issue but that isn't the most optimal way of solving said issue (you shouldn't have to load a remote jQuery).\r\n\r\nThe underlying problem is that the DOM is not loaded / ready during a preload scripts execution.  As such you simply need to wait for the document to be ready before doing anything with `jQuery`.\r\n\r\n```js\r\n// In preload script\r\ndocument.onreadystatechange = function () {\r\n  if (document.readyState == \"complete\") {\r\n    const $ = require('jquery');\r\n    // Do things with $\r\n  }\r\n}\r\n```\r\n\r\nEDIT: This is similar to https://github.com/electron/electron/issues/2048#issuecomment-238081926"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/267798371",
    "html_url": "https://github.com/electron/electron/issues/8227#issuecomment-267798371",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/8227",
    "id": 267798371,
    "user": {
      "login": "frankhale",
      "id": 190154,
      "avatar_url": "https://avatars2.githubusercontent.com/u/190154?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frankhale",
      "html_url": "https://github.com/frankhale",
      "followers_url": "https://api.github.com/users/frankhale/followers",
      "following_url": "https://api.github.com/users/frankhale/following{/other_user}",
      "gists_url": "https://api.github.com/users/frankhale/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frankhale/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frankhale/subscriptions",
      "organizations_url": "https://api.github.com/users/frankhale/orgs",
      "repos_url": "https://api.github.com/users/frankhale/repos",
      "events_url": "https://api.github.com/users/frankhale/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frankhale/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-18T01:52:05Z",
    "updated_at": "2016-12-18T01:52:05Z",
    "body": "Yeah it was just a quick example at the time, there was no need to load a remote jQuery but that is how I did it at the time."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/267943394",
    "html_url": "https://github.com/electron/electron/issues/8227#issuecomment-267943394",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/8227",
    "id": 267943394,
    "user": {
      "login": "georgiosd",
      "id": 1672054,
      "avatar_url": "https://avatars0.githubusercontent.com/u/1672054?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/georgiosd",
      "html_url": "https://github.com/georgiosd",
      "followers_url": "https://api.github.com/users/georgiosd/followers",
      "following_url": "https://api.github.com/users/georgiosd/following{/other_user}",
      "gists_url": "https://api.github.com/users/georgiosd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/georgiosd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/georgiosd/subscriptions",
      "organizations_url": "https://api.github.com/users/georgiosd/orgs",
      "repos_url": "https://api.github.com/users/georgiosd/repos",
      "events_url": "https://api.github.com/users/georgiosd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/georgiosd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-19T11:33:03Z",
    "updated_at": "2016-12-19T11:33:03Z",
    "body": "@enlight I appreciate the security concerns but this is an internal app so it won't be distributed to loads of users, allowing web pages access to node packages :) \r\nNode integration is the best thing since sliced bread to interact with an external webpage \r\n\r\n@frankhale @MarshallOfSound that answer didn't work for me, probably because said external page loads jquery in the `<head>` section instead of in the body - so by the time its own scripts can't find it, the document is not ready and I'm left with the errors.\r\n\r\nI was able to resolve this in a slightly hackish way - I use `onBeforeRequest` to detect when the browser tries to load the page's minified library JS file that contains jQuery and I require it from the local bower installation, using `path` to resolve it, with `webContents.executeJavascript()`\r\n\r\nIt obviously doesn't scale very well, considering each page will have jquery at a different place, or not at all, but for my use case (limited number of webpages visited through electron, internal use of the app), it's fine.\r\n\r\nThank you all for the help, hopefully this is useful to someone."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/267947318",
    "html_url": "https://github.com/electron/electron/issues/8227#issuecomment-267947318",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/8227",
    "id": 267947318,
    "user": {
      "login": "MarshallOfSound",
      "id": 6634592,
      "avatar_url": "https://avatars0.githubusercontent.com/u/6634592?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarshallOfSound",
      "html_url": "https://github.com/MarshallOfSound",
      "followers_url": "https://api.github.com/users/MarshallOfSound/followers",
      "following_url": "https://api.github.com/users/MarshallOfSound/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarshallOfSound/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarshallOfSound/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarshallOfSound/subscriptions",
      "organizations_url": "https://api.github.com/users/MarshallOfSound/orgs",
      "repos_url": "https://api.github.com/users/MarshallOfSound/repos",
      "events_url": "https://api.github.com/users/MarshallOfSound/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarshallOfSound/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-19T11:56:38Z",
    "updated_at": "2016-12-19T11:56:38Z",
    "body": "> I appreciate the security concerns but this is an internal app so it won't be distributed to loads of users, allowing web pages access to node packages :)\r\n\r\nThis is still a security concern and you shouldn't dismiss it too lightly, even if it is just for internal use exposing unrestricted system level access to a remote and possibly exploitable source is always a bad idea.  Even if your site is only used internally it's an incident waiting to happen.\r\n\r\n> Node integration is the best thing since sliced bread to interact with an external webpage\r\n\r\nThat's what `preload` scripts and IPC is for.  Don't forget that you can disable `nodeIntegration` and still use `require` and friends in your preload script 👍 "
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/267949798",
    "html_url": "https://github.com/electron/electron/issues/8227#issuecomment-267949798",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/8227",
    "id": 267949798,
    "user": {
      "login": "georgiosd",
      "id": 1672054,
      "avatar_url": "https://avatars0.githubusercontent.com/u/1672054?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/georgiosd",
      "html_url": "https://github.com/georgiosd",
      "followers_url": "https://api.github.com/users/georgiosd/followers",
      "following_url": "https://api.github.com/users/georgiosd/following{/other_user}",
      "gists_url": "https://api.github.com/users/georgiosd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/georgiosd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/georgiosd/subscriptions",
      "organizations_url": "https://api.github.com/users/georgiosd/orgs",
      "repos_url": "https://api.github.com/users/georgiosd/repos",
      "events_url": "https://api.github.com/users/georgiosd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/georgiosd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-19T12:10:56Z",
    "updated_at": "2016-12-19T12:10:56Z",
    "body": "@MarshallOfSound I can't say that I'm quite clear on what the node integration would take away... the docs aren't exactly extensive on `preload` and co. What would stop working without node integration? How would you do IPC?"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/267955808",
    "html_url": "https://github.com/electron/electron/issues/8227#issuecomment-267955808",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/8227",
    "id": 267955808,
    "user": {
      "login": "MarshallOfSound",
      "id": 6634592,
      "avatar_url": "https://avatars0.githubusercontent.com/u/6634592?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarshallOfSound",
      "html_url": "https://github.com/MarshallOfSound",
      "followers_url": "https://api.github.com/users/MarshallOfSound/followers",
      "following_url": "https://api.github.com/users/MarshallOfSound/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarshallOfSound/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarshallOfSound/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarshallOfSound/subscriptions",
      "organizations_url": "https://api.github.com/users/MarshallOfSound/orgs",
      "repos_url": "https://api.github.com/users/MarshallOfSound/repos",
      "events_url": "https://api.github.com/users/MarshallOfSound/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarshallOfSound/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-19T12:44:30Z",
    "updated_at": "2016-12-19T12:44:30Z",
    "body": ">  I can't say that I'm quite clear on what the node integration would take away... \r\n\r\n`nodeIntegration: false` would remove the nodeJS globals (`require`, `Buffer`, Etc.)\r\n\r\nHowever you can still use these methods in a preload script.  If your remote site needs to use these node API's it should do so through events or globals set in a `preload` script.  This way if the remote site is ever compromised the system and node API's are not exposed to the world.\r\n\r\nIPC at a high level is just a way for two processes to communicate, so you would let your remote send some IPC messages through a `preload` script, that would then be listened for in the `main` process where the actual `node.js` or system specific API's would be called."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/267957262",
    "html_url": "https://github.com/electron/electron/issues/8227#issuecomment-267957262",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/8227",
    "id": 267957262,
    "user": {
      "login": "georgiosd",
      "id": 1672054,
      "avatar_url": "https://avatars0.githubusercontent.com/u/1672054?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/georgiosd",
      "html_url": "https://github.com/georgiosd",
      "followers_url": "https://api.github.com/users/georgiosd/followers",
      "following_url": "https://api.github.com/users/georgiosd/following{/other_user}",
      "gists_url": "https://api.github.com/users/georgiosd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/georgiosd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/georgiosd/subscriptions",
      "organizations_url": "https://api.github.com/users/georgiosd/orgs",
      "repos_url": "https://api.github.com/users/georgiosd/repos",
      "events_url": "https://api.github.com/users/georgiosd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/georgiosd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-19T12:52:11Z",
    "updated_at": "2016-12-19T12:52:11Z",
    "body": "So the idea is that I would wrap around the stuff I need using the preload script.\r\n\r\nThe other thing I'm confused about it the \"scope\" of the preload script. Say I introduce a global variable from my preload script. AFAIK that's set in `window` object essentially. Will that still be available if the loaded site refreshes? Will the preload script execute on every navigation?"
  }
]