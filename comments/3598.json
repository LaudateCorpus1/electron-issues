[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/160026435",
    "html_url": "https://github.com/electron/electron/issues/3598#issuecomment-160026435",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/3598",
    "id": 160026435,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2015-11-27T02:17:27Z",
    "updated_at": "2015-11-27T02:17:27Z",
    "body": "This behavior is intended, objects sent through `ipc` are serialized into JSON, and we recognize the recursive objects by checking whether an object has appeared for more than once. This check is simple but efficient, a full detection of recursive objects would be quite inefficient and hard to get right.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/160145330",
    "html_url": "https://github.com/electron/electron/issues/3598#issuecomment-160145330",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/3598",
    "id": 160145330,
    "user": {
      "login": "ajwhite",
      "id": 656630,
      "avatar_url": "https://avatars3.githubusercontent.com/u/656630?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajwhite",
      "html_url": "https://github.com/ajwhite",
      "followers_url": "https://api.github.com/users/ajwhite/followers",
      "following_url": "https://api.github.com/users/ajwhite/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajwhite/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajwhite/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajwhite/subscriptions",
      "organizations_url": "https://api.github.com/users/ajwhite/orgs",
      "repos_url": "https://api.github.com/users/ajwhite/repos",
      "events_url": "https://api.github.com/users/ajwhite/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajwhite/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-27T13:59:17Z",
    "updated_at": "2015-12-10T16:43:14Z",
    "body": "You see the problem that solution presents though right? We're not really dealing with a recursive object here, and the current preventative measures against recursive objects is crossing into other territory.\n\nTo me, that sounds like a bug. Would you be open to a pull request that will retain efficiency, but also narrow down so only cyclic objects are affected, versus arrays of the same thing?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/237978797",
    "html_url": "https://github.com/electron/electron/issues/3598#issuecomment-237978797",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/3598",
    "id": 237978797,
    "user": {
      "login": "blueoctopus",
      "id": 613107,
      "avatar_url": "https://avatars3.githubusercontent.com/u/613107?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/blueoctopus",
      "html_url": "https://github.com/blueoctopus",
      "followers_url": "https://api.github.com/users/blueoctopus/followers",
      "following_url": "https://api.github.com/users/blueoctopus/following{/other_user}",
      "gists_url": "https://api.github.com/users/blueoctopus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/blueoctopus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/blueoctopus/subscriptions",
      "organizations_url": "https://api.github.com/users/blueoctopus/orgs",
      "repos_url": "https://api.github.com/users/blueoctopus/repos",
      "events_url": "https://api.github.com/users/blueoctopus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/blueoctopus/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-05T22:15:39Z",
    "updated_at": "2016-08-05T22:21:03Z",
    "body": "Since the current behavior is counterintuitive, I suggest mentioning this corner case into the API references and also raising an exception if multiple references are detected (instead of silently sending objects as null).\n\nA variation of the issue that was reported here made me scratch my head for longer than would've been necessary if I saw this documented or if an exception was thrown. I was sending a list with an object that was referenced in the list as the second argument. In my case sending to the renderer process using the `webContents.send()` API:\n\n``` javascript\nwebContents.send('test', [someObject, anObject, theObject], theObject);\n```\n\nOn the receiving side:\n\n``` javascript\nipcRenderer.on('test', (_, listOfObjects, interestingObject) => {\n  console.log(interestingObject); // output: null\n});\n```\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/242443934",
    "html_url": "https://github.com/electron/electron/issues/3598#issuecomment-242443934",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/3598",
    "id": 242443934,
    "user": {
      "login": "kevinsawicki",
      "id": 671378,
      "avatar_url": "https://avatars0.githubusercontent.com/u/671378?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kevinsawicki",
      "html_url": "https://github.com/kevinsawicki",
      "followers_url": "https://api.github.com/users/kevinsawicki/followers",
      "following_url": "https://api.github.com/users/kevinsawicki/following{/other_user}",
      "gists_url": "https://api.github.com/users/kevinsawicki/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kevinsawicki/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kevinsawicki/subscriptions",
      "organizations_url": "https://api.github.com/users/kevinsawicki/orgs",
      "repos_url": "https://api.github.com/users/kevinsawicki/repos",
      "events_url": "https://api.github.com/users/kevinsawicki/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kevinsawicki/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2016-08-25T16:06:13Z",
    "updated_at": "2016-08-25T16:06:26Z",
    "body": "Reopening this since I believe a fix for this exists in Chromium now that can be ported to Electron.\n\nhttps://chromium.googlesource.com/chromium/src/+/275ec3e2a5ce1d16fc9c2a0dab3b58f8a7b9fa38\n"
  }
]