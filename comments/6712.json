[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/237424465",
    "html_url": "https://github.com/electron/electron/issues/6712#issuecomment-237424465",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/6712",
    "id": 237424465,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2016-08-04T01:25:27Z",
    "updated_at": "2016-08-04T01:25:27Z",
    "body": "This is needed by a few special projects and as far as I know some organizations are already doing this in their own forks.\n\nBut moving Electron's API stack from Node is too ambitious, a more practical way is to provide a very small set of APIs under sandbox to allow communicating with the main process.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/237435917",
    "html_url": "https://github.com/electron/electron/issues/6712#issuecomment-237435917",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/6712",
    "id": 237435917,
    "user": {
      "login": "tarruda",
      "id": 842846,
      "avatar_url": "https://avatars0.githubusercontent.com/u/842846?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tarruda",
      "html_url": "https://github.com/tarruda",
      "followers_url": "https://api.github.com/users/tarruda/followers",
      "following_url": "https://api.github.com/users/tarruda/following{/other_user}",
      "gists_url": "https://api.github.com/users/tarruda/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tarruda/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tarruda/subscriptions",
      "organizations_url": "https://api.github.com/users/tarruda/orgs",
      "repos_url": "https://api.github.com/users/tarruda/repos",
      "events_url": "https://api.github.com/users/tarruda/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tarruda/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-04T02:33:54Z",
    "updated_at": "2016-08-04T02:33:54Z",
    "body": "> But moving Electron's API stack from Node is too ambitious, a more practical way is to provide a very small set of APIs under sandbox to allow communicating with the main process.\n\nDo you mean by providing an implementation of `ipcRenderer` that doesn't rely on node.js, and enabling this implementation in a new mode that completely disables node.js integration(and enables the sandbox)?\n\nI think this would be a good start, but what would be even better is to completely decouple electron's renderer API from node.js, to make it fully useable not only with nodeIntegration enabled but also in a sandboxed renderer. In other words, nodeIntegration would simply add node.js APIs to the renderer, but it would not be required to access electron's APIs.\n\nIn any case, having a simple implementation of `ipcRenderer` without node.js would certainly help me get to what I'm trying to achieve [here](https://github.com/tarruda/electron/commit/e0dd1077cf5c8db109b6c695514118f63d8887f4#commitcomment-18483328).\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/246027861",
    "html_url": "https://github.com/electron/electron/issues/6712#issuecomment-246027861",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/6712",
    "id": 246027861,
    "user": {
      "login": "jprichardson",
      "id": 150063,
      "avatar_url": "https://avatars0.githubusercontent.com/u/150063?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jprichardson",
      "html_url": "https://github.com/jprichardson",
      "followers_url": "https://api.github.com/users/jprichardson/followers",
      "following_url": "https://api.github.com/users/jprichardson/following{/other_user}",
      "gists_url": "https://api.github.com/users/jprichardson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jprichardson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jprichardson/subscriptions",
      "organizations_url": "https://api.github.com/users/jprichardson/orgs",
      "repos_url": "https://api.github.com/users/jprichardson/repos",
      "events_url": "https://api.github.com/users/jprichardson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jprichardson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-09T20:18:47Z",
    "updated_at": "2016-09-09T20:18:47Z",
    "body": "@sindresorhus will you elaborate on your thumbs down? I'm curious to know your perspective here.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/272184242",
    "html_url": "https://github.com/electron/electron/issues/6712#issuecomment-272184242",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/6712",
    "id": 272184242,
    "user": {
      "login": "ThomasMoutel",
      "id": 19152142,
      "avatar_url": "https://avatars3.githubusercontent.com/u/19152142?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ThomasMoutel",
      "html_url": "https://github.com/ThomasMoutel",
      "followers_url": "https://api.github.com/users/ThomasMoutel/followers",
      "following_url": "https://api.github.com/users/ThomasMoutel/following{/other_user}",
      "gists_url": "https://api.github.com/users/ThomasMoutel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ThomasMoutel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ThomasMoutel/subscriptions",
      "organizations_url": "https://api.github.com/users/ThomasMoutel/orgs",
      "repos_url": "https://api.github.com/users/ThomasMoutel/repos",
      "events_url": "https://api.github.com/users/ThomasMoutel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ThomasMoutel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-12T14:57:29Z",
    "updated_at": "2017-01-12T15:19:25Z",
    "body": "Hi @tarruda I'm willing to get the crash-reporter working in sandboxed renderers.\r\nIt is not working currently, probably by design, no?\r\nIs this something you've already looked into and/or planned to do in the near future?"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/272192914",
    "html_url": "https://github.com/electron/electron/issues/6712#issuecomment-272192914",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/6712",
    "id": 272192914,
    "user": {
      "login": "tarruda",
      "id": 842846,
      "avatar_url": "https://avatars0.githubusercontent.com/u/842846?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tarruda",
      "html_url": "https://github.com/tarruda",
      "followers_url": "https://api.github.com/users/tarruda/followers",
      "following_url": "https://api.github.com/users/tarruda/following{/other_user}",
      "gists_url": "https://api.github.com/users/tarruda/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tarruda/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tarruda/subscriptions",
      "organizations_url": "https://api.github.com/users/tarruda/orgs",
      "repos_url": "https://api.github.com/users/tarruda/repos",
      "events_url": "https://api.github.com/users/tarruda/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tarruda/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-12T15:29:08Z",
    "updated_at": "2017-01-12T15:29:08Z",
    "body": "> It is not working currently, probably by design, no?\r\n\r\nNot by design, I simply left this for later(Feel free to take this task)"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/272298384",
    "html_url": "https://github.com/electron/electron/issues/6712#issuecomment-272298384",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/6712",
    "id": 272298384,
    "user": {
      "login": "paulcbetts",
      "id": 1396,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1396?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulcbetts",
      "html_url": "https://github.com/paulcbetts",
      "followers_url": "https://api.github.com/users/paulcbetts/followers",
      "following_url": "https://api.github.com/users/paulcbetts/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulcbetts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulcbetts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulcbetts/subscriptions",
      "organizations_url": "https://api.github.com/users/paulcbetts/orgs",
      "repos_url": "https://api.github.com/users/paulcbetts/repos",
      "events_url": "https://api.github.com/users/paulcbetts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulcbetts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-12T22:04:04Z",
    "updated_at": "2017-01-12T22:04:04Z",
    "body": "> I think this would be a good start, but what would be even better is to completely decouple electron's renderer API from node.js, to make it fully useable not only with nodeIntegration enabled but also in a sandboxed renderer. In other words, nodeIntegration would simply add node.js APIs to the renderer, but it would not be required to access electron's APIs.\r\n\r\nI think that this will create a pretty massive maintenance burden, I'd rather enable simple IPC and leave it at that"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/276963330",
    "html_url": "https://github.com/electron/electron/issues/6712#issuecomment-276963330",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/6712",
    "id": 276963330,
    "user": {
      "login": "dregenor",
      "id": 1700057,
      "avatar_url": "https://avatars2.githubusercontent.com/u/1700057?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dregenor",
      "html_url": "https://github.com/dregenor",
      "followers_url": "https://api.github.com/users/dregenor/followers",
      "following_url": "https://api.github.com/users/dregenor/following{/other_user}",
      "gists_url": "https://api.github.com/users/dregenor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dregenor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dregenor/subscriptions",
      "organizations_url": "https://api.github.com/users/dregenor/orgs",
      "repos_url": "https://api.github.com/users/dregenor/repos",
      "events_url": "https://api.github.com/users/dregenor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dregenor/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-02T13:56:01Z",
    "updated_at": "2017-02-02T13:56:01Z",
    "body": "need add **access** to **webFrame** in **sandbox_renderer**, or any another way to interact with **webFrame** when used **sandbox_renderer**."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/283708816",
    "html_url": "https://github.com/electron/electron/issues/6712#issuecomment-283708816",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/6712",
    "id": 283708816,
    "user": {
      "login": "pfrazee",
      "id": 1270099,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1270099?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pfrazee",
      "html_url": "https://github.com/pfrazee",
      "followers_url": "https://api.github.com/users/pfrazee/followers",
      "following_url": "https://api.github.com/users/pfrazee/following{/other_user}",
      "gists_url": "https://api.github.com/users/pfrazee/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pfrazee/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pfrazee/subscriptions",
      "organizations_url": "https://api.github.com/users/pfrazee/orgs",
      "repos_url": "https://api.github.com/users/pfrazee/repos",
      "events_url": "https://api.github.com/users/pfrazee/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pfrazee/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-02T16:47:32Z",
    "updated_at": "2017-03-02T16:47:32Z",
    "body": "A +1 to what @dregenor said. We need the webFrame (or similar) in the preload so that we can call `registerURLSchemeAsPrivileged`. (Correct me if I'm wrong, and there's somewhere else the call can be made.)"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/295469205",
    "html_url": "https://github.com/electron/electron/issues/6712#issuecomment-295469205",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/6712",
    "id": 295469205,
    "user": {
      "login": "liliakai",
      "id": 1039940,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1039940?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/liliakai",
      "html_url": "https://github.com/liliakai",
      "followers_url": "https://api.github.com/users/liliakai/followers",
      "following_url": "https://api.github.com/users/liliakai/following{/other_user}",
      "gists_url": "https://api.github.com/users/liliakai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/liliakai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/liliakai/subscriptions",
      "organizations_url": "https://api.github.com/users/liliakai/orgs",
      "repos_url": "https://api.github.com/users/liliakai/repos",
      "events_url": "https://api.github.com/users/liliakai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/liliakai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-19T22:15:50Z",
    "updated_at": "2017-04-19T22:16:03Z",
    "body": "I also need access to `webFrame` from a sandboxed renderer in order to `setSpellCheckProvider`."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/299320236",
    "html_url": "https://github.com/electron/electron/issues/6712#issuecomment-299320236",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/6712",
    "id": 299320236,
    "user": {
      "login": "jack-mo",
      "id": 10410579,
      "avatar_url": "https://avatars3.githubusercontent.com/u/10410579?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jack-mo",
      "html_url": "https://github.com/jack-mo",
      "followers_url": "https://api.github.com/users/jack-mo/followers",
      "following_url": "https://api.github.com/users/jack-mo/following{/other_user}",
      "gists_url": "https://api.github.com/users/jack-mo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jack-mo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jack-mo/subscriptions",
      "organizations_url": "https://api.github.com/users/jack-mo/orgs",
      "repos_url": "https://api.github.com/users/jack-mo/repos",
      "events_url": "https://api.github.com/users/jack-mo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jack-mo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-04T21:55:03Z",
    "updated_at": "2017-05-04T21:55:03Z",
    "body": "@tarruda Hi, I'm currently working on a project using Electron where we want to render a webpage on a BrowserWindow and I'm trying to figure out which is more secure (prevent remote content from accessing Node or other APIs, plus standard security like the chromium sandbox).\r\n\r\n - Option 1: BrowserWindows with sandbox=true and nodeIntegration=false, loading the remote URL. Nice because it has the sandbox\r\n\r\n - Option 2: <webview> in a normal BrowserWindow loading the remote URL. This seems to be recommended for remote content, but the lack of sandbox isn't ideal.\r\n\r\nWhich option is more secure?\r\nMany thanks in advance"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/299441941",
    "html_url": "https://github.com/electron/electron/issues/6712#issuecomment-299441941",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/6712",
    "id": 299441941,
    "user": {
      "login": "tarruda",
      "id": 842846,
      "avatar_url": "https://avatars0.githubusercontent.com/u/842846?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tarruda",
      "html_url": "https://github.com/tarruda",
      "followers_url": "https://api.github.com/users/tarruda/followers",
      "following_url": "https://api.github.com/users/tarruda/following{/other_user}",
      "gists_url": "https://api.github.com/users/tarruda/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tarruda/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tarruda/subscriptions",
      "organizations_url": "https://api.github.com/users/tarruda/orgs",
      "repos_url": "https://api.github.com/users/tarruda/repos",
      "events_url": "https://api.github.com/users/tarruda/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tarruda/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-05T11:31:52Z",
    "updated_at": "2017-05-05T11:31:52Z",
    "body": "> Which option is more secure?\r\n\r\nelectron sandbox is not very secure since the renderer has full system access via IPC(plus no context isolation yet). I can't say which is more secure, but I definitely wouldn't recommend loading untrusted content into electron."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/299450707",
    "html_url": "https://github.com/electron/electron/issues/6712#issuecomment-299450707",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/6712",
    "id": 299450707,
    "user": {
      "login": "ColinEberhardt",
      "id": 1098110,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1098110?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ColinEberhardt",
      "html_url": "https://github.com/ColinEberhardt",
      "followers_url": "https://api.github.com/users/ColinEberhardt/followers",
      "following_url": "https://api.github.com/users/ColinEberhardt/following{/other_user}",
      "gists_url": "https://api.github.com/users/ColinEberhardt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ColinEberhardt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ColinEberhardt/subscriptions",
      "organizations_url": "https://api.github.com/users/ColinEberhardt/orgs",
      "repos_url": "https://api.github.com/users/ColinEberhardt/repos",
      "events_url": "https://api.github.com/users/ColinEberhardt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ColinEberhardt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-05T12:22:37Z",
    "updated_at": "2017-05-05T12:22:37Z",
    "body": "@jack-mo there's actually a great documentation page about these options available here:\r\n\r\nhttps://electron.atom.io/docs/api/sandbox-option/\r\n\r\n(it's a bit buried at the moment, only accessible via a link from the `BrowserWindow` `options` doc)."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/299553137",
    "html_url": "https://github.com/electron/electron/issues/6712#issuecomment-299553137",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/6712",
    "id": 299553137,
    "user": {
      "login": "jprichardson",
      "id": 150063,
      "avatar_url": "https://avatars0.githubusercontent.com/u/150063?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jprichardson",
      "html_url": "https://github.com/jprichardson",
      "followers_url": "https://api.github.com/users/jprichardson/followers",
      "following_url": "https://api.github.com/users/jprichardson/following{/other_user}",
      "gists_url": "https://api.github.com/users/jprichardson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jprichardson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jprichardson/subscriptions",
      "organizations_url": "https://api.github.com/users/jprichardson/orgs",
      "repos_url": "https://api.github.com/users/jprichardson/repos",
      "events_url": "https://api.github.com/users/jprichardson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jprichardson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-05T19:20:05Z",
    "updated_at": "2017-05-05T19:20:05Z",
    "body": "> electron sandbox is not very secure since the renderer has full system access via IPC(plus no context isolation yet). I can't say which is more secure, but I definitely wouldn't recommend loading untrusted content into electron.\r\n\r\n@tarruda what's the benefit of using `sandbox` as opposed to `nodeIntegration` set at `false`? Is it performance?"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/300450457",
    "html_url": "https://github.com/electron/electron/issues/6712#issuecomment-300450457",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/6712",
    "id": 300450457,
    "user": {
      "login": "alexstrat",
      "id": 687961,
      "avatar_url": "https://avatars0.githubusercontent.com/u/687961?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexstrat",
      "html_url": "https://github.com/alexstrat",
      "followers_url": "https://api.github.com/users/alexstrat/followers",
      "following_url": "https://api.github.com/users/alexstrat/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexstrat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexstrat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexstrat/subscriptions",
      "organizations_url": "https://api.github.com/users/alexstrat/orgs",
      "repos_url": "https://api.github.com/users/alexstrat/repos",
      "events_url": "https://api.github.com/users/alexstrat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexstrat/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-10T11:11:02Z",
    "updated_at": "2017-05-10T11:11:02Z",
    "body": "@tarruda I read there https://github.com/brave/muon/issues/165 that you have made some progress on the support of `sandbox` for `webview` (crash reported in https://github.com/electron/electron/issues/8378). Can you share more details on your findings and on the blockers? (worth re-opening https://github.com/electron/electron/issues/8378 to discuss in details?)"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/300452720",
    "html_url": "https://github.com/electron/electron/issues/6712#issuecomment-300452720",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/6712",
    "id": 300452720,
    "user": {
      "login": "tarruda",
      "id": 842846,
      "avatar_url": "https://avatars0.githubusercontent.com/u/842846?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tarruda",
      "html_url": "https://github.com/tarruda",
      "followers_url": "https://api.github.com/users/tarruda/followers",
      "following_url": "https://api.github.com/users/tarruda/following{/other_user}",
      "gists_url": "https://api.github.com/users/tarruda/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tarruda/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tarruda/subscriptions",
      "organizations_url": "https://api.github.com/users/tarruda/orgs",
      "repos_url": "https://api.github.com/users/tarruda/repos",
      "events_url": "https://api.github.com/users/tarruda/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tarruda/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-10T11:22:30Z",
    "updated_at": "2017-05-10T11:22:30Z",
    "body": "> @tarruda what's the benefit of using sandbox as opposed to nodeIntegration set at false? Is it performance?\r\n\r\nWith `nodeIntegration` set to false, you still have a node.js engine running in the renderer, the main difference is that the APIs are not accessible to all javascript running in page.\r\n\r\nWith `sandbox`,  node.js is not even running in the renderer, all you have is a plain chromium javascript environment that emulates a commonjs/node API using browserify.(To access these APIs from page you need to explicitly expose them from preload). It could also result in a slightly more efficient renderer since no integration between chromium and libuv event loops are necessary, but this is not something I have tested.\r\n\r\nIf this is considered a benefit, depends on POV. Personally I don't like the idea of node.js running in the same process untrusted code is executed, since bugs in node.js could increase the attack surface."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/300453380",
    "html_url": "https://github.com/electron/electron/issues/6712#issuecomment-300453380",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/6712",
    "id": 300453380,
    "user": {
      "login": "tarruda",
      "id": 842846,
      "avatar_url": "https://avatars0.githubusercontent.com/u/842846?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tarruda",
      "html_url": "https://github.com/tarruda",
      "followers_url": "https://api.github.com/users/tarruda/followers",
      "following_url": "https://api.github.com/users/tarruda/following{/other_user}",
      "gists_url": "https://api.github.com/users/tarruda/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tarruda/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tarruda/subscriptions",
      "organizations_url": "https://api.github.com/users/tarruda/orgs",
      "repos_url": "https://api.github.com/users/tarruda/repos",
      "events_url": "https://api.github.com/users/tarruda/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tarruda/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-10T11:25:48Z",
    "updated_at": "2017-05-10T11:26:39Z",
    "body": "> @tarruda I read there brave/muon#165 that you have made some progress on the support of sandbox for webview (crash reported in #8378). Can you share more details on your findings and on the blockers? (worth re-opening #8378 to discuss in details?)\r\n\r\nThe top 2 commits of this branch enable sandbox for webview as well as `window.open` from webview:\r\nhttps://github.com/tarruda/electron/tree/enable-webview-on-sandbox\r\n\r\nAs far as I can see, the main problem with that branch is that it relies on chromium internals(casting ot `WebContentsImpl` class), which is why I didn't open a PR yet."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/307846031",
    "html_url": "https://github.com/electron/electron/issues/6712#issuecomment-307846031",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/6712",
    "id": 307846031,
    "user": {
      "login": "oldbam",
      "id": 17043211,
      "avatar_url": "https://avatars0.githubusercontent.com/u/17043211?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/oldbam",
      "html_url": "https://github.com/oldbam",
      "followers_url": "https://api.github.com/users/oldbam/followers",
      "following_url": "https://api.github.com/users/oldbam/following{/other_user}",
      "gists_url": "https://api.github.com/users/oldbam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/oldbam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/oldbam/subscriptions",
      "organizations_url": "https://api.github.com/users/oldbam/orgs",
      "repos_url": "https://api.github.com/users/oldbam/repos",
      "events_url": "https://api.github.com/users/oldbam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/oldbam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-12T16:40:52Z",
    "updated_at": "2017-06-12T16:40:52Z",
    "body": "@tarruda According to [documentation](https://github.com/electron/electron/blob/master/docs/api/sandbox-option.md),\r\n\r\n> One planned enhancement that should greatly increase security is to block IPC messages from sandboxed renderers by default, allowing the main process to explicitly define a set of messages the renderer is allowed to send.\r\n\r\nIs there a dedicated issue I can track to check on the progress of this item?\r\n\r\nThank you!"
  }
]