[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/299882777",
    "html_url": "https://github.com/electron/electron/issues/9030#issuecomment-299882777",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/9030",
    "id": 299882777,
    "user": {
      "login": "rreimann",
      "id": 1131175,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1131175?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rreimann",
      "html_url": "https://github.com/rreimann",
      "followers_url": "https://api.github.com/users/rreimann/followers",
      "following_url": "https://api.github.com/users/rreimann/following{/other_user}",
      "gists_url": "https://api.github.com/users/rreimann/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rreimann/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rreimann/subscriptions",
      "organizations_url": "https://api.github.com/users/rreimann/orgs",
      "repos_url": "https://api.github.com/users/rreimann/repos",
      "events_url": "https://api.github.com/users/rreimann/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rreimann/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-08T14:29:11Z",
    "updated_at": "2017-05-08T14:29:11Z",
    "body": "@deepak1556 is there a way to disable or suppress the native plugin? \r\n\r\nI need to stick to PDF.js as long as advanced features like searching an printing are not supported by the plugin but triggering PDF.js via `will-download` handler doesn't work anymore since the plugin is on by default and seems to prevent `will-download` events from being fired.\r\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/299912351",
    "html_url": "https://github.com/electron/electron/issues/9030#issuecomment-299912351",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/9030",
    "id": 299912351,
    "user": {
      "login": "deepak1556",
      "id": 964386,
      "avatar_url": "https://avatars2.githubusercontent.com/u/964386?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/deepak1556",
      "html_url": "https://github.com/deepak1556",
      "followers_url": "https://api.github.com/users/deepak1556/followers",
      "following_url": "https://api.github.com/users/deepak1556/following{/other_user}",
      "gists_url": "https://api.github.com/users/deepak1556/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/deepak1556/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/deepak1556/subscriptions",
      "organizations_url": "https://api.github.com/users/deepak1556/orgs",
      "repos_url": "https://api.github.com/users/deepak1556/repos",
      "events_url": "https://api.github.com/users/deepak1556/events{/privacy}",
      "received_events_url": "https://api.github.com/users/deepak1556/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-08T16:08:08Z",
    "updated_at": "2017-05-08T16:13:15Z",
    "body": "> is there a way to disable or suppress the native plugin?\r\n\r\nThere is no way to disable the plugin, but you can workaround it either by using iframes to display the pdf resource where `will-download` event will fire or you can intercept `chrome` protocol `chrome://pdf-viewer/index.html?src=<original pdf uri>` and render with pdf.js."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/300089322",
    "html_url": "https://github.com/electron/electron/issues/9030#issuecomment-300089322",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/9030",
    "id": 300089322,
    "user": {
      "login": "rreimann",
      "id": 1131175,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1131175?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rreimann",
      "html_url": "https://github.com/rreimann",
      "followers_url": "https://api.github.com/users/rreimann/followers",
      "following_url": "https://api.github.com/users/rreimann/following{/other_user}",
      "gists_url": "https://api.github.com/users/rreimann/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rreimann/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rreimann/subscriptions",
      "organizations_url": "https://api.github.com/users/rreimann/orgs",
      "repos_url": "https://api.github.com/users/rreimann/repos",
      "events_url": "https://api.github.com/users/rreimann/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rreimann/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-09T07:53:45Z",
    "updated_at": "2017-05-09T07:53:45Z",
    "body": "Thanks for the suggestions but i had no luck in applying them in my scenario. Can you think of a workaround that works where the PDF should render in a new `BrowserWindow` while the contents of the main `BrowserWindow` keeps intact?\r\n\r\n- i can't introduce iframes for all the places in the application that might contain links to a PDF document. \r\n- i tried to cancel requests to `chrome://pdf-viewer/index.html...` in `onBeforeRequest` but that seems to be to late in the game to preserve the main window. I can open a new window that renders fine with pdf.js but the content of the main window vanishes.\r\n- i don't see a method in [protocol](https://electron.atom.io/docs/api/protocol/) that would let me intercept the `chrome` scheme in a way that i could render the PDF in a new window instead of just redirecting the existing main window."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/300209374",
    "html_url": "https://github.com/electron/electron/issues/9030#issuecomment-300209374",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/9030",
    "id": 300209374,
    "user": {
      "login": "deepak1556",
      "id": 964386,
      "avatar_url": "https://avatars2.githubusercontent.com/u/964386?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/deepak1556",
      "html_url": "https://github.com/deepak1556",
      "followers_url": "https://api.github.com/users/deepak1556/followers",
      "following_url": "https://api.github.com/users/deepak1556/following{/other_user}",
      "gists_url": "https://api.github.com/users/deepak1556/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/deepak1556/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/deepak1556/subscriptions",
      "organizations_url": "https://api.github.com/users/deepak1556/orgs",
      "repos_url": "https://api.github.com/users/deepak1556/repos",
      "events_url": "https://api.github.com/users/deepak1556/events{/privacy}",
      "received_events_url": "https://api.github.com/users/deepak1556/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-09T15:53:48Z",
    "updated_at": "2017-05-09T15:59:55Z",
    "body": "> Can you think of a workaround that works where the PDF should render in a new BrowserWindow while the contents of the main BrowserWindow keeps intact?\r\n\r\nIts not possible with the current implementation. Fixing https://github.com/electron/electron/issues/9412 should provide a way for your scenario."
  }
]