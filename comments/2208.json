[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/121068901",
    "html_url": "https://github.com/electron/electron/issues/2208#issuecomment-121068901",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2208",
    "id": 121068901,
    "user": {
      "login": "Mingling94",
      "id": 4606838,
      "avatar_url": "https://avatars2.githubusercontent.com/u/4606838?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Mingling94",
      "html_url": "https://github.com/Mingling94",
      "followers_url": "https://api.github.com/users/Mingling94/followers",
      "following_url": "https://api.github.com/users/Mingling94/following{/other_user}",
      "gists_url": "https://api.github.com/users/Mingling94/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Mingling94/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Mingling94/subscriptions",
      "organizations_url": "https://api.github.com/users/Mingling94/orgs",
      "repos_url": "https://api.github.com/users/Mingling94/repos",
      "events_url": "https://api.github.com/users/Mingling94/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Mingling94/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-13T21:41:28Z",
    "updated_at": "2015-07-13T21:41:28Z",
    "body": "1. This is node.js related, not electron related\n2. Set the stdio pipes to not default to that of the parent\n\n``` js\nvar fs = require('fs'),\n     spawn = require('child_process').spawn,\n     out = fs.openSync('./out.log', 'a'),\n     err = fs.openSync('./out.log', 'a');\n\n var child = spawn('prg', [], {\n   detached: true,\n   stdio: [ 'ignore', out, err ]\n });\n\n child.unref();\n```\n\n> When using the detached option to start a long-running process, the process will not stay running in the background unless it is provided with a stdio configuration that is not connected to the parent. If the parent's stdio is inherited, the child will remain attached to the controlling terminal.\"\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/121079356",
    "html_url": "https://github.com/electron/electron/issues/2208#issuecomment-121079356",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2208",
    "id": 121079356,
    "user": {
      "login": "shrewdlogarithm",
      "id": 4963937,
      "avatar_url": "https://avatars0.githubusercontent.com/u/4963937?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shrewdlogarithm",
      "html_url": "https://github.com/shrewdlogarithm",
      "followers_url": "https://api.github.com/users/shrewdlogarithm/followers",
      "following_url": "https://api.github.com/users/shrewdlogarithm/following{/other_user}",
      "gists_url": "https://api.github.com/users/shrewdlogarithm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shrewdlogarithm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shrewdlogarithm/subscriptions",
      "organizations_url": "https://api.github.com/users/shrewdlogarithm/orgs",
      "repos_url": "https://api.github.com/users/shrewdlogarithm/repos",
      "events_url": "https://api.github.com/users/shrewdlogarithm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shrewdlogarithm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-13T22:24:32Z",
    "updated_at": "2015-07-13T23:04:28Z",
    "body": "Thanks - I tried that but Electron STILL doesn't quit (output is written into the out.log so that bit is working OK) until the spawned task has ended (on Linux) - is the problem perhaps that the stdio files are held by Node itself?\n\nOn Windows it ends immediately (with or without the stdio bit added)\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/121386881",
    "html_url": "https://github.com/electron/electron/issues/2208#issuecomment-121386881",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2208",
    "id": 121386881,
    "user": {
      "login": "shrewdlogarithm",
      "id": 4963937,
      "avatar_url": "https://avatars0.githubusercontent.com/u/4963937?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shrewdlogarithm",
      "html_url": "https://github.com/shrewdlogarithm",
      "followers_url": "https://api.github.com/users/shrewdlogarithm/followers",
      "following_url": "https://api.github.com/users/shrewdlogarithm/following{/other_user}",
      "gists_url": "https://api.github.com/users/shrewdlogarithm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shrewdlogarithm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shrewdlogarithm/subscriptions",
      "organizations_url": "https://api.github.com/users/shrewdlogarithm/orgs",
      "repos_url": "https://api.github.com/users/shrewdlogarithm/repos",
      "events_url": "https://api.github.com/users/shrewdlogarithm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shrewdlogarithm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-14T21:06:27Z",
    "updated_at": "2015-07-14T21:06:27Z",
    "body": "I've posted a quick demo here\n\nhttps://github.com/shrewdlogarithm/electron-spawn-problem\n\nObviously you'll need to use taskmgr/ps to check what's happening to the electron processes - but my testing here (on Mint Linux 32) shows that Electron does NOT terminate until the spawned/detached task ends (despite all events firing to suggest it does) - on Windows the processes DO end immediately?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/121431704",
    "html_url": "https://github.com/electron/electron/issues/2208#issuecomment-121431704",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2208",
    "id": 121431704,
    "user": {
      "login": "Mingling94",
      "id": 4606838,
      "avatar_url": "https://avatars2.githubusercontent.com/u/4606838?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Mingling94",
      "html_url": "https://github.com/Mingling94",
      "followers_url": "https://api.github.com/users/Mingling94/followers",
      "following_url": "https://api.github.com/users/Mingling94/following{/other_user}",
      "gists_url": "https://api.github.com/users/Mingling94/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Mingling94/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Mingling94/subscriptions",
      "organizations_url": "https://api.github.com/users/Mingling94/orgs",
      "repos_url": "https://api.github.com/users/Mingling94/repos",
      "events_url": "https://api.github.com/users/Mingling94/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Mingling94/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-14T23:59:49Z",
    "updated_at": "2015-07-14T23:59:49Z",
    "body": "Hmm, this is an interesting dilemma and may be electron related. In my own project, I spawn the detached child_process from a renderer process instead of the main. I can close my app while the child runs in the background fine enough. This would be on Ubuntu 14.04 64 bit though.\n\nCheck if the renderer process starting said process still behaves in this odd way on your system.\n\nLastly, it could be some unexpected `beforeunload` or `unload` handler, see [this part of the documentation](https://github.com/atom/electron/blob/master/docs/api/app.md#appquit)\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/121438220",
    "html_url": "https://github.com/electron/electron/issues/2208#issuecomment-121438220",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2208",
    "id": 121438220,
    "user": {
      "login": "shrewdlogarithm",
      "id": 4963937,
      "avatar_url": "https://avatars0.githubusercontent.com/u/4963937?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shrewdlogarithm",
      "html_url": "https://github.com/shrewdlogarithm",
      "followers_url": "https://api.github.com/users/shrewdlogarithm/followers",
      "following_url": "https://api.github.com/users/shrewdlogarithm/following{/other_user}",
      "gists_url": "https://api.github.com/users/shrewdlogarithm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shrewdlogarithm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shrewdlogarithm/subscriptions",
      "organizations_url": "https://api.github.com/users/shrewdlogarithm/orgs",
      "repos_url": "https://api.github.com/users/shrewdlogarithm/repos",
      "events_url": "https://api.github.com/users/shrewdlogarithm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shrewdlogarithm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-15T00:55:21Z",
    "updated_at": "2015-07-15T00:55:21Z",
    "body": "I'll look into that - but this app doesn't HAVE a renderer window open all the time (it quite often exists only as a main, interacting through a tray menu) so...\n\nI should also add that what I'm trying to do - ultimately - is restart the app (after doing some housekeeping and other stuff) - hence why I really need one to stop running before the other starts!!\n\nPerhaps there's another way to force that to happen - but as-is, on Linux32 at least, the 'old' process is still running when the 'new' process starts.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/121601929",
    "html_url": "https://github.com/electron/electron/issues/2208#issuecomment-121601929",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2208",
    "id": 121601929,
    "user": {
      "login": "shrewdlogarithm",
      "id": 4963937,
      "avatar_url": "https://avatars0.githubusercontent.com/u/4963937?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shrewdlogarithm",
      "html_url": "https://github.com/shrewdlogarithm",
      "followers_url": "https://api.github.com/users/shrewdlogarithm/followers",
      "following_url": "https://api.github.com/users/shrewdlogarithm/following{/other_user}",
      "gists_url": "https://api.github.com/users/shrewdlogarithm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shrewdlogarithm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shrewdlogarithm/subscriptions",
      "organizations_url": "https://api.github.com/users/shrewdlogarithm/orgs",
      "repos_url": "https://api.github.com/users/shrewdlogarithm/repos",
      "events_url": "https://api.github.com/users/shrewdlogarithm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shrewdlogarithm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-15T12:30:19Z",
    "updated_at": "2015-07-15T12:30:19Z",
    "body": "p.s. just FYI, issue doesn't seem to affect OSX - I've not tried the 64bit Linux port yet but it's\n\nWindows 32 OK\nLinux 32 - Not Working\nLinux 64 TBC\nOSX 64 - OK\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/168101186",
    "html_url": "https://github.com/electron/electron/issues/2208#issuecomment-168101186",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2208",
    "id": 168101186,
    "user": {
      "login": "Mingling94",
      "id": 4606838,
      "avatar_url": "https://avatars2.githubusercontent.com/u/4606838?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Mingling94",
      "html_url": "https://github.com/Mingling94",
      "followers_url": "https://api.github.com/users/Mingling94/followers",
      "following_url": "https://api.github.com/users/Mingling94/following{/other_user}",
      "gists_url": "https://api.github.com/users/Mingling94/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Mingling94/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Mingling94/subscriptions",
      "organizations_url": "https://api.github.com/users/Mingling94/orgs",
      "repos_url": "https://api.github.com/users/Mingling94/repos",
      "events_url": "https://api.github.com/users/Mingling94/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Mingling94/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-31T00:50:24Z",
    "updated_at": "2015-12-31T00:52:31Z",
    "body": "@shrewdlogarithm I totally forgot about this issue but I just encountered a similar situation to yours on Linux 64. My application hangs after `app.quit()` is certainly called until my detached process is closed manually as well. I found I was adding a listener, and thus a reference, from the main process to the detached child process.\n\n``` js\n    processOpotions = {}\n    let log = require('path').join(__dirname, 'out.log')\n    let out = fs.openSync(log, 'a')\n    let err = fs.openSync(log, 'a')\n    processOptions.detached = true\n    processOptions.stdio = [ 'ignore', out, err ]\n\n    // Spawn my process\n    const Process = require('child_process').spawn\n    var myProcess = new Process(myCommand, processOptions)\n\n    // Exclude it from the parent process' event loop if detached\n    myProcess.unref()\n\n    // Listen for erroring.\n    // *** MY PROBLEM IS THE BELOW LINES ***\n    myProcess.on('error', function (err) {\n      self.emit('error', err)\n    })\n    myProcess.on('exit', function (code) {\n      self.emit('exit', code)\n    })\n```\n\nIf I didn't have those listeners, the main process did not hang after `app.quit()` because then the main process doesn't have references to itself hanging about. Could this have been your situation, i.e., that your giving your detached child process references pointing to your main process?\n\nEDIT: I should have checked your electron-spawn-problem repo, this is not the case for that code sample.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/217404811",
    "html_url": "https://github.com/electron/electron/issues/2208#issuecomment-217404811",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2208",
    "id": 217404811,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2016-05-06T10:18:55Z",
    "updated_at": "2016-05-06T10:18:55Z",
    "body": "Unable to reproduce in 0.37.x anymore.\n"
  }
]