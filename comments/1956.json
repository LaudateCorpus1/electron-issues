[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/111484339",
    "html_url": "https://github.com/electron/electron/issues/1956#issuecomment-111484339",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1956",
    "id": 111484339,
    "user": {
      "login": "kjlaw89",
      "id": 4183007,
      "avatar_url": "https://avatars3.githubusercontent.com/u/4183007?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kjlaw89",
      "html_url": "https://github.com/kjlaw89",
      "followers_url": "https://api.github.com/users/kjlaw89/followers",
      "following_url": "https://api.github.com/users/kjlaw89/following{/other_user}",
      "gists_url": "https://api.github.com/users/kjlaw89/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kjlaw89/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kjlaw89/subscriptions",
      "organizations_url": "https://api.github.com/users/kjlaw89/orgs",
      "repos_url": "https://api.github.com/users/kjlaw89/repos",
      "events_url": "https://api.github.com/users/kjlaw89/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kjlaw89/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-12T13:00:09Z",
    "updated_at": "2015-06-12T13:00:09Z",
    "body": "Just incase it has any use, here's the SSL error that Electron throws:\n\n```\n[6380:0612/085913:ERROR:ssl_client_socket_openssl.cc(1014)] handshake failed; returned 0, SSL error code 1, net_error -107\n[6380:0612/085913:ERROR:ssl_client_socket_openssl.cc(1014)] handshake failed; returned 0, SSL error code 1, net_error -157\n```\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/114235729",
    "html_url": "https://github.com/electron/electron/issues/1956#issuecomment-114235729",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1956",
    "id": 114235729,
    "user": {
      "login": "deepak1556",
      "id": 964386,
      "avatar_url": "https://avatars2.githubusercontent.com/u/964386?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/deepak1556",
      "html_url": "https://github.com/deepak1556",
      "followers_url": "https://api.github.com/users/deepak1556/followers",
      "following_url": "https://api.github.com/users/deepak1556/following{/other_user}",
      "gists_url": "https://api.github.com/users/deepak1556/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/deepak1556/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/deepak1556/subscriptions",
      "organizations_url": "https://api.github.com/users/deepak1556/orgs",
      "repos_url": "https://api.github.com/users/deepak1556/repos",
      "events_url": "https://api.github.com/users/deepak1556/events{/privacy}",
      "received_events_url": "https://api.github.com/users/deepak1556/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-22T19:47:20Z",
    "updated_at": "2015-06-22T19:47:20Z",
    "body": "Got around to finding the real issue with the certificate and test server sample provided by @kjlaw89 . Did a `log-net-log` trace on both chrome and Electron , found the following in socket connection stage after the server certificates were received.\n\n```\nt=1788 [st=1642]        SSL_CLIENT_CERT_REQUESTED\nt=1788 [st=1642]        SSL_READ_ERROR\n                        --> net_error = -110 (ERR_SSL_CLIENT_AUTH_CERT_NEEDED)\n                        --> ssl_error = 2\n```\n\nthere was no client certificate read, and `AtomBrowserClient::SelectClientCertificate` was never hit, turned out chromium does a initial search on the platfrom store for [non-emptyness](https://code.google.com/p/chromium/codesearch#chromium/src/content/browser/ssl/ssl_client_auth_handler.cc&sq=package:chromium&rcl=1434972555&l=163) before requesting the delegate on the UI thread to let user select certificate. I patched this initial check and `SelectClientCertificate` got triggered with data from PEM file passed back.  Now there is a second stage lookup on the platform store for private key in `openssl_platfrom_key_*.cc` , so the purpose of command line option is now obsolete as there is always a lookup on the platform store unless we patch it on chromium, which i dont suggest. Any suggestions to solve this problem @zcbenz \n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/114353054",
    "html_url": "https://github.com/electron/electron/issues/1956#issuecomment-114353054",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1956",
    "id": 114353054,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2015-06-23T04:37:08Z",
    "updated_at": "2015-06-23T04:37:08Z",
    "body": "It seems that if we don't provide a cert store SelectClientCertificate will still be called?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/114389870",
    "html_url": "https://github.com/electron/electron/issues/1956#issuecomment-114389870",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1956",
    "id": 114389870,
    "user": {
      "login": "deepak1556",
      "id": 964386,
      "avatar_url": "https://avatars2.githubusercontent.com/u/964386?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/deepak1556",
      "html_url": "https://github.com/deepak1556",
      "followers_url": "https://api.github.com/users/deepak1556/followers",
      "following_url": "https://api.github.com/users/deepak1556/following{/other_user}",
      "gists_url": "https://api.github.com/users/deepak1556/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/deepak1556/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/deepak1556/subscriptions",
      "organizations_url": "https://api.github.com/users/deepak1556/orgs",
      "repos_url": "https://api.github.com/users/deepak1556/repos",
      "events_url": "https://api.github.com/users/deepak1556/events{/privacy}",
      "received_events_url": "https://api.github.com/users/deepak1556/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-23T07:28:14Z",
    "updated_at": "2015-06-23T07:28:14Z",
    "body": "Yup but then we cant do the fallback. Also if `SelectClientCertificate` is called there will still be a search on the key store for private key but that is being resolved in this CL https://code.google.com/p/chromium/issues/detail?id=394131 . So i guess command line option would be no go until then ?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/114396158",
    "html_url": "https://github.com/electron/electron/issues/1956#issuecomment-114396158",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1956",
    "id": 114396158,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2015-06-23T07:58:00Z",
    "updated_at": "2015-06-23T07:58:00Z",
    "body": "> Also if SelectClientCertificate is called there will still be a search on the key store for private key but that is being resolved in this CL https://code.google.com/p/chromium/issues/detail?id=394131 . So i guess command line option would be no go until then ?\n\nI think we can just wait for Chromium to support it then, we don't need to do better than Chromium.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/120797352",
    "html_url": "https://github.com/electron/electron/issues/1956#issuecomment-120797352",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1956",
    "id": 120797352,
    "user": {
      "login": "hokein",
      "id": 2557445,
      "avatar_url": "https://avatars2.githubusercontent.com/u/2557445?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hokein",
      "html_url": "https://github.com/hokein",
      "followers_url": "https://api.github.com/users/hokein/followers",
      "following_url": "https://api.github.com/users/hokein/following{/other_user}",
      "gists_url": "https://api.github.com/users/hokein/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hokein/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hokein/subscriptions",
      "organizations_url": "https://api.github.com/users/hokein/orgs",
      "repos_url": "https://api.github.com/users/hokein/repos",
      "events_url": "https://api.github.com/users/hokein/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hokein/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-13T03:27:31Z",
    "updated_at": "2015-07-13T03:27:31Z",
    "body": "I can verify it on other platforms.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/165465453",
    "html_url": "https://github.com/electron/electron/issues/1956#issuecomment-165465453",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1956",
    "id": 165465453,
    "user": {
      "login": "kjlaw89",
      "id": 4183007,
      "avatar_url": "https://avatars3.githubusercontent.com/u/4183007?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kjlaw89",
      "html_url": "https://github.com/kjlaw89",
      "followers_url": "https://api.github.com/users/kjlaw89/followers",
      "following_url": "https://api.github.com/users/kjlaw89/following{/other_user}",
      "gists_url": "https://api.github.com/users/kjlaw89/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kjlaw89/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kjlaw89/subscriptions",
      "organizations_url": "https://api.github.com/users/kjlaw89/orgs",
      "repos_url": "https://api.github.com/users/kjlaw89/repos",
      "events_url": "https://api.github.com/users/kjlaw89/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kjlaw89/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-17T14:29:13Z",
    "updated_at": "2015-12-17T14:29:13Z",
    "body": "@deepak1556 Did Chrome 47 include the code necessary to get this flag to work? It'd be great if it was possible to use this now!\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/203069916",
    "html_url": "https://github.com/electron/electron/issues/1956#issuecomment-203069916",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1956",
    "id": 203069916,
    "user": {
      "login": "kjlaw89",
      "id": 4183007,
      "avatar_url": "https://avatars3.githubusercontent.com/u/4183007?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kjlaw89",
      "html_url": "https://github.com/kjlaw89",
      "followers_url": "https://api.github.com/users/kjlaw89/followers",
      "following_url": "https://api.github.com/users/kjlaw89/following{/other_user}",
      "gists_url": "https://api.github.com/users/kjlaw89/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kjlaw89/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kjlaw89/subscriptions",
      "organizations_url": "https://api.github.com/users/kjlaw89/orgs",
      "repos_url": "https://api.github.com/users/kjlaw89/repos",
      "events_url": "https://api.github.com/users/kjlaw89/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kjlaw89/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-29T19:48:56Z",
    "updated_at": "2016-03-29T19:48:56Z",
    "body": "@deepak1556 @zcbenz Okay, now that we're on Chrome 49, any hope yet? :)\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/204816761",
    "html_url": "https://github.com/electron/electron/issues/1956#issuecomment-204816761",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1956",
    "id": 204816761,
    "user": {
      "login": "deepak1556",
      "id": 964386,
      "avatar_url": "https://avatars2.githubusercontent.com/u/964386?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/deepak1556",
      "html_url": "https://github.com/deepak1556",
      "followers_url": "https://api.github.com/users/deepak1556/followers",
      "following_url": "https://api.github.com/users/deepak1556/following{/other_user}",
      "gists_url": "https://api.github.com/users/deepak1556/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/deepak1556/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/deepak1556/subscriptions",
      "organizations_url": "https://api.github.com/users/deepak1556/orgs",
      "repos_url": "https://api.github.com/users/deepak1556/repos",
      "events_url": "https://api.github.com/users/deepak1556/events{/privacy}",
      "received_events_url": "https://api.github.com/users/deepak1556/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-02T22:51:40Z",
    "updated_at": "2016-04-02T22:51:40Z",
    "body": "looked into this further, currently there is no way to hook into a resource lifecycle where we can provide both certificate and private key. The only hook is when chromiums' resource loader asks for a certificate and it will look into the platform certificate database for the key. As far as i can see the current implementation of `client-certificate` flag doesnt serve its purpose and can be removed. Instead we can provide api to import certificate and ca authorities. Users can listen to `select-client-certificate` and proceed. @zcbenz thoughts ?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/206729150",
    "html_url": "https://github.com/electron/electron/issues/1956#issuecomment-206729150",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1956",
    "id": 206729150,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2016-04-07T07:15:13Z",
    "updated_at": "2016-04-07T07:15:13Z",
    "body": "@deepak1556 Sounds good to me.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/207421684",
    "html_url": "https://github.com/electron/electron/issues/1956#issuecomment-207421684",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1956",
    "id": 207421684,
    "user": {
      "login": "kjlaw89",
      "id": 4183007,
      "avatar_url": "https://avatars3.githubusercontent.com/u/4183007?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kjlaw89",
      "html_url": "https://github.com/kjlaw89",
      "followers_url": "https://api.github.com/users/kjlaw89/followers",
      "following_url": "https://api.github.com/users/kjlaw89/following{/other_user}",
      "gists_url": "https://api.github.com/users/kjlaw89/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kjlaw89/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kjlaw89/subscriptions",
      "organizations_url": "https://api.github.com/users/kjlaw89/orgs",
      "repos_url": "https://api.github.com/users/kjlaw89/repos",
      "events_url": "https://api.github.com/users/kjlaw89/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kjlaw89/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-08T12:55:35Z",
    "updated_at": "2016-04-08T12:55:35Z",
    "body": "@deepak1556 Thanks for looking into this again! What exactly are you proposing doing? I'd be okay with removing the client certificate flag if I had a way to dynamically load a client certificate. It was almost possible to do it with the select-client-certificate event, but it required that a client certificate be installed on the computer first before you could pass in a custom client certificate. If it was possible to get around that (no client certificate installed on the computer) and use my custom client certificate that'd be perfect.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/207867941",
    "html_url": "https://github.com/electron/electron/issues/1956#issuecomment-207867941",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1956",
    "id": 207867941,
    "user": {
      "login": "deepak1556",
      "id": 964386,
      "avatar_url": "https://avatars2.githubusercontent.com/u/964386?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/deepak1556",
      "html_url": "https://github.com/deepak1556",
      "followers_url": "https://api.github.com/users/deepak1556/followers",
      "following_url": "https://api.github.com/users/deepak1556/following{/other_user}",
      "gists_url": "https://api.github.com/users/deepak1556/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/deepak1556/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/deepak1556/subscriptions",
      "organizations_url": "https://api.github.com/users/deepak1556/orgs",
      "repos_url": "https://api.github.com/users/deepak1556/repos",
      "events_url": "https://api.github.com/users/deepak1556/events{/privacy}",
      "received_events_url": "https://api.github.com/users/deepak1556/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-09T23:00:52Z",
    "updated_at": "2016-04-09T23:00:52Z",
    "body": "> no client certificate installed on the computer)\n\nNope not possible to get around that currently.\n\nMy proposal was to provide api which would trigger the same action as you click the `import` button under certificate management in chrome. That way you can prompt users to install certificate. On linux you can get away without any prompts since only thing required there is password for the pkcs12 file, but not on OSX or windows. Will try to get it working in next few days.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/220786544",
    "html_url": "https://github.com/electron/electron/issues/1956#issuecomment-220786544",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1956",
    "id": 220786544,
    "user": {
      "login": "aarnaud",
      "id": 4802105,
      "avatar_url": "https://avatars3.githubusercontent.com/u/4802105?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aarnaud",
      "html_url": "https://github.com/aarnaud",
      "followers_url": "https://api.github.com/users/aarnaud/followers",
      "following_url": "https://api.github.com/users/aarnaud/following{/other_user}",
      "gists_url": "https://api.github.com/users/aarnaud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aarnaud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aarnaud/subscriptions",
      "organizations_url": "https://api.github.com/users/aarnaud/orgs",
      "repos_url": "https://api.github.com/users/aarnaud/repos",
      "events_url": "https://api.github.com/users/aarnaud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aarnaud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-21T16:18:17Z",
    "updated_at": "2016-05-21T16:18:17Z",
    "body": "Hi,\n\nI have used  https://github.com/electron/electron/blob/master/docs/api/app.md#appimportcertificateoptions-callback-linux for importing client certificate. It works with signed certificate but not with self-signed certificate. \n\nHow to import a self-signed certificate ?\nHow to list/manage imported certificates ?\n\nThanks,\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/220794528",
    "html_url": "https://github.com/electron/electron/issues/1956#issuecomment-220794528",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1956",
    "id": 220794528,
    "user": {
      "login": "deepak1556",
      "id": 964386,
      "avatar_url": "https://avatars2.githubusercontent.com/u/964386?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/deepak1556",
      "html_url": "https://github.com/deepak1556",
      "followers_url": "https://api.github.com/users/deepak1556/followers",
      "following_url": "https://api.github.com/users/deepak1556/following{/other_user}",
      "gists_url": "https://api.github.com/users/deepak1556/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/deepak1556/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/deepak1556/subscriptions",
      "organizations_url": "https://api.github.com/users/deepak1556/orgs",
      "repos_url": "https://api.github.com/users/deepak1556/repos",
      "events_url": "https://api.github.com/users/deepak1556/events{/privacy}",
      "received_events_url": "https://api.github.com/users/deepak1556/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-21T18:55:33Z",
    "updated_at": "2016-05-21T18:55:33Z",
    "body": "@aarnaud the api should work for self-signed certificates, can you open a new issue with reproducible example ?\n\n> How to list/manage imported certificates ?\n\nYou can use `select-client-certificate` event to choose the certificate, but deletion from cert store is not possible with the current api.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/220809219",
    "html_url": "https://github.com/electron/electron/issues/1956#issuecomment-220809219",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1956",
    "id": 220809219,
    "user": {
      "login": "aarnaud",
      "id": 4802105,
      "avatar_url": "https://avatars3.githubusercontent.com/u/4802105?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aarnaud",
      "html_url": "https://github.com/aarnaud",
      "followers_url": "https://api.github.com/users/aarnaud/followers",
      "following_url": "https://api.github.com/users/aarnaud/following{/other_user}",
      "gists_url": "https://api.github.com/users/aarnaud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aarnaud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aarnaud/subscriptions",
      "organizations_url": "https://api.github.com/users/aarnaud/orgs",
      "repos_url": "https://api.github.com/users/aarnaud/repos",
      "events_url": "https://api.github.com/users/aarnaud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aarnaud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-22T01:29:10Z",
    "updated_at": "2016-05-22T01:29:10Z",
    "body": "@deepak1556 I tried on a other computer with self-signed certificate without password it works.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/225671850",
    "html_url": "https://github.com/electron/electron/issues/1956#issuecomment-225671850",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1956",
    "id": 225671850,
    "user": {
      "login": "PatriqDesigns",
      "id": 3120671,
      "avatar_url": "https://avatars3.githubusercontent.com/u/3120671?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PatriqDesigns",
      "html_url": "https://github.com/PatriqDesigns",
      "followers_url": "https://api.github.com/users/PatriqDesigns/followers",
      "following_url": "https://api.github.com/users/PatriqDesigns/following{/other_user}",
      "gists_url": "https://api.github.com/users/PatriqDesigns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PatriqDesigns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PatriqDesigns/subscriptions",
      "organizations_url": "https://api.github.com/users/PatriqDesigns/orgs",
      "repos_url": "https://api.github.com/users/PatriqDesigns/repos",
      "events_url": "https://api.github.com/users/PatriqDesigns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PatriqDesigns/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-13T18:44:58Z",
    "updated_at": "2016-06-13T18:44:58Z",
    "body": "@deepak1556 Does app.importCertificate work on Windows and OS X? If so, electron keeps telling me there is no such function. If not is there any alternative? \n\nThank you!\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/249135790",
    "html_url": "https://github.com/electron/electron/issues/1956#issuecomment-249135790",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1956",
    "id": 249135790,
    "user": {
      "login": "jeandenis-k",
      "id": 520194,
      "avatar_url": "https://avatars2.githubusercontent.com/u/520194?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jeandenis-k",
      "html_url": "https://github.com/jeandenis-k",
      "followers_url": "https://api.github.com/users/jeandenis-k/followers",
      "following_url": "https://api.github.com/users/jeandenis-k/following{/other_user}",
      "gists_url": "https://api.github.com/users/jeandenis-k/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jeandenis-k/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jeandenis-k/subscriptions",
      "organizations_url": "https://api.github.com/users/jeandenis-k/orgs",
      "repos_url": "https://api.github.com/users/jeandenis-k/repos",
      "events_url": "https://api.github.com/users/jeandenis-k/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jeandenis-k/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-23T08:41:01Z",
    "updated_at": "2016-09-23T08:41:01Z",
    "body": "Hi @deepak1556, I'm ready to work on Mac/Windows implementation and testing. What would be your directions? Thank you for your help!\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/249368997",
    "html_url": "https://github.com/electron/electron/issues/1956#issuecomment-249368997",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1956",
    "id": 249368997,
    "user": {
      "login": "deepak1556",
      "id": 964386,
      "avatar_url": "https://avatars2.githubusercontent.com/u/964386?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/deepak1556",
      "html_url": "https://github.com/deepak1556",
      "followers_url": "https://api.github.com/users/deepak1556/followers",
      "following_url": "https://api.github.com/users/deepak1556/following{/other_user}",
      "gists_url": "https://api.github.com/users/deepak1556/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/deepak1556/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/deepak1556/subscriptions",
      "organizations_url": "https://api.github.com/users/deepak1556/orgs",
      "repos_url": "https://api.github.com/users/deepak1556/repos",
      "events_url": "https://api.github.com/users/deepak1556/events{/privacy}",
      "received_events_url": "https://api.github.com/users/deepak1556/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-24T14:59:39Z",
    "updated_at": "2016-09-24T14:59:39Z",
    "body": "@jeandenis-k you can start by porting [settings_util::ShowManageSSLCertificates](https://cs.chromium.org/chromium/src/chrome/browser/ui/webui/settings_utils.h?l=29) for OSX and windows.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/250209505",
    "html_url": "https://github.com/electron/electron/issues/1956#issuecomment-250209505",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1956",
    "id": 250209505,
    "user": {
      "login": "lecogiteur",
      "id": 4309708,
      "avatar_url": "https://avatars1.githubusercontent.com/u/4309708?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lecogiteur",
      "html_url": "https://github.com/lecogiteur",
      "followers_url": "https://api.github.com/users/lecogiteur/followers",
      "following_url": "https://api.github.com/users/lecogiteur/following{/other_user}",
      "gists_url": "https://api.github.com/users/lecogiteur/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lecogiteur/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lecogiteur/subscriptions",
      "organizations_url": "https://api.github.com/users/lecogiteur/orgs",
      "repos_url": "https://api.github.com/users/lecogiteur/repos",
      "events_url": "https://api.github.com/users/lecogiteur/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lecogiteur/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-28T15:51:24Z",
    "updated_at": "2016-09-28T15:51:24Z",
    "body": "Hello,\n\nwe need also these features. Do you have an idea for their availability with electron? Only on Windows, OSX, not on Linux? Does Self-signed certificate work on Linux?\n\nThanks\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/250459559",
    "html_url": "https://github.com/electron/electron/issues/1956#issuecomment-250459559",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1956",
    "id": 250459559,
    "user": {
      "login": "jeandenis-k",
      "id": 520194,
      "avatar_url": "https://avatars2.githubusercontent.com/u/520194?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jeandenis-k",
      "html_url": "https://github.com/jeandenis-k",
      "followers_url": "https://api.github.com/users/jeandenis-k/followers",
      "following_url": "https://api.github.com/users/jeandenis-k/following{/other_user}",
      "gists_url": "https://api.github.com/users/jeandenis-k/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jeandenis-k/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jeandenis-k/subscriptions",
      "organizations_url": "https://api.github.com/users/jeandenis-k/orgs",
      "repos_url": "https://api.github.com/users/jeandenis-k/repos",
      "events_url": "https://api.github.com/users/jeandenis-k/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jeandenis-k/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-29T13:02:53Z",
    "updated_at": "2016-09-29T13:02:53Z",
    "body": "Hi! Import of SSL client certificates (in PKCS12 format) already works on linux. I'm working on Mac support, but it's slow going: on Linux, Chrome uses a custom certificate store (using the NSS lib), whereas on Mac/Win Chrome uses the system certificate store, which is complex and platform-specific.\n\nAs for self-signed certificates, I'm not really sure but looking at the implementation I don't see why that wouldn't work on Linux.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/250678783",
    "html_url": "https://github.com/electron/electron/issues/1956#issuecomment-250678783",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1956",
    "id": 250678783,
    "user": {
      "login": "lecogiteur",
      "id": 4309708,
      "avatar_url": "https://avatars1.githubusercontent.com/u/4309708?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lecogiteur",
      "html_url": "https://github.com/lecogiteur",
      "followers_url": "https://api.github.com/users/lecogiteur/followers",
      "following_url": "https://api.github.com/users/lecogiteur/following{/other_user}",
      "gists_url": "https://api.github.com/users/lecogiteur/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lecogiteur/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lecogiteur/subscriptions",
      "organizations_url": "https://api.github.com/users/lecogiteur/orgs",
      "repos_url": "https://api.github.com/users/lecogiteur/repos",
      "events_url": "https://api.github.com/users/lecogiteur/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lecogiteur/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-30T07:30:08Z",
    "updated_at": "2016-09-30T07:30:35Z",
    "body": "@jeandenis-k Sorry, it's not worked on Linux for me. I try this [example](https://github.com/hokein/electron-sample-apps/tree/master/client-certificate).\nI add in main.js\n`app.importCertificate(....)`\n I have this error \n`[23447:0930/091053:ERROR:cert_verify_proc_nss.cc(942)] CERT_PKIXVerifyCert for 127.0.0.1 failed err=-8172\nnet::ERR_CERT_AUTHORITY_INVALID`\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/250787433",
    "html_url": "https://github.com/electron/electron/issues/1956#issuecomment-250787433",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1956",
    "id": 250787433,
    "user": {
      "login": "deepak1556",
      "id": 964386,
      "avatar_url": "https://avatars2.githubusercontent.com/u/964386?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/deepak1556",
      "html_url": "https://github.com/deepak1556",
      "followers_url": "https://api.github.com/users/deepak1556/followers",
      "following_url": "https://api.github.com/users/deepak1556/following{/other_user}",
      "gists_url": "https://api.github.com/users/deepak1556/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/deepak1556/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/deepak1556/subscriptions",
      "organizations_url": "https://api.github.com/users/deepak1556/orgs",
      "repos_url": "https://api.github.com/users/deepak1556/repos",
      "events_url": "https://api.github.com/users/deepak1556/events{/privacy}",
      "received_events_url": "https://api.github.com/users/deepak1556/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-30T16:17:50Z",
    "updated_at": "2016-09-30T16:17:50Z",
    "body": "@lecogiteur the error denotes certificate was issued by an untrusted authority, which is true in your case. You should handle with `certificate-error` event of app or package the issuer with the p12 file, electron will import and set the appropriate trust bits.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/250900072",
    "html_url": "https://github.com/electron/electron/issues/1956#issuecomment-250900072",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1956",
    "id": 250900072,
    "user": {
      "login": "lecogiteur",
      "id": 4309708,
      "avatar_url": "https://avatars1.githubusercontent.com/u/4309708?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lecogiteur",
      "html_url": "https://github.com/lecogiteur",
      "followers_url": "https://api.github.com/users/lecogiteur/followers",
      "following_url": "https://api.github.com/users/lecogiteur/following{/other_user}",
      "gists_url": "https://api.github.com/users/lecogiteur/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lecogiteur/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lecogiteur/subscriptions",
      "organizations_url": "https://api.github.com/users/lecogiteur/orgs",
      "repos_url": "https://api.github.com/users/lecogiteur/repos",
      "events_url": "https://api.github.com/users/lecogiteur/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lecogiteur/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-01T08:19:43Z",
    "updated_at": "2016-10-01T08:19:43Z",
    "body": "Thanks very much\n\n@deepak1556 \n\n> You should handle with certificate-error event \n\nI didn't say it, but I already try this. You are right, it fixes the problem of untrusted authority.\n\nI finally found my error : \nIn the main.js of [example](https://github.com/hokein/electron-sample-apps/tree/master/client-certificate), I must put the block code \"app.importCertificate(....)\" in the function associated to the event app `ready` before load URL. If I put it before the declaration of the `ready` event (out of the function), it doesn't work. The certificate is never imported. **Is it normal?**\n\nI note with this block code:\n\n`app.on('ready', function() {\n  mainWindow = new BrowserWindow({\n    'width': 800,\n    'height': 600,\n  });`\n `var options = new Object();`\n  `options.certificate=\"/XXXXXXX/client-certificate/ssl/client.p12\";`\n `options.password=\"a\";`\n  `app.importCertificate(options, () => (console.log(\"Imported\")));`\n  `console.log(\"load URL\");`\n  `mainWindow.loadURL('https://localhost:5000');`\n  `console.log(\"end to load URL\");`\n`});`\n\nThe result in console is\n`load URL`\n`end to load URL`\n`Imported`\n`[8478:1001/094407:ERROR:cert_verify_proc_nss.cc(942)] CERT_PKIXVerifyCert for localhost failed err=-8172`\nThe certificate seems to be imported after to load URL.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/250902705",
    "html_url": "https://github.com/electron/electron/issues/1956#issuecomment-250902705",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1956",
    "id": 250902705,
    "user": {
      "login": "deepak1556",
      "id": 964386,
      "avatar_url": "https://avatars2.githubusercontent.com/u/964386?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/deepak1556",
      "html_url": "https://github.com/deepak1556",
      "followers_url": "https://api.github.com/users/deepak1556/followers",
      "following_url": "https://api.github.com/users/deepak1556/following{/other_user}",
      "gists_url": "https://api.github.com/users/deepak1556/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/deepak1556/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/deepak1556/subscriptions",
      "organizations_url": "https://api.github.com/users/deepak1556/orgs",
      "repos_url": "https://api.github.com/users/deepak1556/repos",
      "events_url": "https://api.github.com/users/deepak1556/events{/privacy}",
      "received_events_url": "https://api.github.com/users/deepak1556/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-01T09:24:16Z",
    "updated_at": "2016-10-01T09:24:16Z",
    "body": "Yes importing the certificate is async, you have wait for import result and then load your initial url. The other problem of api being available only after ready event is intentional, I see the documentation missed it, should fix it.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/250909818",
    "html_url": "https://github.com/electron/electron/issues/1956#issuecomment-250909818",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1956",
    "id": 250909818,
    "user": {
      "login": "lecogiteur",
      "id": 4309708,
      "avatar_url": "https://avatars1.githubusercontent.com/u/4309708?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lecogiteur",
      "html_url": "https://github.com/lecogiteur",
      "followers_url": "https://api.github.com/users/lecogiteur/followers",
      "following_url": "https://api.github.com/users/lecogiteur/following{/other_user}",
      "gists_url": "https://api.github.com/users/lecogiteur/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lecogiteur/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lecogiteur/subscriptions",
      "organizations_url": "https://api.github.com/users/lecogiteur/orgs",
      "repos_url": "https://api.github.com/users/lecogiteur/repos",
      "events_url": "https://api.github.com/users/lecogiteur/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lecogiteur/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-01T12:26:32Z",
    "updated_at": "2016-10-03T08:54:47Z",
    "body": "Thanks. It's clear. \n\nYes the documentation is quite light.\n\nSorry a last question for Windows and Electron 1.4.2: the list of certificates on `select-client-certificate` event contains the list of certificate already stored in Windows's certificate store (by another way using CryptoAPI for example)? Or It's not yet implemented for Windows?\n\n@deepak1556 \n\n> The only hook is when chromiums' resource loader asks for a certificate and it will look into the platform certificate database for the key. As far as i can see the current implementation of client-certificate flag doesnt serve its purpose and can be removed. Instead we can provide api to import certificate and ca authorities. Users can listen to select-client-certificate and proceed.\n\nI have not seen this post. It's answered my question. Thanks\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/268290732",
    "html_url": "https://github.com/electron/electron/issues/1956#issuecomment-268290732",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1956",
    "id": 268290732,
    "user": {
      "login": "mashaalmemon",
      "id": 18560240,
      "avatar_url": "https://avatars0.githubusercontent.com/u/18560240?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mashaalmemon",
      "html_url": "https://github.com/mashaalmemon",
      "followers_url": "https://api.github.com/users/mashaalmemon/followers",
      "following_url": "https://api.github.com/users/mashaalmemon/following{/other_user}",
      "gists_url": "https://api.github.com/users/mashaalmemon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mashaalmemon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mashaalmemon/subscriptions",
      "organizations_url": "https://api.github.com/users/mashaalmemon/orgs",
      "repos_url": "https://api.github.com/users/mashaalmemon/repos",
      "events_url": "https://api.github.com/users/mashaalmemon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mashaalmemon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-20T16:35:25Z",
    "updated_at": "2016-12-20T16:35:25Z",
    "body": "Hi There,\r\n\r\nI am using NightmareJS which relys on electron for web browsing. I have a situation where my proxy (specified via the --proxy-server switch) needs to use a self signed client certificate for https communication with the proxy. Without the client certificate it appears that \"ERR_UNEXPECTED_PROXY_AUTH\" is coming back from electron (my code etc at segmentio/nightmare#829).\r\n\r\nIt appears that the --client-certifcate switch was removed as it was not functional. Apparently the client certificate must be installed on the platform. A few questions about electron behaviour in contrast to curl behaviour:\r\n- In curl I can do either of the following to get a curl request through the proxy. I can provide the client certificate to use:\r\n\r\n```\r\n// works with certificate\r\ncurl -x <proxy host>:<proxy port> -U <proxy user>:<proxy pass> --cacert /path/to/cert.pem https://www.google.com\r\n```\r\n\r\nalternately I can instruct curl to allow insecure ssl connections and transfers:\r\n\r\n```\r\n// works without certificate\r\ncurl -x <proxy host>:<proxy port> -U <proxy user>:<proxy pass> --insecure https://www.google.com\r\n```\r\n\r\nWhen using electron does the '--ignore-certificate-errors' switch have the same effect for client certificates? If not it may be prudent to add such a switch/feature to electron if possible. \r\n\r\n- In my environment we develop on Mac but deploy in production on linux. If my only work around here is to install the certificate in the platform storm then on Mac I assume I assume that in Mac the certificate is to be installed via the Keychain Access app. However should it be installed in the 'login' keychain or in a different keychain?\r\n\r\nThanks in advance for any feedback."
  }
]