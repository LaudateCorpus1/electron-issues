[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/258361287",
    "html_url": "https://github.com/electron/electron/issues/7874#issuecomment-258361287",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7874",
    "id": 258361287,
    "user": {
      "login": "MarshallOfSound",
      "id": 6634592,
      "avatar_url": "https://avatars0.githubusercontent.com/u/6634592?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarshallOfSound",
      "html_url": "https://github.com/MarshallOfSound",
      "followers_url": "https://api.github.com/users/MarshallOfSound/followers",
      "following_url": "https://api.github.com/users/MarshallOfSound/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarshallOfSound/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarshallOfSound/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarshallOfSound/subscriptions",
      "organizations_url": "https://api.github.com/users/MarshallOfSound/orgs",
      "repos_url": "https://api.github.com/users/MarshallOfSound/repos",
      "events_url": "https://api.github.com/users/MarshallOfSound/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarshallOfSound/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-04T07:26:44Z",
    "updated_at": "2016-11-04T07:26:44Z",
    "body": "I believe this is a side-effect of how JSON stringification operates with arrays.\n\nFor example run this in Chrome\n\n``` js\nJSON.parse(JSON.stringify([1, 2, undefined, 3]))\n```\n\nYou will see\n\n``` js\n[1, 2, null, 3]\n```\n\nI don't think there is much we can do to change this behavior\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/258363832",
    "html_url": "https://github.com/electron/electron/issues/7874#issuecomment-258363832",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7874",
    "id": 258363832,
    "user": {
      "login": "LuminescentMoon",
      "id": 6457338,
      "avatar_url": "https://avatars1.githubusercontent.com/u/6457338?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LuminescentMoon",
      "html_url": "https://github.com/LuminescentMoon",
      "followers_url": "https://api.github.com/users/LuminescentMoon/followers",
      "following_url": "https://api.github.com/users/LuminescentMoon/following{/other_user}",
      "gists_url": "https://api.github.com/users/LuminescentMoon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LuminescentMoon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LuminescentMoon/subscriptions",
      "organizations_url": "https://api.github.com/users/LuminescentMoon/orgs",
      "repos_url": "https://api.github.com/users/LuminescentMoon/repos",
      "events_url": "https://api.github.com/users/LuminescentMoon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LuminescentMoon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-04T07:45:36Z",
    "updated_at": "2016-11-04T07:45:36Z",
    "body": "Didn't know that messages were passed between processes using JSON. JSON doesn't support `undefined` values, only `null`.\n\nIs it feasible to allow us to set an arbitrary value as a placeholder for `undefined` in the JSON IPC messages?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/258366979",
    "html_url": "https://github.com/electron/electron/issues/7874#issuecomment-258366979",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7874",
    "id": 258366979,
    "user": {
      "login": "MarshallOfSound",
      "id": 6634592,
      "avatar_url": "https://avatars0.githubusercontent.com/u/6634592?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarshallOfSound",
      "html_url": "https://github.com/MarshallOfSound",
      "followers_url": "https://api.github.com/users/MarshallOfSound/followers",
      "following_url": "https://api.github.com/users/MarshallOfSound/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarshallOfSound/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarshallOfSound/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarshallOfSound/subscriptions",
      "organizations_url": "https://api.github.com/users/MarshallOfSound/orgs",
      "repos_url": "https://api.github.com/users/MarshallOfSound/repos",
      "events_url": "https://api.github.com/users/MarshallOfSound/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarshallOfSound/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-04T08:07:46Z",
    "updated_at": "2016-11-04T08:07:46Z",
    "body": "@Luminess It is possible but it is something you would have to do yourself üëç I don't think we can implement it in a standard way that wouldn't break existing things üëç \n"
  }
]