[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/173340410",
    "html_url": "https://github.com/electron/electron/issues/4175#issuecomment-173340410",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/4175",
    "id": 173340410,
    "user": {
      "login": "bridiver",
      "id": 34129,
      "avatar_url": "https://avatars0.githubusercontent.com/u/34129?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bridiver",
      "html_url": "https://github.com/bridiver",
      "followers_url": "https://api.github.com/users/bridiver/followers",
      "following_url": "https://api.github.com/users/bridiver/following{/other_user}",
      "gists_url": "https://api.github.com/users/bridiver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bridiver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bridiver/subscriptions",
      "organizations_url": "https://api.github.com/users/bridiver/orgs",
      "repos_url": "https://api.github.com/users/bridiver/repos",
      "events_url": "https://api.github.com/users/bridiver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bridiver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-20T19:53:48Z",
    "updated_at": "2016-01-20T19:53:48Z",
    "body": "also have new tests that we can move from https://github.com/brave/browser-laptop to electron for the currently unsupported or incomplete functionality\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/173424517",
    "html_url": "https://github.com/electron/electron/issues/4175#issuecomment-173424517",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/4175",
    "id": 173424517,
    "user": {
      "login": "felixrieseberg",
      "id": 1426799,
      "avatar_url": "https://avatars0.githubusercontent.com/u/1426799?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/felixrieseberg",
      "html_url": "https://github.com/felixrieseberg",
      "followers_url": "https://api.github.com/users/felixrieseberg/followers",
      "following_url": "https://api.github.com/users/felixrieseberg/following{/other_user}",
      "gists_url": "https://api.github.com/users/felixrieseberg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/felixrieseberg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/felixrieseberg/subscriptions",
      "organizations_url": "https://api.github.com/users/felixrieseberg/orgs",
      "repos_url": "https://api.github.com/users/felixrieseberg/repos",
      "events_url": "https://api.github.com/users/felixrieseberg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/felixrieseberg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-21T01:42:29Z",
    "updated_at": "2016-01-21T01:42:29Z",
    "body": "This looks great - I assume you're talking about some of the `strWindowFeatures`? If so, I can really see how a bunch of other developers will rejoice if support is improved.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/173425410",
    "html_url": "https://github.com/electron/electron/issues/4175#issuecomment-173425410",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/4175",
    "id": 173425410,
    "user": {
      "login": "bridiver",
      "id": 34129,
      "avatar_url": "https://avatars0.githubusercontent.com/u/34129?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bridiver",
      "html_url": "https://github.com/bridiver",
      "followers_url": "https://api.github.com/users/bridiver/followers",
      "following_url": "https://api.github.com/users/bridiver/following{/other_user}",
      "gists_url": "https://api.github.com/users/bridiver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bridiver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bridiver/subscriptions",
      "organizations_url": "https://api.github.com/users/bridiver/orgs",
      "repos_url": "https://api.github.com/users/bridiver/repos",
      "events_url": "https://api.github.com/users/bridiver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bridiver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-21T01:48:36Z",
    "updated_at": "2016-01-21T01:48:36Z",
    "body": "for us it was mostly about complete cross-window scripting support with the correct security restrictions, but it comes with other benefits as well\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/173712925",
    "html_url": "https://github.com/electron/electron/issues/4175#issuecomment-173712925",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/4175",
    "id": 173712925,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2016-01-21T21:28:11Z",
    "updated_at": "2016-01-21T21:28:11Z",
    "body": "I'm afraid we can not merge it.\n\nCurrently we have to guarantee that each WebContents maps to exact one renderer process, however your change would make the two WebContents share one renderer process.\n\nWe do this because:\n- Many settings of `webPreferences` are process wide;\n- Node is not perfectly safe when creating two Node environments in one process;\n- Node leaks resources when a Node environment is destroyed (e.g. when a WebContents is destroyed);\n- Chromium leaks memory when reloading/navigating/closing page;\n- The renderer process has to be restarted when reloading/navigation happens, so we can make Node happy and assure not leaking resources.\n\nTherefore as long as you are creating two WebContents in one renderer process, you are never going to fix all the failing specs of Electron. It also means we can never support `window.open` with normal ways.\n\nI'm closing this as a duplicate of #1865.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/173714891",
    "html_url": "https://github.com/electron/electron/issues/4175#issuecomment-173714891",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/4175",
    "id": 173714891,
    "user": {
      "login": "bridiver",
      "id": 34129,
      "avatar_url": "https://avatars0.githubusercontent.com/u/34129?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bridiver",
      "html_url": "https://github.com/bridiver",
      "followers_url": "https://api.github.com/users/bridiver/followers",
      "following_url": "https://api.github.com/users/bridiver/following{/other_user}",
      "gists_url": "https://api.github.com/users/bridiver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bridiver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bridiver/subscriptions",
      "organizations_url": "https://api.github.com/users/bridiver/orgs",
      "repos_url": "https://api.github.com/users/bridiver/repos",
      "events_url": "https://api.github.com/users/bridiver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bridiver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-21T21:34:58Z",
    "updated_at": "2016-01-21T21:34:58Z",
    "body": "There is definitely another render process created when we open a child window using this code. When would they end up in the same process?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/173717414",
    "html_url": "https://github.com/electron/electron/issues/4175#issuecomment-173717414",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/4175",
    "id": 173717414,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2016-01-21T21:41:40Z",
    "updated_at": "2016-01-21T21:41:40Z",
    "body": "> There is definitely another render process created when we open a child window using this code. When would they end up in the same process?\n\nIt is probably because the URL passed to `window.open` is in a different origin, in this case Chromium would choose to create a new renderer process.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/173718844",
    "html_url": "https://github.com/electron/electron/issues/4175#issuecomment-173718844",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/4175",
    "id": 173718844,
    "user": {
      "login": "bridiver",
      "id": 34129,
      "avatar_url": "https://avatars0.githubusercontent.com/u/34129?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bridiver",
      "html_url": "https://github.com/bridiver",
      "followers_url": "https://api.github.com/users/bridiver/followers",
      "following_url": "https://api.github.com/users/bridiver/following{/other_user}",
      "gists_url": "https://api.github.com/users/bridiver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bridiver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bridiver/subscriptions",
      "organizations_url": "https://api.github.com/users/bridiver/orgs",
      "repos_url": "https://api.github.com/users/bridiver/repos",
      "events_url": "https://api.github.com/users/bridiver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bridiver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-21T21:44:47Z",
    "updated_at": "2016-01-21T21:44:47Z",
    "body": "The original issue we were targeting was Feedly login through Google. The child window is same origin and runs in it's own renderer process.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/173719225",
    "html_url": "https://github.com/electron/electron/issues/4175#issuecomment-173719225",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/4175",
    "id": 173719225,
    "user": {
      "login": "bridiver",
      "id": 34129,
      "avatar_url": "https://avatars0.githubusercontent.com/u/34129?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bridiver",
      "html_url": "https://github.com/bridiver",
      "followers_url": "https://api.github.com/users/bridiver/followers",
      "following_url": "https://api.github.com/users/bridiver/following{/other_user}",
      "gists_url": "https://api.github.com/users/bridiver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bridiver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bridiver/subscriptions",
      "organizations_url": "https://api.github.com/users/bridiver/orgs",
      "repos_url": "https://api.github.com/users/bridiver/repos",
      "events_url": "https://api.github.com/users/bridiver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bridiver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-21T21:46:04Z",
    "updated_at": "2016-01-21T21:46:04Z",
    "body": "We have tests for both same and different origin and both work correctly with correct origin-based access to parent/child\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/173719787",
    "html_url": "https://github.com/electron/electron/issues/4175#issuecomment-173719787",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/4175",
    "id": 173719787,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2016-01-21T21:48:07Z",
    "updated_at": "2016-01-21T21:48:07Z",
    "body": "@bridiver Does the `contentWindow` property work? And can you print the `process.pid` in each window and see whether they are same.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/173720990",
    "html_url": "https://github.com/electron/electron/issues/4175#issuecomment-173720990",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/4175",
    "id": 173720990,
    "user": {
      "login": "bridiver",
      "id": 34129,
      "avatar_url": "https://avatars0.githubusercontent.com/u/34129?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bridiver",
      "html_url": "https://github.com/bridiver",
      "followers_url": "https://api.github.com/users/bridiver/followers",
      "following_url": "https://api.github.com/users/bridiver/following{/other_user}",
      "gists_url": "https://api.github.com/users/bridiver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bridiver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bridiver/subscriptions",
      "organizations_url": "https://api.github.com/users/bridiver/orgs",
      "repos_url": "https://api.github.com/users/bridiver/repos",
      "events_url": "https://api.github.com/users/bridiver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bridiver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-21T21:53:19Z",
    "updated_at": "2016-01-21T21:53:19Z",
    "body": "I'm not sure exactly what you are looking for with the contentWindow property. Can you give me an example you expect to fail?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/173722642",
    "html_url": "https://github.com/electron/electron/issues/4175#issuecomment-173722642",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/4175",
    "id": 173722642,
    "user": {
      "login": "bridiver",
      "id": 34129,
      "avatar_url": "https://avatars0.githubusercontent.com/u/34129?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bridiver",
      "html_url": "https://github.com/bridiver",
      "followers_url": "https://api.github.com/users/bridiver/followers",
      "following_url": "https://api.github.com/users/bridiver/following{/other_user}",
      "gists_url": "https://api.github.com/users/bridiver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bridiver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bridiver/subscriptions",
      "organizations_url": "https://api.github.com/users/bridiver/orgs",
      "repos_url": "https://api.github.com/users/bridiver/repos",
      "events_url": "https://api.github.com/users/bridiver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bridiver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-21T21:59:20Z",
    "updated_at": "2016-01-21T21:59:20Z",
    "body": "I did verify that process.pid is different in each and also by ps\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/173726497",
    "html_url": "https://github.com/electron/electron/issues/4175#issuecomment-173726497",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/4175",
    "id": 173726497,
    "user": {
      "login": "bridiver",
      "id": 34129,
      "avatar_url": "https://avatars0.githubusercontent.com/u/34129?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bridiver",
      "html_url": "https://github.com/bridiver",
      "followers_url": "https://api.github.com/users/bridiver/followers",
      "following_url": "https://api.github.com/users/bridiver/following{/other_user}",
      "gists_url": "https://api.github.com/users/bridiver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bridiver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bridiver/subscriptions",
      "organizations_url": "https://api.github.com/users/bridiver/orgs",
      "repos_url": "https://api.github.com/users/bridiver/repos",
      "events_url": "https://api.github.com/users/bridiver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bridiver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-21T22:10:11Z",
    "updated_at": "2016-01-21T22:11:02Z",
    "body": "I can also verify that postMessage, close, focus, blur and eval all work in both directions (eval only in same origin per http://www.w3.org/TR/html5/browsers.html#security-window)\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/173726824",
    "html_url": "https://github.com/electron/electron/issues/4175#issuecomment-173726824",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/4175",
    "id": 173726824,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2016-01-21T22:11:06Z",
    "updated_at": "2016-01-21T22:11:06Z",
    "body": "@bridiver I have built your fork and opened the default app but following code doesn't seem to work in devtools console?\n\n``` js\nvar w = window.open('http://github.com', 'nodeIntegration=true');\n```\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/173727205",
    "html_url": "https://github.com/electron/electron/issues/4175#issuecomment-173727205",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/4175",
    "id": 173727205,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2016-01-21T22:11:37Z",
    "updated_at": "2016-01-21T22:11:37Z",
    "body": "> I can verify the postMessage, close, focus, blur and eval all work in both directions (eval only in same origin per http://www.w3.org/TR/html5/browsers.html#security-window)\n\nCan you try whether the `contentWindow` property works?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/173727571",
    "html_url": "https://github.com/electron/electron/issues/4175#issuecomment-173727571",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/4175",
    "id": 173727571,
    "user": {
      "login": "bridiver",
      "id": 34129,
      "avatar_url": "https://avatars0.githubusercontent.com/u/34129?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bridiver",
      "html_url": "https://github.com/bridiver",
      "followers_url": "https://api.github.com/users/bridiver/followers",
      "following_url": "https://api.github.com/users/bridiver/following{/other_user}",
      "gists_url": "https://api.github.com/users/bridiver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bridiver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bridiver/subscriptions",
      "organizations_url": "https://api.github.com/users/bridiver/orgs",
      "repos_url": "https://api.github.com/users/bridiver/repos",
      "events_url": "https://api.github.com/users/bridiver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bridiver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-21T22:12:09Z",
    "updated_at": "2016-01-21T22:12:09Z",
    "body": "Blocked by popup blocking. Has to be user initiated\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/173731272",
    "html_url": "https://github.com/electron/electron/issues/4175#issuecomment-173731272",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/4175",
    "id": 173731272,
    "user": {
      "login": "bridiver",
      "id": 34129,
      "avatar_url": "https://avatars0.githubusercontent.com/u/34129?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bridiver",
      "html_url": "https://github.com/bridiver",
      "followers_url": "https://api.github.com/users/bridiver/followers",
      "following_url": "https://api.github.com/users/bridiver/following{/other_user}",
      "gists_url": "https://api.github.com/users/bridiver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bridiver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bridiver/subscriptions",
      "organizations_url": "https://api.github.com/users/bridiver/orgs",
      "repos_url": "https://api.github.com/users/bridiver/repos",
      "events_url": "https://api.github.com/users/bridiver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bridiver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-21T22:17:24Z",
    "updated_at": "2016-01-21T22:19:28Z",
    "body": "contentWindow? From an iframe? Are you looking to see if you can establish bi-directional communication from different origins (postMessage)? Is there a test case in Electron I can run it against? Sorry, I'm just not exactly sure what you are looking for, but I'm happy to check if you can give me some more info.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/173732306",
    "html_url": "https://github.com/electron/electron/issues/4175#issuecomment-173732306",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/4175",
    "id": 173732306,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2016-01-21T22:19:30Z",
    "updated_at": "2016-01-21T22:19:30Z",
    "body": "I created a local `main.html`:\n\n``` html\n<html>\n<head>\n  <title>Electron</title>\n</head>\n<body>\n<button onclick=\"doclick()\">open</button>\n<script type=\"text/javascript\" charset=\"utf-8\">\n  function doclick() {\n    console.log('click');\n    window.w = window.open('http://github.com', 'nodeIntegration=true');\n  }\n</script>\n</body>\n</html>\n```\n\nLoad it in a BrowserWindow, click the button, program crashed.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/173734210",
    "html_url": "https://github.com/electron/electron/issues/4175#issuecomment-173734210",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/4175",
    "id": 173734210,
    "user": {
      "login": "bridiver",
      "id": 34129,
      "avatar_url": "https://avatars0.githubusercontent.com/u/34129?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bridiver",
      "html_url": "https://github.com/bridiver",
      "followers_url": "https://api.github.com/users/bridiver/followers",
      "following_url": "https://api.github.com/users/bridiver/following{/other_user}",
      "gists_url": "https://api.github.com/users/bridiver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bridiver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bridiver/subscriptions",
      "organizations_url": "https://api.github.com/users/bridiver/orgs",
      "repos_url": "https://api.github.com/users/bridiver/repos",
      "events_url": "https://api.github.com/users/bridiver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bridiver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-21T22:26:49Z",
    "updated_at": "2016-01-21T22:32:14Z",
    "body": "Sorry, I should be clear that the current code only supports guest view <-> guest view, but that is not a limitation of the code itself, that is just the only part we have implemented because that is all that we needed. Obviously we have to support all use cases before it can be upstreamed and that's what this issue was opened for. We are working on that portion of it, but any help is welcome. This code is working in our browser and we have several test cases for it there that we will move to Electron. My tests have been with two separate browser windows that each have an embedded webview. The two webviews are connected as parent/child.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/173739258",
    "html_url": "https://github.com/electron/electron/issues/4175#issuecomment-173739258",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/4175",
    "id": 173739258,
    "user": {
      "login": "bridiver",
      "id": 34129,
      "avatar_url": "https://avatars0.githubusercontent.com/u/34129?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bridiver",
      "html_url": "https://github.com/bridiver",
      "followers_url": "https://api.github.com/users/bridiver/followers",
      "following_url": "https://api.github.com/users/bridiver/following{/other_user}",
      "gists_url": "https://api.github.com/users/bridiver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bridiver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bridiver/subscriptions",
      "organizations_url": "https://api.github.com/users/bridiver/orgs",
      "repos_url": "https://api.github.com/users/bridiver/repos",
      "events_url": "https://api.github.com/users/bridiver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bridiver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-21T22:43:07Z",
    "updated_at": "2016-01-21T22:43:07Z",
    "body": "Here's what I propose: we have a working implementation that I believe satisfies your requirements (separate renderer process/access to all properties by origin policy), but it needs to be expanded to cover window <-> window. Can we reopen this ticket pending those updates? If for some reason it can't cover all use cases we can implement it to only be used in the cases it does cover or only by flag.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/173753241",
    "html_url": "https://github.com/electron/electron/issues/4175#issuecomment-173753241",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/4175",
    "id": 173753241,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2016-01-21T23:52:48Z",
    "updated_at": "2016-01-21T23:52:48Z",
    "body": "This issue is closed because it is a duplicate of #1865.\n\nI don't think we should ever add a flag that only solves one special use case while breaking all other apps, no one except you will use it and we are not able to maintain it.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/173753583",
    "html_url": "https://github.com/electron/electron/issues/4175#issuecomment-173753583",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/4175",
    "id": 173753583,
    "user": {
      "login": "bridiver",
      "id": 34129,
      "avatar_url": "https://avatars0.githubusercontent.com/u/34129?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bridiver",
      "html_url": "https://github.com/bridiver",
      "followers_url": "https://api.github.com/users/bridiver/followers",
      "following_url": "https://api.github.com/users/bridiver/following{/other_user}",
      "gists_url": "https://api.github.com/users/bridiver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bridiver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bridiver/subscriptions",
      "organizations_url": "https://api.github.com/users/bridiver/orgs",
      "repos_url": "https://api.github.com/users/bridiver/repos",
      "events_url": "https://api.github.com/users/bridiver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bridiver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-21T23:54:52Z",
    "updated_at": "2016-01-21T23:54:52Z",
    "body": "Fair enough, I think we can make it work for all cases anyway. I'll make a quick reference to our code in the other ticket in case anyone else wants to take a look.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/173830489",
    "html_url": "https://github.com/electron/electron/issues/4175#issuecomment-173830489",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/4175",
    "id": 173830489,
    "user": {
      "login": "bridiver",
      "id": 34129,
      "avatar_url": "https://avatars0.githubusercontent.com/u/34129?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bridiver",
      "html_url": "https://github.com/bridiver",
      "followers_url": "https://api.github.com/users/bridiver/followers",
      "following_url": "https://api.github.com/users/bridiver/following{/other_user}",
      "gists_url": "https://api.github.com/users/bridiver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bridiver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bridiver/subscriptions",
      "organizations_url": "https://api.github.com/users/bridiver/orgs",
      "repos_url": "https://api.github.com/users/bridiver/repos",
      "events_url": "https://api.github.com/users/bridiver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bridiver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-22T07:12:21Z",
    "updated_at": "2016-01-22T07:12:21Z",
    "body": "I have a few questions about your original comment so I can understand your concerns a little better and hopefully improve Electron for everyone:\n1. Many settings of webPreferences are process wide\n   If the child window is in the same browsing context then shouldn't it have the same web preferences? If not it definitely wouldn't be in the same process and would have limited access to the child/opener\n2. Node is not perfectly safe when creating two Node environments in one process;\n   If they are in the same process then wouldn't this only matter if node integration is enabled? \n3. Node leaks resources when a Node environment is destroyed (e.g. when a WebContents is destroyed);\n   The webContents live in the main process, so why would this be an issue for the renderer process?\n4. The renderer process has to be restarted when reloading/navigation happens, so we can make Node happy and assure not leaking resources\n   I did notice that the child window loses the opener reference on reload (this doesn't happen in Chrome or Safari). This appears to be because webcontents.reload is actually implemented in Electron as a load of the current url. Either way wouldn't we just have to re-attach the webcontents to the renderer after restart?\n\nThanks!\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/175902790",
    "html_url": "https://github.com/electron/electron/issues/4175#issuecomment-175902790",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/4175",
    "id": 175902790,
    "user": {
      "login": "bridiver",
      "id": 34129,
      "avatar_url": "https://avatars0.githubusercontent.com/u/34129?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bridiver",
      "html_url": "https://github.com/bridiver",
      "followers_url": "https://api.github.com/users/bridiver/followers",
      "following_url": "https://api.github.com/users/bridiver/following{/other_user}",
      "gists_url": "https://api.github.com/users/bridiver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bridiver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bridiver/subscriptions",
      "organizations_url": "https://api.github.com/users/bridiver/orgs",
      "repos_url": "https://api.github.com/users/bridiver/repos",
      "events_url": "https://api.github.com/users/bridiver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bridiver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-27T22:59:20Z",
    "updated_at": "2016-01-27T22:59:20Z",
    "body": "I made a mistake earlier, I was looking at the pid for the window, not the embedded webview. The two webviews do indeed share the same renderer process. I also see the memory issue you are referring to, but I have an almost complete fix for that. The issue is that a new node environment is created for every new script context in addition to the \"global\" environment that is created but never loaded. That isn't a problem right now because almost every navigation forks so you effectively end up with a process per page load. Destroying the node environment leaks memory, but a single node environment can have multiple contexts associated with it that can be sandboxed. My only remaining issue is the preload script, but I a proof of concept for that and just need to finish the implementation. The only time a node environment will be shared between more than one JS context is when they are connected through a scriptable opener. In cases of page navigation one associated JS context is swapped out for the next and different origin windows will be in different processes as normal. \n"
  }
]