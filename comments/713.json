[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/61192463",
    "html_url": "https://github.com/electron/electron/issues/713#issuecomment-61192463",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/713",
    "id": 61192463,
    "user": {
      "login": "paulcbetts",
      "id": 1396,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1396?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulcbetts",
      "html_url": "https://github.com/paulcbetts",
      "followers_url": "https://api.github.com/users/paulcbetts/followers",
      "following_url": "https://api.github.com/users/paulcbetts/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulcbetts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulcbetts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulcbetts/subscriptions",
      "organizations_url": "https://api.github.com/users/paulcbetts/orgs",
      "repos_url": "https://api.github.com/users/paulcbetts/repos",
      "events_url": "https://api.github.com/users/paulcbetts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulcbetts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-31T00:07:30Z",
    "updated_at": "2014-10-31T00:07:30Z",
    "body": "Native node modules link to a `node.lib` which hard-codes the name atom.exe into the import table for the node module:\n\n![](http://cl.ly/image/0s291q174520/content#png)\n\nI'm digging into `atom/node` to see what I can do about this, but I feel as if I'll be forking a whole lot of projects (`atom/node`, `atom/atom-shell`, `atom/apm`, `atom/grunt-atom-shell-downloader`, etc etc). Any ideas on how this could be done in a more sane way? /cc @zcbenz who might have a clue\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/61221086",
    "html_url": "https://github.com/electron/electron/issues/713#issuecomment-61221086",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/713",
    "id": 61221086,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2014-10-31T05:39:26Z",
    "updated_at": "2014-10-31T05:39:26Z",
    "body": "The `node.lib` is generated by the `generate_node_lib` target in [atom.gyp](https://github.com/atom/atom-shell/blob/master/atom.gyp#L896), it may not have much connections with `atom/node`.\n\nTo test the `node.lib` I usually do following steps:\n\n### 1. Generate node.lib\n\n``` bash\n$ cd .../atom-shell/\n$ ./script/build.py -c Release -t generate_node_lib\n```\n\n### 2. Overwrite node.lib downloaded by apm\n\n``` bash\n$ cd .../atom-shell/\n$ cp out/Release/node.lib $USERPROFILE/.atom/.node-gyp/.node-gyp/0.18.0/\n```\n\n### 3. Rebuild the module\n\n``` bash\n$ cd ../node-nslog\n$ node-gyp rebuild\n```\n\n### 4. Open the module in atom-shell\n\n``` bash\n$ cd .../atom-shell/\n$ env ATOM_SHELL_INTERNAL_RUN_AS_NODE=1 ./out/Release/atom.exe\n> require('../node-nslog');\n```\n\nOr just\n\n``` bash\n$ env ATOM_SHELL_INTERNAL_RUN_AS_NODE=1 ./out/Release/atom.exe -e \"require('../node-nslog');\"\n```\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/61294721",
    "html_url": "https://github.com/electron/electron/issues/713#issuecomment-61294721",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/713",
    "id": 61294721,
    "user": {
      "login": "paulcbetts",
      "id": 1396,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1396?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulcbetts",
      "html_url": "https://github.com/paulcbetts",
      "followers_url": "https://api.github.com/users/paulcbetts/followers",
      "following_url": "https://api.github.com/users/paulcbetts/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulcbetts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulcbetts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulcbetts/subscriptions",
      "organizations_url": "https://api.github.com/users/paulcbetts/orgs",
      "repos_url": "https://api.github.com/users/paulcbetts/repos",
      "events_url": "https://api.github.com/users/paulcbetts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulcbetts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-31T17:14:33Z",
    "updated_at": "2014-10-31T17:14:33Z",
    "body": "@zcbenz This is good info, lemme see what I can dig out of that today.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/61337650",
    "html_url": "https://github.com/electron/electron/issues/713#issuecomment-61337650",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/713",
    "id": 61337650,
    "user": {
      "login": "paulcbetts",
      "id": 1396,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1396?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulcbetts",
      "html_url": "https://github.com/paulcbetts",
      "followers_url": "https://api.github.com/users/paulcbetts/followers",
      "following_url": "https://api.github.com/users/paulcbetts/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulcbetts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulcbetts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulcbetts/subscriptions",
      "organizations_url": "https://api.github.com/users/paulcbetts/orgs",
      "repos_url": "https://api.github.com/users/paulcbetts/repos",
      "events_url": "https://api.github.com/users/paulcbetts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulcbetts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-31T22:04:54Z",
    "updated_at": "2014-10-31T22:56:05Z",
    "body": "Ok, so here's what I've got so far, I'm a bit stuck:\n1. Creating your own `node.lib` that links to an arbitrary EXE name is pretty easy (especially with #763).\n2. So once we've got that, we need to make sure that this `node.lib` is actually used. To do that, we need to set `ATOM_HOME` to something that isn't `.atom`. \n3. In `grunt-download-atom-shell`, we automatically download the latest Atom Shell then immediately call `apm rebuild` - we need to hook this somehow to copy in our `node.lib`. So, I tried to separate out the rebuild from the download and create a separate explicit `rebuild-native-modules.coffee` - [check it out here](https://gist.github.com/paulcbetts/4abc7f5b150b042b0aff).\n\nUnfortunately, this is where we get stuck. We can see that `apm rebuild` eventually calls `node-gyp --install` with the `--dist-url` of https://gh-contractor-zcbenz.s3.amazonaws.com/atom-shell/dist. We don't have a chance to copy in our `lib` file before `node-gyp` rebuilds the modules, so we end up with a bunch of modules that target `atom.exe`\n\n@kevinsawicki, any thoughts? What's the least Crazytown way to work around this? \n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/61448002",
    "html_url": "https://github.com/electron/electron/issues/713#issuecomment-61448002",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/713",
    "id": 61448002,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2014-11-03T07:57:11Z",
    "updated_at": "2014-11-03T07:57:11Z",
    "body": "After `apm rebuild` has done, you can override the `node.lib` and call `node-gyp rebuild` for the module:\n\n``` bash\n$ python ./script/build\n...\n$ cp ~/github/atom-shell/out/Release/node.lib $USERPROFILE/.atom/.node-gyp/.node-gyp/0.18.0/\n$ cd node_modules/node-nslog\n$ node-gyp rebuild\n```\n\nit should be able to rebuild the module with new `node.lib`.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/62658284",
    "html_url": "https://github.com/electron/electron/issues/713#issuecomment-62658284",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/713",
    "id": 62658284,
    "user": {
      "login": "kevinsawicki",
      "id": 671378,
      "avatar_url": "https://avatars0.githubusercontent.com/u/671378?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kevinsawicki",
      "html_url": "https://github.com/kevinsawicki",
      "followers_url": "https://api.github.com/users/kevinsawicki/followers",
      "following_url": "https://api.github.com/users/kevinsawicki/following{/other_user}",
      "gists_url": "https://api.github.com/users/kevinsawicki/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kevinsawicki/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kevinsawicki/subscriptions",
      "organizations_url": "https://api.github.com/users/kevinsawicki/orgs",
      "repos_url": "https://api.github.com/users/kevinsawicki/repos",
      "events_url": "https://api.github.com/users/kevinsawicki/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kevinsawicki/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2014-11-12T02:04:07Z",
    "updated_at": "2014-11-12T02:04:07Z",
    "body": "> @kevinsawicki, any thoughts? What's the least Crazytown way to work around this?\n\nI would think we could just add a setting to `apm rebuild` that would be like `--node-lib` and would be a path to the `node.lib` file, it would copy it to the right place after it installs the other files but before it builds the modules.\n\nHow does that sound?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/62666580",
    "html_url": "https://github.com/electron/electron/issues/713#issuecomment-62666580",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/713",
    "id": 62666580,
    "user": {
      "login": "paulcbetts",
      "id": 1396,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1396?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulcbetts",
      "html_url": "https://github.com/paulcbetts",
      "followers_url": "https://api.github.com/users/paulcbetts/followers",
      "following_url": "https://api.github.com/users/paulcbetts/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulcbetts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulcbetts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulcbetts/subscriptions",
      "organizations_url": "https://api.github.com/users/paulcbetts/orgs",
      "repos_url": "https://api.github.com/users/paulcbetts/repos",
      "events_url": "https://api.github.com/users/paulcbetts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulcbetts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-12T03:51:35Z",
    "updated_at": "2014-11-12T03:51:35Z",
    "body": "@kevinsawicki That would work great for us, yeah\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/62747027",
    "html_url": "https://github.com/electron/electron/issues/713#issuecomment-62747027",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/713",
    "id": 62747027,
    "user": {
      "login": "kevinsawicki",
      "id": 671378,
      "avatar_url": "https://avatars0.githubusercontent.com/u/671378?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kevinsawicki",
      "html_url": "https://github.com/kevinsawicki",
      "followers_url": "https://api.github.com/users/kevinsawicki/followers",
      "following_url": "https://api.github.com/users/kevinsawicki/following{/other_user}",
      "gists_url": "https://api.github.com/users/kevinsawicki/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kevinsawicki/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kevinsawicki/subscriptions",
      "organizations_url": "https://api.github.com/users/kevinsawicki/orgs",
      "repos_url": "https://api.github.com/users/kevinsawicki/repos",
      "events_url": "https://api.github.com/users/kevinsawicki/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kevinsawicki/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2014-11-12T16:30:56Z",
    "updated_at": "2014-11-12T16:30:56Z",
    "body": "@paulcbetts Just to confirm, you are doing a fork/custom build of Atom Shell to get this working right?\n\nJust thinking we should probably put a doc together for this case if you are so other people have a smoother time.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/62755581",
    "html_url": "https://github.com/electron/electron/issues/713#issuecomment-62755581",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/713",
    "id": 62755581,
    "user": {
      "login": "natevw",
      "id": 265902,
      "avatar_url": "https://avatars0.githubusercontent.com/u/265902?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/natevw",
      "html_url": "https://github.com/natevw",
      "followers_url": "https://api.github.com/users/natevw/followers",
      "following_url": "https://api.github.com/users/natevw/following{/other_user}",
      "gists_url": "https://api.github.com/users/natevw/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/natevw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/natevw/subscriptions",
      "organizations_url": "https://api.github.com/users/natevw/orgs",
      "repos_url": "https://api.github.com/users/natevw/repos",
      "events_url": "https://api.github.com/users/natevw/events{/privacy}",
      "received_events_url": "https://api.github.com/users/natevw/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-12T17:19:27Z",
    "updated_at": "2014-11-12T17:19:45Z",
    "body": "@kevinsawicki @paulcbetts I for one would greatly appreciate a guide. I hope to be shipping a \"rebranded\" app built atop atom-shell in the next few weeks, and any additional tips for renaming the executable (and replacing icons, etc.) on the Windows side would be helpful. (On OS X there is a relevant discussion https://github.com/atom/atom-shell/issues/249 which I'm not sure how up-to-date it is.)\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/62759047",
    "html_url": "https://github.com/electron/electron/issues/713#issuecomment-62759047",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/713",
    "id": 62759047,
    "user": {
      "login": "paulcbetts",
      "id": 1396,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1396?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulcbetts",
      "html_url": "https://github.com/paulcbetts",
      "followers_url": "https://api.github.com/users/paulcbetts/followers",
      "following_url": "https://api.github.com/users/paulcbetts/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulcbetts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulcbetts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulcbetts/subscriptions",
      "organizations_url": "https://api.github.com/users/paulcbetts/orgs",
      "repos_url": "https://api.github.com/users/paulcbetts/repos",
      "events_url": "https://api.github.com/users/paulcbetts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulcbetts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-12T17:40:17Z",
    "updated_at": "2014-11-12T17:42:27Z",
    "body": "@kevinsawicki So, we currently need to check out Atom Shell and run the `generate-node-lib` build task to generate `node.lib` linked against the correct name - however, we can use the binary release of Atom Shell and just rename it. I haven't actually implemented this, but that's The Plan™\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/62759421",
    "html_url": "https://github.com/electron/electron/issues/713#issuecomment-62759421",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/713",
    "id": 62759421,
    "user": {
      "login": "kevinsawicki",
      "id": 671378,
      "avatar_url": "https://avatars0.githubusercontent.com/u/671378?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kevinsawicki",
      "html_url": "https://github.com/kevinsawicki",
      "followers_url": "https://api.github.com/users/kevinsawicki/followers",
      "following_url": "https://api.github.com/users/kevinsawicki/following{/other_user}",
      "gists_url": "https://api.github.com/users/kevinsawicki/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kevinsawicki/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kevinsawicki/subscriptions",
      "organizations_url": "https://api.github.com/users/kevinsawicki/orgs",
      "repos_url": "https://api.github.com/users/kevinsawicki/repos",
      "events_url": "https://api.github.com/users/kevinsawicki/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kevinsawicki/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2014-11-12T17:42:33Z",
    "updated_at": "2014-11-12T17:42:33Z",
    "body": "@paulcbetts you are distributing that custom built `node.lib` with your app right?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/62760330",
    "html_url": "https://github.com/electron/electron/issues/713#issuecomment-62760330",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/713",
    "id": 62760330,
    "user": {
      "login": "paulcbetts",
      "id": 1396,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1396?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulcbetts",
      "html_url": "https://github.com/paulcbetts",
      "followers_url": "https://api.github.com/users/paulcbetts/followers",
      "following_url": "https://api.github.com/users/paulcbetts/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulcbetts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulcbetts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulcbetts/subscriptions",
      "organizations_url": "https://api.github.com/users/paulcbetts/orgs",
      "repos_url": "https://api.github.com/users/paulcbetts/repos",
      "events_url": "https://api.github.com/users/paulcbetts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulcbetts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-12T17:47:47Z",
    "updated_at": "2014-11-12T17:47:47Z",
    "body": "@kevinsawicki Yeah, so `.lib` files are like `.a` files on Linux, they're going to be glommed onto all of the native node modules that get built\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/62868509",
    "html_url": "https://github.com/electron/electron/issues/713#issuecomment-62868509",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/713",
    "id": 62868509,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2014-11-13T10:09:03Z",
    "updated_at": "2014-11-13T10:09:03Z",
    "body": "> however, we can use the binary release of Atom Shell and just rename it. I haven't actually implemented this, but that's The Plan™\n\nThis sounds great! \n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/64038385",
    "html_url": "https://github.com/electron/electron/issues/713#issuecomment-64038385",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/713",
    "id": 64038385,
    "user": {
      "login": "natevw",
      "id": 265902,
      "avatar_url": "https://avatars0.githubusercontent.com/u/265902?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/natevw",
      "html_url": "https://github.com/natevw",
      "followers_url": "https://api.github.com/users/natevw/followers",
      "following_url": "https://api.github.com/users/natevw/following{/other_user}",
      "gists_url": "https://api.github.com/users/natevw/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/natevw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/natevw/subscriptions",
      "organizations_url": "https://api.github.com/users/natevw/orgs",
      "repos_url": "https://api.github.com/users/natevw/repos",
      "events_url": "https://api.github.com/users/natevw/events{/privacy}",
      "received_events_url": "https://api.github.com/users/natevw/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-21T21:12:19Z",
    "updated_at": "2014-11-21T21:12:19Z",
    "body": "To be clear, is there any way I can rename atom.exe — version 0.17.2 specifically, had compiling trouble again past that — and have native modules still work? Or are you discussing future (or at least since that version)  build process changes you intend to make in support of this?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/64039034",
    "html_url": "https://github.com/electron/electron/issues/713#issuecomment-64039034",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/713",
    "id": 64039034,
    "user": {
      "login": "paulcbetts",
      "id": 1396,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1396?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulcbetts",
      "html_url": "https://github.com/paulcbetts",
      "followers_url": "https://api.github.com/users/paulcbetts/followers",
      "following_url": "https://api.github.com/users/paulcbetts/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulcbetts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulcbetts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulcbetts/subscriptions",
      "organizations_url": "https://api.github.com/users/paulcbetts/orgs",
      "repos_url": "https://api.github.com/users/paulcbetts/repos",
      "events_url": "https://api.github.com/users/paulcbetts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulcbetts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-21T21:17:26Z",
    "updated_at": "2014-11-21T21:17:26Z",
    "body": "@natevw You can successfully do this today, if you do what I describe - but since it's not built into anything, you'll have to do this by-hand. I'll probably be tackling this task soonish (next week?) and I'll definitely post a guide back here once I do\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/64451047",
    "html_url": "https://github.com/electron/electron/issues/713#issuecomment-64451047",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/713",
    "id": 64451047,
    "user": {
      "login": "bwin",
      "id": 1673361,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1673361?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bwin",
      "html_url": "https://github.com/bwin",
      "followers_url": "https://api.github.com/users/bwin/followers",
      "following_url": "https://api.github.com/users/bwin/following{/other_user}",
      "gists_url": "https://api.github.com/users/bwin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bwin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bwin/subscriptions",
      "organizations_url": "https://api.github.com/users/bwin/orgs",
      "repos_url": "https://api.github.com/users/bwin/repos",
      "events_url": "https://api.github.com/users/bwin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bwin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-25T18:53:25Z",
    "updated_at": "2014-12-10T04:17:39Z",
    "body": "@natevw if the exe filename you want is 4(-5) chars then here's a cheap trick (works regardless of atom-shell version):\nOpen the compiled modules .~~lib~~node-files (for example node_sqlite3.~~lib~~node) in a hex editor and replace \"atom.exe\" with \"abcd.exe\". (In the case of sqlite3 there are 2 null chars after that, so I can even use \"abcde.exe\".) If you need a longer name, you have to recompile.\n\nOfftopic here, but what compiling problems prevent you from upgrading beyond 017.2? (I also had this problem. Couldn't upgrade because of mapbox/node-sqlite3.)\n\n**edit:** corrected\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/65885097",
    "html_url": "https://github.com/electron/electron/issues/713#issuecomment-65885097",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/713",
    "id": 65885097,
    "user": {
      "login": "paulcbetts",
      "id": 1396,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1396?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulcbetts",
      "html_url": "https://github.com/paulcbetts",
      "followers_url": "https://api.github.com/users/paulcbetts/followers",
      "following_url": "https://api.github.com/users/paulcbetts/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulcbetts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulcbetts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulcbetts/subscriptions",
      "organizations_url": "https://api.github.com/users/paulcbetts/orgs",
      "repos_url": "https://api.github.com/users/paulcbetts/repos",
      "events_url": "https://api.github.com/users/paulcbetts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulcbetts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-06T04:26:53Z",
    "updated_at": "2014-12-06T04:27:25Z",
    "body": "I've started work on this, once I've got the package rebuilding done, I'm going to put this into a `grunt-build-atom-shell` package: https://gist.github.com/paulcbetts/7047866b60a523cb7938. It should be a drop-in replacement for `grunt-download-atom-shell` modulo some config changes\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/65885370",
    "html_url": "https://github.com/electron/electron/issues/713#issuecomment-65885370",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/713",
    "id": 65885370,
    "user": {
      "login": "bwin",
      "id": 1673361,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1673361?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bwin",
      "html_url": "https://github.com/bwin",
      "followers_url": "https://api.github.com/users/bwin/followers",
      "following_url": "https://api.github.com/users/bwin/following{/other_user}",
      "gists_url": "https://api.github.com/users/bwin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bwin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bwin/subscriptions",
      "organizations_url": "https://api.github.com/users/bwin/orgs",
      "repos_url": "https://api.github.com/users/bwin/repos",
      "events_url": "https://api.github.com/users/bwin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bwin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-06T04:38:31Z",
    "updated_at": "2014-12-06T04:38:31Z",
    "body": "@paulcbetts :+1: \n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/65902396",
    "html_url": "https://github.com/electron/electron/issues/713#issuecomment-65902396",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/713",
    "id": 65902396,
    "user": {
      "login": "paulcbetts",
      "id": 1396,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1396?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulcbetts",
      "html_url": "https://github.com/paulcbetts",
      "followers_url": "https://api.github.com/users/paulcbetts/followers",
      "following_url": "https://api.github.com/users/paulcbetts/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulcbetts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulcbetts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulcbetts/subscriptions",
      "organizations_url": "https://api.github.com/users/paulcbetts/orgs",
      "repos_url": "https://api.github.com/users/paulcbetts/repos",
      "events_url": "https://api.github.com/users/paulcbetts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulcbetts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-06T15:38:44Z",
    "updated_at": "2014-12-06T15:40:00Z",
    "body": "I put my solution to this problem into a Grunt task, check out https://github.com/paulcbetts/grunt-build-atom-shell. This task handles rebuilding native modules as well, so we should be able to close this out. Note that on OS X, this task depends on #898 which will hopefully get merged soon. \n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/66185675",
    "html_url": "https://github.com/electron/electron/issues/713#issuecomment-66185675",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/713",
    "id": 66185675,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2014-12-08T20:56:51Z",
    "updated_at": "2014-12-08T20:56:51Z",
    "body": "I think we can close this now since we have a working solution.\n"
  }
]