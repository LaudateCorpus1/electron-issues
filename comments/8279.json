[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/269080025",
    "html_url": "https://github.com/electron/electron/issues/8279#issuecomment-269080025",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/8279",
    "id": 269080025,
    "user": {
      "login": "MarshallOfSound",
      "id": 6634592,
      "avatar_url": "https://avatars0.githubusercontent.com/u/6634592?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarshallOfSound",
      "html_url": "https://github.com/MarshallOfSound",
      "followers_url": "https://api.github.com/users/MarshallOfSound/followers",
      "following_url": "https://api.github.com/users/MarshallOfSound/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarshallOfSound/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarshallOfSound/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarshallOfSound/subscriptions",
      "organizations_url": "https://api.github.com/users/MarshallOfSound/orgs",
      "repos_url": "https://api.github.com/users/MarshallOfSound/repos",
      "events_url": "https://api.github.com/users/MarshallOfSound/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarshallOfSound/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-24T11:09:03Z",
    "updated_at": "2016-12-24T11:09:03Z",
    "body": "Without looking into it much it would appear that `net.connect` is asynchronous.  You probably have to wait for the connection to be ready before writing to it."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/269080394",
    "html_url": "https://github.com/electron/electron/issues/8279#issuecomment-269080394",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/8279",
    "id": 269080394,
    "user": {
      "login": "thomasschaub",
      "id": 144410,
      "avatar_url": "https://avatars2.githubusercontent.com/u/144410?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/thomasschaub",
      "html_url": "https://github.com/thomasschaub",
      "followers_url": "https://api.github.com/users/thomasschaub/followers",
      "following_url": "https://api.github.com/users/thomasschaub/following{/other_user}",
      "gists_url": "https://api.github.com/users/thomasschaub/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/thomasschaub/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/thomasschaub/subscriptions",
      "organizations_url": "https://api.github.com/users/thomasschaub/orgs",
      "repos_url": "https://api.github.com/users/thomasschaub/repos",
      "events_url": "https://api.github.com/users/thomasschaub/events{/privacy}",
      "received_events_url": "https://api.github.com/users/thomasschaub/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-24T11:18:52Z",
    "updated_at": "2016-12-24T11:30:31Z",
    "body": "Good point. I added a bit of logging to the `connect` event and apparently, the event is also only triggered when the handler is executed for the second time.\r\n\r\nedit: I updated the demo repo accordingly."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/270464568",
    "html_url": "https://github.com/electron/electron/issues/8279#issuecomment-270464568",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/8279",
    "id": 270464568,
    "user": {
      "login": "kevinsawicki",
      "id": 671378,
      "avatar_url": "https://avatars0.githubusercontent.com/u/671378?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kevinsawicki",
      "html_url": "https://github.com/kevinsawicki",
      "followers_url": "https://api.github.com/users/kevinsawicki/followers",
      "following_url": "https://api.github.com/users/kevinsawicki/following{/other_user}",
      "gists_url": "https://api.github.com/users/kevinsawicki/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kevinsawicki/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kevinsawicki/subscriptions",
      "organizations_url": "https://api.github.com/users/kevinsawicki/orgs",
      "repos_url": "https://api.github.com/users/kevinsawicki/repos",
      "events_url": "https://api.github.com/users/kevinsawicki/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kevinsawicki/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2017-01-04T19:34:01Z",
    "updated_at": "2017-01-04T19:34:01Z",
    "body": "@thomasschaub here is the output I'm seeing with your sample repo:\r\n\r\n```\r\n$ npm run demo-bad\r\n\r\n> electron-net-test@1.0.0 demo-bad /Users/kevin/github/electron-net-test\r\n> NODE_DEBUG=net DEBUG=diy-socket electron . 3\r\n\r\nsocketCreationPoint == 3\r\nNET 22254: createConnection [ { port: 1234 }, [Function] ]\r\nNET 22254: pipe false undefined\r\nNET 22254: connect: find host localhost\r\nNET 22254: connect: dns options { family: undefined, hints: 1024 }\r\n  diy-socket start +0ms\r\n  diy-socket end +1ms\r\nNET 22254: _read\r\nNET 22254: _read wait for connection\r\nNET 22254: afterConnect\r\n  diy-socket Socket connected +3ms\r\n  diy-socket write completed +0ms\r\nNET 22254: _read\r\nNET 22254: Socket._read readStart\r\n```\r\n\r\nLooks like `write completed` is logged, what output are you seeing?"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/270720503",
    "html_url": "https://github.com/electron/electron/issues/8279#issuecomment-270720503",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/8279",
    "id": 270720503,
    "user": {
      "login": "thomasschaub",
      "id": 144410,
      "avatar_url": "https://avatars2.githubusercontent.com/u/144410?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/thomasschaub",
      "html_url": "https://github.com/thomasschaub",
      "followers_url": "https://api.github.com/users/thomasschaub/followers",
      "following_url": "https://api.github.com/users/thomasschaub/following{/other_user}",
      "gists_url": "https://api.github.com/users/thomasschaub/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/thomasschaub/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/thomasschaub/subscriptions",
      "organizations_url": "https://api.github.com/users/thomasschaub/orgs",
      "repos_url": "https://api.github.com/users/thomasschaub/repos",
      "events_url": "https://api.github.com/users/thomasschaub/events{/privacy}",
      "received_events_url": "https://api.github.com/users/thomasschaub/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-05T18:35:47Z",
    "updated_at": "2017-01-05T18:35:47Z",
    "body": "This shows a session where I click twice:\r\n\r\nAt app start (before any clicks):\r\n\r\n     % nc -l 1234 & npm run demo-bad\r\n    [1] 5596\r\n\r\n    > electron-net-test@1.0.0 demo-bad /home/thomas/Dev/electron-net-test\r\n    > NODE_DEBUG=net DEBUG=diy-socket electron . 3\r\n\r\n    socketCreationPoint == 3\r\n\r\nAfter first click:\r\n\r\n    NET 5614: createConnection [ { port: 1234 }, [Function] ]\r\n    NET 5614: pipe false undefined\r\n    NET 5614: connect: find host localhost\r\n    NET 5614: connect: dns options { family: undefined, hints: 32 }\r\n      diy-socket start +0ms\r\n      diy-socket end +2ms\r\n    NET 5614: _read\r\n    NET 5614: _read wait for connection\r\n\r\nAfter second clicks:\r\n\r\n      diy-socket start +12s\r\n      diy-socket end +1ms\r\n    NET 5614: afterConnect\r\n      diy-socket Socket connected +1ms\r\n    hey\r\n    hey\r\n      diy-socket write completed +2ms\r\n    NET 5614: _read\r\n    NET 5614: Socket._read readStart\r\n      diy-socket write completed +1ms\r\n\r\nAs you can see, `write completed` is logged, but only after the second click.\r\n\r\nWhich OS are you using? A bit of context: I got an Electron app that uses some JSON RPC library. The requests are initiated in a ipcMain handler (similar what happens in my example). This worked fine on Windows, but didn't on Ubuntu 16.04. The JSON library uses Node's http module, which in turn uses Node's socket module. I stopped digging there and wrote the sample app (and rolled my own JSON RPC using Electron's net module, which works as expected, but it's something I'd rather not have to do). Anyhow, this is why I think it might not be reproducible on OS X or maybe even other Linux distros."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/278186478",
    "html_url": "https://github.com/electron/electron/issues/8279#issuecomment-278186478",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/8279",
    "id": 278186478,
    "user": {
      "login": "soomtong",
      "id": 906974,
      "avatar_url": "https://avatars2.githubusercontent.com/u/906974?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/soomtong",
      "html_url": "https://github.com/soomtong",
      "followers_url": "https://api.github.com/users/soomtong/followers",
      "following_url": "https://api.github.com/users/soomtong/following{/other_user}",
      "gists_url": "https://api.github.com/users/soomtong/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/soomtong/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/soomtong/subscriptions",
      "organizations_url": "https://api.github.com/users/soomtong/orgs",
      "repos_url": "https://api.github.com/users/soomtong/repos",
      "events_url": "https://api.github.com/users/soomtong/events{/privacy}",
      "received_events_url": "https://api.github.com/users/soomtong/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-08T00:08:23Z",
    "updated_at": "2017-02-08T00:09:59Z",
    "body": "I had same issue like this.\r\nonly Linux (I used Linux Mint latest version) makes this result, they didn't callback when socket connected or didn't connect at first time in ipcMain handler.\r\nbut Windows and MacOS worked we expected.\r\n\r\nAnd I tried this code in Render Process not Main Process without IPC call. \r\nIt just works. then I moved my code to renderer process."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/305455286",
    "html_url": "https://github.com/electron/electron/issues/8279#issuecomment-305455286",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/8279",
    "id": 305455286,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2017-06-01T10:32:54Z",
    "updated_at": "2017-06-01T10:32:54Z",
    "body": "I'm merging this to #1833 because they are essentially the same bug with our Node integration implementation."
  }
]