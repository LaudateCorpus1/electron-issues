[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/249375755",
    "html_url": "https://github.com/electron/electron/issues/7337#issuecomment-249375755",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7337",
    "id": 249375755,
    "user": {
      "login": "zeke",
      "id": 2289,
      "avatar_url": "https://avatars2.githubusercontent.com/u/2289?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zeke",
      "html_url": "https://github.com/zeke",
      "followers_url": "https://api.github.com/users/zeke/followers",
      "following_url": "https://api.github.com/users/zeke/following{/other_user}",
      "gists_url": "https://api.github.com/users/zeke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zeke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zeke/subscriptions",
      "organizations_url": "https://api.github.com/users/zeke/orgs",
      "repos_url": "https://api.github.com/users/zeke/repos",
      "events_url": "https://api.github.com/users/zeke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zeke/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2016-09-24T17:06:04Z",
    "updated_at": "2016-09-24T17:06:04Z",
    "body": "I think this format should work.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/249375785",
    "html_url": "https://github.com/electron/electron/issues/7337#issuecomment-249375785",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7337",
    "id": 249375785,
    "user": {
      "login": "zeke",
      "id": 2289,
      "avatar_url": "https://avatars2.githubusercontent.com/u/2289?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zeke",
      "html_url": "https://github.com/zeke",
      "followers_url": "https://api.github.com/users/zeke/followers",
      "following_url": "https://api.github.com/users/zeke/following{/other_user}",
      "gists_url": "https://api.github.com/users/zeke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zeke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zeke/subscriptions",
      "organizations_url": "https://api.github.com/users/zeke/orgs",
      "repos_url": "https://api.github.com/users/zeke/repos",
      "events_url": "https://api.github.com/users/zeke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zeke/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2016-09-24T17:06:36Z",
    "updated_at": "2016-09-24T17:06:36Z",
    "body": "What if a method doesn't return? Just don't document it?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/249391414",
    "html_url": "https://github.com/electron/electron/issues/7337#issuecomment-249391414",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7337",
    "id": 249391414,
    "user": {
      "login": "MarshallOfSound",
      "id": 6634592,
      "avatar_url": "https://avatars0.githubusercontent.com/u/6634592?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarshallOfSound",
      "html_url": "https://github.com/MarshallOfSound",
      "followers_url": "https://api.github.com/users/MarshallOfSound/followers",
      "following_url": "https://api.github.com/users/MarshallOfSound/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarshallOfSound/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarshallOfSound/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarshallOfSound/subscriptions",
      "organizations_url": "https://api.github.com/users/MarshallOfSound/orgs",
      "repos_url": "https://api.github.com/users/MarshallOfSound/repos",
      "events_url": "https://api.github.com/users/MarshallOfSound/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarshallOfSound/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-24T22:37:06Z",
    "updated_at": "2016-09-24T22:37:06Z",
    "body": "@zeke Yeah, just don't document it then the API can assume undefined / void\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/249414185",
    "html_url": "https://github.com/electron/electron/issues/7337#issuecomment-249414185",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7337",
    "id": 249414185,
    "user": {
      "login": "enlight",
      "id": 233003,
      "avatar_url": "https://avatars3.githubusercontent.com/u/233003?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/enlight",
      "html_url": "https://github.com/enlight",
      "followers_url": "https://api.github.com/users/enlight/followers",
      "following_url": "https://api.github.com/users/enlight/following{/other_user}",
      "gists_url": "https://api.github.com/users/enlight/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/enlight/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/enlight/subscriptions",
      "organizations_url": "https://api.github.com/users/enlight/orgs",
      "repos_url": "https://api.github.com/users/enlight/repos",
      "events_url": "https://api.github.com/users/enlight/events{/privacy}",
      "received_events_url": "https://api.github.com/users/enlight/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-25T10:28:50Z",
    "updated_at": "2016-09-25T10:28:50Z",
    "body": "@MarshallOfSound summarized the proposed changes in #7339 as follows:\n\n> I think the key thing here is the difference between human readable documentation and clear / accurate / formatted documentation. A think this a compromise between the two (both readable and follows an exact format).\n\nI have a counter proposal that aims to maximize readability, some examples:\n\nProposal in OP:\n\n``` markdown\n### `app.getName()`\n\nReturns `String` - The current application's name, which is the name in the application's\n`package.json` file.\n```\n\nVS\n\n``` markdown\n### `app.getName()`\n\nReturns a `String` with the application's name, which is the name in the application's\n`package.json` file.\n```\n\nAnd with array types:\n\n``` markdown\n#### `BrowserWindow.getAllWindows()`\n\nReturns `BrowserWindow[]` - An array of all opened browser windows.\n```\n\nVS\n\n``` markdown\n#### `BrowserWindow.getAllWindows()`\n\nReturns an array of `BrowserWindow` instances that correspond to all the existing\nbrowser windows.\n```\n\nAnd with object types:\n\n``` markdown\n#### `win.getContentBounds()`\n\n+Returns `Object`:\n+* `width` Integer\n+* `height` Integer\n+* `x` Integer\n+* `y` Integer\n```\n\nVS\n\n``` markdown\n#### `win.getContentBounds()`\n\nReturns an `Object` containing the bounds of the window's client area (e.g. the web page):\n* `width` `Integer`\n* `height` `Integer`\n* `x` `Integer`\n* `y` `Integer`\n```\n\nSo the alternative format can be summarized as:\n\n``` markdown\nReturns [a|an|the] [array of] [TYPE] [-] description\n\nReturns [a|an|the] [array of] [TYPE] [-] description [:]\n* `propName` `TYPE` [- description]\n* `propName` `TYPE` [- description]\n```\n\nObviously my proposal requires the parser to do more work, and I'm not the one writing the parser, so I'll be happy with whatever.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/249414476",
    "html_url": "https://github.com/electron/electron/issues/7337#issuecomment-249414476",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7337",
    "id": 249414476,
    "user": {
      "login": "MarshallOfSound",
      "id": 6634592,
      "avatar_url": "https://avatars0.githubusercontent.com/u/6634592?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarshallOfSound",
      "html_url": "https://github.com/MarshallOfSound",
      "followers_url": "https://api.github.com/users/MarshallOfSound/followers",
      "following_url": "https://api.github.com/users/MarshallOfSound/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarshallOfSound/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarshallOfSound/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarshallOfSound/subscriptions",
      "organizations_url": "https://api.github.com/users/MarshallOfSound/orgs",
      "repos_url": "https://api.github.com/users/MarshallOfSound/repos",
      "events_url": "https://api.github.com/users/MarshallOfSound/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarshallOfSound/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-25T10:37:09Z",
    "updated_at": "2016-09-25T10:37:09Z",
    "body": "@enlight Having messed around with the parser and submitted a PR RE the proposed changes over here:\n\nhttps://github.com/electron/electron-docs-linter/pull/44\n\nYou have to be **REALLY** strict about allowed syntax as we currently parse the markdown into an HTML DOM structure and then parse those elements into the JSON API.  Using loose \"english like\" syntax adds a lot more fluff to the parser and makes it more likely that contributors will fail to follow the correct syntax.  And most importantly this won't throw an error, this will simply parse the return value as the description instead.  This is what we **really** want to avoid so I personally think a really strict syntax for docs is our best plan.  Interested in what @zeke thinks about this\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/249726689",
    "html_url": "https://github.com/electron/electron/issues/7337#issuecomment-249726689",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7337",
    "id": 249726689,
    "user": {
      "login": "zeke",
      "id": 2289,
      "avatar_url": "https://avatars2.githubusercontent.com/u/2289?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zeke",
      "html_url": "https://github.com/zeke",
      "followers_url": "https://api.github.com/users/zeke/followers",
      "following_url": "https://api.github.com/users/zeke/following{/other_user}",
      "gists_url": "https://api.github.com/users/zeke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zeke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zeke/subscriptions",
      "organizations_url": "https://api.github.com/users/zeke/orgs",
      "repos_url": "https://api.github.com/users/zeke/repos",
      "events_url": "https://api.github.com/users/zeke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zeke/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2016-09-26T23:26:25Z",
    "updated_at": "2016-09-26T23:26:25Z",
    "body": "I like @enlight's natural language idea from a reader perspective, but as an _author_ or _person writing the parser_ it sounds like more trouble than it's worth. I think the existing style is clear enough, even though it doesn't read like a sentence.\n"
  }
]