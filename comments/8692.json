[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/280713473",
    "html_url": "https://github.com/electron/electron/issues/8692#issuecomment-280713473",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/8692",
    "id": 280713473,
    "user": {
      "login": "groundwater",
      "id": 538488,
      "avatar_url": "https://avatars3.githubusercontent.com/u/538488?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/groundwater",
      "html_url": "https://github.com/groundwater",
      "followers_url": "https://api.github.com/users/groundwater/followers",
      "following_url": "https://api.github.com/users/groundwater/following{/other_user}",
      "gists_url": "https://api.github.com/users/groundwater/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/groundwater/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/groundwater/subscriptions",
      "organizations_url": "https://api.github.com/users/groundwater/orgs",
      "repos_url": "https://api.github.com/users/groundwater/repos",
      "events_url": "https://api.github.com/users/groundwater/events{/privacy}",
      "received_events_url": "https://api.github.com/users/groundwater/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2017-02-17T17:27:20Z",
    "updated_at": "2017-02-17T17:27:20Z",
    "body": "Hi @johnryan, I think we're going to need more information to help. Can you link to the example code/report you're trying to get working?\r\n\r\nI am not quite sure if this would qualify as a bug, a feature request, or something else."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/280731958",
    "html_url": "https://github.com/electron/electron/issues/8692#issuecomment-280731958",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/8692",
    "id": 280731958,
    "user": {
      "login": "johnryan",
      "id": 416564,
      "avatar_url": "https://avatars0.githubusercontent.com/u/416564?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/johnryan",
      "html_url": "https://github.com/johnryan",
      "followers_url": "https://api.github.com/users/johnryan/followers",
      "following_url": "https://api.github.com/users/johnryan/following{/other_user}",
      "gists_url": "https://api.github.com/users/johnryan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/johnryan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/johnryan/subscriptions",
      "organizations_url": "https://api.github.com/users/johnryan/orgs",
      "repos_url": "https://api.github.com/users/johnryan/repos",
      "events_url": "https://api.github.com/users/johnryan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/johnryan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-17T18:41:30Z",
    "updated_at": "2017-02-17T18:41:30Z",
    "body": "@groundwater Thanks for responding, it's more just a general support request (i tried the electron slack but didn't get a response). All i'm trying to do is find a way to communicate between a chrome extension and my electron app.\r\n\r\nI ended up trying a totally different route and set up a web server running inside the main process that the chrome extension just posts to like any other service. If that seems more like a reasonable solution i'm happy to close this issue (and hopefully anyone else trying to do the same thing stumbles upon this solution)."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/281167143",
    "html_url": "https://github.com/electron/electron/issues/8692#issuecomment-281167143",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/8692",
    "id": 281167143,
    "user": {
      "login": "groundwater",
      "id": 538488,
      "avatar_url": "https://avatars3.githubusercontent.com/u/538488?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/groundwater",
      "html_url": "https://github.com/groundwater",
      "followers_url": "https://api.github.com/users/groundwater/followers",
      "following_url": "https://api.github.com/users/groundwater/following{/other_user}",
      "gists_url": "https://api.github.com/users/groundwater/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/groundwater/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/groundwater/subscriptions",
      "organizations_url": "https://api.github.com/users/groundwater/orgs",
      "repos_url": "https://api.github.com/users/groundwater/repos",
      "events_url": "https://api.github.com/users/groundwater/events{/privacy}",
      "received_events_url": "https://api.github.com/users/groundwater/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2017-02-20T19:48:18Z",
    "updated_at": "2017-02-20T19:48:18Z",
    "body": "Sounds good @johnryan. You can also try the Electron section of discuss.atom.io for support. We're still figuring out what the best approach for community support it.\r\n\r\nFor what it's worth, I use the exact same method with my electron apps."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/284163912",
    "html_url": "https://github.com/electron/electron/issues/8692#issuecomment-284163912",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/8692",
    "id": 284163912,
    "user": {
      "login": "mi-g",
      "id": 3421255,
      "avatar_url": "https://avatars1.githubusercontent.com/u/3421255?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mi-g",
      "html_url": "https://github.com/mi-g",
      "followers_url": "https://api.github.com/users/mi-g/followers",
      "following_url": "https://api.github.com/users/mi-g/following{/other_user}",
      "gists_url": "https://api.github.com/users/mi-g/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mi-g/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mi-g/subscriptions",
      "organizations_url": "https://api.github.com/users/mi-g/orgs",
      "repos_url": "https://api.github.com/users/mi-g/repos",
      "events_url": "https://api.github.com/users/mi-g/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mi-g/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-04T16:49:12Z",
    "updated_at": "2017-03-04T16:49:12Z",
    "body": "For the records, i successfully use an electron app with a WebExtensions add-on through native messaging using the following code.\r\n\r\nSending message from app to add-on:\r\n```\r\nfunction Send(message) {\r\n    let msgStr = JSON.stringify(message);\r\n    let lengthStr = String.fromCharCode(\r\n        msgStr.length & 0x000000ff,\r\n        (msgStr.length >> 8) & 0x000000ff,\r\n        (msgStr.length >> 16) & 0x000000ff,\r\n        (msgStr.length >> 24) & 0x000000ff\r\n    );\r\n    process.stdout.write(lengthStr+msgStr);\r\n}\r\n```\r\n\r\nReceiving message from add-on:\r\n```\r\nlet msgBacklog = \"\";\r\nprocess.stdin.setEncoding('utf8');\r\nprocess.stdin.on('data', (chunk) => {\r\n    AppendInputString(chunk);\r\n});\r\nfunction AppendInputString(chunk) {\r\n    msgBacklog += chunk;\r\n    while (true) {\r\n        if (msgBacklog.length < 4)\r\n            return;\r\n        let msgLength = msgBacklog.charCodeAt(0) + (msgBacklog.charCodeAt(1) << 8) +\r\n            (msgBacklog.charCodeAt(2) << 16) + (msgBacklog.charCodeAt(3) << 24);\r\n        if (msgBacklog.length < msgLength + 4)\r\n            return;\r\n        try {\r\n            let msgObject = JSON.parse(msgBacklog.substring(4, 4 + msgLength));\r\n            // handle received message\r\n        } catch (e) {}\r\n        msgBacklog = msgBacklog.substring(4 + msgLength);\r\n    }\r\n}\r\n```\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/284169356",
    "html_url": "https://github.com/electron/electron/issues/8692#issuecomment-284169356",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/8692",
    "id": 284169356,
    "user": {
      "login": "johnryan",
      "id": 416564,
      "avatar_url": "https://avatars0.githubusercontent.com/u/416564?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/johnryan",
      "html_url": "https://github.com/johnryan",
      "followers_url": "https://api.github.com/users/johnryan/followers",
      "following_url": "https://api.github.com/users/johnryan/following{/other_user}",
      "gists_url": "https://api.github.com/users/johnryan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/johnryan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/johnryan/subscriptions",
      "organizations_url": "https://api.github.com/users/johnryan/orgs",
      "repos_url": "https://api.github.com/users/johnryan/repos",
      "events_url": "https://api.github.com/users/johnryan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/johnryan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-04T18:06:45Z",
    "updated_at": "2017-03-04T18:06:45Z",
    "body": "interesting @mi-g Where does : \r\n```\r\nprocess.stdin.on('data', (chunk) => {\r\n    AppendInputString(chunk);\r\n});\r\n```\r\n\r\nlive in your electron application? all the examples i've seen just showed this approach in a separate JS file which still left the question of how to get that data into the running application."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/284170556",
    "html_url": "https://github.com/electron/electron/issues/8692#issuecomment-284170556",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/8692",
    "id": 284170556,
    "user": {
      "login": "mi-g",
      "id": 3421255,
      "avatar_url": "https://avatars1.githubusercontent.com/u/3421255?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mi-g",
      "html_url": "https://github.com/mi-g",
      "followers_url": "https://api.github.com/users/mi-g/followers",
      "following_url": "https://api.github.com/users/mi-g/following{/other_user}",
      "gists_url": "https://api.github.com/users/mi-g/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mi-g/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mi-g/subscriptions",
      "organizations_url": "https://api.github.com/users/mi-g/orgs",
      "repos_url": "https://api.github.com/users/mi-g/repos",
      "events_url": "https://api.github.com/users/mi-g/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mi-g/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-04T18:24:29Z",
    "updated_at": "2017-03-04T18:24:29Z",
    "body": "You can put that code wherever you want in the main thread, but not into a window renderer.\r\nIn my case, this native messaging code is in a `native-messaging.js` module, which is invoked by the `main.js` file through a `require('native-messaging.js')`, `main.js` being the value of field `main` in `package.json`"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/284170761",
    "html_url": "https://github.com/electron/electron/issues/8692#issuecomment-284170761",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/8692",
    "id": 284170761,
    "user": {
      "login": "johnryan",
      "id": 416564,
      "avatar_url": "https://avatars0.githubusercontent.com/u/416564?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/johnryan",
      "html_url": "https://github.com/johnryan",
      "followers_url": "https://api.github.com/users/johnryan/followers",
      "following_url": "https://api.github.com/users/johnryan/following{/other_user}",
      "gists_url": "https://api.github.com/users/johnryan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/johnryan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/johnryan/subscriptions",
      "organizations_url": "https://api.github.com/users/johnryan/orgs",
      "repos_url": "https://api.github.com/users/johnryan/repos",
      "events_url": "https://api.github.com/users/johnryan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/johnryan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-04T18:27:52Z",
    "updated_at": "2017-03-04T18:27:52Z",
    "body": "@mi-g Got it, one more question i meant to ask. What do you set as the \"path\" of your script? in the chrome extension json (https://developer.chrome.com/extensions/nativeMessaging) ? i.e.\r\n\r\n```\r\n{\r\n  \"name\": \"com.my_company.my_application\",\r\n  \"description\": \"My Application\",\r\n  \"path\": \"C:\\\\Program Files\\\\My Application\\\\chrome_native_messaging_host.exe\",\r\n  \"type\": \"stdio\",\r\n  \"allowed_origins\": [\r\n    \"chrome-extension://knldjmfmopnpolahpmmgbagdohdnhkik/\"\r\n  ]\r\n}\r\n```\r\n\r\nAs far as I can tell all the scripts are compressed inside the app.asar file"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/284189159",
    "html_url": "https://github.com/electron/electron/issues/8692#issuecomment-284189159",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/8692",
    "id": 284189159,
    "user": {
      "login": "mi-g",
      "id": 3421255,
      "avatar_url": "https://avatars1.githubusercontent.com/u/3421255?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mi-g",
      "html_url": "https://github.com/mi-g",
      "followers_url": "https://api.github.com/users/mi-g/followers",
      "following_url": "https://api.github.com/users/mi-g/following{/other_user}",
      "gists_url": "https://api.github.com/users/mi-g/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mi-g/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mi-g/subscriptions",
      "organizations_url": "https://api.github.com/users/mi-g/orgs",
      "repos_url": "https://api.github.com/users/mi-g/repos",
      "events_url": "https://api.github.com/users/mi-g/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mi-g/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-04T22:24:47Z",
    "updated_at": "2017-03-04T22:24:47Z",
    "body": "I do not use asar archiving, so far, i didn't see any true benefit for that but a few inconveniences.\r\n\r\nBut even in asar format there must be an executable somewhere to be run to launch your application. If you use electron-builder to create an installer and execute this setup program, you should use the same resulting path as the one in the installed app shortcut.\r\n"
  }
]