[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/290828271",
    "html_url": "https://github.com/electron/electron/issues/9078#issuecomment-290828271",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/9078",
    "id": 290828271,
    "user": {
      "login": "nathansobo",
      "id": 1789,
      "avatar_url": "https://avatars2.githubusercontent.com/u/1789?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nathansobo",
      "html_url": "https://github.com/nathansobo",
      "followers_url": "https://api.github.com/users/nathansobo/followers",
      "following_url": "https://api.github.com/users/nathansobo/following{/other_user}",
      "gists_url": "https://api.github.com/users/nathansobo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nathansobo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nathansobo/subscriptions",
      "organizations_url": "https://api.github.com/users/nathansobo/orgs",
      "repos_url": "https://api.github.com/users/nathansobo/repos",
      "events_url": "https://api.github.com/users/nathansobo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nathansobo/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2017-03-31T20:58:49Z",
    "updated_at": "2017-03-31T20:58:49Z",
    "body": "Sorry, looks like 1.6.5 has fixed this crash."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/293378319",
    "html_url": "https://github.com/electron/electron/issues/9078#issuecomment-293378319",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/9078",
    "id": 293378319,
    "user": {
      "login": "nathansobo",
      "id": 1789,
      "avatar_url": "https://avatars2.githubusercontent.com/u/1789?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nathansobo",
      "html_url": "https://github.com/nathansobo",
      "followers_url": "https://api.github.com/users/nathansobo/followers",
      "following_url": "https://api.github.com/users/nathansobo/following{/other_user}",
      "gists_url": "https://api.github.com/users/nathansobo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nathansobo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nathansobo/subscriptions",
      "organizations_url": "https://api.github.com/users/nathansobo/orgs",
      "repos_url": "https://api.github.com/users/nathansobo/repos",
      "events_url": "https://api.github.com/users/nathansobo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nathansobo/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2017-04-11T19:42:15Z",
    "updated_at": "2017-04-11T19:42:15Z",
    "body": "Sorry, seems like I misspoke. Still getting crashes after continuing after a breakpoint in the dev tools.\r\n\r\n/cc @kevinsawicki "
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/293623722",
    "html_url": "https://github.com/electron/electron/issues/9078#issuecomment-293623722",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/9078",
    "id": 293623722,
    "user": {
      "login": "nathansobo",
      "id": 1789,
      "avatar_url": "https://avatars2.githubusercontent.com/u/1789?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nathansobo",
      "html_url": "https://github.com/nathansobo",
      "followers_url": "https://api.github.com/users/nathansobo/followers",
      "following_url": "https://api.github.com/users/nathansobo/following{/other_user}",
      "gists_url": "https://api.github.com/users/nathansobo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nathansobo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nathansobo/subscriptions",
      "organizations_url": "https://api.github.com/users/nathansobo/orgs",
      "repos_url": "https://api.github.com/users/nathansobo/repos",
      "events_url": "https://api.github.com/users/nathansobo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nathansobo/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2017-04-12T15:54:17Z",
    "updated_at": "2017-04-12T15:54:17Z",
    "body": "Here's a more recent crash report.\r\n\r\n```\r\nProcess:               Atom Helper [71946]\r\nPath:                  /Users/USER/*/Atom.app/Contents/Frameworks/Atom Helper.app/Contents/MacOS/Atom Helper\r\nIdentifier:            com.github.atom.helper\r\nVersion:               1.17.0-dev-72475344b (1.17.0-dev-72475344b)\r\nCode Type:             X86-64 (Native)\r\nParent Process:        Atom [70712]\r\nResponsible:           Atom [70712]\r\nUser ID:               501\r\n\r\nDate/Time:             2017-04-11 13:46:21.227 -0600\r\nOS Version:            Mac OS X 10.12.3 (16D32)\r\nReport Version:        12\r\nAnonymous UUID:        D0CE3799-DECC-F301-B7D7-07E88B703929\r\n\r\nSleep/Wake UUID:       A7E9C634-D9A8-4800-943F-EEB2D08551FF\r\n\r\nTime Awake Since Boot: 91000 seconds\r\nTime Since Wake:       16000 seconds\r\n\r\nSystem Integrity Protection: disabled\r\n\r\nCrashed Thread:        0  CrRendererMain  Dispatch queue: com.apple.main-thread\r\n\r\nException Type:        EXC_BAD_INSTRUCTION (SIGILL)\r\nException Codes:       0x0000000000000001, 0x0000000000000000\r\n\r\nThread 0 Crashed:: CrRendererMain  Dispatch queue: com.apple.main-thread\r\n0   com.github.electron.framework \t0x000000011109452c 0x10eeb0000 + 35538220\r\n1   com.github.electron.framework \t0x0000000111088d3a 0x10eeb0000 + 35491130\r\n2   com.github.electron.framework \t0x000000011121a3ba 0x10eeb0000 + 37135290\r\n3   com.github.electron.framework \t0x000000011121c449 0x10eeb0000 + 37143625\r\n4   com.github.electron.framework \t0x00000001111b99f0 0x10eeb0000 + 36739568\r\n5   com.github.electron.framework \t0x000000011120dd69 0x10eeb0000 + 37084521\r\n6   com.github.electron.framework \t0x00000001111e23e5 0x10eeb0000 + 36905957\r\n7   com.github.electron.framework \t0x0000000111795095 0x10eeb0000 + 42881173\r\n8   com.github.electron.framework \t0x00000001117cf262 0x10eeb0000 + 43119202\r\n9   com.github.electron.framework \t0x00000001117d939a 0x10eeb0000 + 43160474\r\n10  com.github.electron.framework \t0x0000000111b369c2 0x10eeb0000 + 46688706\r\n11  com.github.electron.framework \t0x0000000111b034cc 0x10eeb0000 + 46478540\r\n12  libnode.dylib                 \t0x000000010d83c156 0x10d66f000 + 1888598\r\n13  libnode.dylib                 \t0x000000010d83d0d8 0x10d66f000 + 1892568\r\n14  libnode.dylib                 \t0x000000010da88feb 0x10d66f000 + 4300779\r\n15  libnode.dylib                 \t0x000000010da884f5 0x10d66f000 + 4297973\r\n16  libnode.dylib                 \t0x000000010da840af 0x10d66f000 + 4280495\r\n17  libnode.dylib                 \t0x000000010da89906 0x10d66f000 + 4303110\r\n18  libnode.dylib                 \t0x000000010da89874 0x10d66f000 + 4302964\r\n19  libnode.dylib                 \t0x000000010de98e4a 0x10d66f000 + 8560202\r\n20  ???                           \t0x0000089586e043a7 0 + 9438305993639\r\n21  ???                           \t0x000008958769b2fe 0 + 9438315000574\r\n22  ???                           \t0x000008958769af06 0 + 9438314999558\r\n23  ???                           \t0x000008958769a706 0 + 9438314997510\r\n24  ???                           \t0x000008958769a4d3 0 + 9438314996947\r\n25  ???                           \t0x0000089587699fa5 0 + 9438314995621\r\n26  ???                           \t0x00000895876999e9 0 + 9438314994153\r\n27  ???                           \t0x0000089586e79083 0 + 9438306472067\r\n28  ???                           \t0x0000089586e3b141 0 + 9438306218305\r\n29  libnode.dylib                 \t0x000000010dae86a5 0x10d66f000 + 4691621\r\n30  libnode.dylib                 \t0x000000010dae8409 v8::internal::Execution::Call(v8::internal::Isolate*, v8::internal::Handle<v8::internal::Object>, v8::internal::Handle<v8::internal::Object>, int, v8::internal::Handle<v8::internal::Object>*) + 169\r\n31  libnode.dylib                 \t0x000000010d889f5b v8::Function::Call(v8::Local<v8::Context>, v8::Local<v8::Value>, int, v8::Local<v8::Value>*) + 459\r\n32  com.github.electron.framework \t0x000000011109426d 0x10eeb0000 + 35537517\r\n33  com.github.electron.framework \t0x000000011109a880 0x10eeb0000 + 35563648\r\n34  com.github.electron.framework \t0x0000000111286aa1 0x10eeb0000 + 37579425\r\n35  com.github.electron.framework \t0x000000011128a4fc 0x10eeb0000 + 37594364\r\n36  com.github.electron.framework \t0x0000000111c8ad43 0x10eeb0000 + 48082243\r\n37  libnode.dylib                 \t0x000000010d86af55 0x10d66f000 + 2080597\r\n38  libnode.dylib                 \t0x000000010d91bf18 0x10d66f000 + 2805528\r\n39  libnode.dylib                 \t0x000000010d91b471 0x10d66f000 + 2802801\r\n40  ???                           \t0x0000089586e043a7 0 + 9438305993639\r\n41  ???                           \t0x0000089587699875 0 + 9438314993781\r\n42  ???                           \t0x000008958764b7f7 0 + 9438314674167\r\n43  ???                           \t0x0000089586e05cd5 0 + 9438306000085\r\n44  ???                           \t0x0000089586e8fd3a 0 + 9438306565434\r\n45  ???                           \t0x0000089586e799b8 0 + 9438306474424\r\n46  ???                           \t0x000008958764a8f2 0 + 9438314670322\r\n47  ???                           \t0x0000089586e9039a 0 + 9438306567066\r\n48  ???                           \t0x0000089586e799b8 0 + 9438306474424\r\n49  ???                           \t0x000008958760e342 0 + 9438314423106\r\n50  ???                           \t0x000008958761c915 0 + 9438314481941\r\n51  ???                           \t0x000008958760ea86 0 + 9438314424966\r\n52  ???                           \t0x000008958760e342 0 + 9438314423106\r\n53  ???                           \t0x000008958761c915 0 + 9438314481941\r\n54  ???                           \t0x000008958760e64d 0 + 9438314423885\r\n55  ???                           \t0x000008958760e342 0 + 9438314423106\r\n56  ???                           \t0x000008958761c915 0 + 9438314481941\r\n57  ???                           \t0x000008958760e64d 0 + 9438314423885\r\n58  ???                           \t0x000008958760e342 0 + 9438314423106\r\n59  ???                           \t0x000008958761194e 0 + 9438314436942\r\n60  ???                           \t0x0000089587617a8b 0 + 9438314461835\r\n61  ???                           \t0x00000895876178ae 0 + 9438314461358\r\n62  ???                           \t0x000008958760e476 0 + 9438314423414\r\n63  ???                           \t0x000008958761194e 0 + 9438314436942\r\n64  ???                           \t0x0000089587617a8b 0 + 9438314461835\r\n65  ???                           \t0x00000895876178ae 0 + 9438314461358\r\n66  ???                           \t0x000008958760e476 0 + 9438314423414\r\n67  ???                           \t0x0000089587617785 0 + 9438314461061\r\n68  ???                           \t0x0000089586e79083 0 + 9438306472067\r\n69  ???                           \t0x0000089586e3b141 0 + 9438306218305\r\n70  libnode.dylib                 \t0x000000010dae86a5 0x10d66f000 + 4691621\r\n71  libnode.dylib                 \t0x000000010dae8409 v8::internal::Execution::Call(v8::internal::Isolate*, v8::internal::Handle<v8::internal::Object>, v8::internal::Handle<v8::internal::Object>, int, v8::internal::Handle<v8::internal::Object>*) + 169\r\n72  libnode.dylib                 \t0x000000010d889f5b v8::Function::Call(v8::Local<v8::Context>, v8::Local<v8::Value>, int, v8::Local<v8::Value>*) + 459\r\n73  com.github.electron.framework \t0x000000011109426d 0x10eeb0000 + 35537517\r\n74  com.github.electron.framework \t0x000000011102a622 0x10eeb0000 + 35104290\r\n75  com.github.electron.framework \t0x00000001113853a0 0x10eeb0000 + 38622112\r\n76  com.github.electron.framework \t0x0000000111a82c12 0x10eeb0000 + 45952018\r\n77  com.github.electron.framework \t0x000000010f10a4d1 0x10eeb0000 + 2467025\r\n78  com.github.electron.framework \t0x0000000111a74a63 0x10eeb0000 + 45894243\r\n79  com.github.electron.framework \t0x0000000111a7369a 0x10eeb0000 + 45889178\r\n80  com.github.electron.framework \t0x000000010f10a4d1 0x10eeb0000 + 2467025\r\n81  com.github.electron.framework \t0x000000010f0ddde6 0x10eeb0000 + 2285030\r\n82  com.github.electron.framework \t0x000000010f0de0bc 0x10eeb0000 + 2285756\r\n83  com.github.electron.framework \t0x000000010f0de403 0x10eeb0000 + 2286595\r\n84  com.github.electron.framework \t0x000000010f0e174d 0x10eeb0000 + 2299725\r\n85  com.github.electron.framework \t0x000000010f09e30a 0x10eeb0000 + 2024202\r\n86  com.github.electron.framework \t0x000000010f0e11c4 0x10eeb0000 + 2298308\r\n87  com.apple.CoreFoundation      \t0x00007fff81cf2981 __CFRUNLOOP_IS_CALLING_OUT_TO_A_SOURCE0_PERFORM_FUNCTION__ + 17\r\n88  com.apple.CoreFoundation      \t0x00007fff81cd3a7d __CFRunLoopDoSources0 + 557\r\n89  com.apple.CoreFoundation      \t0x00007fff81cd2f76 __CFRunLoopRun + 934\r\n90  com.apple.CoreFoundation      \t0x00007fff81cd2974 CFRunLoopRunSpecific + 420\r\n91  com.apple.Foundation          \t0x00007fff836e7612 -[NSRunLoop(NSRunLoop) runMode:beforeDate:] + 277\r\n92  com.github.electron.framework \t0x000000010f0e1dce 0x10eeb0000 + 2301390\r\n93  com.github.electron.framework \t0x000000010f0e160c 0x10eeb0000 + 2299404\r\n94  com.github.electron.framework \t0x000000010f0ddb4e 0x10eeb0000 + 2284366\r\n95  com.github.electron.framework \t0x000000010f0f26a3 0x10eeb0000 + 2369187\r\n96  com.github.electron.framework \t0x000000010f97bdff 0x10eeb0000 + 11320831\r\n97  com.github.electron.framework \t0x000000010f2a448d 0x10eeb0000 + 4146317\r\n98  com.github.electron.framework \t0x000000010f2a3586 0x10eeb0000 + 4142470\r\n99  com.github.electron.framework \t0x000000010eeb2147 AtomMain + 71\r\n100 com.github.atom.helper        \t0x000000010d536f26 main + 38\r\n101 libdyld.dylib                 \t0x00007fff97220255 start + 1\r\n```"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/299457206",
    "html_url": "https://github.com/electron/electron/issues/9078#issuecomment-299457206",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/9078",
    "id": 299457206,
    "user": {
      "login": "as-cii",
      "id": 482957,
      "avatar_url": "https://avatars3.githubusercontent.com/u/482957?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/as-cii",
      "html_url": "https://github.com/as-cii",
      "followers_url": "https://api.github.com/users/as-cii/followers",
      "following_url": "https://api.github.com/users/as-cii/following{/other_user}",
      "gists_url": "https://api.github.com/users/as-cii/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/as-cii/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/as-cii/subscriptions",
      "organizations_url": "https://api.github.com/users/as-cii/orgs",
      "repos_url": "https://api.github.com/users/as-cii/repos",
      "events_url": "https://api.github.com/users/as-cii/events{/privacy}",
      "received_events_url": "https://api.github.com/users/as-cii/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2017-05-05T12:55:39Z",
    "updated_at": "2017-05-05T13:12:20Z",
    "body": "We are still hitting this issue in Atom and we can reproduce on Electron 1.6.5 as well as on 1.6.8. I have downloaded the Electron dSYMs so that the crash reporter could \"symbolicate\" the segfault:\r\n\r\n```\r\nProcess:               Atom Helper [10045]\r\nPath:                  /Applications/Atom.app/Contents/Frameworks/Atom Helper.app/Contents/MacOS/Atom Helper\r\nIdentifier:            com.github.atom.helper\r\nVersion:               1.18.0-dev-b9783b125 (1.18.0-dev-b9783b125)\r\nCode Type:             X86-64 (Native)\r\nParent Process:        Atom [10017]\r\nResponsible:           Atom [10017]\r\nUser ID:               501\r\n\r\nDate/Time:             2017-05-05 14:38:52.867 +0200\r\nOS Version:            Mac OS X 10.12.4 (16E195)\r\nReport Version:        12\r\nAnonymous UUID:        B69F4C62-6719-1DFE-F18E-79537433DB73\r\n\r\nSleep/Wake UUID:       ACEDA485-6E99-477F-8815-A099AF208EEC\r\n\r\nTime Awake Since Boot: 190000 seconds\r\nTime Since Wake:       20000 seconds\r\n\r\nSystem Integrity Protection: enabled\r\n\r\nCrashed Thread:        0  CrRendererMain  Dispatch queue: com.apple.main-thread\r\n\r\nException Type:        EXC_BAD_INSTRUCTION (SIGILL)\r\nException Codes:       0x0000000000000001, 0x0000000000000000\r\n\r\nThread 0 Crashed:: CrRendererMain  Dispatch queue: com.apple.main-thread\r\n0   com.github.electron.framework \t0x000000010f07b52c blink::V8ScriptRunner::callFunction(v8::Local<v8::Function>, blink::ExecutionContext*, v8::Local<v8::Value>, int, v8::Local<v8::Value>*, v8::Isolate*) + 1084 (V8ScriptRunner.cpp:623)\r\n1   com.github.electron.framework \t0x000000010f06fd3a blink::V8IntersectionObserverCallback::handleEvent(blink::HeapVector<blink::Member<blink::IntersectionObserverEntry>, 0ul> const&, blink::IntersectionObserver&) + 426 (V8IntersectionObserverCallback.cpp:58)\r\n2   com.github.electron.framework \t0x000000010f2013ba blink::IntersectionObserver::deliver() + 74 (IntersectionObserver.cpp:445)\r\n3   com.github.electron.framework \t0x000000010f203449 blink::IntersectionObserverController::deliverIntersectionObservations() + 185 (IntersectionObserverController.cpp:65)\r\n4   com.github.electron.framework \t0x000000010f1a09f0 blink::ContextLifecycleNotifier::notifyResumingActiveDOMObjects() + 112 (ContextLifecycleNotifier.cpp:37)\r\n5   com.github.electron.framework \t0x000000010f1f4d69 blink::ExecutionContext::resumeScheduledTasks() + 25 (ExecutionContext.cpp:98)\r\n6   com.github.electron.framework \t0x000000010f1c93e5 blink::Document::resumeScheduledTasks() + 21 (Document.cpp:5684)\r\n7   com.github.electron.framework \t0x000000010f77c095 blink::FrameLoader::setDefersLoading(bool) + 117 (FrameLoader.cpp:257)\r\n8   com.github.electron.framework \t0x000000010f7b6262 blink::Page::setSuspended(bool) + 98\r\n9   com.github.electron.framework \t0x000000010f7c039a blink::ScopedPageSuspender::~ScopedPageSuspender() + 74 (ScopedPageSuspender.cpp:52)\r\n10  com.github.electron.framework \t0x000000010fb1d9c2 blink::WebView::didExitModalLoop() + 114 (WebViewImpl.cpp:309)\r\n11  com.github.electron.framework \t0x000000010faea4cc blink::ClientMessageLoopAdapter::runLoop(blink::WebLocalFrameImpl*) + 556 (WebDevToolsAgentImpl.cpp:218)\r\n12  libnode.dylib                 \t0x0000000111482156 v8_inspector::V8Debugger::handleProgramBreak(v8::Local<v8::Context>, v8::Local<v8::Object>, v8::Local<v8::Value>, v8::Local<v8::Array>, bool, bool) + 1078 (v8-debugger.cc:520)\r\n13  libnode.dylib                 \t0x00000001114830d8 v8_inspector::V8Debugger::handleV8DebugEvent(v8::DebugInterface::EventDetails const&) + 552 (v8-debugger.cc:616)\r\n14  libnode.dylib                 \t0x00000001116cefeb v8::internal::Debug::CallEventCallback(v8::DebugEvent, v8::internal::Handle<v8::internal::Object>, v8::internal::Handle<v8::internal::Object>, v8::Debug::ClientData*) + 187 (debug.cc:1905)\r\n15  libnode.dylib                 \t0x00000001116ce4f5 v8::internal::Debug::ProcessDebugEvent(v8::DebugEvent, v8::internal::Handle<v8::internal::JSObject>, bool) + 229 (debug.cc:1882)\r\n16  libnode.dylib                 \t0x00000001116ca0af v8::internal::Debug::OnDebugBreak(v8::internal::Handle<v8::internal::Object>, bool) + 207 (debug.cc:1820)\r\n17  libnode.dylib                 \t0x00000001116cf906 v8::internal::Debug::ProcessDebugMessages(bool) + 134 (debug.cc:2254)\r\n18  libnode.dylib                 \t0x00000001116cf874 v8::internal::Debug::HandleDebugBreak() + 516 (debug.cc:2238)\r\n19  libnode.dylib                 \t0x0000000111adee4a v8::internal::Runtime_HandleDebuggerStatement(int, v8::internal::Object**, v8::internal::Isolate*) + 42 (runtime-debug.cc:66)\r\n20  ???                           \t0x00001834d22843a7 0 + 26615143220135\r\n21  ???                           \t0x00001834d29493f5 0 + 26615150318581\r\n22  ???                           \t0x00001834d2af6d72 0 + 26615152078194\r\n23  ???                           \t0x00001834d231039a 0 + 26615143793562\r\n24  ???                           \t0x00001834d22f99b8 0 + 26615143700920\r\n25  ???                           \t0x00001834d2abc082 0 + 26615151837314\r\n26  ???                           \t0x00001834d2ac3ae5 0 + 26615151868645\r\n27  ???                           \t0x00001834d22f9083 0 + 26615143698563\r\n28  ???                           \t0x00001834d22bb141 0 + 26615143444801\r\n29  libnode.dylib                 \t0x000000011172e6a5 v8::internal::(anonymous namespace)::Invoke(v8::internal::Isolate*, bool, v8::internal::Handle<v8::internal::Object>, v8::internal::Handle<v8::internal::Object>, int, v8::internal::Handle<v8::internal::Object>*, v8::internal::Handle<v8::internal::Object>) + 645 (execution.cc:139)\r\n30  libnode.dylib                 \t0x000000011172e409 v8::internal::Execution::Call(v8::internal::Isolate*, v8::internal::Handle<v8::internal::Object>, v8::internal::Handle<v8::internal::Object>, int, v8::internal::Handle<v8::internal::Object>*) + 169 (execution.cc:176)\r\n31  libnode.dylib                 \t0x00000001114cff5b v8::Function::Call(v8::Local<v8::Context>, v8::Local<v8::Value>, int, v8::Local<v8::Value>*) + 459 (api.cc:4976)\r\n32  com.github.electron.framework \t0x000000010f07b26d blink::V8ScriptRunner::callFunction(v8::Local<v8::Function>, blink::ExecutionContext*, v8::Local<v8::Value>, int, v8::Local<v8::Value>*, v8::Isolate*) + 381 (V8ScriptRunner.cpp:638)\r\n33  com.github.electron.framework \t0x000000010f011622 blink::ScheduledAction::execute(blink::LocalFrame*) + 466 (Vector.h:857)\r\n34  com.github.electron.framework \t0x000000010f36c3a0 blink::DOMTimer::fired() + 304 (DOMTimer.cpp:163)\r\n35  com.github.electron.framework \t0x000000010fa69c12 blink::TimerBase::runInternal() + 194 (Timer.cpp:144)\r\n36  com.github.electron.framework \t0x000000010d0f14d1 base::debug::TaskAnnotator::RunTask(char const*, base::PendingTask*) + 225 (task_annotator.cc:52)\r\n37  com.github.electron.framework \t0x000000010fa5ba63 blink::scheduler::TaskQueueManager::ProcessTaskFromWorkQueue(blink::scheduler::internal::WorkQueue*) + 835 (task_queue_manager.cc:358)\r\n38  com.github.electron.framework \t0x000000010fa5a69a blink::scheduler::TaskQueueManager::DoWork(base::TimeTicks, bool) + 618 (task_queue_manager.cc:250)\r\n39  com.github.electron.framework \t0x000000010d0f14d1 base::debug::TaskAnnotator::RunTask(char const*, base::PendingTask*) + 225 (task_annotator.cc:52)\r\n40  com.github.electron.framework \t0x000000010d0c4de6 base::MessageLoop::RunTask(base::PendingTask*) + 390 (message_loop.cc:414)\r\n41  com.github.electron.framework \t0x000000010d0c50bc base::MessageLoop::DeferOrRunPendingTask(base::PendingTask) + 44 (message_loop.cc:422)\r\n42  com.github.electron.framework \t0x000000010d0c5403 base::MessageLoop::DoWork() + 371 (message_loop.cc:515)\r\n43  com.github.electron.framework \t0x000000010d0c874d base::MessagePumpCFRunLoopBase::RunWork() + 45 (message_pump_mac.mm:302)\r\n44  com.github.electron.framework \t0x000000010d08530a base::mac::CallWithEHFrame(void () block_pointer) + 10\r\n45  com.github.electron.framework \t0x000000010d0c81c4 base::MessagePumpCFRunLoopBase::RunWorkSource(void*) + 68 (message_pump_mac.mm:281)\r\n46  com.apple.CoreFoundation      \t0x00007fff9b8293c1 __CFRUNLOOP_IS_CALLING_OUT_TO_A_SOURCE0_PERFORM_FUNCTION__ + 17\r\n47  com.apple.CoreFoundation      \t0x00007fff9b80a2cd __CFRunLoopDoSources0 + 557\r\n48  com.apple.CoreFoundation      \t0x00007fff9b8097c6 __CFRunLoopRun + 934\r\n49  com.apple.CoreFoundation      \t0x00007fff9b8091c4 CFRunLoopRunSpecific + 420\r\n50  com.apple.Foundation          \t0x00007fff9d21b572 -[NSRunLoop(NSRunLoop) runMode:beforeDate:] + 277\r\n51  com.github.electron.framework \t0x000000010d0c8dce base::MessagePumpNSRunLoop::DoRun(base::MessagePump::Delegate*) + 126 (message_pump_mac.mm:578)\r\n52  com.github.electron.framework \t0x000000010d0c860c base::MessagePumpCFRunLoopBase::Run(base::MessagePump::Delegate*) + 92 (message_pump_mac.mm:213)\r\n53  com.github.electron.framework \t0x000000010d0c4b4e base::MessageLoop::RunHandler() + 94 (message_loop.cc:379)\r\n54  com.github.electron.framework \t0x000000010d0d96a3 base::RunLoop::Run() + 115 (run_loop.cc:36)\r\n55  com.github.electron.framework \t0x000000010d962dff content::RendererMain(content::MainFunctionParams const&) + 719 (renderer_main.cc:198)\r\n56  com.github.electron.framework \t0x000000010d28b48d content::ContentMainRunnerImpl::Run() + 477 (content_main_runner.cc:774)\r\n57  com.github.electron.framework \t0x000000010d28a586 content::ContentMain(content::ContentMainParams const&) + 54 (content_main.cc:20)\r\n58  com.github.electron.framework \t0x000000010ce99147 AtomMain + 71 (atom_library_main.mm:24)\r\n59  com.github.atom.helper        \t0x000000010ce8ef26 main + 38 (atom_main.cc:143)\r\n60  libdyld.dylib                 \t0x00007fffb0f6c235 start + 1\r\n```\r\n\r\nIt looks like it's due to some weird interaction between the DevTools stopping and `IntersectionObserver` wanting to deliver some events. I have created a minimal reproduction example at https://github.com/as-cii/intersection-observer-crash that you can use to debug this more easily.\r\n\r\n/cc: @kevinsawicki @zcbenz @groundwater "
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/308651290",
    "html_url": "https://github.com/electron/electron/issues/9078#issuecomment-308651290",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/9078",
    "id": 308651290,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2017-06-15T07:25:33Z",
    "updated_at": "2017-06-15T07:25:33Z",
    "body": "I can no longer reproduce the crash in 1.7.x."
  }
]