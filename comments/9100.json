[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/291283556",
    "html_url": "https://github.com/electron/electron/issues/9100#issuecomment-291283556",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/9100",
    "id": 291283556,
    "user": {
      "login": "CharlieHess",
      "id": 1865957,
      "avatar_url": "https://avatars2.githubusercontent.com/u/1865957?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CharlieHess",
      "html_url": "https://github.com/CharlieHess",
      "followers_url": "https://api.github.com/users/CharlieHess/followers",
      "following_url": "https://api.github.com/users/CharlieHess/following{/other_user}",
      "gists_url": "https://api.github.com/users/CharlieHess/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CharlieHess/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CharlieHess/subscriptions",
      "organizations_url": "https://api.github.com/users/CharlieHess/orgs",
      "repos_url": "https://api.github.com/users/CharlieHess/repos",
      "events_url": "https://api.github.com/users/CharlieHess/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CharlieHess/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-03T21:45:44Z",
    "updated_at": "2017-04-03T21:45:44Z",
    "body": "Here's another report; different stack but same origin:\r\n\r\n<details>\r\n\r\n```\r\nProcess:               Slack [56775]\r\nPath:                  /Applications/Slack.app/Contents/MacOS/Slack\r\nIdentifier:            com.tinyspeck.slackmacgap\r\nVersion:               2.6.0-alpha170330eaa48b0 (4101)\r\nCode Type:             X86-64 (Native)\r\nParent Process:        ??? [1]\r\nResponsible:           Slack [56775]\r\nUser ID:               502\r\n\r\nDate/Time:             2017-04-03 13:54:10.907 -0700\r\nOS Version:            Mac OS X 10.12.3 (16D32)\r\nReport Version:        12\r\nAnonymous UUID:        486CB0C1-4071-E5A4-22ED-FE366D6568ED\r\n\r\nSleep/Wake UUID:       40388D39-73F3-4B59-9974-86A6EB981BFC\r\n\r\nTime Awake Since Boot: 84000 seconds\r\nTime Since Wake:       3100 seconds\r\n\r\nSystem Integrity Protection: enabled\r\n\r\nCrashed Thread:        32\r\n\r\nException Type:        EXC_CRASH (SIGABRT)\r\nException Codes:       0x0000000000000000, 0x0000000000000000\r\n\r\nApplication Specific Information:\r\nabort() called\r\n*** error for object 0x7fd3b00fb400: incorrect checksum for freed object - object was probably modified after being freed.\r\n \r\n\r\nThread 0:: CrBrowserMain  Dispatch queue: com.apple.main-thread\r\n0   libc++.1.dylib                \t0x00007fff94fbcfc2 std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::reserve(unsigned long) + 74\r\n1   com.github.electron.framework \t0x0000000100ade7e5 0x1009e4000 + 1026021\r\n2   com.github.electron.framework \t0x0000000100ade0c0 0x1009e4000 + 1024192\r\n3   com.github.electron.framework \t0x0000000100addb7a 0x1009e4000 + 1022842\r\n4   com.github.electron.framework \t0x0000000100addbbe 0x1009e4000 + 1022910\r\n5   com.github.electron.framework \t0x0000000100add799 crash_reporter::CrashReporterMac::GetUploadedReports(base::FilePath const&) + 249\r\n6   com.github.electron.framework \t0x0000000100a2b1c6 0x1009e4000 + 291270\r\n7   com.github.electron.framework \t0x0000000100a2b18e 0x1009e4000 + 291214\r\n8   com.github.electron.framework \t0x0000000100abf719 0x1009e4000 + 898841\r\n9   com.github.electron.framework \t0x0000000100abf6bf base::internal::Invoker<base::internal::BindState<std::__1::vector<std::__1::pair<int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > (crash_reporter::CrashReporter::*)(base::FilePath const&), base::internal::UnretainedWrapper<crash_reporter::CrashReporter> >, std::__1::vector<std::__1::pair<int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > (base::FilePath const&)>::Run(base::internal::BindStateBase*, base::FilePath const&) + 31\r\n10  com.github.electron.framework \t0x0000000100abf4d3 0x1009e4000 + 898259\r\n11  com.github.electron.framework \t0x0000000100abf427 0x1009e4000 + 898087\r\n12  com.github.electron.framework \t0x0000000100abf2fc mate::internal::Dispatcher<std::__1::vector<std::__1::pair<int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > (base::FilePath const&)>::DispatchToCallback(v8::FunctionCallbackInfo<v8::Value> const&) + 124\r\n13  libnode.dylib                 \t0x0000000104f84f85 0x104d89000 + 2080645\r\n14  libnode.dylib                 \t0x0000000105035f48 0x104d89000 + 2805576\r\n15  libnode.dylib                 \t0x00000001050354a1 0x104d89000 + 2802849\r\n16  ???                           \t0x00003ae3f62043a7 0 + 64750761296807\r\n17  ???                           \t0x00003ae3f66a21ba 0 + 64750766137786\r\n18  ???                           \t0x00003ae3f66a1da4 0 + 64750766136740\r\n19  ???                           \t0x00003ae3f6205cd5 0 + 64750761303253\r\n20  ???                           \t0x00003ae3f64f5313 0 + 64750764380947\r\n21  ???                           \t0x00003ae3f6205cd5 0 + 64750761303253\r\n22  ???                           \t0x00003ae3f64f7164 0 + 64750764388708\r\n23  ???                           \t0x00003ae3f633662b 0 + 64750762550827\r\n24  ???                           \t0x00003ae3f6205cd5 0 + 64750761303253\r\n25  ???                           \t0x00003ae3f6271ac3 0 + 64750761745091\r\n26  ???                           \t0x00003ae3f62365c1 0 + 64750761502145\r\n27  libnode.dylib                 \t0x00000001052026d5 0x104d89000 + 4691669\r\n28  libnode.dylib                 \t0x0000000105202439 v8::internal::Execution::Call(v8::internal::Isolate*, v8::internal::Handle<v8::internal::Object>, v8::internal::Handle<v8::internal::Object>, int, v8::internal::Handle<v8::internal::Object>*) + 169\r\n29  libnode.dylib                 \t0x0000000104fa3f8b v8::Function::Call(v8::Local<v8::Context>, v8::Local<v8::Value>, int, v8::Local<v8::Value>*) + 459\r\n30  libnode.dylib                 \t0x0000000104e63d16 node::MakeCallback(node::Environment*, v8::Local<v8::Value>, v8::Local<v8::Function>, int, v8::Local<v8::Value>*) + 726\r\n31  libnode.dylib                 \t0x0000000104e64278 node::MakeCallback(v8::Isolate*, v8::Local<v8::Object>, v8::Local<v8::Function>, int, v8::Local<v8::Value>*) + 104\r\n32  libnode.dylib                 \t0x0000000104e641df node::MakeCallback(v8::Isolate*, v8::Local<v8::Object>, v8::Local<v8::String>, int, v8::Local<v8::Value>*) + 95\r\n33  libnode.dylib                 \t0x0000000104e64150 node::MakeCallback(v8::Isolate*, v8::Local<v8::Object>, char const*, int, v8::Local<v8::Value>*) + 80\r\n34  com.github.electron.framework \t0x0000000100ad01ca mate::internal::CallMethodWithArgs(v8::Isolate*, v8::Local<v8::Object>, char const*, std::__1::vector<v8::Local<v8::Value>, std::__1::allocator<v8::Local<v8::Value> > >*) + 74\r\n35  com.github.electron.framework \t0x00000001009f63c9 0x1009e4000 + 74697\r\n36  com.github.electron.framework \t0x0000000100a64d0b 0x1009e4000 + 527627\r\n37  com.github.electron.framework \t0x0000000100a64c74 0x1009e4000 + 527476\r\n38  com.github.electron.framework \t0x0000000100a60abd 0x1009e4000 + 510653\r\n39  com.github.electron.framework \t0x0000000100a60e90 atom::api::Window::OnWindowShow() + 48\r\n40  com.github.electron.framework \t0x0000000100a60ead non-virtual thunk to atom::api::Window::OnWindowShow() + 13\r\n41  com.github.electron.framework \t0x0000000100a85201 atom::NativeWindow::NotifyWindowShow() + 97\r\n42  com.github.electron.framework \t0x0000000100a86e66 0x1009e4000 + 667238\r\n43  com.apple.CoreFoundation      \t0x00007fff80eb0a6c __CFNOTIFICATIONCENTER_IS_CALLING_OUT_TO_AN_OBSERVER__ + 12\r\n44  com.apple.CoreFoundation      \t0x00007fff80eb096b _CFXRegistrationPost + 427\r\n45  com.apple.CoreFoundation      \t0x00007fff80eb06d2 ___CFXNotificationPost_block_invoke + 50\r\n46  com.apple.CoreFoundation      \t0x00007fff80e6dd63 -[_CFXNotificationRegistrar find:object:observer:enumerator:] + 1827\r\n47  com.apple.CoreFoundation      \t0x00007fff80e6cd9c _CFXNotificationPost + 604\r\n48  com.apple.Foundation          \t0x00007fff82893a37 -[NSNotificationCenter postNotificationName:object:userInfo:] + 66\r\n49  com.apple.SkyLight            \t0x00007fff928912a3 (anonymous namespace)::notify_datagram_handler(unsigned int, CGSDatagramType, void*, unsigned long, void*) + 870\r\n50  com.apple.SkyLight            \t0x00007fff92740f39 CGSDatagramReadStream::dispatch_next_main_queue_datagram() + 283\r\n51  com.apple.SkyLight            \t0x00007fff92740e09 ___ZN21CGSDatagramReadStream35dispatch_main_queue_datagrams_asyncEP16dispatch_queue_sPS__block_invoke + 55\r\n52  libdispatch.dylib             \t0x00007fff963baef7 _dispatch_call_block_and_release + 12\r\n53  libdispatch.dylib             \t0x00007fff963b20b8 _dispatch_client_callout + 8\r\n54  libdispatch.dylib             \t0x00007fff963bfb4b _dispatch_main_queue_callback_4CF + 925\r\n55  com.apple.CoreFoundation      \t0x00007fff80eda529 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__ + 9\r\n56  com.apple.CoreFoundation      \t0x00007fff80e9b46d __CFRunLoopRun + 2205\r\n57  com.apple.CoreFoundation      \t0x00007fff80e9a974 CFRunLoopRunSpecific + 420\r\n58  com.apple.HIToolbox           \t0x00007fff80426a5c RunCurrentEventLoopInMode + 240\r\n59  com.apple.HIToolbox           \t0x00007fff80426891 ReceiveNextEventCommon + 432\r\n60  com.apple.HIToolbox           \t0x00007fff804266c6 _BlockUntilNextEventMatchingListInModeWithFilter + 71\r\n61  com.apple.AppKit              \t0x00007fff7e9cc5b4 _DPSNextEvent + 1120\r\n62  com.apple.AppKit              \t0x00007fff7f146d6b -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:] + 2789\r\n63  com.apple.AppKit              \t0x00007fff7e9c0f35 -[NSApplication run] + 926\r\n64  com.github.electron.framework \t0x0000000100c0cf0e 0x1009e4000 + 2264846\r\n65  com.github.electron.framework \t0x0000000100c0c57c 0x1009e4000 + 2262396\r\n66  com.github.electron.framework \t0x0000000100c08abe 0x1009e4000 + 2247358\r\n67  com.github.electron.framework \t0x0000000100c1d613 0x1009e4000 + 2332179\r\n68  com.github.electron.framework \t0x0000000100e6d31b 0x1009e4000 + 4756251\r\n69  com.github.electron.framework \t0x0000000100e6d170 0x1009e4000 + 4755824\r\n70  com.github.electron.framework \t0x0000000100e6f8b2 0x1009e4000 + 4765874\r\n71  com.github.electron.framework \t0x0000000100e6924c 0x1009e4000 + 4739660\r\n72  com.github.electron.framework \t0x0000000100dcee6d 0x1009e4000 + 4107885\r\n73  com.github.electron.framework \t0x0000000100dcdf66 0x1009e4000 + 4104038\r\n74  com.github.electron.framework \t0x00000001009e6687 AtomMain + 71\r\n75  com.tinyspeck.slackmacgap     \t0x00000001009def26 main + 38\r\n76  libdyld.dylib                 \t0x00007fff963e8255 start + 1\r\n```\r\n\r\n</details>"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/291287846",
    "html_url": "https://github.com/electron/electron/issues/9100#issuecomment-291287846",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/9100",
    "id": 291287846,
    "user": {
      "login": "CharlieHess",
      "id": 1865957,
      "avatar_url": "https://avatars2.githubusercontent.com/u/1865957?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CharlieHess",
      "html_url": "https://github.com/CharlieHess",
      "followers_url": "https://api.github.com/users/CharlieHess/followers",
      "following_url": "https://api.github.com/users/CharlieHess/following{/other_user}",
      "gists_url": "https://api.github.com/users/CharlieHess/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CharlieHess/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CharlieHess/subscriptions",
      "organizations_url": "https://api.github.com/users/CharlieHess/orgs",
      "repos_url": "https://api.github.com/users/CharlieHess/repos",
      "events_url": "https://api.github.com/users/CharlieHess/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CharlieHess/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-03T22:05:00Z",
    "updated_at": "2017-04-03T22:05:00Z",
    "body": "I used the power of https://github.com/kevinsawicki/electron-atos (thx @kevinsawicki) to fill in the first few lines of the report:\r\n\r\n```\r\nvoid std::__1::__insertion_sort_3<crash_reporter::CrashReporterMac::GetUploadedReports(base::FilePath const&)::$_0&, std::__1::pair<int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >*>(std::__1::pair<int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >*, std::__1::pair<int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >*, crash_reporter::CrashReporterMac::GetUploadedReports(base::FilePath const&)::$_0&) (in Electron Framework) (string:2778)\r\nvoid std::__1::__sort<crash_reporter::CrashReporterMac::GetUploadedReports(base::FilePath const&)::$_0&, std::__1::pair<int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >*>(std::__1::pair<int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >*, std::__1::pair<int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >*, crash_reporter::CrashReporterMac::GetUploadedReports(base::FilePath const&)::$_0&) (in Electron Framework) (algorithm:4129)\r\nvoid std::__1::__sort<crash_reporter::CrashReporterMac::GetUploadedReports(base::FilePath const&)::$_0&, std::__1::pair<int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >*>(std::__1::pair<int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >*, std::__1::pair<int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >*, crash_reporter::CrashReporterMac::GetUploadedReports(base::FilePath const&)::$_0&) (in Electron Framework) (algorithm:4124)\r\n```"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/291296982",
    "html_url": "https://github.com/electron/electron/issues/9100#issuecomment-291296982",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/9100",
    "id": 291296982,
    "user": {
      "login": "CharlieHess",
      "id": 1865957,
      "avatar_url": "https://avatars2.githubusercontent.com/u/1865957?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CharlieHess",
      "html_url": "https://github.com/CharlieHess",
      "followers_url": "https://api.github.com/users/CharlieHess/followers",
      "following_url": "https://api.github.com/users/CharlieHess/following{/other_user}",
      "gists_url": "https://api.github.com/users/CharlieHess/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CharlieHess/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CharlieHess/subscriptions",
      "organizations_url": "https://api.github.com/users/CharlieHess/orgs",
      "repos_url": "https://api.github.com/users/CharlieHess/repos",
      "events_url": "https://api.github.com/users/CharlieHess/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CharlieHess/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-03T22:47:47Z",
    "updated_at": "2017-04-03T22:47:47Z",
    "body": "Closer inspection shows that thread 14 was the offender, not thread 0. Here's the symbolicated stack from thread 14:\r\n\r\n```\r\n0   libsystem_malloc.dylib        \t0x00007fff9f83cdb6 small_free_list_remove_ptr + 144\r\n1   libsystem_malloc.dylib        \t0x00007fff9f83c966 small_malloc_from_free_list + 394\r\n2   libsystem_malloc.dylib        \t0x00007fff9f83a9ab szone_malloc_should_clear + 1649\r\n3   com.github.electron.framework \tbase::(anonymous namespace)::oom_killer_malloc(_malloc_zone_t*, unsigned long) (in Electron Framework) (memory_mac.mm:135)\r\n4   libsystem_malloc.dylib        \t0x00007fff9f83a2da malloc_zone_malloc + 107\r\n5   libsystem_malloc.dylib        \t0x00007fff9f839258 malloc + 24\r\n6   libc++abi.dylib               \t0x00007fff9e2c9e2e operator new(unsigned long) + 30\r\n7   com.github.electron.framework \tstd::__1::deque<base::PendingTask, std::__1::allocator<base::PendingTask> >::__add_back_capacity() (in Electron Framework) (deque:2440)\r\n8   com.github.electron.framework \tbase::internal::IncomingTaskQueue::PostPendingTask(base::PendingTask*) (in Electron Framework) (deque:1076)\r\n9   com.github.electron.framework \tbase::internal::IncomingTaskQueue::AddToIncomingQueue(tracked_objects::Location const&, base::Callback<void (), (base::internal::CopyMode)1, (base::internal::RepeatMode)1> const&, base::TimeDelta, bool) (in Electron Framework) (incoming_task_queue.cc:82)\r\n...\r\n```\r\n\r\nSo we're running out of memory while getting uploaded reports. Anything particularly resource-intensive in this method? "
  }
]