[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/248704414",
    "html_url": "https://github.com/electron/electron/issues/7286#issuecomment-248704414",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7286",
    "id": 248704414,
    "user": {
      "login": "kevinsawicki",
      "id": 671378,
      "avatar_url": "https://avatars0.githubusercontent.com/u/671378?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kevinsawicki",
      "html_url": "https://github.com/kevinsawicki",
      "followers_url": "https://api.github.com/users/kevinsawicki/followers",
      "following_url": "https://api.github.com/users/kevinsawicki/following{/other_user}",
      "gists_url": "https://api.github.com/users/kevinsawicki/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kevinsawicki/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kevinsawicki/subscriptions",
      "organizations_url": "https://api.github.com/users/kevinsawicki/orgs",
      "repos_url": "https://api.github.com/users/kevinsawicki/repos",
      "events_url": "https://api.github.com/users/kevinsawicki/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kevinsawicki/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2016-09-21T18:42:31Z",
    "updated_at": "2016-09-21T18:42:31Z",
    "body": "Can you include an example object (perhaps as a json snippet) that worked well in 1.3.3 but is slower in 1.3.4 and beyond?\n\nThere were changes in 1.3.4 and 1.3.5 to better detect cycles in objects so that objects and arrays weren't incorrectly nulled out when referenced multiple times but not cyclical.\n\nhttps://github.com/electron/electron/pull/6776 and https://github.com/electron/electron/pull/6977 are the two relevant pull requests.\n\nThese changes did cause more fields that could be serialized to be included in the payload sent over IPC instead of just omitting them. Previously these values were just nulled out which caused confusion and unpredictability about what would get sent over.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/248725121",
    "html_url": "https://github.com/electron/electron/issues/7286#issuecomment-248725121",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7286",
    "id": 248725121,
    "user": {
      "login": "obecny",
      "id": 1250998,
      "avatar_url": "https://avatars0.githubusercontent.com/u/1250998?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/obecny",
      "html_url": "https://github.com/obecny",
      "followers_url": "https://api.github.com/users/obecny/followers",
      "following_url": "https://api.github.com/users/obecny/following{/other_user}",
      "gists_url": "https://api.github.com/users/obecny/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/obecny/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/obecny/subscriptions",
      "organizations_url": "https://api.github.com/users/obecny/orgs",
      "repos_url": "https://api.github.com/users/obecny/repos",
      "events_url": "https://api.github.com/users/obecny/events{/privacy}",
      "received_events_url": "https://api.github.com/users/obecny/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-21T19:58:40Z",
    "updated_at": "2016-09-21T19:58:40Z",
    "body": "here it is:\nhttps://gist.github.com/obecny/ccd5c0cf52d3a30109172aabad0cf6bc#file-electron_send_test\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/257686412",
    "html_url": "https://github.com/electron/electron/issues/7286#issuecomment-257686412",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7286",
    "id": 257686412,
    "user": {
      "login": "Mr0grog",
      "id": 74178,
      "avatar_url": "https://avatars3.githubusercontent.com/u/74178?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Mr0grog",
      "html_url": "https://github.com/Mr0grog",
      "followers_url": "https://api.github.com/users/Mr0grog/followers",
      "following_url": "https://api.github.com/users/Mr0grog/following{/other_user}",
      "gists_url": "https://api.github.com/users/Mr0grog/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Mr0grog/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Mr0grog/subscriptions",
      "organizations_url": "https://api.github.com/users/Mr0grog/orgs",
      "repos_url": "https://api.github.com/users/Mr0grog/repos",
      "events_url": "https://api.github.com/users/Mr0grog/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Mr0grog/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-01T20:31:49Z",
    "updated_at": "2016-11-01T20:31:49Z",
    "body": "It looks like some users of Nightmare (an automated browser based on Electron) are also hitting this issue: https://github.com/segmentio/nightmare/issues/862 (in the example there, attempting to send an object with an AngularJS `$scope` object attached to it over IPC is causing the hang).\n\nIf it helps, the raw Electron code that matches the linked Nightmare issue is:\n\n``` js\nconst electron = require('electron');\n\nelectron.app.on('ready', function() {\n  mainWindow = new electron.BrowserWindow({\n    show: true,\n    webPreferences: {\n      nodeIntegration: false\n    }\n  });\n  mainWindow.webContents.loadURL('http://www.muzeroom.com/');\n  mainWindow.webContents.on('did-finish-load', function() {\n    setTimeout(() => {\n      console.log('Attempting to log an AngularJS $scope object...');\n      mainWindow.webContents.executeJavaScript(\n        `var element = document.querySelectorAll('.story-list-item')[0];\n        Object.getOwnPropertyNames(element).map(name => element[name]);`,\n        function (result) {\n          console.log('DONE:', result);\n          process.exit(0);\n        });\n    }, 1000);\n  });\n});\n```\n\nThe above is fine in 1.3.4 and earlier, but hangs in versions after 1.3.5.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/257954149",
    "html_url": "https://github.com/electron/electron/issues/7286#issuecomment-257954149",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7286",
    "id": 257954149,
    "user": {
      "login": "obecny",
      "id": 1250998,
      "avatar_url": "https://avatars0.githubusercontent.com/u/1250998?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/obecny",
      "html_url": "https://github.com/obecny",
      "followers_url": "https://api.github.com/users/obecny/followers",
      "following_url": "https://api.github.com/users/obecny/following{/other_user}",
      "gists_url": "https://api.github.com/users/obecny/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/obecny/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/obecny/subscriptions",
      "organizations_url": "https://api.github.com/users/obecny/orgs",
      "repos_url": "https://api.github.com/users/obecny/repos",
      "events_url": "https://api.github.com/users/obecny/events{/privacy}",
      "received_events_url": "https://api.github.com/users/obecny/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-02T18:19:51Z",
    "updated_at": "2016-11-02T18:19:51Z",
    "body": "@kevinsawicki I have posted the gist long time ago but this issue is still marked as `more-information-needed` what else do you need then ? thx\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/304834588",
    "html_url": "https://github.com/electron/electron/issues/7286#issuecomment-304834588",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7286",
    "id": 304834588,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2017-05-30T10:11:49Z",
    "updated_at": "2017-05-30T10:11:49Z",
    "body": "Sending a large object via IPC is slow and there is no way to improve that, a common solution is to use shared memory but that's another story.\r\n\r\nIt was not slow for certain objects because they were simply stripped, and that was a bug. Since the only way to improve the situation is to revert the fix, I'm afraid I have to close this as won't fix.\r\n\r\nAs work around, I suggest stripping the object before sending it via IPC."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/304879938",
    "html_url": "https://github.com/electron/electron/issues/7286#issuecomment-304879938",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7286",
    "id": 304879938,
    "user": {
      "login": "Mr0grog",
      "id": 74178,
      "avatar_url": "https://avatars3.githubusercontent.com/u/74178?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Mr0grog",
      "html_url": "https://github.com/Mr0grog",
      "followers_url": "https://api.github.com/users/Mr0grog/followers",
      "following_url": "https://api.github.com/users/Mr0grog/following{/other_user}",
      "gists_url": "https://api.github.com/users/Mr0grog/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Mr0grog/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Mr0grog/subscriptions",
      "organizations_url": "https://api.github.com/users/Mr0grog/orgs",
      "repos_url": "https://api.github.com/users/Mr0grog/repos",
      "events_url": "https://api.github.com/users/Mr0grog/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Mr0grog/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-30T13:35:31Z",
    "updated_at": "2017-05-30T13:35:31Z",
    "body": "@zcbenz is there any feasible way to detect that an object will be too big and throw an exception? (Or at the very least log a warning?) In the example above, the entire process hangs for *minutes* as a result of the JS call and it is not clear to most people why. I have trouble imagining the scenario where that's useful. I think, for many users, it's very unclear what's going wrong when they wind up in this situation."
  }
]