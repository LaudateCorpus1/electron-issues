[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/289532792",
    "html_url": "https://github.com/electron/electron/pull/8953#issuecomment-289532792",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/8953",
    "id": 289532792,
    "user": {
      "login": "kevinsawicki",
      "id": 671378,
      "avatar_url": "https://avatars0.githubusercontent.com/u/671378?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kevinsawicki",
      "html_url": "https://github.com/kevinsawicki",
      "followers_url": "https://api.github.com/users/kevinsawicki/followers",
      "following_url": "https://api.github.com/users/kevinsawicki/following{/other_user}",
      "gists_url": "https://api.github.com/users/kevinsawicki/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kevinsawicki/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kevinsawicki/subscriptions",
      "organizations_url": "https://api.github.com/users/kevinsawicki/orgs",
      "repos_url": "https://api.github.com/users/kevinsawicki/repos",
      "events_url": "https://api.github.com/users/kevinsawicki/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kevinsawicki/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2017-03-27T17:56:35Z",
    "updated_at": "2017-03-27T17:56:35Z",
    "body": "I'm wondering if this might be considered a breaking change since this changes the value returned to the renderer.\r\n\r\n```js\r\nevent.returnValue = {\r\n buffer: Buffer.from('test')\r\n}\r\n```\r\n\r\nBefore this change the renderer would receive a plain old `Object` back but now it receives an actual `Uint8Array`. It is definitely better long-term to have this more correct type returned but existing apps may break since certain APIs can't be called on a `Uint8Array` like `Object.freeze`.\r\n\r\nThis is just one possible difference, there may be others, we should probably expand test coverage of the possible `sendSync` return values to make sure there aren't other format changes this may be introducing.\r\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/289537485",
    "html_url": "https://github.com/electron/electron/pull/8953#issuecomment-289537485",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/8953",
    "id": 289537485,
    "user": {
      "login": "tarruda",
      "id": 842846,
      "avatar_url": "https://avatars0.githubusercontent.com/u/842846?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tarruda",
      "html_url": "https://github.com/tarruda",
      "followers_url": "https://api.github.com/users/tarruda/followers",
      "following_url": "https://api.github.com/users/tarruda/following{/other_user}",
      "gists_url": "https://api.github.com/users/tarruda/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tarruda/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tarruda/subscriptions",
      "organizations_url": "https://api.github.com/users/tarruda/orgs",
      "repos_url": "https://api.github.com/users/tarruda/repos",
      "events_url": "https://api.github.com/users/tarruda/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tarruda/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-27T18:12:49Z",
    "updated_at": "2017-03-27T18:12:49Z",
    "body": "> I'm wondering if this might be considered a breaking change since this changes the value returned to the renderer.\r\n\r\nI could be wrong, but AFAICT this only changes the private API used by the scripts in `lib/renderer/` and `lib/browser`. It would only break apps that use `process.atomBinding` to bypass the `ipcRenderer` public API."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/289540249",
    "html_url": "https://github.com/electron/electron/pull/8953#issuecomment-289540249",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/8953",
    "id": 289540249,
    "user": {
      "login": "kevinsawicki",
      "id": 671378,
      "avatar_url": "https://avatars0.githubusercontent.com/u/671378?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kevinsawicki",
      "html_url": "https://github.com/kevinsawicki",
      "followers_url": "https://api.github.com/users/kevinsawicki/followers",
      "following_url": "https://api.github.com/users/kevinsawicki/following{/other_user}",
      "gists_url": "https://api.github.com/users/kevinsawicki/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kevinsawicki/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kevinsawicki/subscriptions",
      "organizations_url": "https://api.github.com/users/kevinsawicki/orgs",
      "repos_url": "https://api.github.com/users/kevinsawicki/repos",
      "events_url": "https://api.github.com/users/kevinsawicki/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kevinsawicki/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2017-03-27T18:21:56Z",
    "updated_at": "2017-03-27T18:21:56Z",
    "body": "> I could be wrong, but AFAICT this only changes the private API used by the scripts\r\n\r\n@tarruda try the following on master vs. this branch:\r\n\r\n```js\r\nconst {app, BrowserWindow, ipcMain} = require('electron')\r\nconst {Buffer} = require('buffer')\r\n\r\nlet window\r\n\r\napp.once('ready', () => {\r\n  window = new BrowserWindow()\r\n  window.loadURL(`file://${__dirname}/index.html`)\r\n})\r\n\r\nipcMain.on('test', (event) => {\r\n  event.returnValue = {\r\n    test: Buffer.from('test')\r\n  }\r\n})\r\n```\r\n\r\n```html\r\n<!DOCTYPE html>\r\n<html>\r\n  <head>\r\n    <meta charset=\"utf-8\">\r\n    <script>\r\n      const {ipcRenderer} = require('electron')\r\n      Object.freeze(ipcRenderer.sendSync('test').test)\r\n    </script>\r\n  </head>\r\n</html>\r\n```\r\n\r\nOn master, no error occurs, on this branch `TypeError: Cannot freeze array buffer views with elements` is logged in the renderer console.\r\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/289552883",
    "html_url": "https://github.com/electron/electron/pull/8953#issuecomment-289552883",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/8953",
    "id": 289552883,
    "user": {
      "login": "tarruda",
      "id": 842846,
      "avatar_url": "https://avatars0.githubusercontent.com/u/842846?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tarruda",
      "html_url": "https://github.com/tarruda",
      "followers_url": "https://api.github.com/users/tarruda/followers",
      "following_url": "https://api.github.com/users/tarruda/following{/other_user}",
      "gists_url": "https://api.github.com/users/tarruda/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tarruda/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tarruda/subscriptions",
      "organizations_url": "https://api.github.com/users/tarruda/orgs",
      "repos_url": "https://api.github.com/users/tarruda/repos",
      "events_url": "https://api.github.com/users/tarruda/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tarruda/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-27T19:04:32Z",
    "updated_at": "2017-03-27T19:04:32Z",
    "body": "I've only saw this change from the POV of `electron.remote`, which continues working since the array-like object returned by `sendSync` is normalized into a `Buffer` by that module. My mistake, sorry.\r\n\r\nIn any case, please consider these arguments in favor of merging:\r\n\r\n- It is impossible to call `Object.freeze` on a `Buffer` object in the main process, so why would someone call it on the deserialized Buffer in the renderer?\r\n- serialization of `Buffer` gives different results depending if the object is sent as `event.returnValue` or as argument to an IPC message, so we would adding more consistency to the ipc API.\r\n- Memory usage can really spike if large buffers are returned via sendSync. In the best scenario where all Buffer bytes are < 10, we would see at least 2x the number of characters in the resulting json string, but since v8 encodes strings in memory as UTF-16, we are using 4x the number of bytes in the best case scenario!\r\n- It is reasonable to expect that an object would have the same interface when deserialized, but without this patch the deserialized Buffer has no Buffer methods. It seems this PR doesn't provide only an optimization, but also fixes buffer serialization/deserialization when using `sendSync` 😉  \r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/289554516",
    "html_url": "https://github.com/electron/electron/pull/8953#issuecomment-289554516",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/8953",
    "id": 289554516,
    "user": {
      "login": "kevinsawicki",
      "id": 671378,
      "avatar_url": "https://avatars0.githubusercontent.com/u/671378?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kevinsawicki",
      "html_url": "https://github.com/kevinsawicki",
      "followers_url": "https://api.github.com/users/kevinsawicki/followers",
      "following_url": "https://api.github.com/users/kevinsawicki/following{/other_user}",
      "gists_url": "https://api.github.com/users/kevinsawicki/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kevinsawicki/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kevinsawicki/subscriptions",
      "organizations_url": "https://api.github.com/users/kevinsawicki/orgs",
      "repos_url": "https://api.github.com/users/kevinsawicki/repos",
      "events_url": "https://api.github.com/users/kevinsawicki/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kevinsawicki/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2017-03-27T19:10:31Z",
    "updated_at": "2017-03-27T19:10:31Z",
    "body": "> In any case, please consider these arguments in favor of merging\r\n\r\nI definitely agree this pull request improves things and should be merged eventually, I'm just worried about breaking existing apps. This is a public API and we are changing the format of the values it returns.\r\n\r\nWithout proper test coverage of this API it is unclear what other behavior might be changing since `JSON.parse` may have other differences than using a `base::ListValue`."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/289560788",
    "html_url": "https://github.com/electron/electron/pull/8953#issuecomment-289560788",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/8953",
    "id": 289560788,
    "user": {
      "login": "tarruda",
      "id": 842846,
      "avatar_url": "https://avatars0.githubusercontent.com/u/842846?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tarruda",
      "html_url": "https://github.com/tarruda",
      "followers_url": "https://api.github.com/users/tarruda/followers",
      "following_url": "https://api.github.com/users/tarruda/following{/other_user}",
      "gists_url": "https://api.github.com/users/tarruda/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tarruda/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tarruda/subscriptions",
      "organizations_url": "https://api.github.com/users/tarruda/orgs",
      "repos_url": "https://api.github.com/users/tarruda/repos",
      "events_url": "https://api.github.com/users/tarruda/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tarruda/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-27T19:33:30Z",
    "updated_at": "2017-03-27T19:33:30Z",
    "body": "👍 \r\n\r\nMaybe leave it for electron 2.0.0 then"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/303226902",
    "html_url": "https://github.com/electron/electron/pull/8953#issuecomment-303226902",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/8953",
    "id": 303226902,
    "user": {
      "login": "kevinsawicki",
      "id": 671378,
      "avatar_url": "https://avatars0.githubusercontent.com/u/671378?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kevinsawicki",
      "html_url": "https://github.com/kevinsawicki",
      "followers_url": "https://api.github.com/users/kevinsawicki/followers",
      "following_url": "https://api.github.com/users/kevinsawicki/following{/other_user}",
      "gists_url": "https://api.github.com/users/kevinsawicki/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kevinsawicki/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kevinsawicki/subscriptions",
      "organizations_url": "https://api.github.com/users/kevinsawicki/orgs",
      "repos_url": "https://api.github.com/users/kevinsawicki/repos",
      "events_url": "https://api.github.com/users/kevinsawicki/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kevinsawicki/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2017-05-22T21:37:11Z",
    "updated_at": "2017-05-22T21:37:11Z",
    "body": "Closing this out for now, will revisit for Electron 2.0 since this is ultimately the right direction to go for this change.  👍 "
  }
]