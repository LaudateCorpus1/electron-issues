[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/197020266",
    "html_url": "https://github.com/electron/electron/issues/4817#issuecomment-197020266",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/4817",
    "id": 197020266,
    "user": {
      "login": "baconbrad",
      "id": 4763342,
      "avatar_url": "https://avatars1.githubusercontent.com/u/4763342?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/baconbrad",
      "html_url": "https://github.com/baconbrad",
      "followers_url": "https://api.github.com/users/baconbrad/followers",
      "following_url": "https://api.github.com/users/baconbrad/following{/other_user}",
      "gists_url": "https://api.github.com/users/baconbrad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/baconbrad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/baconbrad/subscriptions",
      "organizations_url": "https://api.github.com/users/baconbrad/orgs",
      "repos_url": "https://api.github.com/users/baconbrad/repos",
      "events_url": "https://api.github.com/users/baconbrad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/baconbrad/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-15T21:10:22Z",
    "updated_at": "2016-03-15T21:10:22Z",
    "body": "According to the quick start repo making the actual Browser Window object null on the close event should be all you need to do.\n\n``` javascript\nwin.on('closed', function() {\n  win = null;\n});\n```\n\nIf that is in your main process then `win.destroy();` will fire off the close event and destroy it without interruption. Otherwise you will need to use `win.close();` to simulate the user clicking the close button.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/197210197",
    "html_url": "https://github.com/electron/electron/issues/4817#issuecomment-197210197",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/4817",
    "id": 197210197,
    "user": {
      "login": "niknickolas",
      "id": 4051329,
      "avatar_url": "https://avatars0.githubusercontent.com/u/4051329?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/niknickolas",
      "html_url": "https://github.com/niknickolas",
      "followers_url": "https://api.github.com/users/niknickolas/followers",
      "following_url": "https://api.github.com/users/niknickolas/following{/other_user}",
      "gists_url": "https://api.github.com/users/niknickolas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/niknickolas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/niknickolas/subscriptions",
      "organizations_url": "https://api.github.com/users/niknickolas/orgs",
      "repos_url": "https://api.github.com/users/niknickolas/repos",
      "events_url": "https://api.github.com/users/niknickolas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/niknickolas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-16T08:28:57Z",
    "updated_at": "2016-03-16T08:33:22Z",
    "body": "Yes, I know about it, but in my case it does not work.\nI use proxy server to enter internet but when proxy server closes connection with error net::ERR_PROXY_CONNECTION_FAILED. some listeners are still alive such as Browser.webContents.session.webRequest.onErrorOccurred that produces some events after closing Window Browser. Might it calls some errors in background and I cannot  see them.\n\nI use this code for closing all processes and listeners \n\n let NetworkErrors = [\n        'net::ERR_PROXY_CONNECTION_FAILED',\n        'net::ERR_NETWORK_CHANGED',\n        'net::ERR_CONNECTION_CLOSED',\n        'net::ERR_CACHE_MISS'\n    ];\n\n```\ntry {\n    this.Browser.webContents.session.webRequest.onErrorOccurred((details) => {\n\n        if (NetworkErrors.indexOf(details.error) > -1 && (this.getMainUrl() === details.url)) {\n            Helper.log(true, '\\n >>> SESSION WEB REQUEST ERROR \\n', details.url, '\\n', details.error, '\\n');\n            this.stop('FAIL');\n        }\n\n    });\n} catch (e) {\n    Helper.log(true, '\\n >>> SESSION WEB REQUEST ERROR LISTENER \\n', e, '\\n');\n} \n```\n\nTaskRunner.prototype.stop = function stop (status) {\n\n```\ntry {\n\n    this.Browser.on('LISTENING:STOPPED', ()=> {\n        try {\n            this.Browser.webContents.session.webRequest.onErrorOccurred(null, null);\n        } catch (e) {\n            Helper.log(DEBUGGING || true, '\\n !!!! >>> STOP BROWSER FOR JOB', this._jobId, e);\n        }\n\n        try {\n            this.Browser.webContents.session.removeAllListeners();\n        } catch (e) {\n            Helper.log(DEBUGGING || true, '\\n !!!! >>> STOP BROWSER FOR JOB', this._jobId, e);\n        }\n\n        try {\n            this.Browser.webContents.removeAllListeners();\n        } catch (e) {\n            Helper.log(DEBUGGING || true, '\\n !!!! >>> STOP BROWSER FOR JOB', this._jobId, e);\n        }\n\n        try {\n            this.Browser.webContents.removeAllListeners();\n        } catch (e) {\n            Helper.log(DEBUGGING || true, '\\n !!!! >>> STOP BROWSER FOR JOB', this._jobId, e);\n        }\n\n        this.Browser.once('closed', ()=> {\n            Helper.log(DEBUGGING || true, '\\n !!!! >>> CLOSED BROWSER FOR JOB', this._jobId);\n            try {\n                this.Browser.removeAllListeners();\n            } catch (e) {\n                Helper.log(DEBUGGING || true, '\\n !!!! >>> STOP BROWSER FOR JOB', this._jobId, e);\n            }\n            try {\n                this.Browser = null;\n            } catch (e) {\n                Helper.log(DEBUGGING || true, '\\n !!!! >>> STOP BROWSER FOR JOB', this._jobId, e);\n            }\n            this.event.emit(status);\n        });\n\n        this.clearTasks()\n            .Browser.close();\n    });\n\n} catch (e) {\n    this.event.emit(status);\n}\n\nthis.Browser.webContents.send('STOP:LISTENING');\n```\n\n};\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/201972096",
    "html_url": "https://github.com/electron/electron/issues/4817#issuecomment-201972096",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/4817",
    "id": 201972096,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2016-03-27T02:16:53Z",
    "updated_at": "2016-03-27T02:16:53Z",
    "body": "Can you provide a reproducible example?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/202330304",
    "html_url": "https://github.com/electron/electron/issues/4817#issuecomment-202330304",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/4817",
    "id": 202330304,
    "user": {
      "login": "niknickolas",
      "id": 4051329,
      "avatar_url": "https://avatars0.githubusercontent.com/u/4051329?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/niknickolas",
      "html_url": "https://github.com/niknickolas",
      "followers_url": "https://api.github.com/users/niknickolas/followers",
      "following_url": "https://api.github.com/users/niknickolas/following{/other_user}",
      "gists_url": "https://api.github.com/users/niknickolas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/niknickolas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/niknickolas/subscriptions",
      "organizations_url": "https://api.github.com/users/niknickolas/orgs",
      "repos_url": "https://api.github.com/users/niknickolas/repos",
      "events_url": "https://api.github.com/users/niknickolas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/niknickolas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-28T10:04:11Z",
    "updated_at": "2016-03-28T10:04:11Z",
    "body": "Hello, Chang Zhao.\n\nThere is my project https://github.com/niknickolas/task-runner\n\n2016-03-28 12:54 GMT+03:00 Nik Nickolas niknickolas@gmail.com:\n\n> Hello, Chang Zhao.\n> \n> There is my project in zip file.\n> \n> 2016-03-27 5:17 GMT+03:00 Cheng Zhao notifications@github.com:\n> \n> > Can you provide a reproducible example?\n> > \n> > â€”\n> > You are receiving this because you authored the thread.\n> > Reply to this email directly or view it on GitHub\n> > https://github.com/atom/electron/issues/4817#issuecomment-201972096\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/203874887",
    "html_url": "https://github.com/electron/electron/issues/4817#issuecomment-203874887",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/4817",
    "id": 203874887,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2016-03-31T10:44:07Z",
    "updated_at": "2016-03-31T10:44:07Z",
    "body": "It is impossible to any of us to just debug your app, unless you can make the example minimal so we can obviously see the problem of Electron, otherwise we have to assume it is a bug of your app.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/203876717",
    "html_url": "https://github.com/electron/electron/issues/4817#issuecomment-203876717",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/4817",
    "id": 203876717,
    "user": {
      "login": "niknickolas",
      "id": 4051329,
      "avatar_url": "https://avatars0.githubusercontent.com/u/4051329?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/niknickolas",
      "html_url": "https://github.com/niknickolas",
      "followers_url": "https://api.github.com/users/niknickolas/followers",
      "following_url": "https://api.github.com/users/niknickolas/following{/other_user}",
      "gists_url": "https://api.github.com/users/niknickolas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/niknickolas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/niknickolas/subscriptions",
      "organizations_url": "https://api.github.com/users/niknickolas/orgs",
      "repos_url": "https://api.github.com/users/niknickolas/repos",
      "events_url": "https://api.github.com/users/niknickolas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/niknickolas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-31T10:53:05Z",
    "updated_at": "2016-03-31T10:53:05Z",
    "body": "Hello.\n\nOk, I will change the app for the best test\n\n2016-03-31 13:45 GMT+03:00 Cheng Zhao notifications@github.com:\n\n> It is impossible to any of us to just debug your app, unless you can make\n> the example minimal so we can obviously see the problem of Electron,\n> otherwise we have to assume it is a bug of your app.\n> \n> â€”\n> You are receiving this because you authored the thread.\n> Reply to this email directly or view it on GitHub\n> https://github.com/atom/electron/issues/4817#issuecomment-203874887\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/204058328",
    "html_url": "https://github.com/electron/electron/issues/4817#issuecomment-204058328",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/4817",
    "id": 204058328,
    "user": {
      "login": "niknickolas",
      "id": 4051329,
      "avatar_url": "https://avatars0.githubusercontent.com/u/4051329?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/niknickolas",
      "html_url": "https://github.com/niknickolas",
      "followers_url": "https://api.github.com/users/niknickolas/followers",
      "following_url": "https://api.github.com/users/niknickolas/following{/other_user}",
      "gists_url": "https://api.github.com/users/niknickolas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/niknickolas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/niknickolas/subscriptions",
      "organizations_url": "https://api.github.com/users/niknickolas/orgs",
      "repos_url": "https://api.github.com/users/niknickolas/repos",
      "events_url": "https://api.github.com/users/niknickolas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/niknickolas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-31T18:04:40Z",
    "updated_at": "2016-03-31T18:04:40Z",
    "body": "Hello.\n\nYou can test my app but be careful, I set maximum number of working\nbrowsers for\neach tube to 50, if you have more memory operation cat you increase this\nvariable MaxNumberOfWorkingBrowsersForEachtube;\n\nuse the access content through a proxy server, for more accurate testing , it\nwould be better if most ip addresses are non-working, you will get result\nfaster\n\n/*\n- proxy = null; if don't use proxy\n- */\n  let proxy = {\n  address: 'ip:port',\n  credentials: ['login', 'password']\n  };\n\n/*\n- I don't use proxy\n- */\n  proxy = null;\n\n2016-03-31 13:53 GMT+03:00 Nik Nickolas niknickolas@gmail.com:\n\n> Hello.\n> \n> Ok, I will change the app for the best test\n> \n> 2016-03-31 13:45 GMT+03:00 Cheng Zhao notifications@github.com:\n> \n> > It is impossible to any of us to just debug your app, unless you can make\n> > the example minimal so we can obviously see the problem of Electron,\n> > otherwise we have to assume it is a bug of your app.\n> > \n> > â€”\n> > You are receiving this because you authored the thread.\n> > Reply to this email directly or view it on GitHub\n> > https://github.com/atom/electron/issues/4817#issuecomment-203874887\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/204250837",
    "html_url": "https://github.com/electron/electron/issues/4817#issuecomment-204250837",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/4817",
    "id": 204250837,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2016-04-01T05:03:09Z",
    "updated_at": "2016-04-01T05:03:09Z",
    "body": "Following apps are perfect examples of minimal test cases:\n\nhttps://github.com/nathansobo/disable-renderer-backgrounding-test-case\nhttps://github.com/kamesh-a/electron-samples/tree/master/willDownload\nhttps://github.com/davej/electron-execSync-test\n\nA minimal test case should only include necessary information to show the problem, like, calling a certain API of Electron leaks memory, instead of, your app doing complex things and there is memory leak. The latter mostly sounds like there is bug in your code.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/204318460",
    "html_url": "https://github.com/electron/electron/issues/4817#issuecomment-204318460",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/4817",
    "id": 204318460,
    "user": {
      "login": "niknickolas",
      "id": 4051329,
      "avatar_url": "https://avatars0.githubusercontent.com/u/4051329?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/niknickolas",
      "html_url": "https://github.com/niknickolas",
      "followers_url": "https://api.github.com/users/niknickolas/followers",
      "following_url": "https://api.github.com/users/niknickolas/following{/other_user}",
      "gists_url": "https://api.github.com/users/niknickolas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/niknickolas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/niknickolas/subscriptions",
      "organizations_url": "https://api.github.com/users/niknickolas/orgs",
      "repos_url": "https://api.github.com/users/niknickolas/repos",
      "events_url": "https://api.github.com/users/niknickolas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/niknickolas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-01T09:00:39Z",
    "updated_at": "2016-04-01T09:00:39Z",
    "body": "I think, minimal test cases can only show you that api works perfect but\nwhat about if app is working for a long time and doing complex things, only\nafter that you can see whole result.\n\nI don't say that I am good programmer, yes I can do lot of mistakes. What\nis real problem ?\nIs it  closure that doesn't let garbage collector do its job or it is some\nother thing ?\n\n2016-04-01 8:03 GMT+03:00 Cheng Zhao notifications@github.com:\n\n> Following apps are perfect examples of minimal test cases:\n> \n> https://github.com/nathansobo/disable-renderer-backgrounding-test-case\n> https://github.com/kamesh-a/electron-samples/tree/master/willDownload\n> https://github.com/davej/electron-execSync-test\n> \n> A minimal test case should only include necessary information to show the\n> problem, like, calling a certain API of Electron leaks memory, instead of,\n> your app doing complex things and there is memory leak. The latter mostly\n> sounds like there is bug in your code.\n> \n> â€”\n> You are receiving this because you authored the thread.\n> Reply to this email directly or view it on GitHub\n> https://github.com/atom/electron/issues/4817#issuecomment-204250837\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/204804187",
    "html_url": "https://github.com/electron/electron/issues/4817#issuecomment-204804187",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/4817",
    "id": 204804187,
    "user": {
      "login": "niknickolas",
      "id": 4051329,
      "avatar_url": "https://avatars0.githubusercontent.com/u/4051329?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/niknickolas",
      "html_url": "https://github.com/niknickolas",
      "followers_url": "https://api.github.com/users/niknickolas/followers",
      "following_url": "https://api.github.com/users/niknickolas/following{/other_user}",
      "gists_url": "https://api.github.com/users/niknickolas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/niknickolas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/niknickolas/subscriptions",
      "organizations_url": "https://api.github.com/users/niknickolas/orgs",
      "repos_url": "https://api.github.com/users/niknickolas/repos",
      "events_url": "https://api.github.com/users/niknickolas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/niknickolas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-02T20:57:09Z",
    "updated_at": "2016-04-02T20:57:09Z",
    "body": "Hello.\nI  remembered one feature that when I run my application on the server very\nquickly ran out of file descriptors, and for this I increased the limit.\nMay it give you some idea.\n\n2016-04-01 12:00 GMT+03:00 Nik Nickolas niknickolas@gmail.com:\n\n> I think, minimal test cases can only show you that api works perfect but\n> what about if app is working for a long time and doing complex things, only\n> after that you can see whole result.\n> \n> I don't say that I am good programmer, yes I can do lot of mistakes. What\n> is real problem ?\n> Is it  closure that doesn't let garbage collector do its job or it is some\n> other thing ?\n> \n> 2016-04-01 8:03 GMT+03:00 Cheng Zhao notifications@github.com:\n> \n> > Following apps are perfect examples of minimal test cases:\n> > \n> > https://github.com/nathansobo/disable-renderer-backgrounding-test-case\n> > https://github.com/kamesh-a/electron-samples/tree/master/willDownload\n> > https://github.com/davej/electron-execSync-test\n> > \n> > A minimal test case should only include necessary information to show the\n> > problem, like, calling a certain API of Electron leaks memory, instead of,\n> > your app doing complex things and there is memory leak. The latter mostly\n> > sounds like there is bug in your code.\n> > \n> > â€”\n> > You are receiving this because you authored the thread.\n> > Reply to this email directly or view it on GitHub\n> > https://github.com/atom/electron/issues/4817#issuecomment-204250837\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/204879663",
    "html_url": "https://github.com/electron/electron/issues/4817#issuecomment-204879663",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/4817",
    "id": 204879663,
    "user": {
      "login": "baconbrad",
      "id": 4763342,
      "avatar_url": "https://avatars1.githubusercontent.com/u/4763342?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/baconbrad",
      "html_url": "https://github.com/baconbrad",
      "followers_url": "https://api.github.com/users/baconbrad/followers",
      "following_url": "https://api.github.com/users/baconbrad/following{/other_user}",
      "gists_url": "https://api.github.com/users/baconbrad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/baconbrad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/baconbrad/subscriptions",
      "organizations_url": "https://api.github.com/users/baconbrad/orgs",
      "repos_url": "https://api.github.com/users/baconbrad/repos",
      "events_url": "https://api.github.com/users/baconbrad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/baconbrad/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-03T05:41:29Z",
    "updated_at": "2016-04-03T05:41:29Z",
    "body": "What I think zcbenz is trying to say is there are two types of things that can cause issues. The first is a bug in your application and the second is a bug in his application. To show him his bug you would typically find what caused it and make a reproducible example. One that would be a test case interchangeable with other Electron projects and not just yours.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/206695504",
    "html_url": "https://github.com/electron/electron/issues/4817#issuecomment-206695504",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/4817",
    "id": 206695504,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2016-04-07T04:51:21Z",
    "updated_at": "2016-04-07T04:51:21Z",
    "body": "> I think, minimal test cases can only show you that api works perfect but\n> what about if app is working for a long time and doing complex things, only\n> after that you can see whole result.\n\nIf that is the case, I'm afraid no one except yourself will be interested in looking into it.\n"
  }
]