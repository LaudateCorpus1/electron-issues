[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/294129059",
    "html_url": "https://github.com/electron/electron/issues/9189#issuecomment-294129059",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/9189",
    "id": 294129059,
    "user": {
      "login": "MauriceConrad",
      "id": 12884009,
      "avatar_url": "https://avatars2.githubusercontent.com/u/12884009?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MauriceConrad",
      "html_url": "https://github.com/MauriceConrad",
      "followers_url": "https://api.github.com/users/MauriceConrad/followers",
      "following_url": "https://api.github.com/users/MauriceConrad/following{/other_user}",
      "gists_url": "https://api.github.com/users/MauriceConrad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MauriceConrad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MauriceConrad/subscriptions",
      "organizations_url": "https://api.github.com/users/MauriceConrad/orgs",
      "repos_url": "https://api.github.com/users/MauriceConrad/repos",
      "events_url": "https://api.github.com/users/MauriceConrad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MauriceConrad/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-14T10:01:36Z",
    "updated_at": "2017-04-14T10:01:36Z",
    "body": "On macOS:\r\n\r\nThere is no \"clean\" API but you can do it with the 'say' command of macOS.\r\n\r\n```javascript\r\n\"use strict\";\r\n\r\nvar myLanguage = \"de_DE\";\r\n\r\nvar speaker = new Speaker();\r\nspeaker.getVoices(function(voices) {\r\n  speaker.say(\"Hallo Welt!\", voices[myLanguage].name, function(err) {\r\n    console.log(\"Finished\");\r\n  });\r\n});\r\n\r\nfunction Speaker() {\r\n  var childProcess = require(\"child_process\");\r\n  var exec = childProcess.exec;\r\n  this.getVoices = function(callback) {\r\n    var voices = {};\r\n    exec('say -v \"?\"', function(err, stdout, stderr) {\r\n      if (!err) {\r\n        stdout.split(\"\\n\").forEach(function(voice) {\r\n          var curr = voice.split(/\\s{1,}/);\r\n          voices[curr[1]] = {\r\n            name: curr[0],\r\n            text: curr.splice(2).join(\" \")\r\n          }\r\n        });\r\n        callback(voices);\r\n      }\r\n    });\r\n  }\r\n  this.say = function(text, voice, callback) {\r\n    exec('say -v \"' + voice + '\" \"' + text + '\"', function(err, stdout) {\r\n      if (err) callback(err);\r\n      callback(true);\r\n    });\r\n  }\r\n}\r\n\r\n```\r\n\r\nThis should work on macOS."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/294143160",
    "html_url": "https://github.com/electron/electron/issues/9189#issuecomment-294143160",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/9189",
    "id": 294143160,
    "user": {
      "login": "ivandroid",
      "id": 9329216,
      "avatar_url": "https://avatars3.githubusercontent.com/u/9329216?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ivandroid",
      "html_url": "https://github.com/ivandroid",
      "followers_url": "https://api.github.com/users/ivandroid/followers",
      "following_url": "https://api.github.com/users/ivandroid/following{/other_user}",
      "gists_url": "https://api.github.com/users/ivandroid/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ivandroid/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ivandroid/subscriptions",
      "organizations_url": "https://api.github.com/users/ivandroid/orgs",
      "repos_url": "https://api.github.com/users/ivandroid/repos",
      "events_url": "https://api.github.com/users/ivandroid/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ivandroid/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-14T12:06:33Z",
    "updated_at": "2017-04-14T12:07:55Z",
    "body": "Thank you for the quick reply. What I need is voice input and not output. If you start dictation on macOS (which is possible in the edit menu), you activate the speech recognizer and can make some voice entries. So, is there a way to start speech recognition on macOS programmatically?"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/294151993",
    "html_url": "https://github.com/electron/electron/issues/9189#issuecomment-294151993",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/9189",
    "id": 294151993,
    "user": {
      "login": "ivandroid",
      "id": 9329216,
      "avatar_url": "https://avatars3.githubusercontent.com/u/9329216?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ivandroid",
      "html_url": "https://github.com/ivandroid",
      "followers_url": "https://api.github.com/users/ivandroid/followers",
      "following_url": "https://api.github.com/users/ivandroid/following{/other_user}",
      "gists_url": "https://api.github.com/users/ivandroid/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ivandroid/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ivandroid/subscriptions",
      "organizations_url": "https://api.github.com/users/ivandroid/orgs",
      "repos_url": "https://api.github.com/users/ivandroid/repos",
      "events_url": "https://api.github.com/users/ivandroid/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ivandroid/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-14T13:17:30Z",
    "updated_at": "2017-04-18T17:15:38Z",
    "body": "Ok, i've figured it out. You have to execute the short command (default Fn+Fn) to start speech recognition. Here is the code based on your code snippet:\r\n\r\n```JavaScript\r\nvar speech = new Speech(\"de_DE\");\r\n\r\nspeech.listen(function() {\r\n  console.log(\"Listening...\");\r\n}, function(error) {\r\n  console.log(error);\r\n});\r\n\r\nspeech.say(\"Hallo, du wundersch√∂ne Welt!\", function() {\r\n  console.log(\"Finished\");\r\n}, function(error) {\r\n  console.log(error);\r\n};\r\n\r\nfunction Speech(_language) {\r\n  var childProcess = require(\"child_process\");\r\n  var exec = childProcess.exec;\r\n  var language = _language || \"en_US\";\r\n\r\n  this.listen = function (success, fail) {\r\n    exec(\"osascript -e 'tell app \\\"System Events\\\" to key code {63,63}'\", function(error) {\r\n      if (error) {\r\n        fail(error);\r\n      } else {\r\n        success();\r\n      }\r\n    });\r\n  };\r\n\r\n  this.say = function (text, success, fail) {\r\n    execGetVoices(function(voices) {\r\n      execSay(text, voices[language].name, function(error) {\r\n        if (error) {\r\n          fail(error);\r\n        } else {\r\n          success();\r\n        }\r\n      }, fail);\r\n    }, fail);\r\n  };\r\n\r\n  function execGetVoices(success, fail) {\r\n    var voices = {};\r\n    exec('say -v \"?\"', function(error, stdout) {\r\n      if (error) {\r\n        fail(error);\r\n      } else {\r\n          stdout.split(\"\\n\").forEach(function(voice) {\r\n          var curr = voice.split(/\\s{1,}/);\r\n          voices[curr[1]] = {\r\n            name: curr[0],\r\n            text: curr.splice(2).join(\" \")\r\n          }\r\n        });\r\n        success(voices);\r\n      }\r\n    });\r\n  }\r\n\r\n  function execSay (text, voice, success, fail) {\r\n    exec('say -v \"' + voice + '\" \"' + text + '\"', function(error) {\r\n      if (error) {\r\n        fail(error);\r\n      } else {\r\n        success();\r\n      }\r\n    });\r\n  }\r\n};\r\n```"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/294914283",
    "html_url": "https://github.com/electron/electron/issues/9189#issuecomment-294914283",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/9189",
    "id": 294914283,
    "user": {
      "login": "ivandroid",
      "id": 9329216,
      "avatar_url": "https://avatars3.githubusercontent.com/u/9329216?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ivandroid",
      "html_url": "https://github.com/ivandroid",
      "followers_url": "https://api.github.com/users/ivandroid/followers",
      "following_url": "https://api.github.com/users/ivandroid/following{/other_user}",
      "gists_url": "https://api.github.com/users/ivandroid/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ivandroid/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ivandroid/subscriptions",
      "organizations_url": "https://api.github.com/users/ivandroid/orgs",
      "repos_url": "https://api.github.com/users/ivandroid/repos",
      "events_url": "https://api.github.com/users/ivandroid/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ivandroid/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-18T17:12:27Z",
    "updated_at": "2017-04-18T17:15:16Z",
    "body": "Ok, this code doesn't seem to be working with a signed mac os app. Is the command\r\n\r\n`osascript -e 'tell app \\\"System Events\\\" to key code {63,63}'`\r\n\r\nthe only possibility to start dictation programmatically?\r\n\r\nIf yes:\r\n\r\nWhich entitlement key/value can grant permission to execute the above command?\r\n\r\nThank you in advance!"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/299401663",
    "html_url": "https://github.com/electron/electron/issues/9189#issuecomment-299401663",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/9189",
    "id": 299401663,
    "user": {
      "login": "ivandroid",
      "id": 9329216,
      "avatar_url": "https://avatars3.githubusercontent.com/u/9329216?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ivandroid",
      "html_url": "https://github.com/ivandroid",
      "followers_url": "https://api.github.com/users/ivandroid/followers",
      "following_url": "https://api.github.com/users/ivandroid/following{/other_user}",
      "gists_url": "https://api.github.com/users/ivandroid/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ivandroid/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ivandroid/subscriptions",
      "organizations_url": "https://api.github.com/users/ivandroid/orgs",
      "repos_url": "https://api.github.com/users/ivandroid/repos",
      "events_url": "https://api.github.com/users/ivandroid/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ivandroid/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-05T07:38:10Z",
    "updated_at": "2017-05-05T07:38:10Z",
    "body": "Any possibility to start dictation programmatically?"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/309661573",
    "html_url": "https://github.com/electron/electron/issues/9189#issuecomment-309661573",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/9189",
    "id": 309661573,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2017-06-20T06:52:36Z",
    "updated_at": "2017-06-20T06:52:36Z",
    "body": "Hmm I can't find any API providing this ability, so I'm closing this as won't fix."
  }
]