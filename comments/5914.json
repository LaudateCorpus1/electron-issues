[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/224422046",
    "html_url": "https://github.com/electron/electron/issues/5914#issuecomment-224422046",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/5914",
    "id": 224422046,
    "user": {
      "login": "danhp",
      "id": 3745612,
      "avatar_url": "https://avatars3.githubusercontent.com/u/3745612?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danhp",
      "html_url": "https://github.com/danhp",
      "followers_url": "https://api.github.com/users/danhp/followers",
      "following_url": "https://api.github.com/users/danhp/following{/other_user}",
      "gists_url": "https://api.github.com/users/danhp/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danhp/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danhp/subscriptions",
      "organizations_url": "https://api.github.com/users/danhp/orgs",
      "repos_url": "https://api.github.com/users/danhp/repos",
      "events_url": "https://api.github.com/users/danhp/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danhp/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-07T21:35:50Z",
    "updated_at": "2016-06-07T21:35:50Z",
    "body": "This seems to be behaving correctly as the origin for the coordinate system is at the lower left of the main screen. In this case:\n![untitled](https://cloud.githubusercontent.com/assets/3745612/15875464/04f82ffc-2cd6-11e6-8a4e-3f0c01078f0e.png)\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/224423392",
    "html_url": "https://github.com/electron/electron/issues/5914#issuecomment-224423392",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/5914",
    "id": 224423392,
    "user": {
      "login": "OlsonDev",
      "id": 308072,
      "avatar_url": "https://avatars2.githubusercontent.com/u/308072?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/OlsonDev",
      "html_url": "https://github.com/OlsonDev",
      "followers_url": "https://api.github.com/users/OlsonDev/followers",
      "following_url": "https://api.github.com/users/OlsonDev/following{/other_user}",
      "gists_url": "https://api.github.com/users/OlsonDev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/OlsonDev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/OlsonDev/subscriptions",
      "organizations_url": "https://api.github.com/users/OlsonDev/orgs",
      "repos_url": "https://api.github.com/users/OlsonDev/repos",
      "events_url": "https://api.github.com/users/OlsonDev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/OlsonDev/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-07T21:41:19Z",
    "updated_at": "2016-06-07T21:41:19Z",
    "body": "@danhp If the origin was there, I don't see how the coordinates could be `[-2321, 23]` -- his monitor is only 1920px wide. From what I can tell, it should be `[-1920, 23]`.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/224424948",
    "html_url": "https://github.com/electron/electron/issues/5914#issuecomment-224424948",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/5914",
    "id": 224424948,
    "user": {
      "login": "danhp",
      "id": 3745612,
      "avatar_url": "https://avatars3.githubusercontent.com/u/3745612?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danhp",
      "html_url": "https://github.com/danhp",
      "followers_url": "https://api.github.com/users/danhp/followers",
      "following_url": "https://api.github.com/users/danhp/following{/other_user}",
      "gists_url": "https://api.github.com/users/danhp/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danhp/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danhp/subscriptions",
      "organizations_url": "https://api.github.com/users/danhp/orgs",
      "repos_url": "https://api.github.com/users/danhp/repos",
      "events_url": "https://api.github.com/users/danhp/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danhp/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-07T21:47:30Z",
    "updated_at": "2016-06-07T21:48:23Z",
    "body": "@OlsonDev That would be if the edges were exactly aligned.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/224478051",
    "html_url": "https://github.com/electron/electron/issues/5914#issuecomment-224478051",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/5914",
    "id": 224478051,
    "user": {
      "login": "MarshallOfSound",
      "id": 6634592,
      "avatar_url": "https://avatars0.githubusercontent.com/u/6634592?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarshallOfSound",
      "html_url": "https://github.com/MarshallOfSound",
      "followers_url": "https://api.github.com/users/MarshallOfSound/followers",
      "following_url": "https://api.github.com/users/MarshallOfSound/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarshallOfSound/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarshallOfSound/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarshallOfSound/subscriptions",
      "organizations_url": "https://api.github.com/users/MarshallOfSound/orgs",
      "repos_url": "https://api.github.com/users/MarshallOfSound/repos",
      "events_url": "https://api.github.com/users/MarshallOfSound/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarshallOfSound/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-08T03:27:20Z",
    "updated_at": "2016-06-08T03:27:20Z",
    "body": "@danhp Let's assume that the origin is where you say it is (bottom left of the main screen).\n\nGiven the screen dimensions the following values would be expected values\n\n``` js\n// Top left of left monitor\n[-1920, 709]\n\n// Top right of left monitor\n[0, 709]\n```\n\nHowever, as you can see, those values are nothing like what we actually get.\n\n> That would be if the edges were exactly aligned.\n\nI'm not sure what you mean by this, it doesn't matter whether the edges are aligned or not.  You can see the `getAllScreens()` returns a workarea for the left screen of `x = -1920` which means it's x range is `-1920 --> 0`.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/224478417",
    "html_url": "https://github.com/electron/electron/issues/5914#issuecomment-224478417",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/5914",
    "id": 224478417,
    "user": {
      "login": "danhp",
      "id": 3745612,
      "avatar_url": "https://avatars3.githubusercontent.com/u/3745612?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danhp",
      "html_url": "https://github.com/danhp",
      "followers_url": "https://api.github.com/users/danhp/followers",
      "following_url": "https://api.github.com/users/danhp/following{/other_user}",
      "gists_url": "https://api.github.com/users/danhp/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danhp/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danhp/subscriptions",
      "organizations_url": "https://api.github.com/users/danhp/orgs",
      "repos_url": "https://api.github.com/users/danhp/repos",
      "events_url": "https://api.github.com/users/danhp/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danhp/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-08T03:30:51Z",
    "updated_at": "2016-06-08T03:34:37Z",
    "body": "You're allowed to stick the window further than the edge of the screen.\n\nEdit:\nWhy would top right be 0? it should be 0 - window.width which is in the ball park of what you have.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/224479706",
    "html_url": "https://github.com/electron/electron/issues/5914#issuecomment-224479706",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/5914",
    "id": 224479706,
    "user": {
      "login": "MarshallOfSound",
      "id": 6634592,
      "avatar_url": "https://avatars0.githubusercontent.com/u/6634592?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarshallOfSound",
      "html_url": "https://github.com/MarshallOfSound",
      "followers_url": "https://api.github.com/users/MarshallOfSound/followers",
      "following_url": "https://api.github.com/users/MarshallOfSound/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarshallOfSound/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarshallOfSound/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarshallOfSound/subscriptions",
      "organizations_url": "https://api.github.com/users/MarshallOfSound/orgs",
      "repos_url": "https://api.github.com/users/MarshallOfSound/repos",
      "events_url": "https://api.github.com/users/MarshallOfSound/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarshallOfSound/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-08T03:43:20Z",
    "updated_at": "2016-06-08T03:43:20Z",
    "body": "> You're allowed to stick the window further than the edge of the screen.\n\nThat might explain the interesting `getPosition` values but it doesn't explain why the `getAllScreens()` output doesn't match those values.\n\n> Why would top right be 0? it should be 0 - window.width which is in the ball park of what you have.\n\nIf the origin is `[0, 0]` the top right of the left monitor is **directly above** the origin.  Therefore `dX` is 0 and `dY` is the height of the right monitor.\n\nHence\n`[0, 709]`\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/224481860",
    "html_url": "https://github.com/electron/electron/issues/5914#issuecomment-224481860",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/5914",
    "id": 224481860,
    "user": {
      "login": "danhp",
      "id": 3745612,
      "avatar_url": "https://avatars3.githubusercontent.com/u/3745612?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danhp",
      "html_url": "https://github.com/danhp",
      "followers_url": "https://api.github.com/users/danhp/followers",
      "following_url": "https://api.github.com/users/danhp/following{/other_user}",
      "gists_url": "https://api.github.com/users/danhp/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danhp/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danhp/subscriptions",
      "organizations_url": "https://api.github.com/users/danhp/orgs",
      "repos_url": "https://api.github.com/users/danhp/repos",
      "events_url": "https://api.github.com/users/danhp/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danhp/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-08T04:05:26Z",
    "updated_at": "2016-06-08T04:05:26Z",
    "body": "Made a mistake earlier, the origin is actually at the top left and the y axis is inverted. But it doesn't change the reasoning as we're dealing in `x`.\n`getAllScreens()` is outputting the correct values as those are the dimensions of the visible sections.\n\n> If the origin is [0, 0] the top right of the left monitor is directly above the origin. Therefore dX is 0 and dY is the height of the right monitor.\n\nThe window's origin is also on the left, therefore to get an `x = 0` it would need to be on the right screen given the current configuration.\n\nWent through the code and it is improbable that the coordinate system is not implemented correctly as we're simply making a native call.\nhttps://github.com/electron/electron/blob/fe4b957587104b0ce138cdf9315933f96fd8f570/atom/browser/native_window_mac.mm#L683\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/224483287",
    "html_url": "https://github.com/electron/electron/issues/5914#issuecomment-224483287",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/5914",
    "id": 224483287,
    "user": {
      "login": "MarshallOfSound",
      "id": 6634592,
      "avatar_url": "https://avatars0.githubusercontent.com/u/6634592?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarshallOfSound",
      "html_url": "https://github.com/MarshallOfSound",
      "followers_url": "https://api.github.com/users/MarshallOfSound/followers",
      "following_url": "https://api.github.com/users/MarshallOfSound/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarshallOfSound/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarshallOfSound/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarshallOfSound/subscriptions",
      "organizations_url": "https://api.github.com/users/MarshallOfSound/orgs",
      "repos_url": "https://api.github.com/users/MarshallOfSound/repos",
      "events_url": "https://api.github.com/users/MarshallOfSound/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarshallOfSound/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-08T04:19:39Z",
    "updated_at": "2016-06-08T04:19:39Z",
    "body": "> The window's origin is also on the left, therefore to get an x = 0 it would need to be on the right screen given the current configuration.\n\nI thought we were working with approximations. 😄   If the origin is on the **left** of the **right** monitor, \nthen if the window is on the far **right** of the **left** monitor the `dX` should be more or less 0.  (It might be `-1`).  On windows the change between monitors is indeed 1.\n\nThe main point being it shouldn't just jump `1196`.\n\n## The main point for this issue\n\nGiven a multi monitor set up, when we try and restore the window to a previously saved location, that location might not be there anymore.  With the current electron API this is not blocked, the window is simply moved off screen and the user can't do anything to bring it back.  To solve this we introduced code to check if the position was valid before hand.  However with the method outputs on OS X this is impossible.\n\nLet me present you with this sample code to determine if a given x and y coordinate pair is inside a screen\n\n``` js\nposition = getAPositionSomehow();\n\nlet inBounds = false;\nif (position) {\n  screen.getAllDisplays().forEach((display) => {\n    if (position[0] >= display.workArea.x &&\n        position[0] <= display.workArea.x + display.workArea.width &&\n        position[1] >= display.workArea.y &&\n        position[1] <= display.workArea.y + display.workArea.height) {\n      inBounds = true;\n    }\n  });\n}\n```\n\nThis code works correctly on all platforms EXCEPT OS X due to the irregularities in `getAllDisplays()` and the possible outputs of `getPosition()`.  Surely you can see that this inconsistency causes issues.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/224563375",
    "html_url": "https://github.com/electron/electron/issues/5914#issuecomment-224563375",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/5914",
    "id": 224563375,
    "user": {
      "login": "danhp",
      "id": 3745612,
      "avatar_url": "https://avatars3.githubusercontent.com/u/3745612?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danhp",
      "html_url": "https://github.com/danhp",
      "followers_url": "https://api.github.com/users/danhp/followers",
      "following_url": "https://api.github.com/users/danhp/following{/other_user}",
      "gists_url": "https://api.github.com/users/danhp/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danhp/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danhp/subscriptions",
      "organizations_url": "https://api.github.com/users/danhp/orgs",
      "repos_url": "https://api.github.com/users/danhp/repos",
      "events_url": "https://api.github.com/users/danhp/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danhp/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-08T11:34:47Z",
    "updated_at": "2016-06-08T11:34:47Z",
    "body": "Instead of doing bound checks with just the origin point you can do it by getting the screen which holds the most of the window (greatest area).\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/224564530",
    "html_url": "https://github.com/electron/electron/issues/5914#issuecomment-224564530",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/5914",
    "id": 224564530,
    "user": {
      "login": "MarshallOfSound",
      "id": 6634592,
      "avatar_url": "https://avatars0.githubusercontent.com/u/6634592?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarshallOfSound",
      "html_url": "https://github.com/MarshallOfSound",
      "followers_url": "https://api.github.com/users/MarshallOfSound/followers",
      "following_url": "https://api.github.com/users/MarshallOfSound/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarshallOfSound/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarshallOfSound/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarshallOfSound/subscriptions",
      "organizations_url": "https://api.github.com/users/MarshallOfSound/orgs",
      "repos_url": "https://api.github.com/users/MarshallOfSound/repos",
      "events_url": "https://api.github.com/users/MarshallOfSound/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarshallOfSound/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-08T11:40:35Z",
    "updated_at": "2016-06-08T11:40:35Z",
    "body": "@danhp The main issue of using https://github.com/electron/electron/blob/master/docs/api/screen.md#screengetdisplaymatchingrect is this.\n\nGiven the overlap that looks like this \n\n![overlap](https://cloud.githubusercontent.com/assets/6634592/15893181/7b733366-2dc1-11e6-888f-172e655fb03b.png)\n\nIt would return the blue screen, when that window is in fact unusable as the only way to move the window is the top bar which is off screen?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/224565386",
    "html_url": "https://github.com/electron/electron/issues/5914#issuecomment-224565386",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/5914",
    "id": 224565386,
    "user": {
      "login": "danhp",
      "id": 3745612,
      "avatar_url": "https://avatars3.githubusercontent.com/u/3745612?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danhp",
      "html_url": "https://github.com/danhp",
      "followers_url": "https://api.github.com/users/danhp/followers",
      "following_url": "https://api.github.com/users/danhp/following{/other_user}",
      "gists_url": "https://api.github.com/users/danhp/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danhp/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danhp/subscriptions",
      "organizations_url": "https://api.github.com/users/danhp/orgs",
      "repos_url": "https://api.github.com/users/danhp/repos",
      "events_url": "https://api.github.com/users/danhp/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danhp/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-08T11:44:44Z",
    "updated_at": "2016-06-08T11:44:44Z",
    "body": "Then set legal values to the window, you have access to those.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/224568788",
    "html_url": "https://github.com/electron/electron/issues/5914#issuecomment-224568788",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/5914",
    "id": 224568788,
    "user": {
      "login": "MarshallOfSound",
      "id": 6634592,
      "avatar_url": "https://avatars0.githubusercontent.com/u/6634592?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarshallOfSound",
      "html_url": "https://github.com/MarshallOfSound",
      "followers_url": "https://api.github.com/users/MarshallOfSound/followers",
      "following_url": "https://api.github.com/users/MarshallOfSound/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarshallOfSound/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarshallOfSound/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarshallOfSound/subscriptions",
      "organizations_url": "https://api.github.com/users/MarshallOfSound/orgs",
      "repos_url": "https://api.github.com/users/MarshallOfSound/repos",
      "events_url": "https://api.github.com/users/MarshallOfSound/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarshallOfSound/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-08T12:02:44Z",
    "updated_at": "2016-06-08T12:02:44Z",
    "body": "That is the entire point of this issue 😕 \n\nGiven the scenario where you have two monitors, positioned vertically let's say.  When you close the electron application I store the the position the window was at just before we closed.  \n\nThen you unplug the top display, and reopen the application.  Although the last saved position was valid when it was saved, it is no longer valid and somehow we need to test for this.  The expected way to test for this is to compare the origin coordinate of the window with the known workAreas of the screens.\n\n![config3](https://cloud.githubusercontent.com/assets/6634592/15893554/cee305b0-2dc3-11e6-87e2-65858b981ef3.png)\n\nImage above^^\n\nThe problem with this methodology is that on OS X the work areas do not match up with the return values of `getPosition()`.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/224765929",
    "html_url": "https://github.com/electron/electron/issues/5914#issuecomment-224765929",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/5914",
    "id": 224765929,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2016-06-08T23:55:28Z",
    "updated_at": "2016-06-08T23:55:28Z",
    "body": "@MarshallOfSound The APIs are just returning the values given by OS X, I don't think we can do anything on Electron's side to improve the situation.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/224785732",
    "html_url": "https://github.com/electron/electron/issues/5914#issuecomment-224785732",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/5914",
    "id": 224785732,
    "user": {
      "login": "MarshallOfSound",
      "id": 6634592,
      "avatar_url": "https://avatars0.githubusercontent.com/u/6634592?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarshallOfSound",
      "html_url": "https://github.com/MarshallOfSound",
      "followers_url": "https://api.github.com/users/MarshallOfSound/followers",
      "following_url": "https://api.github.com/users/MarshallOfSound/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarshallOfSound/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarshallOfSound/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarshallOfSound/subscriptions",
      "organizations_url": "https://api.github.com/users/MarshallOfSound/orgs",
      "repos_url": "https://api.github.com/users/MarshallOfSound/repos",
      "events_url": "https://api.github.com/users/MarshallOfSound/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarshallOfSound/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-09T02:31:13Z",
    "updated_at": "2016-06-09T02:31:13Z",
    "body": "@zcbenz Is there a native API that can be provided in the `screen` module then to do this test at a native level.\n\nSomething like  `display.containsPoint(point)`\n\nUsage would be something like\n\n``` js\nimport { screen } from 'electron';\n\nconst point = [-100, 27];\n\nlet validPoint = false;\nscreen.getAllDisplays().forEach((display) => {\n    validPoint = validPoint || display.containsPoint(point);\n});\n```\n\nOn a side note aswell\n\n> The APIs are just returning the values given by OS X\n\nDoes that mean OS X is bugged 😖 \n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/224788102",
    "html_url": "https://github.com/electron/electron/issues/5914#issuecomment-224788102",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/5914",
    "id": 224788102,
    "user": {
      "login": "MarshallOfSound",
      "id": 6634592,
      "avatar_url": "https://avatars0.githubusercontent.com/u/6634592?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarshallOfSound",
      "html_url": "https://github.com/MarshallOfSound",
      "followers_url": "https://api.github.com/users/MarshallOfSound/followers",
      "following_url": "https://api.github.com/users/MarshallOfSound/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarshallOfSound/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarshallOfSound/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarshallOfSound/subscriptions",
      "organizations_url": "https://api.github.com/users/MarshallOfSound/orgs",
      "repos_url": "https://api.github.com/users/MarshallOfSound/repos",
      "events_url": "https://api.github.com/users/MarshallOfSound/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarshallOfSound/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-09T02:53:35Z",
    "updated_at": "2016-06-09T02:53:48Z",
    "body": "@zcbenz Implementing this exact Chromium API but returning `null` instead of returning the Primary Screen by default would also work\n\n**Mac**\nhttps://chromium.googlesource.com/chromium/src.git/+/44.0.2403.88/ui/gfx/screen_mac.mm#141\n\n**Win**\nhttps://chromium.googlesource.com/chromium/src.git/+/44.0.2403.88/ui/gfx/screen_win.cc#138\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/247971111",
    "html_url": "https://github.com/electron/electron/issues/5914#issuecomment-247971111",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/5914",
    "id": 247971111,
    "user": {
      "login": "andymartinwork",
      "id": 1785253,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1785253?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/andymartinwork",
      "html_url": "https://github.com/andymartinwork",
      "followers_url": "https://api.github.com/users/andymartinwork/followers",
      "following_url": "https://api.github.com/users/andymartinwork/following{/other_user}",
      "gists_url": "https://api.github.com/users/andymartinwork/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/andymartinwork/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andymartinwork/subscriptions",
      "organizations_url": "https://api.github.com/users/andymartinwork/orgs",
      "repos_url": "https://api.github.com/users/andymartinwork/repos",
      "events_url": "https://api.github.com/users/andymartinwork/events{/privacy}",
      "received_events_url": "https://api.github.com/users/andymartinwork/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-19T11:41:40Z",
    "updated_at": "2016-09-19T11:41:40Z",
    "body": "@MarshallOfSound \n\nIf you guys in Electron want to do something about this, there is an API in OSX available that displays the visible frame from the current screen. For example:\n\n```\n        // Retrieve information for the display that contains the window.\n        NSScreen* screen = [window screen];\n        if (screen == nil)\n            screen = [NSScreen mainScreen];\n        NSRect frame = [screen frame];\n        NSRect visibleFrame = [screen visibleFrame];\n```\n\nThen you can calculate how to modify the frame of the window appropriately.\n\nUnfortunately, there is no way to get this in Electron right now, causing me a lot of trouble at the moment...\n"
  }
]