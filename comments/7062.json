[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/244479570",
    "html_url": "https://github.com/electron/electron/pull/7062#issuecomment-244479570",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7062",
    "id": 244479570,
    "user": {
      "login": "zeke",
      "id": 2289,
      "avatar_url": "https://avatars2.githubusercontent.com/u/2289?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zeke",
      "html_url": "https://github.com/zeke",
      "followers_url": "https://api.github.com/users/zeke/followers",
      "following_url": "https://api.github.com/users/zeke/following{/other_user}",
      "gists_url": "https://api.github.com/users/zeke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zeke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zeke/subscriptions",
      "organizations_url": "https://api.github.com/users/zeke/orgs",
      "repos_url": "https://api.github.com/users/zeke/repos",
      "events_url": "https://api.github.com/users/zeke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zeke/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2016-09-02T20:27:56Z",
    "updated_at": "2016-09-02T20:27:56Z",
    "body": "Hi @gerhardberger. What is the use case for this new method?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/244485025",
    "html_url": "https://github.com/electron/electron/pull/7062#issuecomment-244485025",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7062",
    "id": 244485025,
    "user": {
      "login": "gerhardberger",
      "id": 1059699,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1059699?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gerhardberger",
      "html_url": "https://github.com/gerhardberger",
      "followers_url": "https://api.github.com/users/gerhardberger/followers",
      "following_url": "https://api.github.com/users/gerhardberger/following{/other_user}",
      "gists_url": "https://api.github.com/users/gerhardberger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gerhardberger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gerhardberger/subscriptions",
      "organizations_url": "https://api.github.com/users/gerhardberger/orgs",
      "repos_url": "https://api.github.com/users/gerhardberger/repos",
      "events_url": "https://api.github.com/users/gerhardberger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gerhardberger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-02T20:54:31Z",
    "updated_at": "2016-09-02T20:54:31Z",
    "body": "@zeke, it generates a `'paint'` event on-demand with the current frame. This can be used when you need the latest frame but no change happens on the page, e.g. you start rendering to a new place and you want an initial frame.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/248877818",
    "html_url": "https://github.com/electron/electron/pull/7062#issuecomment-248877818",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7062",
    "id": 248877818,
    "user": {
      "login": "danburzo",
      "id": 205375,
      "avatar_url": "https://avatars0.githubusercontent.com/u/205375?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danburzo",
      "html_url": "https://github.com/danburzo",
      "followers_url": "https://api.github.com/users/danburzo/followers",
      "following_url": "https://api.github.com/users/danburzo/following{/other_user}",
      "gists_url": "https://api.github.com/users/danburzo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danburzo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danburzo/subscriptions",
      "organizations_url": "https://api.github.com/users/danburzo/orgs",
      "repos_url": "https://api.github.com/users/danburzo/repos",
      "events_url": "https://api.github.com/users/danburzo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danburzo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-22T11:32:31Z",
    "updated_at": "2016-09-22T11:32:31Z",
    "body": "This is great! I was doing a `stopPainting()/startPainting()` combo to force a `paint` event. \n\nThe use-case (for me, at least) is you want to grab a PNG representation of the page _after_ a certain client event is emitted, and since the Buffer is volatile, I'm not sure how you'd have done it previously (other than triggering a paint event).\n"
  }
]