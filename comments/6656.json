[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/236340999",
    "html_url": "https://github.com/electron/electron/issues/6656#issuecomment-236340999",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/6656",
    "id": 236340999,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2016-07-30T04:25:36Z",
    "updated_at": "2016-07-30T04:25:36Z",
    "body": "You can fork a script by calling `spawn(process.execPath, ['script.js'])`, it is exactly how `fork` is implemented.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/236359934",
    "html_url": "https://github.com/electron/electron/issues/6656#issuecomment-236359934",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/6656",
    "id": 236359934,
    "user": {
      "login": "sindresorhus",
      "id": 170270,
      "avatar_url": "https://avatars2.githubusercontent.com/u/170270?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sindresorhus",
      "html_url": "https://github.com/sindresorhus",
      "followers_url": "https://api.github.com/users/sindresorhus/followers",
      "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
      "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
      "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
      "repos_url": "https://api.github.com/users/sindresorhus/repos",
      "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-30T11:22:43Z",
    "updated_at": "2016-07-30T11:22:43Z",
    "body": "That leaves out the IPC channel, which is something I need. It's also a somewhat surprising behavior which should be documented.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/236463584",
    "html_url": "https://github.com/electron/electron/issues/6656#issuecomment-236463584",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/6656",
    "id": 236463584,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2016-07-31T23:31:27Z",
    "updated_at": "2016-07-31T23:31:27Z",
    "body": "The IPC channel can be added by setting a fd as `ipc`:\n\n``` js\n    // Leave stdin open for the IPC channel. stdout and stderr should be the\n    // same as the parent's if silent isn't set.\n    options.stdio = options.silent ? ['pipe', 'pipe', 'pipe', 'ipc'] :\n        [0, 1, 2, 'ipc'];\n```\n\nI agree we should document the behavior of `child_process.fork`.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/236464014",
    "html_url": "https://github.com/electron/electron/issues/6656#issuecomment-236464014",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/6656",
    "id": 236464014,
    "user": {
      "login": "sindresorhus",
      "id": 170270,
      "avatar_url": "https://avatars2.githubusercontent.com/u/170270?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sindresorhus",
      "html_url": "https://github.com/sindresorhus",
      "followers_url": "https://api.github.com/users/sindresorhus/followers",
      "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
      "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
      "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
      "repos_url": "https://api.github.com/users/sindresorhus/repos",
      "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-31T23:39:31Z",
    "updated_at": "2016-07-31T23:39:31Z",
    "body": "@zcbenz I'm trying to add support for Electron in [AVA](https://github.com/avajs/ava), so I can test modules for Electron (that needs `require('electron')`). I'm aware I could change the `stdio` in `spawn`, but I'm not interested in changing to use `spawn`. I think a custom option to `fork` would be much more natural, maybe `{electronRunAsNode: false}`. Electron shouldn't change the behavior of common Node.js API's without providing a super easy way to restore the original behavior.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/236465350",
    "html_url": "https://github.com/electron/electron/issues/6656#issuecomment-236465350",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/6656",
    "id": 236465350,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2016-08-01T00:04:46Z",
    "updated_at": "2016-08-01T00:04:46Z",
    "body": "The `fork` means executing the script with current process. However Electron doesn't really have a mode to run scripts, it is a feature of the default app. If you packaged your app and doesn't provide a way to run scripts in your app, the default way of `fork` will not work at all.\n\nAlso on macOS there two types of process, if you run the script in the main process, a new instance of your app will be started, if you run it in the renderer process, the script will be run in background. It is unclear which way would be expected.\n\nSo if we want to add `{electronRunAsNode: false}` that can really work, we have to add a new patch in Node and a mode of Electron, which is not the original behavior.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/239315770",
    "html_url": "https://github.com/electron/electron/issues/6656#issuecomment-239315770",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/6656",
    "id": 239315770,
    "user": {
      "login": "sindresorhus",
      "id": 170270,
      "avatar_url": "https://avatars2.githubusercontent.com/u/170270?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sindresorhus",
      "html_url": "https://github.com/sindresorhus",
      "followers_url": "https://api.github.com/users/sindresorhus/followers",
      "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
      "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
      "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
      "repos_url": "https://api.github.com/users/sindresorhus/repos",
      "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-11T22:43:54Z",
    "updated_at": "2016-08-11T22:43:54Z",
    "body": "> The fork means executing the script with current process. However Electron doesn't really have a mode to run scripts, it is a feature of the default app. If you packaged your app and doesn't provide a way to run scripts in your app, the default way of fork will not work at all.\n\nThat's fine. I'm trying to use the `electron` binary instead of `node`, not use it in a packaged app.\n\n> Also on macOS there two types of process, if you run the script in the main process, a new instance of your app will be started, if you run it in the renderer process, the script will be run in background. It is unclear which way would be expected.\n\nThis is about running something made for Node.js in Electron using the `electron` binary, so it will always be in the main process.\n\n## \n\nAll I want it to have the behavior of not `ELECTRON_RUN_AS_NODE=1`, with all the side-effects you mentioned.\n"
  }
]