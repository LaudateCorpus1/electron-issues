[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/95296503",
    "html_url": "https://github.com/electron/electron/issues/1465#issuecomment-95296503",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1465",
    "id": 95296503,
    "user": {
      "login": "steelbrain",
      "id": 4278113,
      "avatar_url": "https://avatars2.githubusercontent.com/u/4278113?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/steelbrain",
      "html_url": "https://github.com/steelbrain",
      "followers_url": "https://api.github.com/users/steelbrain/followers",
      "following_url": "https://api.github.com/users/steelbrain/following{/other_user}",
      "gists_url": "https://api.github.com/users/steelbrain/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/steelbrain/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/steelbrain/subscriptions",
      "organizations_url": "https://api.github.com/users/steelbrain/orgs",
      "repos_url": "https://api.github.com/users/steelbrain/repos",
      "events_url": "https://api.github.com/users/steelbrain/events{/privacy}",
      "received_events_url": "https://api.github.com/users/steelbrain/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-22T18:40:56Z",
    "updated_at": "2015-04-22T18:46:27Z",
    "body": "``` html\n<!-- index.html -->\n<!DOCTYPE HTML>\n<html>\n  <body>\n    <input id=\"TextInput\" type=\"text\" />\n    <script src=\"main.js\"></script>\n  </body>\n</html>\n```\n\n``` js\n// main.js\nvar Element = document.getElementById(\"TextInput\");\nElement.addEventListener(\"focus\", function(){\n  console.log(\"Input Element was focused\");\n}, true);\n```\n\n**Resources**:\n- [Focus Event MDN](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/focus)\n- [HTMLElement.prototype.focus](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/focus)\n- [more](http://lmgtfy.com/?q=focus+html5+event)\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/95306999",
    "html_url": "https://github.com/electron/electron/issues/1465#issuecomment-95306999",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1465",
    "id": 95306999,
    "user": {
      "login": "thyrrestrup",
      "id": 415042,
      "avatar_url": "https://avatars3.githubusercontent.com/u/415042?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/thyrrestrup",
      "html_url": "https://github.com/thyrrestrup",
      "followers_url": "https://api.github.com/users/thyrrestrup/followers",
      "following_url": "https://api.github.com/users/thyrrestrup/following{/other_user}",
      "gists_url": "https://api.github.com/users/thyrrestrup/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/thyrrestrup/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/thyrrestrup/subscriptions",
      "organizations_url": "https://api.github.com/users/thyrrestrup/orgs",
      "repos_url": "https://api.github.com/users/thyrrestrup/repos",
      "events_url": "https://api.github.com/users/thyrrestrup/events{/privacy}",
      "received_events_url": "https://api.github.com/users/thyrrestrup/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-22T19:09:14Z",
    "updated_at": "2015-04-22T19:12:25Z",
    "body": "@steelbrain - Thanks for the example but this will only work as long as I know the id of the input field and I really have no way of knowing because the client can link to all sorts of webpages from within the kiosk.\nI was thinking something along these lines:\n\n``` javascript\nwindow.addEventListener('click', function(event) {\n    var type = event.toElement.type.toLowerCase();\n    var tag = event.toElement.tagName.toLowerCase();\n\n    if((tag == 'input' && (type == 'text' || type == 'password' || type == 'url' || type == 'email'))\n       || tag == 'textarea' )\n    {\n        console.log('show keyboard');    \n    }\n});\n```\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/95307750",
    "html_url": "https://github.com/electron/electron/issues/1465#issuecomment-95307750",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1465",
    "id": 95307750,
    "user": {
      "login": "steelbrain",
      "id": 4278113,
      "avatar_url": "https://avatars2.githubusercontent.com/u/4278113?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/steelbrain",
      "html_url": "https://github.com/steelbrain",
      "followers_url": "https://api.github.com/users/steelbrain/followers",
      "following_url": "https://api.github.com/users/steelbrain/following{/other_user}",
      "gists_url": "https://api.github.com/users/steelbrain/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/steelbrain/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/steelbrain/subscriptions",
      "organizations_url": "https://api.github.com/users/steelbrain/orgs",
      "repos_url": "https://api.github.com/users/steelbrain/repos",
      "events_url": "https://api.github.com/users/steelbrain/events{/privacy}",
      "received_events_url": "https://api.github.com/users/steelbrain/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-22T19:13:03Z",
    "updated_at": "2015-04-22T19:15:36Z",
    "body": "I would still prefer something like this\n\n``` js\nArray.prototype.forEach.call(document.querySelectorAll('input[type=text], input[type=password], input[type=url], input[type=email]'),\n  function(Input){\n    Input.addEventListener(\"focus\", function(){\n      console.log(\"Input Element was focused\");\n    }, true);\n  });\n```\n\nand Your example won't work if an input element is focus after clicking on a label, 'cause that would be a click on the label and not the input itself\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/95308252",
    "html_url": "https://github.com/electron/electron/issues/1465#issuecomment-95308252",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1465",
    "id": 95308252,
    "user": {
      "login": "thyrrestrup",
      "id": 415042,
      "avatar_url": "https://avatars3.githubusercontent.com/u/415042?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/thyrrestrup",
      "html_url": "https://github.com/thyrrestrup",
      "followers_url": "https://api.github.com/users/thyrrestrup/followers",
      "following_url": "https://api.github.com/users/thyrrestrup/following{/other_user}",
      "gists_url": "https://api.github.com/users/thyrrestrup/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/thyrrestrup/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/thyrrestrup/subscriptions",
      "organizations_url": "https://api.github.com/users/thyrrestrup/orgs",
      "repos_url": "https://api.github.com/users/thyrrestrup/repos",
      "events_url": "https://api.github.com/users/thyrrestrup/events{/privacy}",
      "received_events_url": "https://api.github.com/users/thyrrestrup/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-22T19:15:50Z",
    "updated_at": "2015-04-22T19:16:57Z",
    "body": "@steelbrain - Yes that's interesting, Thanks\nI'm wondering if any of these ideas will work if the page contains iframes which contains input fields I'll do some more testing.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/95323175",
    "html_url": "https://github.com/electron/electron/issues/1465#issuecomment-95323175",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1465",
    "id": 95323175,
    "user": {
      "login": "steelbrain",
      "id": 4278113,
      "avatar_url": "https://avatars2.githubusercontent.com/u/4278113?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/steelbrain",
      "html_url": "https://github.com/steelbrain",
      "followers_url": "https://api.github.com/users/steelbrain/followers",
      "following_url": "https://api.github.com/users/steelbrain/following{/other_user}",
      "gists_url": "https://api.github.com/users/steelbrain/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/steelbrain/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/steelbrain/subscriptions",
      "organizations_url": "https://api.github.com/users/steelbrain/orgs",
      "repos_url": "https://api.github.com/users/steelbrain/repos",
      "events_url": "https://api.github.com/users/steelbrain/events{/privacy}",
      "received_events_url": "https://api.github.com/users/steelbrain/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-22T20:14:11Z",
    "updated_at": "2015-04-22T20:14:11Z",
    "body": "Note: It's a javascript thing as you can see and not related to electron, IMHO it makes no sense to add it to core as this can be done in JS easily. so this issue should be closed.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/95501766",
    "html_url": "https://github.com/electron/electron/issues/1465#issuecomment-95501766",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1465",
    "id": 95501766,
    "user": {
      "login": "thyrrestrup",
      "id": 415042,
      "avatar_url": "https://avatars3.githubusercontent.com/u/415042?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/thyrrestrup",
      "html_url": "https://github.com/thyrrestrup",
      "followers_url": "https://api.github.com/users/thyrrestrup/followers",
      "following_url": "https://api.github.com/users/thyrrestrup/following{/other_user}",
      "gists_url": "https://api.github.com/users/thyrrestrup/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/thyrrestrup/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/thyrrestrup/subscriptions",
      "organizations_url": "https://api.github.com/users/thyrrestrup/orgs",
      "repos_url": "https://api.github.com/users/thyrrestrup/repos",
      "events_url": "https://api.github.com/users/thyrrestrup/events{/privacy}",
      "received_events_url": "https://api.github.com/users/thyrrestrup/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-23T09:14:31Z",
    "updated_at": "2015-04-23T09:14:31Z",
    "body": "I agree this could possibly be hacked together in javascript.. but it is very difficult to get working on every web site out there.\nIt would be a great feature if this was a native event.\n\nChromium Embedded Framework has the following method:\nOnFocusedNodeChanged - Called when a new node in the the browser gets focus. The |node| value may be empty if no specific node has gained focus. The node object passed to this method represents a snapshot of the DOM at the time this method is executed. DOM objects are only valid for the scope of this method. Do not keep references to or attempt to access any DOM objects outside the scope of this method.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/95505360",
    "html_url": "https://github.com/electron/electron/issues/1465#issuecomment-95505360",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1465",
    "id": 95505360,
    "user": {
      "login": "steelbrain",
      "id": 4278113,
      "avatar_url": "https://avatars2.githubusercontent.com/u/4278113?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/steelbrain",
      "html_url": "https://github.com/steelbrain",
      "followers_url": "https://api.github.com/users/steelbrain/followers",
      "following_url": "https://api.github.com/users/steelbrain/following{/other_user}",
      "gists_url": "https://api.github.com/users/steelbrain/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/steelbrain/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/steelbrain/subscriptions",
      "organizations_url": "https://api.github.com/users/steelbrain/orgs",
      "repos_url": "https://api.github.com/users/steelbrain/repos",
      "events_url": "https://api.github.com/users/steelbrain/events{/privacy}",
      "received_events_url": "https://api.github.com/users/steelbrain/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-23T09:18:54Z",
    "updated_at": "2015-04-23T09:18:54Z",
    "body": "Hahaha, You are kidding me, aren't You?\nIf we are gonna embed everything in the core, then what do we have JS for?\nand Please do explain how is it \"very\" difficult to get working on every website out there, I had heard that things work differently from browser to browser.\nBut site-to-site is something I am hearing for the first time.\n\nAnyways, The JS way is the \"right\" way to do it, and If you find it hacky, then You need to work on your JS skills my friend :) http://www.codecademy.com/en/tracks/javascript would be a good starting point.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/95858978",
    "html_url": "https://github.com/electron/electron/issues/1465#issuecomment-95858978",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1465",
    "id": 95858978,
    "user": {
      "login": "thyrrestrup",
      "id": 415042,
      "avatar_url": "https://avatars3.githubusercontent.com/u/415042?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/thyrrestrup",
      "html_url": "https://github.com/thyrrestrup",
      "followers_url": "https://api.github.com/users/thyrrestrup/followers",
      "following_url": "https://api.github.com/users/thyrrestrup/following{/other_user}",
      "gists_url": "https://api.github.com/users/thyrrestrup/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/thyrrestrup/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/thyrrestrup/subscriptions",
      "organizations_url": "https://api.github.com/users/thyrrestrup/orgs",
      "repos_url": "https://api.github.com/users/thyrrestrup/repos",
      "events_url": "https://api.github.com/users/thyrrestrup/events{/privacy}",
      "received_events_url": "https://api.github.com/users/thyrrestrup/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-24T09:02:02Z",
    "updated_at": "2015-04-24T09:02:02Z",
    "body": "You should learn some manners.\nI'm only suggesting to implement a feature already present in other frameworks built on top of chromium.\n\nI see the following problems using javascript:\nWhat if the input fields are inside multiple levels of iframe.\nWhat if the input fields are added per user interaction after the script has run.\n\nBy the way: http://toddmotto.com/ditch-the-array-foreach-call-nodelist-hack/\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/95877533",
    "html_url": "https://github.com/electron/electron/issues/1465#issuecomment-95877533",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1465",
    "id": 95877533,
    "user": {
      "login": "steelbrain",
      "id": 4278113,
      "avatar_url": "https://avatars2.githubusercontent.com/u/4278113?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/steelbrain",
      "html_url": "https://github.com/steelbrain",
      "followers_url": "https://api.github.com/users/steelbrain/followers",
      "following_url": "https://api.github.com/users/steelbrain/following{/other_user}",
      "gists_url": "https://api.github.com/users/steelbrain/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/steelbrain/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/steelbrain/subscriptions",
      "organizations_url": "https://api.github.com/users/steelbrain/orgs",
      "repos_url": "https://api.github.com/users/steelbrain/repos",
      "events_url": "https://api.github.com/users/steelbrain/events{/privacy}",
      "received_events_url": "https://api.github.com/users/steelbrain/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-24T09:53:46Z",
    "updated_at": "2015-04-24T10:22:13Z",
    "body": "I meant disrespect by no means.\nand I don't agree with 99% part of that article, and I don't believe whatever I find online. I am the author of [dQuery](https://github.com/dQuery/dQuery), and if you would goto the pull requests there and check out the latest rewrite pull request I am working on, You will realize that I am using `HTMLCollection`, `NodeList` and various others instead of mutating the type each time. and Array Prototype's methods work without a single problems on objects that have a length attribute and that keep their values in proper indexes, They can even work on a class like jQuery which uses the similar behavior.\n\nand trust me, It really doesn't make any sense to include this in the core. If one way doesn't work for you, then you can use an alternative way using javascript. I have been writing in javascript for years and haven't come across a single limitation that I was not able to come across using an alternative technique.\n\nFor your specific problem, that alternative technique would be to capture all click events to the DOM and filter them using e.target. Because it would be complex in vanilla, and You probably don't want that much complexity, You could use that rewrite branch of dQuery or jQuery maybe and set up something like.\n\n``` js\nvar $Document = $(document);\n$Document.ready(function(){\n  $Document.on('focus', 'input, textarea',function(e){\n    console.log(\"an input like thing was selected\");\n  });\n});\n```\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/96303898",
    "html_url": "https://github.com/electron/electron/issues/1465#issuecomment-96303898",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1465",
    "id": 96303898,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2015-04-26T01:37:43Z",
    "updated_at": "2015-04-26T01:37:43Z",
    "body": "All those C++ events like `OnFocusedNodeChanged` or `WebViewDidBeginEditingNotification` are emitted on the main process side, exposing them is meaningless if you want to handle them on renderer process side.\n\nI'm closing this as won't fix.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/96327938",
    "html_url": "https://github.com/electron/electron/issues/1465#issuecomment-96327938",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1465",
    "id": 96327938,
    "user": {
      "login": "thyrrestrup",
      "id": 415042,
      "avatar_url": "https://avatars3.githubusercontent.com/u/415042?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/thyrrestrup",
      "html_url": "https://github.com/thyrrestrup",
      "followers_url": "https://api.github.com/users/thyrrestrup/followers",
      "following_url": "https://api.github.com/users/thyrrestrup/following{/other_user}",
      "gists_url": "https://api.github.com/users/thyrrestrup/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/thyrrestrup/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/thyrrestrup/subscriptions",
      "organizations_url": "https://api.github.com/users/thyrrestrup/orgs",
      "repos_url": "https://api.github.com/users/thyrrestrup/repos",
      "events_url": "https://api.github.com/users/thyrrestrup/events{/privacy}",
      "received_events_url": "https://api.github.com/users/thyrrestrup/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-26T06:22:56Z",
    "updated_at": "2015-04-26T06:22:56Z",
    "body": "My original intention was to handle them on the main process. The javascript was just a work-around.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/157328019",
    "html_url": "https://github.com/electron/electron/issues/1465#issuecomment-157328019",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1465",
    "id": 157328019,
    "user": {
      "login": "kidwm",
      "id": 822446,
      "avatar_url": "https://avatars2.githubusercontent.com/u/822446?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kidwm",
      "html_url": "https://github.com/kidwm",
      "followers_url": "https://api.github.com/users/kidwm/followers",
      "following_url": "https://api.github.com/users/kidwm/following{/other_user}",
      "gists_url": "https://api.github.com/users/kidwm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kidwm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kidwm/subscriptions",
      "organizations_url": "https://api.github.com/users/kidwm/orgs",
      "repos_url": "https://api.github.com/users/kidwm/repos",
      "events_url": "https://api.github.com/users/kidwm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kidwm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-17T10:17:41Z",
    "updated_at": "2015-11-17T10:17:41Z",
    "body": "@zcbenz Or is it possible to emit an event for such like TEXT_FIELD_GET_FOCUS ?\nI'm also doing a kiosk with touch screen, this would be very helpful.\n"
  }
]