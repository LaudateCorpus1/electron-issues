[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/50619133",
    "html_url": "https://github.com/electron/electron/pull/534#issuecomment-50619133",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/534",
    "id": 50619133,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2014-07-30T14:09:52Z",
    "updated_at": "2014-07-30T14:09:52Z",
    "body": "Current API design would require users to create a new object for every shortcut they want to register, and they have to retain the shortcut objects somewhere to prevent them to be GCed, which may cause lots of extra work, we can make the API more consistent with the native `GlobalShortcutListener` class like this:\n\n``` javascript\nvar globalShortcut = require('global-shortcut');\n\n// Register a shortcut with a listener.\nvar ret = globalShortcut.register('Ctrl+X', function() { console.log('Ctrl-X is pressed'); });\n\n// The return value of `globalShortcut.register` tells whether it succeeded.\nif (ret === false)\n  console.log('registration failed');\n\n// Unregister a shortcut.\nglobalShortcut.unregister('Ctrl+X');\n\n// Unregister all shortcuts.\nglobalShortcut.unregisterAll();\n```\n\nTips on implementation:\n\nThere is a converter in `atom/common/native_mate_converters/function_converter.h` that can convert `v8::Function` to `base::Callback`, which is very useful for API implementations that take a callback. You can find examples in the `protocol` module and the `BrowserWindow.capturePage` API.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/50707331",
    "html_url": "https://github.com/electron/electron/pull/534#issuecomment-50707331",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/534",
    "id": 50707331,
    "user": {
      "login": "orzFly",
      "id": 158528,
      "avatar_url": "https://avatars1.githubusercontent.com/u/158528?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/orzFly",
      "html_url": "https://github.com/orzFly",
      "followers_url": "https://api.github.com/users/orzFly/followers",
      "following_url": "https://api.github.com/users/orzFly/following{/other_user}",
      "gists_url": "https://api.github.com/users/orzFly/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/orzFly/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/orzFly/subscriptions",
      "organizations_url": "https://api.github.com/users/orzFly/orgs",
      "repos_url": "https://api.github.com/users/orzFly/repos",
      "events_url": "https://api.github.com/users/orzFly/events{/privacy}",
      "received_events_url": "https://api.github.com/users/orzFly/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-31T02:57:01Z",
    "updated_at": "2014-07-31T02:57:01Z",
    "body": "How about support your design in CoffeeScript instead of native codes?\n\nIMO an OOP design is much more suitable.\nOn Jul 30, 2014 10:09 PM, \"Cheng Zhao\" notifications@github.com wrote:\n\n> Current API design would require users to create a new object for every\n> shortcut they want to register, and they have to retain the shortcut\n> objects somewhere to prevent them to be GCed, which may cause lots of extra\n> work, we can make the API more consistent with the native\n> GlobalShortcutListener class like this:\n> \n> var globalShortcut = require('global-shortcut');\n> // Register a shortcut with a listener.var ret = globalShortcut.register('Ctrl+X', function() { console.log('Ctrl-X is pressed'); });\n> // The return value of `globalShortcut.register` tells whether it succeeded.if (ret === false)\n>   console.log('registration failed');\n> // Unregister a shortcut.globalShortcut.unregister('Ctrl+X');\n> // Unregister all shortcuts.globalShortcut.unregisterAll();\n> \n> Tips on implementation:\n> \n> There is a converter in\n> atom/common/native_mate_converters/function_converter.h that can convert\n> v8::Function to base::Callback, which is very useful for API\n> implementations that take a callback. You can find examples in the\n> protocol module and the BrowserWindow.capturePage API.\n> \n> â€”\n> Reply to this email directly or view it on GitHub\n> https://github.com/atom/atom-shell/pull/534#issuecomment-50619133.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/50710555",
    "html_url": "https://github.com/electron/electron/pull/534#issuecomment-50710555",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/534",
    "id": 50710555,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2014-07-31T04:08:17Z",
    "updated_at": "2014-07-31T04:08:17Z",
    "body": "> How about support your design in CoffeeScript instead of native codes?\n\nWe only implement APIs in CoffeeScript when it is too hard to do in C++ (like the menu API), for this case  using C++ is quite acceptable. We can make the `GlobalShortcut` class itself a `GlobalShortcutListener::Observer` and store listeners in `std::map<ui::Accelerator, base::Closure>`, then just do some event dispatching job, our JS-C++ layer has already taken most dirty works.\n\n> IMO an OOP design is much more suitable.\n\nAPIs in atom-shell tend to have node.js style simple APIs, and only do OOP when it is really necessary.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/50712862",
    "html_url": "https://github.com/electron/electron/pull/534#issuecomment-50712862",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/534",
    "id": 50712862,
    "user": {
      "login": "hokein",
      "id": 2557445,
      "avatar_url": "https://avatars2.githubusercontent.com/u/2557445?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hokein",
      "html_url": "https://github.com/hokein",
      "followers_url": "https://api.github.com/users/hokein/followers",
      "following_url": "https://api.github.com/users/hokein/following{/other_user}",
      "gists_url": "https://api.github.com/users/hokein/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hokein/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hokein/subscriptions",
      "organizations_url": "https://api.github.com/users/hokein/orgs",
      "repos_url": "https://api.github.com/users/hokein/repos",
      "events_url": "https://api.github.com/users/hokein/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hokein/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-31T05:01:53Z",
    "updated_at": "2014-07-31T05:01:53Z",
    "body": "Done, updated to the new API interfaces. Once you are fine with the current API design, I will update the documents.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/50991992",
    "html_url": "https://github.com/electron/electron/pull/534#issuecomment-50991992",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/534",
    "id": 50991992,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2014-08-03T14:35:02Z",
    "updated_at": "2014-08-03T14:35:02Z",
    "body": "Thanks!\n"
  }
]