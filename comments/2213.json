[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/121429884",
    "html_url": "https://github.com/electron/electron/issues/2213#issuecomment-121429884",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2213",
    "id": 121429884,
    "user": {
      "login": "hokein",
      "id": 2557445,
      "avatar_url": "https://avatars2.githubusercontent.com/u/2557445?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hokein",
      "html_url": "https://github.com/hokein",
      "followers_url": "https://api.github.com/users/hokein/followers",
      "following_url": "https://api.github.com/users/hokein/following{/other_user}",
      "gists_url": "https://api.github.com/users/hokein/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hokein/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hokein/subscriptions",
      "organizations_url": "https://api.github.com/users/hokein/orgs",
      "repos_url": "https://api.github.com/users/hokein/repos",
      "events_url": "https://api.github.com/users/hokein/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hokein/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-14T23:44:14Z",
    "updated_at": "2015-07-14T23:44:14Z",
    "body": "You should not use a local variable `main_window` to host the BrowserWindow in app `ready` event callback function, otherwise the `main_window` will get GCed. You need to keep a global reference of the `BrowserWindow` object.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/121571102",
    "html_url": "https://github.com/electron/electron/issues/2213#issuecomment-121571102",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2213",
    "id": 121571102,
    "user": {
      "login": "loveencounterflow",
      "id": 1170565,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1170565?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/loveencounterflow",
      "html_url": "https://github.com/loveencounterflow",
      "followers_url": "https://api.github.com/users/loveencounterflow/followers",
      "following_url": "https://api.github.com/users/loveencounterflow/following{/other_user}",
      "gists_url": "https://api.github.com/users/loveencounterflow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/loveencounterflow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/loveencounterflow/subscriptions",
      "organizations_url": "https://api.github.com/users/loveencounterflow/orgs",
      "repos_url": "https://api.github.com/users/loveencounterflow/repos",
      "events_url": "https://api.github.com/users/loveencounterflow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/loveencounterflow/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-15T10:40:56Z",
    "updated_at": "2015-07-15T10:40:56Z",
    "body": "thanks for the tip; i've since [updated my code](https://github.com/loveencounterflow/test-electron/blob/master/src/app.coffee#L46) and now use a module-level object to collect references to the windows. How can i tell one of those refs would be GC'ed? After all, whatever they're referring to is still existent as long as the window is on-screen, right?\n\nStill, GC'ed or not, that doesn't really explain why `alert()` etc fail the way they do.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/121589998",
    "html_url": "https://github.com/electron/electron/issues/2213#issuecomment-121589998",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2213",
    "id": 121589998,
    "user": {
      "login": "hokein",
      "id": 2557445,
      "avatar_url": "https://avatars2.githubusercontent.com/u/2557445?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hokein",
      "html_url": "https://github.com/hokein",
      "followers_url": "https://api.github.com/users/hokein/followers",
      "following_url": "https://api.github.com/users/hokein/following{/other_user}",
      "gists_url": "https://api.github.com/users/hokein/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hokein/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hokein/subscriptions",
      "organizations_url": "https://api.github.com/users/hokein/orgs",
      "repos_url": "https://api.github.com/users/hokein/repos",
      "events_url": "https://api.github.com/users/hokein/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hokein/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-15T11:50:11Z",
    "updated_at": "2015-07-15T11:50:11Z",
    "body": "> How can i tell one of those refs would be GC'ed? After all, whatever they're referring to is still existent as long as the window is on-screen, right?\n\nMaybe there is a way to detect it, however I don't know either. But I don't think detecting the browser window referring or not by on-screen is a good way. Because it depends on the GC collector running frequence, even the browser window will be there without reference in code.\n\n> Still, GC'ed or not, that doesn't really explain why alert() etc fail the way they do.\n\nIs the issue still here? I test your code on OS X, the `alert` API works well.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/121605761",
    "html_url": "https://github.com/electron/electron/issues/2213#issuecomment-121605761",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2213",
    "id": 121605761,
    "user": {
      "login": "loveencounterflow",
      "id": 1170565,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1170565?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/loveencounterflow",
      "html_url": "https://github.com/loveencounterflow",
      "followers_url": "https://api.github.com/users/loveencounterflow/followers",
      "following_url": "https://api.github.com/users/loveencounterflow/following{/other_user}",
      "gists_url": "https://api.github.com/users/loveencounterflow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/loveencounterflow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/loveencounterflow/subscriptions",
      "organizations_url": "https://api.github.com/users/loveencounterflow/orgs",
      "repos_url": "https://api.github.com/users/loveencounterflow/repos",
      "events_url": "https://api.github.com/users/loveencounterflow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/loveencounterflow/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-15T12:53:55Z",
    "updated_at": "2015-07-15T12:53:55Z",
    "body": "the issue definitely is still there as of https://github.com/loveencounterflow/test-electron/commit/0bb80695439979301e4b1246db4afa2e6a05f143\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/121609867",
    "html_url": "https://github.com/electron/electron/issues/2213#issuecomment-121609867",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2213",
    "id": 121609867,
    "user": {
      "login": "hokein",
      "id": 2557445,
      "avatar_url": "https://avatars2.githubusercontent.com/u/2557445?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hokein",
      "html_url": "https://github.com/hokein",
      "followers_url": "https://api.github.com/users/hokein/followers",
      "following_url": "https://api.github.com/users/hokein/following{/other_user}",
      "gists_url": "https://api.github.com/users/hokein/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hokein/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hokein/subscriptions",
      "organizations_url": "https://api.github.com/users/hokein/orgs",
      "repos_url": "https://api.github.com/users/hokein/repos",
      "events_url": "https://api.github.com/users/hokein/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hokein/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-15T13:09:23Z",
    "updated_at": "2015-07-15T13:09:23Z",
    "body": "You should not invoke `alert` in main process(In your sample, it's your `app.coffee`). The `alert` API is only available in renderer process.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/121939382",
    "html_url": "https://github.com/electron/electron/issues/2213#issuecomment-121939382",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2213",
    "id": 121939382,
    "user": {
      "login": "loveencounterflow",
      "id": 1170565,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1170565?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/loveencounterflow",
      "html_url": "https://github.com/loveencounterflow",
      "followers_url": "https://api.github.com/users/loveencounterflow/followers",
      "following_url": "https://api.github.com/users/loveencounterflow/following{/other_user}",
      "gists_url": "https://api.github.com/users/loveencounterflow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/loveencounterflow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/loveencounterflow/subscriptions",
      "organizations_url": "https://api.github.com/users/loveencounterflow/orgs",
      "repos_url": "https://api.github.com/users/loveencounterflow/repos",
      "events_url": "https://api.github.com/users/loveencounterflow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/loveencounterflow/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-16T12:07:08Z",
    "updated_at": "2015-07-16T12:21:44Z",
    "body": "@hokein i think the call to `alert` happens from an HTML page being rendered, so it's definitely in the renderer process.\n\nBut, regardless, that is not the point.\n\nThe point is that when something goes wrong early on in the code, all that you get to see is the stack trace of\n\n``` js\n return require('dialog').showErrorBox('A JavaScript error occured in the browser process', message);\n```\n\ngoing wrong; this is a fault with the Electron code which expects `require('dialog').showErrorBox` to be a function at this point in time, which it is for some reason not. Now you can tell me all the time this is not the right time to display an error box, which may be right or not, but still the fact that Electron doesn't guard its call to `require('dialog').showErrorBox` means that i never get to see the _cause_ of it trying to do so in the first place.\n\nTo put it bluntly, (1) there's an error in the app, (2) Electron tries to display it but (3) fails, and therefore (4) it get to see a stacktrace that tells me where Electron failed, but, importantly, not where the _app_ failed. This should never happen. \n\nTo bring this home, when i do `git clone https://github.com/loveencounterflow/test-electron.git`, `cd test-electron`, `npm install`, and then `npm run start`, the app runs both on OSX 10.8.4 and my Linux Mint VM. So that's good. But when i deliberately insert `xxxx` as the first line in `lib/app.js`, this is what i get under OSX:\n\n```\nApp threw an error when running [ReferenceError: xxxx is not defined]\n/Volumes/Storage/io/SCRATCH/test-electron/node_modules/electron-prebuilt/dist/Electron.app/Contents/Resources/atom.asar/browser/lib/init.js:45\n    return require('dialog').showErrorBox('A JavaScript error occured in the browser process', message);\n                             ^\nTypeError: require(...).showErrorBox is not a function\n    at process.<anonymous> (/Volumes/Storage/io/SCRATCH/test-electron/node_modules/electron-prebuilt/dist/Electron.app/Contents/Resources/atom.asar/browser/lib/init.js:45:30)\n    at emitOne (events.js:77:13)\n    at process.emit (events.js:169:7)\n    at process._fatalException (node.js:219:26)\n```\n\nWhereas on Linux Mint, the error is correctly reported, along with file names and line numbers:\n\n```\nApp threw an error when running [ReferenceError: xxxx is not defined]\nA JavaScript error occured in the browser process\nUncaught Exception:\nReferenceError: xxxx is not defined\n    at Object.<anonymous> (/tmp/test-electron/lib/app.js:2:1)\n    at Object.<anonymous> (/tmp/test-electron/lib/app.js:165:4)\n    at Module._compile (module.js:428:26)\n    at Object.Module._extensions..js (module.js:446:10)\n    at Module.load (module.js:353:32)\n    at Function.Module._load (module.js:308:12)\n    at Object.<anonymous> (/tmp/test-electron/node_modules/electron-prebuilt/dist/resources/default_app/main.js:297:23)\n    at Module._compile (module.js:428:26)\n    at Object.Module._extensions..js (module.js:446:10)\n    at Module.load (module.js:353:32)\n```\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/122029898",
    "html_url": "https://github.com/electron/electron/issues/2213#issuecomment-122029898",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2213",
    "id": 122029898,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2015-07-16T17:30:52Z",
    "updated_at": "2015-07-16T17:30:52Z",
    "body": "@loveencounterflow Something has hijacked the `require('dialog')` call, can you print the result of `require.resolve('dialog')` in the main process?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/122249556",
    "html_url": "https://github.com/electron/electron/issues/2213#issuecomment-122249556",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2213",
    "id": 122249556,
    "user": {
      "login": "loveencounterflow",
      "id": 1170565,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1170565?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/loveencounterflow",
      "html_url": "https://github.com/loveencounterflow",
      "followers_url": "https://api.github.com/users/loveencounterflow/followers",
      "following_url": "https://api.github.com/users/loveencounterflow/following{/other_user}",
      "gists_url": "https://api.github.com/users/loveencounterflow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/loveencounterflow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/loveencounterflow/subscriptions",
      "organizations_url": "https://api.github.com/users/loveencounterflow/orgs",
      "repos_url": "https://api.github.com/users/loveencounterflow/repos",
      "events_url": "https://api.github.com/users/loveencounterflow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/loveencounterflow/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-17T11:19:02Z",
    "updated_at": "2015-07-17T11:19:02Z",
    "body": "I inserted \n\n``` coffee\nconsole.log require.resolve('dialog')\nxxx\n```\n\ninto `app.coffee`. Indeed, when cloning and building in `/tmp`, this seems to work (modulo https://github.com/mafintosh/electron-prebuilt/issues/44); it outputs:\n\n```\n/private/tmp/test-electron/node_modules/electron-prebuilt/dist/Electron.app/Contents/Resources/atom.asar/browser/api/lib/dialog.js\nApp threw an error when running [ReferenceError: xxx is not defined]\n```\n\nplus there is a GUI dialog showing up that shows the stacktrace. So that's great.\n\nHowever, when i do the same in my scratch folder which contains lots and lots of stuff i've tried out over time, then `dialog` is not loaded from the correct location; instead, `/Volumes/Storage/io/SCRATCH/node_modules/dialog/index.js` is shown. Closer inspection reveals that this is an incidental name clash with https://github.com/tomas/dialog. Running `npm uninstall dialog` does resolve the issue.\n\nI'd venture that this should not happen, as you can never know what `node_modules` are present somewhere up in the directory tree. My guess is that `require('dialog');` is not specific enough and really should be `require('./dialog')` or similar.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/122815132",
    "html_url": "https://github.com/electron/electron/issues/2213#issuecomment-122815132",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2213",
    "id": 122815132,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2015-07-20T08:48:41Z",
    "updated_at": "2015-07-20T08:48:41Z",
    "body": "I'm merging this to https://github.com/atom/electron/issues/387.\n"
  }
]