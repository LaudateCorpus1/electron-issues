[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/259701829",
    "html_url": "https://github.com/electron/electron/issues/7931#issuecomment-259701829",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7931",
    "id": 259701829,
    "user": {
      "login": "MarshallOfSound",
      "id": 6634592,
      "avatar_url": "https://avatars0.githubusercontent.com/u/6634592?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarshallOfSound",
      "html_url": "https://github.com/MarshallOfSound",
      "followers_url": "https://api.github.com/users/MarshallOfSound/followers",
      "following_url": "https://api.github.com/users/MarshallOfSound/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarshallOfSound/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarshallOfSound/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarshallOfSound/subscriptions",
      "organizations_url": "https://api.github.com/users/MarshallOfSound/orgs",
      "repos_url": "https://api.github.com/users/MarshallOfSound/repos",
      "events_url": "https://api.github.com/users/MarshallOfSound/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarshallOfSound/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-10T14:22:10Z",
    "updated_at": "2016-11-10T14:22:10Z",
    "body": "I would also like to know why it is inconsistent with a GET request.  If you send a GET request with the same code it will simply not have an origin header at all (somewhat expected it's a `file://` uri).  It's the inconsistency that throws me more than anything else ðŸ˜• \n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/259729777",
    "html_url": "https://github.com/electron/electron/issues/7931#issuecomment-259729777",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7931",
    "id": 259729777,
    "user": {
      "login": "deepak1556",
      "id": 964386,
      "avatar_url": "https://avatars2.githubusercontent.com/u/964386?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/deepak1556",
      "html_url": "https://github.com/deepak1556",
      "followers_url": "https://api.github.com/users/deepak1556/followers",
      "following_url": "https://api.github.com/users/deepak1556/following{/other_user}",
      "gists_url": "https://api.github.com/users/deepak1556/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/deepak1556/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/deepak1556/subscriptions",
      "organizations_url": "https://api.github.com/users/deepak1556/orgs",
      "repos_url": "https://api.github.com/users/deepak1556/repos",
      "events_url": "https://api.github.com/users/deepak1556/events{/privacy}",
      "received_events_url": "https://api.github.com/users/deepak1556/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-10T16:04:16Z",
    "updated_at": "2016-11-10T16:04:16Z",
    "body": "> I would also like to know why it is inconsistent with a GET request\n\nThis issue was raised sometime back, you can find the reason why no origin header is sent for cors GET request [here](https://github.com/electron/electron/issues/7054#issuecomment-244643613) from file scheme.\n\n> What is the spec, what is the reasoning behind it. Is it a bug or a feature?\n\nThe fetch spec allows origin header when sending POST request, which you can find [here](https://fetch.spec.whatwg.org/#origin-header) .\n\nClosing this out, since its the expected behavior in Electron. You can use custom protocols for this scenario.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/259732294",
    "html_url": "https://github.com/electron/electron/issues/7931#issuecomment-259732294",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7931",
    "id": 259732294,
    "user": {
      "login": "runn1ng",
      "id": 104945,
      "avatar_url": "https://avatars1.githubusercontent.com/u/104945?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/runn1ng",
      "html_url": "https://github.com/runn1ng",
      "followers_url": "https://api.github.com/users/runn1ng/followers",
      "following_url": "https://api.github.com/users/runn1ng/following{/other_user}",
      "gists_url": "https://api.github.com/users/runn1ng/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/runn1ng/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/runn1ng/subscriptions",
      "organizations_url": "https://api.github.com/users/runn1ng/orgs",
      "repos_url": "https://api.github.com/users/runn1ng/repos",
      "events_url": "https://api.github.com/users/runn1ng/events{/privacy}",
      "received_events_url": "https://api.github.com/users/runn1ng/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-10T16:13:14Z",
    "updated_at": "2016-11-10T16:13:14Z",
    "body": "I am sorry, I still don't understand this.\n- Why is GET and POST treated differently? I cannot find it in the thread. \n- Where does the `null` string come from? I don't know how to interpret it. Why is it `null` specifically and not some \"actual\" origin?\n\nThanks!\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/259734516",
    "html_url": "https://github.com/electron/electron/issues/7931#issuecomment-259734516",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7931",
    "id": 259734516,
    "user": {
      "login": "runn1ng",
      "id": 104945,
      "avatar_url": "https://avatars1.githubusercontent.com/u/104945?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/runn1ng",
      "html_url": "https://github.com/runn1ng",
      "followers_url": "https://api.github.com/users/runn1ng/followers",
      "following_url": "https://api.github.com/users/runn1ng/following{/other_user}",
      "gists_url": "https://api.github.com/users/runn1ng/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/runn1ng/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/runn1ng/subscriptions",
      "organizations_url": "https://api.github.com/users/runn1ng/orgs",
      "repos_url": "https://api.github.com/users/runn1ng/repos",
      "events_url": "https://api.github.com/users/runn1ng/events{/privacy}",
      "received_events_url": "https://api.github.com/users/runn1ng/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-10T16:20:48Z",
    "updated_at": "2016-11-10T16:20:48Z",
    "body": "(I am hoping to understand this so I know why Electron behaves the way it behaves, and also to help other people who will maybe find this issue by google :))\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/259756174",
    "html_url": "https://github.com/electron/electron/issues/7931#issuecomment-259756174",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7931",
    "id": 259756174,
    "user": {
      "login": "deepak1556",
      "id": 964386,
      "avatar_url": "https://avatars2.githubusercontent.com/u/964386?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/deepak1556",
      "html_url": "https://github.com/deepak1556",
      "followers_url": "https://api.github.com/users/deepak1556/followers",
      "following_url": "https://api.github.com/users/deepak1556/following{/other_user}",
      "gists_url": "https://api.github.com/users/deepak1556/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/deepak1556/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/deepak1556/subscriptions",
      "organizations_url": "https://api.github.com/users/deepak1556/orgs",
      "repos_url": "https://api.github.com/users/deepak1556/repos",
      "events_url": "https://api.github.com/users/deepak1556/events{/privacy}",
      "received_events_url": "https://api.github.com/users/deepak1556/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-10T17:39:18Z",
    "updated_at": "2016-11-10T17:39:18Z",
    "body": "> Why is GET and POST treated differently? I cannot find it in the thread.\n\nFor both the requests origin will not be set initially, as they are treated as same origin requests because of the reason specified in the above linked thread. But just before the request is sent blink sets the origin for non-get and non-head requests [here](https://cs.chromium.org/chromium/src/third_party/WebKit/Source/platform/network/ResourceRequest.cpp?l=414). Hence you see the different behavior.\n\n> Where does the null string come from? I don't know how to interpret it. Why is it null specifically and not some \"actual\" origin?\n\nThe value is set by blink, the reason for `null` is related to the [securityorigin](https://cs.chromium.org/chromium/src/third_party/WebKit/Source/platform/weborigin/SecurityOrigin.h) value. \n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/259948251",
    "html_url": "https://github.com/electron/electron/issues/7931#issuecomment-259948251",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7931",
    "id": 259948251,
    "user": {
      "login": "runn1ng",
      "id": 104945,
      "avatar_url": "https://avatars1.githubusercontent.com/u/104945?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/runn1ng",
      "html_url": "https://github.com/runn1ng",
      "followers_url": "https://api.github.com/users/runn1ng/followers",
      "following_url": "https://api.github.com/users/runn1ng/following{/other_user}",
      "gists_url": "https://api.github.com/users/runn1ng/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/runn1ng/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/runn1ng/subscriptions",
      "organizations_url": "https://api.github.com/users/runn1ng/orgs",
      "repos_url": "https://api.github.com/users/runn1ng/repos",
      "events_url": "https://api.github.com/users/runn1ng/events{/privacy}",
      "received_events_url": "https://api.github.com/users/runn1ng/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-11T12:33:18Z",
    "updated_at": "2016-11-11T12:33:18Z",
    "body": "Thanks! That's what I needed to know.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/309242850",
    "html_url": "https://github.com/electron/electron/issues/7931#issuecomment-309242850",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7931",
    "id": 309242850,
    "user": {
      "login": "intellix",
      "id": 1162531,
      "avatar_url": "https://avatars0.githubusercontent.com/u/1162531?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/intellix",
      "html_url": "https://github.com/intellix",
      "followers_url": "https://api.github.com/users/intellix/followers",
      "following_url": "https://api.github.com/users/intellix/following{/other_user}",
      "gists_url": "https://api.github.com/users/intellix/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/intellix/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/intellix/subscriptions",
      "organizations_url": "https://api.github.com/users/intellix/orgs",
      "repos_url": "https://api.github.com/users/intellix/repos",
      "events_url": "https://api.github.com/users/intellix/events{/privacy}",
      "received_events_url": "https://api.github.com/users/intellix/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-17T22:00:47Z",
    "updated_at": "2017-06-17T22:00:47Z",
    "body": "I've got around this by doing:\r\n```\r\nelectron.session.defaultSession.webRequest.onBeforeSendHeaders((details, callback) => {\r\n  details.requestHeaders['Origin'] = 'electron://graphiql-app';\r\n  callback({ cancel: false, requestHeaders: details.requestHeaders });\r\n});\r\n```"
  }
]