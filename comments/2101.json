[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/118114903",
    "html_url": "https://github.com/electron/electron/issues/2101#issuecomment-118114903",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2101",
    "id": 118114903,
    "user": {
      "login": "jaruba",
      "id": 1777923,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1777923?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jaruba",
      "html_url": "https://github.com/jaruba",
      "followers_url": "https://api.github.com/users/jaruba/followers",
      "following_url": "https://api.github.com/users/jaruba/following{/other_user}",
      "gists_url": "https://api.github.com/users/jaruba/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jaruba/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jaruba/subscriptions",
      "organizations_url": "https://api.github.com/users/jaruba/orgs",
      "repos_url": "https://api.github.com/users/jaruba/repos",
      "events_url": "https://api.github.com/users/jaruba/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jaruba/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-02T18:18:30Z",
    "updated_at": "2015-07-02T18:18:30Z",
    "body": "> Every powerful desktop app platform requires an API to set the application priority for the OS.\n\n+1\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/118628098",
    "html_url": "https://github.com/electron/electron/issues/2101#issuecomment-118628098",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2101",
    "id": 118628098,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2015-07-05T14:51:41Z",
    "updated_at": "2015-07-05T14:51:41Z",
    "body": "It is only possible on Windows to set higher priority for current process, on POSIX systems you need to have root privilege to increase a process's priority.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/118631608",
    "html_url": "https://github.com/electron/electron/issues/2101#issuecomment-118631608",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2101",
    "id": 118631608,
    "user": {
      "login": "Ivshti",
      "id": 1247629,
      "avatar_url": "https://avatars0.githubusercontent.com/u/1247629?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Ivshti",
      "html_url": "https://github.com/Ivshti",
      "followers_url": "https://api.github.com/users/Ivshti/followers",
      "following_url": "https://api.github.com/users/Ivshti/following{/other_user}",
      "gists_url": "https://api.github.com/users/Ivshti/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Ivshti/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Ivshti/subscriptions",
      "organizations_url": "https://api.github.com/users/Ivshti/orgs",
      "repos_url": "https://api.github.com/users/Ivshti/repos",
      "events_url": "https://api.github.com/users/Ivshti/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Ivshti/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-05T15:13:39Z",
    "updated_at": "2015-07-05T15:14:28Z",
    "body": "UNIX systems generally don't need it. @jaruba will confirm, with WebChimera.js, which is currently the only acceptable solution for multi-codec video under electron / nw.js, it requires High process priority under Windows to play properly if the system is in power-save mode.\n\nUNIX systems don't have this issue since they're smart enough to know when to upclock/downclock the processor - in the case of OS X / Linux.\n\nThis will be the case for every processor-intensive app.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/118636089",
    "html_url": "https://github.com/electron/electron/issues/2101#issuecomment-118636089",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2101",
    "id": 118636089,
    "user": {
      "login": "paulcbetts",
      "id": 1396,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1396?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulcbetts",
      "html_url": "https://github.com/paulcbetts",
      "followers_url": "https://api.github.com/users/paulcbetts/followers",
      "following_url": "https://api.github.com/users/paulcbetts/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulcbetts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulcbetts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulcbetts/subscriptions",
      "organizations_url": "https://api.github.com/users/paulcbetts/orgs",
      "repos_url": "https://api.github.com/users/paulcbetts/repos",
      "events_url": "https://api.github.com/users/paulcbetts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulcbetts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-05T16:17:45Z",
    "updated_at": "2015-07-05T16:19:17Z",
    "body": "Setting process priority is generally a Bad Idea, and in fact, can actually make your app run slower because of priority inversion (i.e. high priority thread / process needs a lock, normal thread has it, but can't make process because high-priority process keeps hogging time)\n\n>  the reason for this is that the OS downclocks the CPU, but adding priority for the process would solve the issue.\n\nCitation needed? I don't believe that this is the case. CPU downclocking is based on overall load, the process priority is only relative to other processes\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/118772506",
    "html_url": "https://github.com/electron/electron/issues/2101#issuecomment-118772506",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2101",
    "id": 118772506,
    "user": {
      "login": "Ivshti",
      "id": 1247629,
      "avatar_url": "https://avatars0.githubusercontent.com/u/1247629?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Ivshti",
      "html_url": "https://github.com/Ivshti",
      "followers_url": "https://api.github.com/users/Ivshti/followers",
      "following_url": "https://api.github.com/users/Ivshti/following{/other_user}",
      "gists_url": "https://api.github.com/users/Ivshti/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Ivshti/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Ivshti/subscriptions",
      "organizations_url": "https://api.github.com/users/Ivshti/orgs",
      "repos_url": "https://api.github.com/users/Ivshti/repos",
      "events_url": "https://api.github.com/users/Ivshti/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Ivshti/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-06T08:24:25Z",
    "updated_at": "2015-07-06T08:25:27Z",
    "body": "That makes sense. \n\nAs for the citation, @jaruba will explain - the case for him is, when his laptop is in power saving mode, it can't cope with WebChimera.js full HD playing (which is totally fine when the laptop is not in power saving mode), but High process priority seems to fix that.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/118775022",
    "html_url": "https://github.com/electron/electron/issues/2101#issuecomment-118775022",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2101",
    "id": 118775022,
    "user": {
      "login": "jaruba",
      "id": 1777923,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1777923?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jaruba",
      "html_url": "https://github.com/jaruba",
      "followers_url": "https://api.github.com/users/jaruba/followers",
      "following_url": "https://api.github.com/users/jaruba/following{/other_user}",
      "gists_url": "https://api.github.com/users/jaruba/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jaruba/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jaruba/subscriptions",
      "organizations_url": "https://api.github.com/users/jaruba/orgs",
      "repos_url": "https://api.github.com/users/jaruba/repos",
      "events_url": "https://api.github.com/users/jaruba/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jaruba/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-06T08:33:37Z",
    "updated_at": "2015-07-06T08:39:42Z",
    "body": "> As for the citation, @jaruba will explain\n\nWhen playing a hi-res video (720p / 1080p), the player works fine in Electron only when the laptop is plugged into a power source, but the entire app freezes / unfreezes constantly to an unwatchable / unusable state when I unplug the laptop.\n\n> CPU downclocking is based on overall load, the process priority is only relative to other processes\n\nThis is undoubtedly true, setting `High` priority to the chromium processes does make the video work as it should, but all other processes become laggy. Still, this only happens when the player is actually playing a video and truth be told, if your in power saving mode, you shouldn't try to play a video while doing something else anyway. :)\n\nI can't imagine why this does not happen to VLC or WebChimera NPAPI Plugin but happens to a native implementation of WebChimera for Electron and NW.js. If there is a better way of giving the app more juice when in power saving mode, I fail to see it, but I am sure that the proposed solution will work.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/118778923",
    "html_url": "https://github.com/electron/electron/issues/2101#issuecomment-118778923",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2101",
    "id": 118778923,
    "user": {
      "login": "jaruba",
      "id": 1777923,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1777923?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jaruba",
      "html_url": "https://github.com/jaruba",
      "followers_url": "https://api.github.com/users/jaruba/followers",
      "following_url": "https://api.github.com/users/jaruba/following{/other_user}",
      "gists_url": "https://api.github.com/users/jaruba/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jaruba/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jaruba/subscriptions",
      "organizations_url": "https://api.github.com/users/jaruba/orgs",
      "repos_url": "https://api.github.com/users/jaruba/repos",
      "events_url": "https://api.github.com/users/jaruba/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jaruba/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-06T08:58:36Z",
    "updated_at": "2015-07-06T08:59:12Z",
    "body": "I should also mention that my tests have been done on a pretty powerful laptop:\n\nCPU: Intel i7-4500U\nGPU: Nvidia Geforce 820M (+ Internal Processor's Video Card)\nRAM: 12GB\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/118924658",
    "html_url": "https://github.com/electron/electron/issues/2101#issuecomment-118924658",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2101",
    "id": 118924658,
    "user": {
      "login": "Ivshti",
      "id": 1247629,
      "avatar_url": "https://avatars0.githubusercontent.com/u/1247629?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Ivshti",
      "html_url": "https://github.com/Ivshti",
      "followers_url": "https://api.github.com/users/Ivshti/followers",
      "following_url": "https://api.github.com/users/Ivshti/following{/other_user}",
      "gists_url": "https://api.github.com/users/Ivshti/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Ivshti/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Ivshti/subscriptions",
      "organizations_url": "https://api.github.com/users/Ivshti/orgs",
      "repos_url": "https://api.github.com/users/Ivshti/repos",
      "events_url": "https://api.github.com/users/Ivshti/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Ivshti/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-06T16:59:12Z",
    "updated_at": "2015-07-06T16:59:12Z",
    "body": "> I can't imagine why this does not happen to VLC or WebChimera NPAPI Plugin but happens to a native implementation of WebChimera for Electron and NW.js\n\nwebchimera.js has the overhead of doing an memcpy for a texture which cannot be avoided at the moment.\n\nVLC and WebChimera use more efficient texture upload methods.\n\nThe reason for this is chromium's multi process architecture, which means WCjs runs in one process and the GPU interactions happen in another. When we call teximage2d, we write to shared mem and then we wait the GPU process to memcpy that into the GPU memory - blocking the whole process until it's done.\n\nYou can figure out why this is so bad for high res videos, and as we have found out, almost insignificant for regular res videos\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/118925627",
    "html_url": "https://github.com/electron/electron/issues/2101#issuecomment-118925627",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2101",
    "id": 118925627,
    "user": {
      "login": "paulcbetts",
      "id": 1396,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1396?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulcbetts",
      "html_url": "https://github.com/paulcbetts",
      "followers_url": "https://api.github.com/users/paulcbetts/followers",
      "following_url": "https://api.github.com/users/paulcbetts/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulcbetts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulcbetts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulcbetts/subscriptions",
      "organizations_url": "https://api.github.com/users/paulcbetts/orgs",
      "repos_url": "https://api.github.com/users/paulcbetts/repos",
      "events_url": "https://api.github.com/users/paulcbetts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulcbetts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-06T17:03:03Z",
    "updated_at": "2015-07-06T17:03:03Z",
    "body": "I think that if you want to do this, you should write a node module to do so, putting it in the core API will encourage people to do it, when in almost all cases it's a bad idea (particularly in the Chrome multi-process model where it's just begging for process inversion), _even_ if it happens to help in your particular case. If you use `node-ffi`, you don't even need to write C++ in order to call this Win32 API call.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/118928114",
    "html_url": "https://github.com/electron/electron/issues/2101#issuecomment-118928114",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2101",
    "id": 118928114,
    "user": {
      "login": "Ivshti",
      "id": 1247629,
      "avatar_url": "https://avatars0.githubusercontent.com/u/1247629?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Ivshti",
      "html_url": "https://github.com/Ivshti",
      "followers_url": "https://api.github.com/users/Ivshti/followers",
      "following_url": "https://api.github.com/users/Ivshti/following{/other_user}",
      "gists_url": "https://api.github.com/users/Ivshti/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Ivshti/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Ivshti/subscriptions",
      "organizations_url": "https://api.github.com/users/Ivshti/orgs",
      "repos_url": "https://api.github.com/users/Ivshti/repos",
      "events_url": "https://api.github.com/users/Ivshti/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Ivshti/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-06T17:14:15Z",
    "updated_at": "2015-07-06T17:14:15Z",
    "body": "The solution for this is already in the chromium code base, and it is called GpuMemoryBuffer - this is a framework that sets up shared mem in the GPU, which can be read by the renderer process (where WCjs is).\n\nUnfortunately it is not exposed to the client side, but maybe we can have it exposed as an electron API - but we also need a lock/unlock system.\n\nHTML5 video recently switched to using GpuMemoryBuffer.\n\nThere are plans for exposing this with semantics similar to EGLImage - WebGL dynamic texture extension, but TBH I don't think it will get implemented soon\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/118940268",
    "html_url": "https://github.com/electron/electron/issues/2101#issuecomment-118940268",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2101",
    "id": 118940268,
    "user": {
      "login": "Ivshti",
      "id": 1247629,
      "avatar_url": "https://avatars0.githubusercontent.com/u/1247629?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Ivshti",
      "html_url": "https://github.com/Ivshti",
      "followers_url": "https://api.github.com/users/Ivshti/followers",
      "following_url": "https://api.github.com/users/Ivshti/following{/other_user}",
      "gists_url": "https://api.github.com/users/Ivshti/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Ivshti/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Ivshti/subscriptions",
      "organizations_url": "https://api.github.com/users/Ivshti/orgs",
      "repos_url": "https://api.github.com/users/Ivshti/repos",
      "events_url": "https://api.github.com/users/Ivshti/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Ivshti/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-06T18:02:56Z",
    "updated_at": "2015-07-06T18:02:56Z",
    "body": "@paulcbetts you're right, it would be safer to not implement it in core and even not do it in our case. We should shift our efforts into eliminating the memcpy that webchimera.js does instead of working around the issue.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/118944817",
    "html_url": "https://github.com/electron/electron/issues/2101#issuecomment-118944817",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2101",
    "id": 118944817,
    "user": {
      "login": "paulcbetts",
      "id": 1396,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1396?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulcbetts",
      "html_url": "https://github.com/paulcbetts",
      "followers_url": "https://api.github.com/users/paulcbetts/followers",
      "following_url": "https://api.github.com/users/paulcbetts/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulcbetts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulcbetts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulcbetts/subscriptions",
      "organizations_url": "https://api.github.com/users/paulcbetts/orgs",
      "repos_url": "https://api.github.com/users/paulcbetts/repos",
      "events_url": "https://api.github.com/users/paulcbetts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulcbetts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-06T18:20:42Z",
    "updated_at": "2015-07-06T18:20:42Z",
    "body": "> you're right, it would be safer to not implement it in core and even not do it in our case. We should shift our efforts into eliminating the memcpy that webchimera.js does instead of working around the issue.\n\n:+1: - This is definitely doable, I know you can toll-free convert node.js Buffers into Typed 8-bit arrays in C++ which I believe is what WebGL uses as its type for textures. You might have to write a bit of C++ code but if we can make this easier in Electron I'd definitely be into that PR\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/118953876",
    "html_url": "https://github.com/electron/electron/issues/2101#issuecomment-118953876",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2101",
    "id": 118953876,
    "user": {
      "login": "Ivshti",
      "id": 1247629,
      "avatar_url": "https://avatars0.githubusercontent.com/u/1247629?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Ivshti",
      "html_url": "https://github.com/Ivshti",
      "followers_url": "https://api.github.com/users/Ivshti/followers",
      "following_url": "https://api.github.com/users/Ivshti/following{/other_user}",
      "gists_url": "https://api.github.com/users/Ivshti/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Ivshti/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Ivshti/subscriptions",
      "organizations_url": "https://api.github.com/users/Ivshti/orgs",
      "repos_url": "https://api.github.com/users/Ivshti/repos",
      "events_url": "https://api.github.com/users/Ivshti/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Ivshti/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-06T18:44:28Z",
    "updated_at": "2015-07-06T18:44:28Z",
    "body": "@paulcbetts we already do that at webchimera.js - it inits a Uint8Array and then directly renders video frames into its buffer without any copying - the mastermind behind it is the project creator - RSATom.\n\nThe point is, as I described in detail, what chrome does when calling texImage2d.\n\nAs I said, it writes the buffer into shared memory and then waits for the GPU process to copy it to GPU mem. \n\nIn fact there are much better methods (PBOs, EGLImage) but inaccessible through what chromium provides with webgl.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/119178799",
    "html_url": "https://github.com/electron/electron/issues/2101#issuecomment-119178799",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2101",
    "id": 119178799,
    "user": {
      "login": "Ivshti",
      "id": 1247629,
      "avatar_url": "https://avatars0.githubusercontent.com/u/1247629?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Ivshti",
      "html_url": "https://github.com/Ivshti",
      "followers_url": "https://api.github.com/users/Ivshti/followers",
      "following_url": "https://api.github.com/users/Ivshti/following{/other_user}",
      "gists_url": "https://api.github.com/users/Ivshti/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Ivshti/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Ivshti/subscriptions",
      "organizations_url": "https://api.github.com/users/Ivshti/orgs",
      "repos_url": "https://api.github.com/users/Ivshti/repos",
      "events_url": "https://api.github.com/users/Ivshti/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Ivshti/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-07T11:41:20Z",
    "updated_at": "2015-07-07T11:41:34Z",
    "body": "I'm closing this because as @paulcbetts this can do more harm than good since chances are it will get misused.\n"
  }
]