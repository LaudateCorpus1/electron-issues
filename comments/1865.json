[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/110198735",
    "html_url": "https://github.com/electron/electron/issues/1865#issuecomment-110198735",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1865",
    "id": 110198735,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2015-06-09T02:13:22Z",
    "updated_at": "2015-06-09T02:13:22Z",
    "body": "In Electron every page is forced to run in its own process, however current architecture requires the pages to run in the same process if you want to access one page's contentWindow from the other, so it is not possible to implement it for now.\n\nChrome is now working on implementing [out of process iframe](https://www.chromium.org/developers/design-documents/oop-iframes), when it is done we might be able to implement this.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/139181950",
    "html_url": "https://github.com/electron/electron/issues/1865#issuecomment-139181950",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1865",
    "id": 139181950,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2015-09-10T09:25:38Z",
    "updated_at": "2015-09-10T09:25:38Z",
    "body": "Seems that windows opened by `window.open` can run in separated process in Chrome 45, having full `window.opener` support becomes possible now.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/139182583",
    "html_url": "https://github.com/electron/electron/issues/1865#issuecomment-139182583",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1865",
    "id": 139182583,
    "user": {
      "login": "felicienfrancois",
      "id": 988144,
      "avatar_url": "https://avatars1.githubusercontent.com/u/988144?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/felicienfrancois",
      "html_url": "https://github.com/felicienfrancois",
      "followers_url": "https://api.github.com/users/felicienfrancois/followers",
      "following_url": "https://api.github.com/users/felicienfrancois/following{/other_user}",
      "gists_url": "https://api.github.com/users/felicienfrancois/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/felicienfrancois/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/felicienfrancois/subscriptions",
      "organizations_url": "https://api.github.com/users/felicienfrancois/orgs",
      "repos_url": "https://api.github.com/users/felicienfrancois/repos",
      "events_url": "https://api.github.com/users/felicienfrancois/events{/privacy}",
      "received_events_url": "https://api.github.com/users/felicienfrancois/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-10T09:27:41Z",
    "updated_at": "2015-09-10T09:27:41Z",
    "body": "@zcbenz Good news !\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/142237027",
    "html_url": "https://github.com/electron/electron/issues/1865#issuecomment-142237027",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1865",
    "id": 142237027,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2015-09-22T10:13:22Z",
    "updated_at": "2015-09-22T10:13:22Z",
    "body": "After a closer look into the problem, Chromium only allows certain operations to be sent across renderer processes, and from the issue tracking that (https://crbug.com/128768), they doesn't have plan to support all operations.\n\nSo since Electron has a strong requirement that each page runs on a separate process, I'm afraid this is not something that we are able to fix under current architecture.\n\nI'm still keeping this open in case someone has an idea on how to fix this.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/143813431",
    "html_url": "https://github.com/electron/electron/issues/1865#issuecomment-143813431",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1865",
    "id": 143813431,
    "user": {
      "login": "MichaelOstermann",
      "id": 7288490,
      "avatar_url": "https://avatars0.githubusercontent.com/u/7288490?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MichaelOstermann",
      "html_url": "https://github.com/MichaelOstermann",
      "followers_url": "https://api.github.com/users/MichaelOstermann/followers",
      "following_url": "https://api.github.com/users/MichaelOstermann/following{/other_user}",
      "gists_url": "https://api.github.com/users/MichaelOstermann/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MichaelOstermann/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MichaelOstermann/subscriptions",
      "organizations_url": "https://api.github.com/users/MichaelOstermann/orgs",
      "repos_url": "https://api.github.com/users/MichaelOstermann/repos",
      "events_url": "https://api.github.com/users/MichaelOstermann/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MichaelOstermann/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-28T17:30:02Z",
    "updated_at": "2015-09-28T17:30:02Z",
    "body": "Depending on your situation you can make a workaround - in my scenario I'm listening to the [new-window](https://github.com/atom/electron/blob/master/docs/api/web-contents.md#event-new-window) event, on the next tick I [inject a script](https://github.com/atom/electron/blob/master/docs/api/web-contents.md#webcontentsexecutejavascriptcode-usergesture) which overwrites `window.opener.postMessage` and sends off the arguments via [ipc](https://github.com/atom/electron/blob/master/docs/api/ipc-main-process.md), to which other windows can listen to.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/173717585",
    "html_url": "https://github.com/electron/electron/issues/1865#issuecomment-173717585",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1865",
    "id": 173717585,
    "user": {
      "login": "bridiver",
      "id": 34129,
      "avatar_url": "https://avatars0.githubusercontent.com/u/34129?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bridiver",
      "html_url": "https://github.com/bridiver",
      "followers_url": "https://api.github.com/users/bridiver/followers",
      "following_url": "https://api.github.com/users/bridiver/following{/other_user}",
      "gists_url": "https://api.github.com/users/bridiver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bridiver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bridiver/subscriptions",
      "organizations_url": "https://api.github.com/users/bridiver/orgs",
      "repos_url": "https://api.github.com/users/bridiver/repos",
      "events_url": "https://api.github.com/users/bridiver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bridiver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-21T21:42:10Z",
    "updated_at": "2016-01-21T21:42:10Z",
    "body": "https://crbug.com/128768 is marked as fixed and everything works correctly for us across renderer processes with the code referenced from #4175 \n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/173719175",
    "html_url": "https://github.com/electron/electron/issues/1865#issuecomment-173719175",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1865",
    "id": 173719175,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2016-01-21T21:45:52Z",
    "updated_at": "2016-01-21T21:45:52Z",
    "body": "@bridiver It only supports a very limited set of operations, while we have to support `contentWindow` to make `window.opener` fully work. \n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/173754646",
    "html_url": "https://github.com/electron/electron/issues/1865#issuecomment-173754646",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1865",
    "id": 173754646,
    "user": {
      "login": "bridiver",
      "id": 34129,
      "avatar_url": "https://avatars0.githubusercontent.com/u/34129?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bridiver",
      "html_url": "https://github.com/bridiver",
      "followers_url": "https://api.github.com/users/bridiver/followers",
      "following_url": "https://api.github.com/users/bridiver/following{/other_user}",
      "gists_url": "https://api.github.com/users/bridiver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bridiver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bridiver/subscriptions",
      "organizations_url": "https://api.github.com/users/bridiver/orgs",
      "repos_url": "https://api.github.com/users/bridiver/repos",
      "events_url": "https://api.github.com/users/bridiver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bridiver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-22T00:01:19Z",
    "updated_at": "2016-01-22T00:01:19Z",
    "body": "We have some initial support for this in https://github.com/brave/electron that is referenced in https://github.com/atom/electron/issues/4175. Currently only works between guest views (in same or different browser windows), but that's mainly because that was our only requirement. We'd like to get it working for all cases and upstream it (assuming it meets the requirements) and we welcome any input or PRs. If you want to see it working the easiest way would be through https://github.com/brave/browser-laptop. This also enables non-user initiated popup blocking so don't be surprised if calling window.open directly does nothing. Thanks!\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/245022944",
    "html_url": "https://github.com/electron/electron/issues/1865#issuecomment-245022944",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1865",
    "id": 245022944,
    "user": {
      "login": "Mossop",
      "id": 437326,
      "avatar_url": "https://avatars0.githubusercontent.com/u/437326?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Mossop",
      "html_url": "https://github.com/Mossop",
      "followers_url": "https://api.github.com/users/Mossop/followers",
      "following_url": "https://api.github.com/users/Mossop/following{/other_user}",
      "gists_url": "https://api.github.com/users/Mossop/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Mossop/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Mossop/subscriptions",
      "organizations_url": "https://api.github.com/users/Mossop/orgs",
      "repos_url": "https://api.github.com/users/Mossop/repos",
      "events_url": "https://api.github.com/users/Mossop/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Mossop/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-06T17:19:03Z",
    "updated_at": "2016-09-06T17:19:03Z",
    "body": "@bridiver I'm interested in seeing this working in our fork of electron too. Your code references are all against old source though so it's tough to apply. Any chance you have a patch against current source handy and some notes on what needs to happen on the app side?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/246734436",
    "html_url": "https://github.com/electron/electron/issues/1865#issuecomment-246734436",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1865",
    "id": 246734436,
    "user": {
      "login": "hivaga",
      "id": 473649,
      "avatar_url": "https://avatars1.githubusercontent.com/u/473649?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hivaga",
      "html_url": "https://github.com/hivaga",
      "followers_url": "https://api.github.com/users/hivaga/followers",
      "following_url": "https://api.github.com/users/hivaga/following{/other_user}",
      "gists_url": "https://api.github.com/users/hivaga/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hivaga/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hivaga/subscriptions",
      "organizations_url": "https://api.github.com/users/hivaga/orgs",
      "repos_url": "https://api.github.com/users/hivaga/repos",
      "events_url": "https://api.github.com/users/hivaga/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hivaga/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-13T16:08:34Z",
    "updated_at": "2016-09-13T16:08:34Z",
    "body": "Hi, I am working on a multi-windows application and I need to share a object instances from the main application process with the other windows of the application. Currently in browser you can reference window.opener to achieve this. In browser window.opener (in child window) will give you the instance of the Window object form which window.opent(myURL) was called. \nIn Electron when I open window via (window.opent(myURL)) window.opener is replaced with BrowserWindowProxy (Electron API) which does not expose the same window (Window object instance) from which the (window.open(myURL)) was called. Is there a way to access window.opener the same way it works in Browser. I need some hint do you plan to support this in the future and when ?\n\nUsing remote.sharedObject (Electron API) is not an option since it only serialize/deserialize data and can be used for passing data from one window to others but does not give access to same object instances across windows.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/248794791",
    "html_url": "https://github.com/electron/electron/issues/1865#issuecomment-248794791",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1865",
    "id": 248794791,
    "user": {
      "login": "sltam",
      "id": 51615,
      "avatar_url": "https://avatars3.githubusercontent.com/u/51615?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sltam",
      "html_url": "https://github.com/sltam",
      "followers_url": "https://api.github.com/users/sltam/followers",
      "following_url": "https://api.github.com/users/sltam/following{/other_user}",
      "gists_url": "https://api.github.com/users/sltam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sltam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sltam/subscriptions",
      "organizations_url": "https://api.github.com/users/sltam/orgs",
      "repos_url": "https://api.github.com/users/sltam/repos",
      "events_url": "https://api.github.com/users/sltam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sltam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-22T02:26:08Z",
    "updated_at": "2016-09-22T02:26:08Z",
    "body": "@Mossop I posted an minimal example at https://github.com/brave/browser-laptop/issues/3270#issuecomment-241877534 of what needs to happen on the app side to use this `brave/electron` hack. Basically everything needs to be inside a `<webview>`, and these webviews are uniquely identified by their guest IDs, which allow them to be moved from one `BrowserWindow` to another.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/249989894",
    "html_url": "https://github.com/electron/electron/issues/1865#issuecomment-249989894",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1865",
    "id": 249989894,
    "user": {
      "login": "tarruda",
      "id": 842846,
      "avatar_url": "https://avatars0.githubusercontent.com/u/842846?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tarruda",
      "html_url": "https://github.com/tarruda",
      "followers_url": "https://api.github.com/users/tarruda/followers",
      "following_url": "https://api.github.com/users/tarruda/following{/other_user}",
      "gists_url": "https://api.github.com/users/tarruda/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tarruda/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tarruda/subscriptions",
      "organizations_url": "https://api.github.com/users/tarruda/orgs",
      "repos_url": "https://api.github.com/users/tarruda/repos",
      "events_url": "https://api.github.com/users/tarruda/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tarruda/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-27T20:34:25Z",
    "updated_at": "2016-09-27T20:34:25Z",
    "body": "This is now supported in electron through the `sandbox` flag passed to `webPreferences` when creating a new `BrowserWindow`.\n\nI have not documented yet because I still need to push a some extra PRs(tracked by #6712) before the feature is fully complete(should be considered experimental), but it should already possible to use the native `window.opener` API as long as you can live with a few of limitations:\n- node.js/electron modules are not available in the renderer with one exception: `require('electron').ipcRenderer` still works on preload scripts. This means you can indirectly use all node.js/electron APIs as long as you set the proper IPC infrastructure in the browser process.\n- spell checking, plugins and `<webview>` and some extra functionality implemented in normal electron windows might not be available. This is because the sandboxed renderer inherits directly from chromium content renderer, so most of what was implemented by electron on renderer side is not available(this will be fixed in future PRs)\n\nSome examples of how to use it are available in https://github.com/electron/electron/blob/master/spec/api-browser-window-spec.js\n\nSo far the feature is only available master branch(no prebuilt binaries), but I think it will be on the next released version(cc @zcbenz)\n\nAny help in testing this flag is appreciated, especially on OSX/windows which are not my native OSes.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/249991896",
    "html_url": "https://github.com/electron/electron/issues/1865#issuecomment-249991896",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1865",
    "id": 249991896,
    "user": {
      "login": "tarruda",
      "id": 842846,
      "avatar_url": "https://avatars0.githubusercontent.com/u/842846?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tarruda",
      "html_url": "https://github.com/tarruda",
      "followers_url": "https://api.github.com/users/tarruda/followers",
      "following_url": "https://api.github.com/users/tarruda/following{/other_user}",
      "gists_url": "https://api.github.com/users/tarruda/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tarruda/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tarruda/subscriptions",
      "organizations_url": "https://api.github.com/users/tarruda/orgs",
      "repos_url": "https://api.github.com/users/tarruda/repos",
      "events_url": "https://api.github.com/users/tarruda/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tarruda/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-27T20:41:37Z",
    "updated_at": "2016-09-27T20:41:37Z",
    "body": "Another limitation about the `sandbox` flag: The preload script does not have a commonjs environment yet. Instead, the preload code is executed in the context of a function that has `require` in its scope, but only `require('electron').ipcRenderer` works for now.\n\nYou can still split your renderer code into multiple modules by using browserify to generate a preload bundle that delegates `require('electron')` to the enclosing funciton: `browserify renderer.js -x electron -o preload.js`\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/262609306",
    "html_url": "https://github.com/electron/electron/issues/1865#issuecomment-262609306",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1865",
    "id": 262609306,
    "user": {
      "login": "lijunle",
      "id": 1296500,
      "avatar_url": "https://avatars2.githubusercontent.com/u/1296500?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lijunle",
      "html_url": "https://github.com/lijunle",
      "followers_url": "https://api.github.com/users/lijunle/followers",
      "following_url": "https://api.github.com/users/lijunle/following{/other_user}",
      "gists_url": "https://api.github.com/users/lijunle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lijunle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lijunle/subscriptions",
      "organizations_url": "https://api.github.com/users/lijunle/orgs",
      "repos_url": "https://api.github.com/users/lijunle/repos",
      "events_url": "https://api.github.com/users/lijunle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lijunle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-23T19:28:06Z",
    "updated_at": "2016-11-23T19:28:06Z",
    "body": "@zcbenz @tarruda It has passed 2 months after the feature is merged into master? Is it available in any version? "
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/263023726",
    "html_url": "https://github.com/electron/electron/issues/1865#issuecomment-263023726",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1865",
    "id": 263023726,
    "user": {
      "login": "tarruda",
      "id": 842846,
      "avatar_url": "https://avatars0.githubusercontent.com/u/842846?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tarruda",
      "html_url": "https://github.com/tarruda",
      "followers_url": "https://api.github.com/users/tarruda/followers",
      "following_url": "https://api.github.com/users/tarruda/following{/other_user}",
      "gists_url": "https://api.github.com/users/tarruda/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tarruda/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tarruda/subscriptions",
      "organizations_url": "https://api.github.com/users/tarruda/orgs",
      "repos_url": "https://api.github.com/users/tarruda/repos",
      "events_url": "https://api.github.com/users/tarruda/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tarruda/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-25T21:22:12Z",
    "updated_at": "2016-11-25T21:22:12Z",
    "body": "@lijunle it is available on electron 1.4.2 and up"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/263233028",
    "html_url": "https://github.com/electron/electron/issues/1865#issuecomment-263233028",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1865",
    "id": 263233028,
    "user": {
      "login": "davidrevmakx",
      "id": 4939503,
      "avatar_url": "https://avatars1.githubusercontent.com/u/4939503?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/davidrevmakx",
      "html_url": "https://github.com/davidrevmakx",
      "followers_url": "https://api.github.com/users/davidrevmakx/followers",
      "following_url": "https://api.github.com/users/davidrevmakx/following{/other_user}",
      "gists_url": "https://api.github.com/users/davidrevmakx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/davidrevmakx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/davidrevmakx/subscriptions",
      "organizations_url": "https://api.github.com/users/davidrevmakx/orgs",
      "repos_url": "https://api.github.com/users/davidrevmakx/repos",
      "events_url": "https://api.github.com/users/davidrevmakx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/davidrevmakx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-28T10:14:39Z",
    "updated_at": "2016-11-28T10:14:39Z",
    "body": "@tarruda I just tried to do a google auth on Asana.com / trello It doesn't seem to work. I used 1.4.8"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/263582739",
    "html_url": "https://github.com/electron/electron/issues/1865#issuecomment-263582739",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1865",
    "id": 263582739,
    "user": {
      "login": "davidrevmakx",
      "id": 4939503,
      "avatar_url": "https://avatars1.githubusercontent.com/u/4939503?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/davidrevmakx",
      "html_url": "https://github.com/davidrevmakx",
      "followers_url": "https://api.github.com/users/davidrevmakx/followers",
      "following_url": "https://api.github.com/users/davidrevmakx/following{/other_user}",
      "gists_url": "https://api.github.com/users/davidrevmakx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/davidrevmakx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/davidrevmakx/subscriptions",
      "organizations_url": "https://api.github.com/users/davidrevmakx/orgs",
      "repos_url": "https://api.github.com/users/davidrevmakx/repos",
      "events_url": "https://api.github.com/users/davidrevmakx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/davidrevmakx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-29T14:23:04Z",
    "updated_at": "2016-11-29T15:10:14Z",
    "body": "main.js\r\n`app.on('ready', () => {\r\n\tconsole.log(\"ready\");\r\n  const win = new BrowserWindow({webPreferences: {\r\n\t       sandbox: true\r\n        }})\r\n  win.loadURL('http://localhost:8888/index.html'); })`\r\n\r\nindex.html \r\n`<a href=\"javascript:window.open('https://app.asana.com')\">Click here</a>`\r\n\r\nWhen I try accessing window.opener from index.html it says null. Am I doing anything wrong? \r\n**Platform:** MacOS Sierra **Electron:** v1.4.10"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/263628769",
    "html_url": "https://github.com/electron/electron/issues/1865#issuecomment-263628769",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1865",
    "id": 263628769,
    "user": {
      "login": "lijunle",
      "id": 1296500,
      "avatar_url": "https://avatars2.githubusercontent.com/u/1296500?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lijunle",
      "html_url": "https://github.com/lijunle",
      "followers_url": "https://api.github.com/users/lijunle/followers",
      "following_url": "https://api.github.com/users/lijunle/following{/other_user}",
      "gists_url": "https://api.github.com/users/lijunle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lijunle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lijunle/subscriptions",
      "organizations_url": "https://api.github.com/users/lijunle/orgs",
      "repos_url": "https://api.github.com/users/lijunle/repos",
      "events_url": "https://api.github.com/users/lijunle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lijunle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-29T16:54:55Z",
    "updated_at": "2016-11-29T16:55:00Z",
    "body": "@davidrevmakx The `window.opener` is available in `https://app.asana.com` page, not the `index.html` one."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/263633756",
    "html_url": "https://github.com/electron/electron/issues/1865#issuecomment-263633756",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1865",
    "id": 263633756,
    "user": {
      "login": "tarruda",
      "id": 842846,
      "avatar_url": "https://avatars0.githubusercontent.com/u/842846?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tarruda",
      "html_url": "https://github.com/tarruda",
      "followers_url": "https://api.github.com/users/tarruda/followers",
      "following_url": "https://api.github.com/users/tarruda/following{/other_user}",
      "gists_url": "https://api.github.com/users/tarruda/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tarruda/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tarruda/subscriptions",
      "organizations_url": "https://api.github.com/users/tarruda/orgs",
      "repos_url": "https://api.github.com/users/tarruda/repos",
      "events_url": "https://api.github.com/users/tarruda/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tarruda/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-29T17:11:03Z",
    "updated_at": "2016-11-29T17:14:31Z",
    "body": "~~@davidrevmakx There's a [spec](https://github.com/electron/electron/blob/fb74f5576db29ccef15e1995bd9eeaf0088870a8/spec/api-browser-window-spec.js#L833) for this scenario, but maybe it is not the correct behavior. Should `window.opener` be set in children from a different domain? If yes, then please file an issue.~~\r\n\r\nIn the spec the opener is null because that code runs in a separate page, and it is not possible to send a window proxy across IPC. Can you confirm that `opener` is null in the `https://app.asan.com` and not in `index.html` as @lijunle commented?"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/263781465",
    "html_url": "https://github.com/electron/electron/issues/1865#issuecomment-263781465",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1865",
    "id": 263781465,
    "user": {
      "login": "davidrevmakx",
      "id": 4939503,
      "avatar_url": "https://avatars1.githubusercontent.com/u/4939503?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/davidrevmakx",
      "html_url": "https://github.com/davidrevmakx",
      "followers_url": "https://api.github.com/users/davidrevmakx/followers",
      "following_url": "https://api.github.com/users/davidrevmakx/following{/other_user}",
      "gists_url": "https://api.github.com/users/davidrevmakx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/davidrevmakx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/davidrevmakx/subscriptions",
      "organizations_url": "https://api.github.com/users/davidrevmakx/orgs",
      "repos_url": "https://api.github.com/users/davidrevmakx/repos",
      "events_url": "https://api.github.com/users/davidrevmakx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/davidrevmakx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-30T04:40:37Z",
    "updated_at": "2016-11-30T04:52:37Z",
    "body": "@lijunle @tarruda sorry for the confusion. Yes opener is null in https://app.asana.com page.\r\n\r\n@tarruda You were right it isn't working when the children are from a different domain. When I changed my index.html to this\r\n\r\n`<a href=\"javascript:window.open('http://localhost:8888/test.html')\">Click here</a>`\r\n\r\ntest.html has a window.opener object. \r\n\r\n#8100 have created an issue here. "
  }
]