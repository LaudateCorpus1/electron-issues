[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/242440394",
    "html_url": "https://github.com/electron/electron/issues/6966#issuecomment-242440394",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/6966",
    "id": 242440394,
    "user": {
      "login": "kevinsawicki",
      "id": 671378,
      "avatar_url": "https://avatars0.githubusercontent.com/u/671378?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kevinsawicki",
      "html_url": "https://github.com/kevinsawicki",
      "followers_url": "https://api.github.com/users/kevinsawicki/followers",
      "following_url": "https://api.github.com/users/kevinsawicki/following{/other_user}",
      "gists_url": "https://api.github.com/users/kevinsawicki/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kevinsawicki/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kevinsawicki/subscriptions",
      "organizations_url": "https://api.github.com/users/kevinsawicki/orgs",
      "repos_url": "https://api.github.com/users/kevinsawicki/repos",
      "events_url": "https://api.github.com/users/kevinsawicki/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kevinsawicki/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2016-08-25T15:57:13Z",
    "updated_at": "2016-08-25T16:56:37Z",
    "body": "> Value of args:\n\nAre you able to provide an example of the value of the arguments you are passing to the remote function? Some something like:\n\n``` js\nmyRemoteFunction([new ReferenceError('test')])\n```\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/242502541",
    "html_url": "https://github.com/electron/electron/issues/6966#issuecomment-242502541",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/6966",
    "id": 242502541,
    "user": {
      "login": "koush",
      "id": 73924,
      "avatar_url": "https://avatars3.githubusercontent.com/u/73924?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/koush",
      "html_url": "https://github.com/koush",
      "followers_url": "https://api.github.com/users/koush/followers",
      "following_url": "https://api.github.com/users/koush/following{/other_user}",
      "gists_url": "https://api.github.com/users/koush/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/koush/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/koush/subscriptions",
      "organizations_url": "https://api.github.com/users/koush/orgs",
      "repos_url": "https://api.github.com/users/koush/repos",
      "events_url": "https://api.github.com/users/koush/events{/privacy}",
      "received_events_url": "https://api.github.com/users/koush/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-25T19:04:26Z",
    "updated_at": "2016-08-25T19:06:44Z",
    "body": "Invoked from renderer process A, where \"callback\" is a RemoteFunction in renderer process B:\n\n``` javascript\ncallback(null, new ReferenceError('test'))\n```\n\nSo that call ends up going from renderer -> main -> renderer. This behavior is a bug in my code, which exposed this possible issue in Electron. I fixed my bug, but figured I'd report this anyways, since the prototype clobbering is likely not desired. I realize that going renderer to renderer ipc is not ideal :)\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/242551306",
    "html_url": "https://github.com/electron/electron/issues/6966#issuecomment-242551306",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/6966",
    "id": 242551306,
    "user": {
      "login": "kevinsawicki",
      "id": 671378,
      "avatar_url": "https://avatars0.githubusercontent.com/u/671378?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kevinsawicki",
      "html_url": "https://github.com/kevinsawicki",
      "followers_url": "https://api.github.com/users/kevinsawicki/followers",
      "following_url": "https://api.github.com/users/kevinsawicki/following{/other_user}",
      "gists_url": "https://api.github.com/users/kevinsawicki/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kevinsawicki/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kevinsawicki/subscriptions",
      "organizations_url": "https://api.github.com/users/kevinsawicki/orgs",
      "repos_url": "https://api.github.com/users/kevinsawicki/repos",
      "events_url": "https://api.github.com/users/kevinsawicki/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kevinsawicki/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2016-08-25T21:43:33Z",
    "updated_at": "2016-08-25T21:43:33Z",
    "body": "> So that call ends up going from renderer -> main -> renderer.\n\nSo is the value correct in the main process and then wrong when it goes to the second render process?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/245002129",
    "html_url": "https://github.com/electron/electron/issues/6966#issuecomment-245002129",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/6966",
    "id": 245002129,
    "user": {
      "login": "kevinsawicki",
      "id": 671378,
      "avatar_url": "https://avatars0.githubusercontent.com/u/671378?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kevinsawicki",
      "html_url": "https://github.com/kevinsawicki",
      "followers_url": "https://api.github.com/users/kevinsawicki/followers",
      "following_url": "https://api.github.com/users/kevinsawicki/following{/other_user}",
      "gists_url": "https://api.github.com/users/kevinsawicki/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kevinsawicki/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kevinsawicki/subscriptions",
      "organizations_url": "https://api.github.com/users/kevinsawicki/orgs",
      "repos_url": "https://api.github.com/users/kevinsawicki/repos",
      "events_url": "https://api.github.com/users/kevinsawicki/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kevinsawicki/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2016-09-06T16:09:16Z",
    "updated_at": "2016-09-06T16:09:16Z",
    "body": "> So is the value correct in the main process and then wrong when it goes to the second render process?\n\nAny updates @koush?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/250811226",
    "html_url": "https://github.com/electron/electron/issues/6966#issuecomment-250811226",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/6966",
    "id": 250811226,
    "user": {
      "login": "kevinsawicki",
      "id": 671378,
      "avatar_url": "https://avatars0.githubusercontent.com/u/671378?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kevinsawicki",
      "html_url": "https://github.com/kevinsawicki",
      "followers_url": "https://api.github.com/users/kevinsawicki/followers",
      "following_url": "https://api.github.com/users/kevinsawicki/following{/other_user}",
      "gists_url": "https://api.github.com/users/kevinsawicki/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kevinsawicki/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kevinsawicki/subscriptions",
      "organizations_url": "https://api.github.com/users/kevinsawicki/orgs",
      "repos_url": "https://api.github.com/users/kevinsawicki/repos",
      "events_url": "https://api.github.com/users/kevinsawicki/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kevinsawicki/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2016-09-30T17:59:52Z",
    "updated_at": "2016-09-30T17:59:52Z",
    "body": "Closing this out until more information is provided.\n"
  }
]