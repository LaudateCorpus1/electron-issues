[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/121931214",
    "html_url": "https://github.com/electron/electron/issues/2237#issuecomment-121931214",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2237",
    "id": 121931214,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2015-07-16T11:32:30Z",
    "updated_at": "2015-07-16T11:32:30Z",
    "body": "You can use getUserMedia.\nhttps://developer.mozilla.org/en-US/docs/Web/API/Navigator/getUserMedia\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/121993985",
    "html_url": "https://github.com/electron/electron/issues/2237#issuecomment-121993985",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2237",
    "id": 121993985,
    "user": {
      "login": "atdrago",
      "id": 144225,
      "avatar_url": "https://avatars2.githubusercontent.com/u/144225?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/atdrago",
      "html_url": "https://github.com/atdrago",
      "followers_url": "https://api.github.com/users/atdrago/followers",
      "following_url": "https://api.github.com/users/atdrago/following{/other_user}",
      "gists_url": "https://api.github.com/users/atdrago/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/atdrago/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/atdrago/subscriptions",
      "organizations_url": "https://api.github.com/users/atdrago/orgs",
      "repos_url": "https://api.github.com/users/atdrago/repos",
      "events_url": "https://api.github.com/users/atdrago/events{/privacy}",
      "received_events_url": "https://api.github.com/users/atdrago/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-16T15:30:37Z",
    "updated_at": "2015-07-16T15:30:37Z",
    "body": "Hi @zcbenz. Thanks for the response!\n\ngetUserMedia is used to capture either audio or video from some input device, like a webcam or microphone. This is not what I'm trying to accomplish.\n\nWhat I'd like to do is take a screen grab of the elements on the user's screen, for example, allowing them to draw a rectangle of the area they'd like to capture, then save that picture to the Desktop. (In other words, this: https://support.apple.com/en-us/HT201361)\n\nI was able to accomplish this on Mac OS X using the `screencapture` command line utility:\n\n``` javascript\nvar exec = require('child_process').exec;\n\nexec('screencapture -R10,10,500,500 test.jpg', function (err, stdout, stderr) {\n    // work with the image within the app\n});\n```\n\nBut it would be nice to be able to accomplish this in a cross-platform way, as a method that is part of `app`. `BrowserWindow.capturePage([rect, ]callback)` can capture the contents of a _page_, and so it would make sense that `app` would have something similar built in to capture the user's _screen_. \n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/122025770",
    "html_url": "https://github.com/electron/electron/issues/2237#issuecomment-122025770",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2237",
    "id": 122025770,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2015-07-16T17:16:18Z",
    "updated_at": "2015-07-16T17:16:18Z",
    "body": "You can specify screen as input.\nhttps://html5-demos.appspot.com/static/getusermedia/screenshare.html\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/126384435",
    "html_url": "https://github.com/electron/electron/issues/2237#issuecomment-126384435",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2237",
    "id": 126384435,
    "user": {
      "login": "atdrago",
      "id": 144225,
      "avatar_url": "https://avatars2.githubusercontent.com/u/144225?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/atdrago",
      "html_url": "https://github.com/atdrago",
      "followers_url": "https://api.github.com/users/atdrago/followers",
      "following_url": "https://api.github.com/users/atdrago/following{/other_user}",
      "gists_url": "https://api.github.com/users/atdrago/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/atdrago/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/atdrago/subscriptions",
      "organizations_url": "https://api.github.com/users/atdrago/orgs",
      "repos_url": "https://api.github.com/users/atdrago/repos",
      "events_url": "https://api.github.com/users/atdrago/events{/privacy}",
      "received_events_url": "https://api.github.com/users/atdrago/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-30T16:06:40Z",
    "updated_at": "2015-07-30T16:06:40Z",
    "body": "Sorry to bring this up again, but `getUserMedia()` no longer works in Chrome 37+. The flag has been removed. See here: https://groups.google.com/forum/#!msg/discuss-webrtc/TPQVKZnsF5g/Hlpy8kqaLnEJ\n\nThink this is a possibility to get add in as a new API?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/126542840",
    "html_url": "https://github.com/electron/electron/issues/2237#issuecomment-126542840",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2237",
    "id": 126542840,
    "user": {
      "login": "hokein",
      "id": 2557445,
      "avatar_url": "https://avatars2.githubusercontent.com/u/2557445?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hokein",
      "html_url": "https://github.com/hokein",
      "followers_url": "https://api.github.com/users/hokein/followers",
      "following_url": "https://api.github.com/users/hokein/following{/other_user}",
      "gists_url": "https://api.github.com/users/hokein/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hokein/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hokein/subscriptions",
      "organizations_url": "https://api.github.com/users/hokein/orgs",
      "repos_url": "https://api.github.com/users/hokein/repos",
      "events_url": "https://api.github.com/users/hokein/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hokein/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-31T02:12:35Z",
    "updated_at": "2015-07-31T02:12:35Z",
    "body": "@atdrago \nThe `enable-usermedia-screen-capturing` is removed in `chrome://flags` and is remaind in the command-line switches. \nSo it still works on Electron, you need to specify the flag via `app.commandLine.appendSwitch('enable-usermedia-screen-capturing');`. And the `destopCapture` API is tracked in #1380.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/236092914",
    "html_url": "https://github.com/electron/electron/issues/2237#issuecomment-236092914",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2237",
    "id": 236092914,
    "user": {
      "login": "andruhon",
      "id": 1694497,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1694497?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/andruhon",
      "html_url": "https://github.com/andruhon",
      "followers_url": "https://api.github.com/users/andruhon/followers",
      "following_url": "https://api.github.com/users/andruhon/following{/other_user}",
      "gists_url": "https://api.github.com/users/andruhon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/andruhon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andruhon/subscriptions",
      "organizations_url": "https://api.github.com/users/andruhon/orgs",
      "repos_url": "https://api.github.com/users/andruhon/repos",
      "events_url": "https://api.github.com/users/andruhon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/andruhon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-29T04:39:17Z",
    "updated_at": "2016-07-29T04:39:17Z",
    "body": "A simplified snippet function taking a screenshot, for the reference,\nreturns PNG blob into the callback:\n\n``` JavaScript\nfunction takeScreenShot (callback) {\n    let screenConstraints = {\n        mandatory: {\n            chromeMediaSource: \"screen\",\n            maxHeight: 1080,\n            maxWidth: 1920,\n            minAspectRatio: 1.77\n        },\n        optional: []\n    };\n\n    let session = {\n        audio: false,\n        video: screenConstraints\n    };\n\n    let streaming = false;\n    let canvas = document.createElement(\"canvas\");\n    let video = document.createElement(\"video\");\n    document.body.appendChild(canvas);\n    document.body.appendChild(video);\n    let width = screen.width;\n    let height = 0;\n\n    video.addEventListener(\"canplay\", function(){\n        if (!streaming) {\n            height = video.videoHeight / (video.videoWidth / width);\n\n            if (isNaN(height)) {\n                height = width / (4 / 3);\n            }\n\n            video.setAttribute(\"width\", width.toString());\n            video.setAttribute(\"height\", height.toString());\n            canvas.setAttribute(\"width\", width.toString());\n            canvas.setAttribute(\"height\", height.toString());\n            streaming = true;\n\n            let context = canvas.getContext(\"2d\");\n            if (width && height) {\n                canvas.width = width;\n                canvas.height = height;\n                context.drawImage(video, 0, 0, width, height);\n\n                canvas[\"toBlob\"](function (data) {\n                    video.pause();\n                    video.src = \"\";\n                    document.body.removeChild(video);\n                    document.body.removeChild(canvas);\n                    callback(data);\n                });\n            }\n        }\n    }, false);\n\n    navigator[\"webkitGetUserMedia\"](session, function (stream) {\n        video.src = window[\"webkitURL\"].createObjectURL(stream);\n        video.play();\n    }, function () {\n        console.error(\"Can't take a screenshot\");\n    });\n}\n```\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/248053081",
    "html_url": "https://github.com/electron/electron/issues/2237#issuecomment-248053081",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2237",
    "id": 248053081,
    "user": {
      "login": "mixalbl4-127",
      "id": 3511307,
      "avatar_url": "https://avatars1.githubusercontent.com/u/3511307?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mixalbl4-127",
      "html_url": "https://github.com/mixalbl4-127",
      "followers_url": "https://api.github.com/users/mixalbl4-127/followers",
      "following_url": "https://api.github.com/users/mixalbl4-127/following{/other_user}",
      "gists_url": "https://api.github.com/users/mixalbl4-127/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mixalbl4-127/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mixalbl4-127/subscriptions",
      "organizations_url": "https://api.github.com/users/mixalbl4-127/orgs",
      "repos_url": "https://api.github.com/users/mixalbl4-127/repos",
      "events_url": "https://api.github.com/users/mixalbl4-127/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mixalbl4-127/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-19T17:00:25Z",
    "updated_at": "2016-09-19T17:00:25Z",
    "body": "You can use this library: https://github.com/mixalbl4-127/user-media-screenshot\n"
  }
]