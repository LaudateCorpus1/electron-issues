[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/104928802",
    "html_url": "https://github.com/electron/electron/issues/1759#issuecomment-104928802",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1759",
    "id": 104928802,
    "user": {
      "login": "maxkueng",
      "id": 168709,
      "avatar_url": "https://avatars2.githubusercontent.com/u/168709?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maxkueng",
      "html_url": "https://github.com/maxkueng",
      "followers_url": "https://api.github.com/users/maxkueng/followers",
      "following_url": "https://api.github.com/users/maxkueng/following{/other_user}",
      "gists_url": "https://api.github.com/users/maxkueng/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maxkueng/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maxkueng/subscriptions",
      "organizations_url": "https://api.github.com/users/maxkueng/orgs",
      "repos_url": "https://api.github.com/users/maxkueng/repos",
      "events_url": "https://api.github.com/users/maxkueng/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maxkueng/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-23T17:33:45Z",
    "updated_at": "2015-05-23T17:33:45Z",
    "body": "I have created an example app in [maxkueng/electron-issue-1759](https://github.com/maxkueng/electron-issue-1759) to reproduce the issue.\n\nIt provides two \"apps\" (app1, app2) under `app://app1` and `app://app2` that will resolve to `./apps/app1` and `./apps/app2` respectively.  \nBoth apps have an `index.html` and a `styles.css` file. \n\nThe custom protocol handler will print out every single request.\n\nWhen loading `app://app1/` it will print out the path to both `index.html` and `styles.css`. But when loading `app://app1` (without trailing slash) it will only print the path to `index.html` and won't even try to load `styles.css`.\n\nComment and uncomment the different `openWindow()` calls [here](https://github.com/maxkueng/electron-issue-1759/blob/master/main.js#L56-L62) to try out different URLs.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/105805224",
    "html_url": "https://github.com/electron/electron/issues/1759#issuecomment-105805224",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1759",
    "id": 105805224,
    "user": {
      "login": "deepak1556",
      "id": 964386,
      "avatar_url": "https://avatars2.githubusercontent.com/u/964386?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/deepak1556",
      "html_url": "https://github.com/deepak1556",
      "followers_url": "https://api.github.com/users/deepak1556/followers",
      "following_url": "https://api.github.com/users/deepak1556/following{/other_user}",
      "gists_url": "https://api.github.com/users/deepak1556/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/deepak1556/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/deepak1556/subscriptions",
      "organizations_url": "https://api.github.com/users/deepak1556/orgs",
      "repos_url": "https://api.github.com/users/deepak1556/repos",
      "events_url": "https://api.github.com/users/deepak1556/events{/privacy}",
      "received_events_url": "https://api.github.com/users/deepak1556/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-27T07:47:28Z",
    "updated_at": "2015-05-27T07:47:28Z",
    "body": "isnt that how relative reference works https://tools.ietf.org/html/rfc3986#section-5 . If the example was written to \n\n``` js\nvar path = require('path');\nvar url = require('url');\nvar app = require('app');\nvar BrowserWindow = require('browser-window');\n\n// This is a simple regsistry to register apps.\nvar registry = {\n  apps: {},\n  register: function (name, dir) {\n    console.log('Registered', name, 'with path', dir);\n    this.apps[name] = dir;\n  },\n  getPath: function (name) {\n    return this.apps[name];\n  }\n};\n\nfunction setupProtocol () {\n  var protocol = require('protocol');\n\n  protocol.registerProtocol('app', function (request) {\n\n    // Parse the URL\n    var parsedUri = url.parse(request.url);\n\n    // If the URL is, app://app1 the hostname will be 'app1'\n    // which we'll use to look up the path.\n    var appName = parsedUri.hostname;\n\n    // Get the app directory from the registry.\n    var appPath = registry.getPath(parsedUri.hostname);\n\n    // The default path is '/index.html'.\n    if (parsedUri.pathname === \"/test\")\n      parsedUri.pathname = \"/index.html\"\n\n    var filePath = path.join(appPath, parsedUri.pathname || '');\n    console.log('Requesting', filePath);\n\n    return new protocol.RequestFileJob(filePath);\n  });\n}\n\nfunction openWindow (uri) {\n  var win = new BrowserWindow({ width: 800, height: 600 });\n  win.loadUrl(uri);\n\n  win.openDevTools();\n}\n\n// Register some apps.\nregistry.register('app1', path.join(__dirname, 'apps/app1'));\nregistry.register('app2', path.join(__dirname, 'apps/app2'));\n\napp.on('ready', function () {\n  setupProtocol();\n\n  openWindow('app://app1/test'); // Works\n});\n```\n\nwill work too. Besides `GURL::resolve` wont work correctly if there is no trailing slash for relative reference . Servers usually do a 301 redirect to fix this and `URLRequestFileJob` does [too](https://code.google.com/p/chromium/codesearch#chromium/src/net/url_request/url_request_file_job.cc&sq=package:chromium&rcl=1432683946&l=125) but i am not sure why the job stops after redirect. @zcbenz did you mark the `filejob` behaviour as bug? just curious.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/121954022",
    "html_url": "https://github.com/electron/electron/issues/1759#issuecomment-121954022",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1759",
    "id": 121954022,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2015-07-16T13:21:40Z",
    "updated_at": "2015-07-16T13:21:40Z",
    "body": "You can now use `protocol.registerStandardSchemes` to register the custom standard as standard scheme to change this behavior.\n"
  }
]