[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/120463668",
    "html_url": "https://github.com/electron/electron/issues/2183#issuecomment-120463668",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2183",
    "id": 120463668,
    "user": {
      "login": "paulcbetts",
      "id": 1396,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1396?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulcbetts",
      "html_url": "https://github.com/paulcbetts",
      "followers_url": "https://api.github.com/users/paulcbetts/followers",
      "following_url": "https://api.github.com/users/paulcbetts/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulcbetts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulcbetts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulcbetts/subscriptions",
      "organizations_url": "https://api.github.com/users/paulcbetts/orgs",
      "repos_url": "https://api.github.com/users/paulcbetts/repos",
      "events_url": "https://api.github.com/users/paulcbetts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulcbetts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-10T17:16:56Z",
    "updated_at": "2015-07-10T17:16:56Z",
    "body": "What you want is `delete global` instead\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/120463826",
    "html_url": "https://github.com/electron/electron/issues/2183#issuecomment-120463826",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2183",
    "id": 120463826,
    "user": {
      "login": "paulcbetts",
      "id": 1396,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1396?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulcbetts",
      "html_url": "https://github.com/paulcbetts",
      "followers_url": "https://api.github.com/users/paulcbetts/followers",
      "following_url": "https://api.github.com/users/paulcbetts/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulcbetts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulcbetts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulcbetts/subscriptions",
      "organizations_url": "https://api.github.com/users/paulcbetts/orgs",
      "repos_url": "https://api.github.com/users/paulcbetts/repos",
      "events_url": "https://api.github.com/users/paulcbetts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulcbetts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-10T17:17:35Z",
    "updated_at": "2015-07-10T17:17:35Z",
    "body": "> And many libraries (primary UMD-type ones) make decision on which branch of code to execute based on the existence of global object. \n\nYou most likely need to patch these libraries, there are bunch of JS libs that make decisions that don't make sense to Electron. Send PRs!\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/120466602",
    "html_url": "https://github.com/electron/electron/issues/2183#issuecomment-120466602",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2183",
    "id": 120466602,
    "user": {
      "login": "alexindigo",
      "id": 127063,
      "avatar_url": "https://avatars0.githubusercontent.com/u/127063?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexindigo",
      "html_url": "https://github.com/alexindigo",
      "followers_url": "https://api.github.com/users/alexindigo/followers",
      "following_url": "https://api.github.com/users/alexindigo/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexindigo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexindigo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexindigo/subscriptions",
      "organizations_url": "https://api.github.com/users/alexindigo/orgs",
      "repos_url": "https://api.github.com/users/alexindigo/repos",
      "events_url": "https://api.github.com/users/alexindigo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexindigo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-10T17:29:11Z",
    "updated_at": "2015-07-10T17:29:11Z",
    "body": "If I do `delete global` I get same error, since it's used in that `init.js:86` and I can't get to that `asar` file to actually see what's going on there.\n\nAs for fixing all the libraries. It will be noble movement, but somewhat futile one. :)\n\nAll the browsers don't expose `global` object and only `window` one, I don't think webview should be purposively different from the thing it's trying to emulate.\n\nDo you think there are benefits in existence of `global` object within webview?\n\nThank you.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/120485501",
    "html_url": "https://github.com/electron/electron/issues/2183#issuecomment-120485501",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2183",
    "id": 120485501,
    "user": {
      "login": "paulcbetts",
      "id": 1396,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1396?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulcbetts",
      "html_url": "https://github.com/paulcbetts",
      "followers_url": "https://api.github.com/users/paulcbetts/followers",
      "following_url": "https://api.github.com/users/paulcbetts/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulcbetts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulcbetts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulcbetts/subscriptions",
      "organizations_url": "https://api.github.com/users/paulcbetts/orgs",
      "repos_url": "https://api.github.com/users/paulcbetts/repos",
      "events_url": "https://api.github.com/users/paulcbetts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulcbetts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-10T18:18:43Z",
    "updated_at": "2015-07-10T18:18:43Z",
    "body": "> As for fixing all the libraries. It will be noble movement, but somewhat futile one. :)\n\nThat's really the only way to do it though (or to fix UMD) - this isn't a single bug, it's a whole bunch of weird one-off wrong decisions that these libraries are making\n\n> Do you think there are benefits in existence of global object within webview?\n\nDo you have `node-integration` set to false? I could see an argument for that if this is the case\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/120494855",
    "html_url": "https://github.com/electron/electron/issues/2183#issuecomment-120494855",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2183",
    "id": 120494855,
    "user": {
      "login": "alexindigo",
      "id": 127063,
      "avatar_url": "https://avatars0.githubusercontent.com/u/127063?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexindigo",
      "html_url": "https://github.com/alexindigo",
      "followers_url": "https://api.github.com/users/alexindigo/followers",
      "following_url": "https://api.github.com/users/alexindigo/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexindigo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexindigo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexindigo/subscriptions",
      "organizations_url": "https://api.github.com/users/alexindigo/orgs",
      "repos_url": "https://api.github.com/users/alexindigo/repos",
      "events_url": "https://api.github.com/users/alexindigo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexindigo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-10T19:00:32Z",
    "updated_at": "2015-07-10T19:00:32Z",
    "body": "Yes, `node-integration` is false (or at least I assume it's the default, I don't mind to have explicit flag for that either). I do understand that `node-integration` makes it whole new story. :) My concern is emulating real browser as close as possible (no node or extra apis).\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/120635249",
    "html_url": "https://github.com/electron/electron/issues/2183#issuecomment-120635249",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2183",
    "id": 120635249,
    "user": {
      "login": "jprichardson",
      "id": 150063,
      "avatar_url": "https://avatars0.githubusercontent.com/u/150063?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jprichardson",
      "html_url": "https://github.com/jprichardson",
      "followers_url": "https://api.github.com/users/jprichardson/followers",
      "following_url": "https://api.github.com/users/jprichardson/following{/other_user}",
      "gists_url": "https://api.github.com/users/jprichardson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jprichardson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jprichardson/subscriptions",
      "organizations_url": "https://api.github.com/users/jprichardson/orgs",
      "repos_url": "https://api.github.com/users/jprichardson/repos",
      "events_url": "https://api.github.com/users/jprichardson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jprichardson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-11T15:46:53Z",
    "updated_at": "2015-07-11T15:46:53Z",
    "body": "@alexanderneu correct me if I'm wrong, but don't most UMD libraries look for `module` and `module.exports`, and then `define`? If they can't find any of those, they just export to the function wrapper that passes in `window`?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/120668970",
    "html_url": "https://github.com/electron/electron/issues/2183#issuecomment-120668970",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2183",
    "id": 120668970,
    "user": {
      "login": "alexindigo",
      "id": 127063,
      "avatar_url": "https://avatars0.githubusercontent.com/u/127063?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexindigo",
      "html_url": "https://github.com/alexindigo",
      "followers_url": "https://api.github.com/users/alexindigo/followers",
      "following_url": "https://api.github.com/users/alexindigo/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexindigo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexindigo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexindigo/subscriptions",
      "organizations_url": "https://api.github.com/users/alexindigo/orgs",
      "repos_url": "https://api.github.com/users/alexindigo/repos",
      "events_url": "https://api.github.com/users/alexindigo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexindigo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-11T23:22:30Z",
    "updated_at": "2015-07-11T23:22:30Z",
    "body": "@jprichardson While testing [global-define](https://www.npmjs.com/package/global-define) I bumped into many different implementations. Even within one project (third and forth dependency tiers). I don't remember all the names off hand, but I think it's safe to assume there will be as many implementations as there are the ways to achieve desired result.\n\nAnd from where I stand, I don't see benefits in having `global` available in webview without node-integration. Please correct me if I'm wrong.\n\nThank you.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/120710518",
    "html_url": "https://github.com/electron/electron/issues/2183#issuecomment-120710518",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2183",
    "id": 120710518,
    "user": {
      "login": "jprichardson",
      "id": 150063,
      "avatar_url": "https://avatars0.githubusercontent.com/u/150063?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jprichardson",
      "html_url": "https://github.com/jprichardson",
      "followers_url": "https://api.github.com/users/jprichardson/followers",
      "following_url": "https://api.github.com/users/jprichardson/following{/other_user}",
      "gists_url": "https://api.github.com/users/jprichardson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jprichardson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jprichardson/subscriptions",
      "organizations_url": "https://api.github.com/users/jprichardson/orgs",
      "repos_url": "https://api.github.com/users/jprichardson/repos",
      "events_url": "https://api.github.com/users/jprichardson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jprichardson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-12T11:32:26Z",
    "updated_at": "2015-07-12T11:32:26Z",
    "body": "@alexindigo You have a point. I agree that `global` should not be available if `node-integration` is `false`.\n"
  }
]