[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/173620177",
    "html_url": "https://github.com/electron/electron/issues/4179#issuecomment-173620177",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/4179",
    "id": 173620177,
    "user": {
      "login": "abe33",
      "id": 247140,
      "avatar_url": "https://avatars2.githubusercontent.com/u/247140?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/abe33",
      "html_url": "https://github.com/abe33",
      "followers_url": "https://api.github.com/users/abe33/followers",
      "following_url": "https://api.github.com/users/abe33/following{/other_user}",
      "gists_url": "https://api.github.com/users/abe33/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/abe33/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/abe33/subscriptions",
      "organizations_url": "https://api.github.com/users/abe33/orgs",
      "repos_url": "https://api.github.com/users/abe33/repos",
      "events_url": "https://api.github.com/users/abe33/events{/privacy}",
      "received_events_url": "https://api.github.com/users/abe33/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-21T16:12:14Z",
    "updated_at": "2016-01-21T16:12:14Z",
    "body": "It was specifically to prevent developers to run things in the background. \nPreviously, the canonical way to make animations on the web was by using a `setInterval` to get the animation tick. But unfortunately,  an interval will keep running even when the tab is blurred, which led to awful browsing performances if one or more tabs was not pausing their interval.\n\n> i draw and tween a lot of stuff with my game using RAF. If a player alt-tabs or loses focus of the app, and then comes back, guess what? Display issues beyond belief, it's a joke.\n\nTweens and game animations in RT games should always consider the previous frame duration before computing their next step so that they can catch up immediately in case of a huge lag (which can also happen even when the window is active).\n\nIn your case you should probably not mix your game loop with the render one. Keeping every gameplay actions in a `setInterval` and triggering rAF only to update the display.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/173624915",
    "html_url": "https://github.com/electron/electron/issues/4179#issuecomment-173624915",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/4179",
    "id": 173624915,
    "user": {
      "login": "McFarts",
      "id": 13074002,
      "avatar_url": "https://avatars2.githubusercontent.com/u/13074002?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/McFarts",
      "html_url": "https://github.com/McFarts",
      "followers_url": "https://api.github.com/users/McFarts/followers",
      "following_url": "https://api.github.com/users/McFarts/following{/other_user}",
      "gists_url": "https://api.github.com/users/McFarts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/McFarts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/McFarts/subscriptions",
      "organizations_url": "https://api.github.com/users/McFarts/orgs",
      "repos_url": "https://api.github.com/users/McFarts/repos",
      "events_url": "https://api.github.com/users/McFarts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/McFarts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-21T16:28:53Z",
    "updated_at": "2016-01-21T16:30:13Z",
    "body": "Well, if you play a game like Diablo 3 / Path of Exile, etc when you alt-tab the game is still rendering. I don't see why they would want to disable the ability to enable that feature. Do the JS dev's think a triple a, or very gorgeous game cannot be crafted in javascript? Especially now since we got nodejs and horizontal scaling with Redis? And even better yet, we have electron that let's us run our game inside a v8 isolate on the desktop to give that 'desktop app' feel to their game.  Seems to me, RAF needs some more love and support for this feature. They underestimate the potentiality and future of JS with limitting RAF with such shitty api. What? Do they think all game dev's use c++ to make games? It's a joke really, and very sad. WebGL is so powerful and only growing and going to continue to dominate. This is just the beginning.\n\nI'll try your method, thanks. Although, the only problem I think is my tween function is using rAF :P So that's obviously why, but yes, your method is probably more appropriate.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/173630536",
    "html_url": "https://github.com/electron/electron/issues/4179#issuecomment-173630536",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/4179",
    "id": 173630536,
    "user": {
      "login": "abe33",
      "id": 247140,
      "avatar_url": "https://avatars2.githubusercontent.com/u/247140?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/abe33",
      "html_url": "https://github.com/abe33",
      "followers_url": "https://api.github.com/users/abe33/followers",
      "following_url": "https://api.github.com/users/abe33/following{/other_user}",
      "gists_url": "https://api.github.com/users/abe33/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/abe33/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/abe33/subscriptions",
      "organizations_url": "https://api.github.com/users/abe33/orgs",
      "repos_url": "https://api.github.com/users/abe33/repos",
      "events_url": "https://api.github.com/users/abe33/events{/privacy}",
      "received_events_url": "https://api.github.com/users/abe33/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-21T16:47:02Z",
    "updated_at": "2016-01-21T16:47:02Z",
    "body": "> Do the JS dev's think a triple a, or very gorgeous game cannot be crafted in javascript?\n\nThat's not the point, the point is that browser vendors have to deal with performances issues resulting of poorly designed websites. With the increasingly amount of animations on the web it was necessary to provide a canonical way to define animations that doesn't impede the overall browsing experience. If I have 20 tabs open that all run dozens of GPU based animations in the background I will probably no longer be able to browse anything. \n\n>  Especially now since we got nodejs and horizontal scaling with Redis? And even better yet, we have electron that let's us run our game inside a v8 isolate on the desktop to give that 'desktop app' feel to their game. Seems to me, RAF needs some more love and support for this feature. \n\nNever forget that this proposal is way older than any webkit+node tooling around. From their POV why considering a feature for a use case that as yet to be seen? YAGNI as they say. And also consider that the standardization process is mainly a consensus driven thing (well, it tries). And you can't expect every vendor out-there to agree on features that will impact 0.0001% of the web.\n\n> They underestimate the potentiality and future of JS with limitting RAF with such shitty api. What? Do they think all game dev's use c++ to make games? It's a joke really, and very sad. WebGL is so powerful and only growing and going to continue to dominate. This is just the beginning.\n\nI can't say I don't feel the same, but OTOH such a feature (allowing a developer to force a background rendering of its scene) can easily be misused and kill a browser performances quickly\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/173633113",
    "html_url": "https://github.com/electron/electron/issues/4179#issuecomment-173633113",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/4179",
    "id": 173633113,
    "user": {
      "login": "McFarts",
      "id": 13074002,
      "avatar_url": "https://avatars2.githubusercontent.com/u/13074002?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/McFarts",
      "html_url": "https://github.com/McFarts",
      "followers_url": "https://api.github.com/users/McFarts/followers",
      "following_url": "https://api.github.com/users/McFarts/following{/other_user}",
      "gists_url": "https://api.github.com/users/McFarts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/McFarts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/McFarts/subscriptions",
      "organizations_url": "https://api.github.com/users/McFarts/orgs",
      "repos_url": "https://api.github.com/users/McFarts/repos",
      "events_url": "https://api.github.com/users/McFarts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/McFarts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-21T16:55:51Z",
    "updated_at": "2016-01-21T16:59:07Z",
    "body": "I agree with your points about the browser vendor issue. That's why I originally came to electron to see if I maybe I could tinker and enhance my game w/ the desktop experience.\n\nMaybe, is it possible to compile V8 from source or something and add a method to RFA to enable this which then I can use within electron?  It's just, the browser's have even nerfed `setInterval` not to use disk io on an **unFocused** tab. Which is fine as it could be a performance issues, but now we're back to square one.\n\nThe issue where all this originated is from is I'm implementing hp regeneration. My game receives ticks from the server to update the user's hp accordingly. The tick they receive is every 1 second with the new hp regeneration amount.  This values get's SENT to a tween function in Phaser that then uses `drawImage` to render my HP orb graphic to make it feel like it has that 'regeneration' effect of gaining health.  The problem is, when a player alt-tabs when this tween is happening,  and then comes back it's all messed up.  Because the tween system is using PixiJS which is using RAF for it's callbacks and **all the rendering is based upon RAF***. If RAF was enabled while alt-tabbing this problem wouldn't even exist!! \n\nI also just switched to a setInterval tween here:\nhttps://jsfiddle.net/Dillybob/15aa0sm9/1/\n\nClick run, go to a new tab then come back & check console. The tween data get's stopped when you go to a new tab.  (Browser has nerfed setInterval too).  So I guess now I am only left with setTimeout.  I'm going to see if I can get a setTimeout easing/tween library working.\n\nBut I am going to see if I can do a custom compilation of V8 or something and enable RAF on background. If that's even possible, but I do want to keep my game browser based, but jee willy.  This is harsh.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/173660500",
    "html_url": "https://github.com/electron/electron/issues/4179#issuecomment-173660500",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/4179",
    "id": 173660500,
    "user": {
      "login": "McFarts",
      "id": 13074002,
      "avatar_url": "https://avatars2.githubusercontent.com/u/13074002?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/McFarts",
      "html_url": "https://github.com/McFarts",
      "followers_url": "https://api.github.com/users/McFarts/followers",
      "following_url": "https://api.github.com/users/McFarts/following{/other_user}",
      "gists_url": "https://api.github.com/users/McFarts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/McFarts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/McFarts/subscriptions",
      "organizations_url": "https://api.github.com/users/McFarts/orgs",
      "repos_url": "https://api.github.com/users/McFarts/repos",
      "events_url": "https://api.github.com/users/McFarts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/McFarts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-21T18:14:48Z",
    "updated_at": "2016-01-21T18:15:39Z",
    "body": "@abe33  is right, totally bad design by me.\n\nBecause if there is game lag with requestAnimationFrame, it will cause the same issues. I need to store the REAL amount of the total amount of a player's HP (including regeneration) in a temporary object, and then use that to update the player's HP when they come back in focus (clicking on the tab). I can use this https://developer.mozilla.org/en-US/docs/Web/API/Page_Visibility_API \n\nThen, when that player has came back (all the tween's have failed, etc) use the temporary object with their real hp amount in there and restore their HP! \n\nBoom! Sorry for the hassle. Thanks for ur help ~\n"
  }
]