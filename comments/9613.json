[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/304668514",
    "html_url": "https://github.com/electron/electron/issues/9613#issuecomment-304668514",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/9613",
    "id": 304668514,
    "user": {
      "login": "MarshallOfSound",
      "id": 6634592,
      "avatar_url": "https://avatars0.githubusercontent.com/u/6634592?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarshallOfSound",
      "html_url": "https://github.com/MarshallOfSound",
      "followers_url": "https://api.github.com/users/MarshallOfSound/followers",
      "following_url": "https://api.github.com/users/MarshallOfSound/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarshallOfSound/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarshallOfSound/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarshallOfSound/subscriptions",
      "organizations_url": "https://api.github.com/users/MarshallOfSound/orgs",
      "repos_url": "https://api.github.com/users/MarshallOfSound/repos",
      "events_url": "https://api.github.com/users/MarshallOfSound/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarshallOfSound/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-29T14:03:41Z",
    "updated_at": "2017-05-29T14:03:41Z",
    "body": "@pixtron This is a side effect of how command prompt handles stdio when terminating I believe.  I can replicate this exact scenario with the following code\r\n\r\n```bash\r\nnode > out\r\nprocess.on('exit', () => console.log('exit'))\r\n```\r\n\r\nNo matter how I terminate command prompt the \"exit\" log never reaches the out file.  I don't think this is an issue with Electron.  If the stdio is removed or the process is forcefully terminated (like when shutting down) there is no way for Electron to emit close / quite events as there is literally no time to do so."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/304823112",
    "html_url": "https://github.com/electron/electron/issues/9613#issuecomment-304823112",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/9613",
    "id": 304823112,
    "user": {
      "login": "levrik",
      "id": 9491603,
      "avatar_url": "https://avatars0.githubusercontent.com/u/9491603?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/levrik",
      "html_url": "https://github.com/levrik",
      "followers_url": "https://api.github.com/users/levrik/followers",
      "following_url": "https://api.github.com/users/levrik/following{/other_user}",
      "gists_url": "https://api.github.com/users/levrik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/levrik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/levrik/subscriptions",
      "organizations_url": "https://api.github.com/users/levrik/orgs",
      "repos_url": "https://api.github.com/users/levrik/repos",
      "events_url": "https://api.github.com/users/levrik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/levrik/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-30T09:24:42Z",
    "updated_at": "2017-05-30T09:24:56Z",
    "body": "@MarshallOfSound I'm not sure if this is right.\r\nFor example \"KeePass 2\": If you change something but didn't save the password store KeePass just blocks the whole shutdown/sign out process (Windows is asking if it should kill the process or you want to go back to the desktop to see what's going on).\r\nSo somehow KeePass gets a notification about that from Windows. So if some application is able to block the whole shutdown process it should be able to do some cleanup too."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/304847509",
    "html_url": "https://github.com/electron/electron/issues/9613#issuecomment-304847509",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/9613",
    "id": 304847509,
    "user": {
      "login": "pixtron",
      "id": 1273273,
      "avatar_url": "https://avatars2.githubusercontent.com/u/1273273?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pixtron",
      "html_url": "https://github.com/pixtron",
      "followers_url": "https://api.github.com/users/pixtron/followers",
      "following_url": "https://api.github.com/users/pixtron/following{/other_user}",
      "gists_url": "https://api.github.com/users/pixtron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pixtron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pixtron/subscriptions",
      "organizations_url": "https://api.github.com/users/pixtron/orgs",
      "repos_url": "https://api.github.com/users/pixtron/repos",
      "events_url": "https://api.github.com/users/pixtron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pixtron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-30T11:15:24Z",
    "updated_at": "2017-05-30T11:15:24Z",
    "body": "@MarshallOfSound you might be right that on a force quite - as quiting the terminal - electron doesn't have time to fire the events. I updated my example and the initial bug report to use a standalone exe.\r\n\r\nAs @levrik says: If there is cleanup to be done when the application exits, electron would have to listen for [`WM_QUERYENDSESSION`](https://msdn.microsoft.com/en-us/library/windows/desktop/aa376890(v=vs.85).aspx). It should be possible to block the shutdown process returning 0 on this message and setting a reason message with [`ShutdownBlockReasonCreate`](https://msdn.microsoft.com/en-us/library/windows/desktop/aa376877(v=vs.85).aspx). As soon as the cleanup is done it should be possible to release the lock by calling [`ShutdownBlockReasonDestroy`](https://msdn.microsoft.com/en-us/library/windows/desktop/aa376878(v=vs.85).aspx)  \r\n\r\nIn JS the API might lock like this:\r\n```\r\napp.on('will-quit', function(event) {\r\n  //pause() would internally call \"ShutdownBlockReasonCreate\" with the reasonStr\r\n  event.pause(reasonStr);\r\n  \r\n  doCleanup(function(err) {\r\n    //resume() would internally call \"ShutdownBlockReasonDestroy\" and shut down would resume\r\n    event.resume();\r\n  });\r\n});\r\n```\r\n\r\nI stumbled upon #8762 which seems to be related to this issue."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/310725960",
    "html_url": "https://github.com/electron/electron/issues/9613#issuecomment-310725960",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/9613",
    "id": 310725960,
    "user": {
      "login": "cberescu",
      "id": 1267846,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1267846?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cberescu",
      "html_url": "https://github.com/cberescu",
      "followers_url": "https://api.github.com/users/cberescu/followers",
      "following_url": "https://api.github.com/users/cberescu/following{/other_user}",
      "gists_url": "https://api.github.com/users/cberescu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cberescu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cberescu/subscriptions",
      "organizations_url": "https://api.github.com/users/cberescu/orgs",
      "repos_url": "https://api.github.com/users/cberescu/repos",
      "events_url": "https://api.github.com/users/cberescu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cberescu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-23T17:28:14Z",
    "updated_at": "2017-06-23T17:28:14Z",
    "body": "@pixtron I think a better way is to have a function , something like this : \r\n\r\n`app.preventShutDown(reason)`\r\nand\r\n`app.releaseShutDown();`\r\n\r\nOf course if the preventShutDown is active the will-quit event should also be triggered. \r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/310827211",
    "html_url": "https://github.com/electron/electron/issues/9613#issuecomment-310827211",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/9613",
    "id": 310827211,
    "user": {
      "login": "pixtron",
      "id": 1273273,
      "avatar_url": "https://avatars2.githubusercontent.com/u/1273273?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pixtron",
      "html_url": "https://github.com/pixtron",
      "followers_url": "https://api.github.com/users/pixtron/followers",
      "following_url": "https://api.github.com/users/pixtron/following{/other_user}",
      "gists_url": "https://api.github.com/users/pixtron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pixtron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pixtron/subscriptions",
      "organizations_url": "https://api.github.com/users/pixtron/orgs",
      "repos_url": "https://api.github.com/users/pixtron/repos",
      "events_url": "https://api.github.com/users/pixtron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pixtron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-24T09:15:49Z",
    "updated_at": "2017-06-24T09:15:49Z",
    "body": "@cberescu i do not favor your solution as the app would always have to block the shutdown process, even if there is nothing to be done. \r\nA new event `app.on('before-shutdown')` could be a solution though."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/310985791",
    "html_url": "https://github.com/electron/electron/issues/9613#issuecomment-310985791",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/9613",
    "id": 310985791,
    "user": {
      "login": "cberescu",
      "id": 1267846,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1267846?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cberescu",
      "html_url": "https://github.com/cberescu",
      "followers_url": "https://api.github.com/users/cberescu/followers",
      "following_url": "https://api.github.com/users/cberescu/following{/other_user}",
      "gists_url": "https://api.github.com/users/cberescu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cberescu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cberescu/subscriptions",
      "organizations_url": "https://api.github.com/users/cberescu/orgs",
      "repos_url": "https://api.github.com/users/cberescu/repos",
      "events_url": "https://api.github.com/users/cberescu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cberescu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-26T07:40:53Z",
    "updated_at": "2017-06-26T07:40:53Z",
    "body": "@pixtron from my understanding of the  `ShutdownBlockReasonCreate` you enable it if you have some processing to do that must not be interrupted. If we use something like app.on('before-shutdown') that means we need to add the `ShutdownBlockReasonCreate` at that time, but i don't think that will work , because in the API documentation , in its comment sections you will find : \r\n\r\n> It's also important to return FALSE to the message WM_QUERYENDSESSION. Otherwise, Windows will never ask for shutdown reason. \r\n\r\nSo from that comment i think the `ShutdownBlockReasonCreate` must be set before the window receives `WM_QUERYENDSESSION`\r\n\r\nI may be wrong on this, and  i am not a C++ programmer to test it. "
  }
]