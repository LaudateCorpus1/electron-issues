[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/61373015",
    "html_url": "https://github.com/electron/electron/issues/766#issuecomment-61373015",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/766",
    "id": 61373015,
    "user": {
      "login": "frankhale",
      "id": 190154,
      "avatar_url": "https://avatars2.githubusercontent.com/u/190154?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frankhale",
      "html_url": "https://github.com/frankhale",
      "followers_url": "https://api.github.com/users/frankhale/followers",
      "following_url": "https://api.github.com/users/frankhale/following{/other_user}",
      "gists_url": "https://api.github.com/users/frankhale/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frankhale/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frankhale/subscriptions",
      "organizations_url": "https://api.github.com/users/frankhale/orgs",
      "repos_url": "https://api.github.com/users/frankhale/repos",
      "events_url": "https://api.github.com/users/frankhale/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frankhale/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-01T16:09:25Z",
    "updated_at": "2014-11-01T16:17:56Z",
    "body": "I was able to spoof the referrer by adding a couple lines of code to the LoadURL function and it's resolves my issue. I'm going to attempt to expose this via the API once I learn more about how Atom-Shell does it's business:\n\natom_api_web_contents.cc\n\n``` cpp\nvoid WebContents::LoadURL(const GURL& url) {\n  content::NavigationController::LoadURLParams params(url);\n\n  // set the referrer to the same URL that is being requested just to see if it works, AND IT DOES =)\n  const GURL& fake_referrer_url = params.url;\n  params.referrer = content::Referrer(fake_referrer_url.GetAsReferrer(), blink::WebReferrerPolicyDefault);\n\n  params.transition_type = content::PAGE_TRANSITION_TYPED;\n  params.override_user_agent = content::NavigationController::UA_OVERRIDE_TRUE;\n  web_contents()->GetController().LoadURLWithParams(params);\n}\n```\n\nFor those keeping score at home I googled for a while to find info on how to do this. The following resource helped me out and got me over the edge to make this work.\n\nhttp://www.slackware.com/~alien/slackbuilds/chromium/build/patches/chromium_sanitized_referrer.patch\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/61435817",
    "html_url": "https://github.com/electron/electron/issues/766#issuecomment-61435817",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/766",
    "id": 61435817,
    "user": {
      "login": "frankhale",
      "id": 190154,
      "avatar_url": "https://avatars2.githubusercontent.com/u/190154?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frankhale",
      "html_url": "https://github.com/frankhale",
      "followers_url": "https://api.github.com/users/frankhale/followers",
      "following_url": "https://api.github.com/users/frankhale/following{/other_user}",
      "gists_url": "https://api.github.com/users/frankhale/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frankhale/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frankhale/subscriptions",
      "organizations_url": "https://api.github.com/users/frankhale/orgs",
      "repos_url": "https://api.github.com/users/frankhale/repos",
      "events_url": "https://api.github.com/users/frankhale/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frankhale/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-03T02:45:52Z",
    "updated_at": "2014-11-03T02:45:52Z",
    "body": "I'm still working on exposing this via JavaScript. I'm still navigating the Atom-Shell source code and haven't quite figured out how to get at the BrowserWindow options from the atom_api_web_contents code. It seems like the options being passed down to the web contents aren't the same ones. I'll be working on this more throughout the next few days.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/61450466",
    "html_url": "https://github.com/electron/electron/issues/766#issuecomment-61450466",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/766",
    "id": 61450466,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2014-11-03T08:35:33Z",
    "updated_at": "2014-11-03T08:35:33Z",
    "body": "Instead of making http referrer a BrowserWindow option, I think making it an option of `loadUrl` seems a more general idea, like this:\n\n``` javascript\nwindow.loadUrlWithOptions('http://somwhere', { referrer: 'http://elsewhere' });\n```\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/61492299",
    "html_url": "https://github.com/electron/electron/issues/766#issuecomment-61492299",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/766",
    "id": 61492299,
    "user": {
      "login": "frankhale",
      "id": 190154,
      "avatar_url": "https://avatars2.githubusercontent.com/u/190154?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frankhale",
      "html_url": "https://github.com/frankhale",
      "followers_url": "https://api.github.com/users/frankhale/followers",
      "following_url": "https://api.github.com/users/frankhale/following{/other_user}",
      "gists_url": "https://api.github.com/users/frankhale/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frankhale/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frankhale/subscriptions",
      "organizations_url": "https://api.github.com/users/frankhale/orgs",
      "repos_url": "https://api.github.com/users/frankhale/repos",
      "events_url": "https://api.github.com/users/frankhale/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frankhale/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-03T15:17:35Z",
    "updated_at": "2014-11-03T15:17:35Z",
    "body": "Okay, I'll look into that instead of the BrowserWindow options. Thanks!\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/61504328",
    "html_url": "https://github.com/electron/electron/issues/766#issuecomment-61504328",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/766",
    "id": 61504328,
    "user": {
      "login": "frankhale",
      "id": 190154,
      "avatar_url": "https://avatars2.githubusercontent.com/u/190154?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frankhale",
      "html_url": "https://github.com/frankhale",
      "followers_url": "https://api.github.com/users/frankhale/followers",
      "following_url": "https://api.github.com/users/frankhale/following{/other_user}",
      "gists_url": "https://api.github.com/users/frankhale/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frankhale/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frankhale/subscriptions",
      "organizations_url": "https://api.github.com/users/frankhale/orgs",
      "repos_url": "https://api.github.com/users/frankhale/repos",
      "events_url": "https://api.github.com/users/frankhale/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frankhale/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-03T16:27:48Z",
    "updated_at": "2014-11-03T23:13:59Z",
    "body": "In addition to allowing LoadUrl to pass options an attribute would also need to be added to the webview because I'm not calling LoadUrl directly except in my main.js to open my index.html page. It's indirectly being called when I set the src on my webview. So I think perhaps something like this would be okay:\n\n&lt;webview src=\"http://youtube.com\" httpReferrer=\"http://youtube.com\"></webview&gt;\n\nThen under the hood the LoadUrl will do the right thing and set the referrer.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/61562895",
    "html_url": "https://github.com/electron/electron/issues/766#issuecomment-61562895",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/766",
    "id": 61562895,
    "user": {
      "login": "frankhale",
      "id": 190154,
      "avatar_url": "https://avatars2.githubusercontent.com/u/190154?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frankhale",
      "html_url": "https://github.com/frankhale",
      "followers_url": "https://api.github.com/users/frankhale/followers",
      "following_url": "https://api.github.com/users/frankhale/following{/other_user}",
      "gists_url": "https://api.github.com/users/frankhale/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frankhale/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frankhale/subscriptions",
      "organizations_url": "https://api.github.com/users/frankhale/orgs",
      "repos_url": "https://api.github.com/users/frankhale/repos",
      "events_url": "https://api.github.com/users/frankhale/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frankhale/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-03T22:39:33Z",
    "updated_at": "2014-11-03T22:39:33Z",
    "body": "In the interim I've added a setHttpReferrer and getHttpReferrer function to the web contents API and propogated it down to browser-window and webview. It's less than stellar but it's working. It's not the API I really want but not bad for a Atom-Shell internals n00b like myself. The only catch I found so far was that I need to set my webview src to something initially. I am using about:blank (not sure if that is supported but it seems to be enough for the webview to initialize fully). Then I set the referrer and my src and all is well. \n\nI'll post this to my Atom-Shell fork later tonight if anyone is interested.\n\nI'm going to keep digging to come up with a better API. What I really want to do is put an attribute in the webview tag so that the referrer is taken care of once and for all.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/61566372",
    "html_url": "https://github.com/electron/electron/issues/766#issuecomment-61566372",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/766",
    "id": 61566372,
    "user": {
      "login": "frankhale",
      "id": 190154,
      "avatar_url": "https://avatars2.githubusercontent.com/u/190154?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frankhale",
      "html_url": "https://github.com/frankhale",
      "followers_url": "https://api.github.com/users/frankhale/followers",
      "following_url": "https://api.github.com/users/frankhale/following{/other_user}",
      "gists_url": "https://api.github.com/users/frankhale/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frankhale/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frankhale/subscriptions",
      "organizations_url": "https://api.github.com/users/frankhale/orgs",
      "repos_url": "https://api.github.com/users/frankhale/repos",
      "events_url": "https://api.github.com/users/frankhale/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frankhale/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-03T23:07:15Z",
    "updated_at": "2014-11-03T23:07:15Z",
    "body": "Actually adding the attribute to the webview tag was pretty simple. I've got it almost totally finished and it's working. Just need to go back and add the bits to the attribute mutation function. w00t!\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/61583034",
    "html_url": "https://github.com/electron/electron/issues/766#issuecomment-61583034",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/766",
    "id": 61583034,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2014-11-04T02:07:31Z",
    "updated_at": "2014-11-04T02:07:31Z",
    "body": "@frankhale Glad to know you have made such progress!\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/61586547",
    "html_url": "https://github.com/electron/electron/issues/766#issuecomment-61586547",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/766",
    "id": 61586547,
    "user": {
      "login": "frankhale",
      "id": 190154,
      "avatar_url": "https://avatars2.githubusercontent.com/u/190154?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frankhale",
      "html_url": "https://github.com/frankhale",
      "followers_url": "https://api.github.com/users/frankhale/followers",
      "following_url": "https://api.github.com/users/frankhale/following{/other_user}",
      "gists_url": "https://api.github.com/users/frankhale/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frankhale/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frankhale/subscriptions",
      "organizations_url": "https://api.github.com/users/frankhale/orgs",
      "repos_url": "https://api.github.com/users/frankhale/repos",
      "events_url": "https://api.github.com/users/frankhale/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frankhale/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-04T02:54:43Z",
    "updated_at": "2014-11-04T02:56:05Z",
    "body": "Before I move any further ahead with this (eg. documentation, specs, etc) I'd like to get your opinion on the API.\n\nHere is my branch which I've just committed the code changes to:\n\nhttps://github.com/frankhale/atom-shell/tree/expose-http-referrer\n\nhttps://github.com/frankhale/atom-shell/commit/39d6cbc88c383049607cf0e5066f16f6716e60ef\n\nBasically what this does is add a setHttpReferrer and getHttpReferrer function to the web contents. It then exposes those via BrowserWindow and Webview API and I've added a httpReferrer attribute to the webview tag.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/61605385",
    "html_url": "https://github.com/electron/electron/issues/766#issuecomment-61605385",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/766",
    "id": 61605385,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2014-11-04T08:02:15Z",
    "updated_at": "2014-11-04T08:02:15Z",
    "body": "Adding a `setHttpReferrer` method may indicate that it would override referrer for all http requests in this window which is not true, so since `setHttpReferrer` only affects `loadUrl`, making it an option of `loadUrl` seems to have less suprise. And it also makes API more consistent when we add more options like http headers to `loadUrl` in future, like this:\n\n``` javascript\nwindow.loadUrl('http://somwhere', {\n  referrer: 'http://elsewhere',\n  headers: ['Content-Type: text/html'],\n});\n```\n\nAnd for the `httpReferrer` attribute of `WebView` element, changing it would no longer need to call `setHttpReferrer`, instead we only needs to pass the referrer to `loadUrl` when parsing `src`.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/61649631",
    "html_url": "https://github.com/electron/electron/issues/766#issuecomment-61649631",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/766",
    "id": 61649631,
    "user": {
      "login": "frankhale",
      "id": 190154,
      "avatar_url": "https://avatars2.githubusercontent.com/u/190154?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frankhale",
      "html_url": "https://github.com/frankhale",
      "followers_url": "https://api.github.com/users/frankhale/followers",
      "following_url": "https://api.github.com/users/frankhale/following{/other_user}",
      "gists_url": "https://api.github.com/users/frankhale/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frankhale/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frankhale/subscriptions",
      "organizations_url": "https://api.github.com/users/frankhale/orgs",
      "repos_url": "https://api.github.com/users/frankhale/repos",
      "events_url": "https://api.github.com/users/frankhale/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frankhale/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-04T14:46:52Z",
    "updated_at": "2014-11-04T14:46:52Z",
    "body": "Thanks, I'll keep digging at this!\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/61751089",
    "html_url": "https://github.com/electron/electron/issues/766#issuecomment-61751089",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/766",
    "id": 61751089,
    "user": {
      "login": "frankhale",
      "id": 190154,
      "avatar_url": "https://avatars2.githubusercontent.com/u/190154?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frankhale",
      "html_url": "https://github.com/frankhale",
      "followers_url": "https://api.github.com/users/frankhale/followers",
      "following_url": "https://api.github.com/users/frankhale/following{/other_user}",
      "gists_url": "https://api.github.com/users/frankhale/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frankhale/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frankhale/subscriptions",
      "organizations_url": "https://api.github.com/users/frankhale/orgs",
      "repos_url": "https://api.github.com/users/frankhale/repos",
      "events_url": "https://api.github.com/users/frankhale/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frankhale/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-05T02:35:30Z",
    "updated_at": "2014-11-05T02:35:30Z",
    "body": "This is going to sound really stupid but I am having some trouble on the Coffeescript side, specifically how to tell the following function about my new parameter I added to the LoadUrl function on the C++ side. I've patched up all the calls to LoadUrl on the Coffeescript side but I always get an error upon application start saying that I am not passing enough arguments and it fails in this function.\n\n``` coffeescript\n# browser-window.coffee\nBrowserWindow::loadUrl = -> @webContents.loadUrl.apply @webContents, arguments\n```\n\nHow are arguments being filled? Where exactly are they coming from? I've grepped the source code and can't figure out where they are being initialized.\n\nAny pointers you could give me would be greatly appreciated.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/61751834",
    "html_url": "https://github.com/electron/electron/issues/766#issuecomment-61751834",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/766",
    "id": 61751834,
    "user": {
      "login": "frankhale",
      "id": 190154,
      "avatar_url": "https://avatars2.githubusercontent.com/u/190154?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frankhale",
      "html_url": "https://github.com/frankhale",
      "followers_url": "https://api.github.com/users/frankhale/followers",
      "following_url": "https://api.github.com/users/frankhale/following{/other_user}",
      "gists_url": "https://api.github.com/users/frankhale/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frankhale/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frankhale/subscriptions",
      "organizations_url": "https://api.github.com/users/frankhale/orgs",
      "repos_url": "https://api.github.com/users/frankhale/repos",
      "events_url": "https://api.github.com/users/frankhale/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frankhale/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-05T02:45:23Z",
    "updated_at": "2014-11-05T02:45:23Z",
    "body": "Figures right after I post a comment I figure it out. LOL! I forgot to patch up one of the LoadUrl functions in my app. So the issue was on my side. LOL!\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/61757840",
    "html_url": "https://github.com/electron/electron/issues/766#issuecomment-61757840",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/766",
    "id": 61757840,
    "user": {
      "login": "frankhale",
      "id": 190154,
      "avatar_url": "https://avatars2.githubusercontent.com/u/190154?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frankhale",
      "html_url": "https://github.com/frankhale",
      "followers_url": "https://api.github.com/users/frankhale/followers",
      "following_url": "https://api.github.com/users/frankhale/following{/other_user}",
      "gists_url": "https://api.github.com/users/frankhale/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frankhale/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frankhale/subscriptions",
      "organizations_url": "https://api.github.com/users/frankhale/orgs",
      "repos_url": "https://api.github.com/users/frankhale/repos",
      "events_url": "https://api.github.com/users/frankhale/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frankhale/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-05T04:17:17Z",
    "updated_at": "2014-11-05T04:17:17Z",
    "body": "Okay I've implemented it the way you suggested. I'm going to sit on it until tomorrow night and play with it some more before I ask if you'll take a look at it to see if it's okay.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/62037599",
    "html_url": "https://github.com/electron/electron/issues/766#issuecomment-62037599",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/766",
    "id": 62037599,
    "user": {
      "login": "frankhale",
      "id": 190154,
      "avatar_url": "https://avatars2.githubusercontent.com/u/190154?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frankhale",
      "html_url": "https://github.com/frankhale",
      "followers_url": "https://api.github.com/users/frankhale/followers",
      "following_url": "https://api.github.com/users/frankhale/following{/other_user}",
      "gists_url": "https://api.github.com/users/frankhale/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frankhale/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frankhale/subscriptions",
      "organizations_url": "https://api.github.com/users/frankhale/orgs",
      "repos_url": "https://api.github.com/users/frankhale/repos",
      "events_url": "https://api.github.com/users/frankhale/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frankhale/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-06T19:36:05Z",
    "updated_at": "2014-11-06T19:37:41Z",
    "body": "Here is my second attempt, this time using an option in the LoadUrl function as mentioned above.\n\nhttps://github.com/frankhale/atom-shell/compare/http-referrer\n\nNote: my code has been applied to the most recent master. I'm sure that would be assumed but I just wanted to make a note of that.\n\nThis still needs some work and I am still a bit sketchy on guest-window-manager.coffee with regards to how createGuest works. There are a couple calls at the top of createGuest to LoadUrl but I'm not sure how to tell it about my new url options.\n\nOnce this can be nailed down things like docs and specs would be next. I have not looked into those yet.\n\nAny assistance / advice would be more than welcome!\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/62047383",
    "html_url": "https://github.com/electron/electron/issues/766#issuecomment-62047383",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/766",
    "id": 62047383,
    "user": {
      "login": "frankhale",
      "id": 190154,
      "avatar_url": "https://avatars2.githubusercontent.com/u/190154?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frankhale",
      "html_url": "https://github.com/frankhale",
      "followers_url": "https://api.github.com/users/frankhale/followers",
      "following_url": "https://api.github.com/users/frankhale/following{/other_user}",
      "gists_url": "https://api.github.com/users/frankhale/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frankhale/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frankhale/subscriptions",
      "organizations_url": "https://api.github.com/users/frankhale/orgs",
      "repos_url": "https://api.github.com/users/frankhale/repos",
      "events_url": "https://api.github.com/users/frankhale/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frankhale/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-06T20:39:49Z",
    "updated_at": "2014-11-06T20:44:55Z",
    "body": "NOTE: While I added this functionality to LoadUrl directly I am never calling LoadUrl specifically in order to pass the Http referrer. It's being implicitly called via the webview src tag. I've added the httpReferrer attribute to the webview to cover the use case that I need. In my particular situation I never call LoadUrl beyond loading my application index.html page. However, I totally get why it should be in the LoadUrl function and not in the Browser options as I originally set out to do.\n\nI wanted to point this out (from above) as it may not be the most common way you'd want to set the referrer. I think there may be more use cases using the webview directly:\n\n``` javascript\nwindow.loadUrl('http://somwhere', {\n  referrer: 'http://elsewhere',\n  headers: ['Content-Type: text/html'],\n});\n```\n\nAdditionally I think it'd probably be nice to actually cover the headers like you have it there as well. There may be other functionality that can be added to this as well. I'll leave that as an exercise to be done later if anyone has a specific use case for it.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/62064378",
    "html_url": "https://github.com/electron/electron/issues/766#issuecomment-62064378",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/766",
    "id": 62064378,
    "user": {
      "login": "frankhale",
      "id": 190154,
      "avatar_url": "https://avatars2.githubusercontent.com/u/190154?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frankhale",
      "html_url": "https://github.com/frankhale",
      "followers_url": "https://api.github.com/users/frankhale/followers",
      "following_url": "https://api.github.com/users/frankhale/following{/other_user}",
      "gists_url": "https://api.github.com/users/frankhale/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frankhale/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frankhale/subscriptions",
      "organizations_url": "https://api.github.com/users/frankhale/orgs",
      "repos_url": "https://api.github.com/users/frankhale/repos",
      "events_url": "https://api.github.com/users/frankhale/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frankhale/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-06T22:36:58Z",
    "updated_at": "2014-11-06T22:37:54Z",
    "body": "Okay so I was aware of the OpenURLFromTab functions but I am not aware of how they are used and when. The only references I see in the source code are on the back end C++ (function declarations) and they don't appear to be exposed to JavaScript or be called from any of the other C++ code.\n\n@zcbenz, could you explain a little bit about what these functions are and how/when they are used? Or if they are currently being used at all? Are they callbacks called by brightray? If so how do they relate to LoadUrl?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/62094677",
    "html_url": "https://github.com/electron/electron/issues/766#issuecomment-62094677",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/766",
    "id": 62094677,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2014-11-07T04:35:12Z",
    "updated_at": "2014-11-07T04:35:12Z",
    "body": "I have put some comments in the commit but I prefer creating a PR for it, because PR is a better place for code review and other people can reference it more easily in future.\n\n`guest-window-manager.coffee` is for managing windows opened by `window.open` and external links, not quite related here. `OpenURLFromTab` is a method of [WebContentsDelegate](https://code.google.com/p/chromium/codesearch#chromium/src/content/public/browser/web_contents_delegate.h&q=webcontentsdelegate&sq=package:chromium&type=cs), which is used by `WebContents` to determine the behavior of the page, you can find detailed comments in the link.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/62094906",
    "html_url": "https://github.com/electron/electron/issues/766#issuecomment-62094906",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/766",
    "id": 62094906,
    "user": {
      "login": "frankhale",
      "id": 190154,
      "avatar_url": "https://avatars2.githubusercontent.com/u/190154?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frankhale",
      "html_url": "https://github.com/frankhale",
      "followers_url": "https://api.github.com/users/frankhale/followers",
      "following_url": "https://api.github.com/users/frankhale/following{/other_user}",
      "gists_url": "https://api.github.com/users/frankhale/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frankhale/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frankhale/subscriptions",
      "organizations_url": "https://api.github.com/users/frankhale/orgs",
      "repos_url": "https://api.github.com/users/frankhale/repos",
      "events_url": "https://api.github.com/users/frankhale/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frankhale/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-07T04:39:55Z",
    "updated_at": "2014-11-07T04:39:55Z",
    "body": "Okay no problem. Next time I'll just submit a pull request in order to get feedback. Thank you!\n\nThank  you for the feedback!\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/62243609",
    "html_url": "https://github.com/electron/electron/issues/766#issuecomment-62243609",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/766",
    "id": 62243609,
    "user": {
      "login": "frankhale",
      "id": 190154,
      "avatar_url": "https://avatars2.githubusercontent.com/u/190154?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frankhale",
      "html_url": "https://github.com/frankhale",
      "followers_url": "https://api.github.com/users/frankhale/followers",
      "following_url": "https://api.github.com/users/frankhale/following{/other_user}",
      "gists_url": "https://api.github.com/users/frankhale/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frankhale/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frankhale/subscriptions",
      "organizations_url": "https://api.github.com/users/frankhale/orgs",
      "repos_url": "https://api.github.com/users/frankhale/repos",
      "events_url": "https://api.github.com/users/frankhale/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frankhale/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-08T03:19:59Z",
    "updated_at": "2014-11-08T03:19:59Z",
    "body": "This is an iterative process and I suspect that you'll have some comments and or tweaks in mind. I'm totally okay with that.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/62660592",
    "html_url": "https://github.com/electron/electron/issues/766#issuecomment-62660592",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/766",
    "id": 62660592,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2014-11-12T02:35:44Z",
    "updated_at": "2014-11-12T02:35:44Z",
    "body": "Fixed by #801.\n"
  }
]