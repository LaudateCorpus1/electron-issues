[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/280729353",
    "html_url": "https://github.com/electron/electron/issues/8534#issuecomment-280729353",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/8534",
    "id": 280729353,
    "user": {
      "login": "groundwater",
      "id": 538488,
      "avatar_url": "https://avatars3.githubusercontent.com/u/538488?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/groundwater",
      "html_url": "https://github.com/groundwater",
      "followers_url": "https://api.github.com/users/groundwater/followers",
      "following_url": "https://api.github.com/users/groundwater/following{/other_user}",
      "gists_url": "https://api.github.com/users/groundwater/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/groundwater/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/groundwater/subscriptions",
      "organizations_url": "https://api.github.com/users/groundwater/orgs",
      "repos_url": "https://api.github.com/users/groundwater/repos",
      "events_url": "https://api.github.com/users/groundwater/events{/privacy}",
      "received_events_url": "https://api.github.com/users/groundwater/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2017-02-17T18:30:53Z",
    "updated_at": "2017-02-17T18:30:53Z",
    "body": "Hi @ericbets, we don't have a formal RFC process for proposing enhancements yet, but we'd recommend following [the rust rfc template](https://github.com/rust-lang/rfcs/blob/master/0000-template.md) to give your idea the best chance of getting reviewed."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/280741437",
    "html_url": "https://github.com/electron/electron/issues/8534#issuecomment-280741437",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/8534",
    "id": 280741437,
    "user": {
      "login": "ericbets",
      "id": 49939,
      "avatar_url": "https://avatars2.githubusercontent.com/u/49939?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ericbets",
      "html_url": "https://github.com/ericbets",
      "followers_url": "https://api.github.com/users/ericbets/followers",
      "following_url": "https://api.github.com/users/ericbets/following{/other_user}",
      "gists_url": "https://api.github.com/users/ericbets/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ericbets/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ericbets/subscriptions",
      "organizations_url": "https://api.github.com/users/ericbets/orgs",
      "repos_url": "https://api.github.com/users/ericbets/repos",
      "events_url": "https://api.github.com/users/ericbets/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ericbets/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-17T19:19:10Z",
    "updated_at": "2017-02-18T01:13:15Z",
    "body": "thanks for the feedback @groundwater. As suggested. \r\n\r\nExpose Electron Cache\r\n18 Feb 2017\r\n\r\n# Summary\r\n\r\nExpose the Chrome cache to surface the ability to precisely control which assets are cached, and when.\r\n\r\n# Motivation\r\nThe benefit cited is because will make the web faster and more efficient. Adding this feature could be the catalyst for a new era of competition among client side caching algorithms.\r\n\r\n# Detailed Design\r\n\r\nI propose that there are 3 relatively low hanging fruit ways to make a big improvement in browser caching:\r\n\r\n1. Enable the opportunity for client side predictive modelling of user resource demand in the browser (eg. preloading data)\r\nSome outside electron black box function (informed by it's own chrome ui chrome) keeps track of my history and knows that I go to example.org every day. Through it's magic, it can infer which other webpages / resources I am likely to visit at any given time, and fetch them before I do.\r\nSo electron could expose a preload(url) function to warm up the cache. This is slightly different from regular url loading in that it makes the client the ultimate source of truth of whether or not a given asset is cached. Preload should return any http (eg. Cache-Control) headers associated with the request, but not implement policy (eg. cache by default).  \r\n \r\n2. Better cache control / eviction functionality\r\nThe black box somehow knows I am less likely to visit example.org/catphoto again, because I've already been and had my guffaw. So electron could expose an evict(url) function. A few other HT like functions like exists(url) and viewCache(url), keys() would make sense too.\r\n \r\n3. Immutable Caching (for lack of a better name, let's call this the urlcache spec)\r\nLet's say you have a file.png that you want the browser to know with perfect knowledge if a file has changed on the server or not, and you want it to be backwards compatible with the existing web, without using a complex http header based scheme:\r\nIt's url could be: http://example.org/urlcache/path/to/file/file.mimext?hashalg=hash\r\neg. example.org/urlcache/file.png?sha384=9b78b27b73668784e38c8a58a8535deaaecb77709\r\n\r\nIf the browser sees the string \"urlcache\", it knows this url has been marked as meeting this spec, and can proceed thusly.\r\n\r\nThe benefits of this approach are as follows.\r\n- It's filename preserving.\r\n- It's more accessible to users than using http headers. \r\n- It avoids the subtle security pitfalls and usability complexity associated with using http headers for this. (see the thread I cited above for links to discussion about that)\r\n\r\n# Drawbacks\r\nNone known\r\n\r\n# Alternatives\r\nNone known\r\n\r\n# Unresolved questions\r\nAsk away"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/280797649",
    "html_url": "https://github.com/electron/electron/issues/8534#issuecomment-280797649",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/8534",
    "id": 280797649,
    "user": {
      "login": "groundwater",
      "id": 538488,
      "avatar_url": "https://avatars3.githubusercontent.com/u/538488?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/groundwater",
      "html_url": "https://github.com/groundwater",
      "followers_url": "https://api.github.com/users/groundwater/followers",
      "following_url": "https://api.github.com/users/groundwater/following{/other_user}",
      "gists_url": "https://api.github.com/users/groundwater/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/groundwater/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/groundwater/subscriptions",
      "organizations_url": "https://api.github.com/users/groundwater/orgs",
      "repos_url": "https://api.github.com/users/groundwater/repos",
      "events_url": "https://api.github.com/users/groundwater/events{/privacy}",
      "received_events_url": "https://api.github.com/users/groundwater/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2017-02-17T23:47:11Z",
    "updated_at": "2017-02-17T23:47:11Z",
    "body": "_Edit: Updated formatting_"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/280820464",
    "html_url": "https://github.com/electron/electron/issues/8534#issuecomment-280820464",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/8534",
    "id": 280820464,
    "user": {
      "login": "MarshallOfSound",
      "id": 6634592,
      "avatar_url": "https://avatars0.githubusercontent.com/u/6634592?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarshallOfSound",
      "html_url": "https://github.com/MarshallOfSound",
      "followers_url": "https://api.github.com/users/MarshallOfSound/followers",
      "following_url": "https://api.github.com/users/MarshallOfSound/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarshallOfSound/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarshallOfSound/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarshallOfSound/subscriptions",
      "organizations_url": "https://api.github.com/users/MarshallOfSound/orgs",
      "repos_url": "https://api.github.com/users/MarshallOfSound/repos",
      "events_url": "https://api.github.com/users/MarshallOfSound/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarshallOfSound/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-18T04:16:23Z",
    "updated_at": "2017-02-18T04:16:23Z",
    "body": "I took a quick look into the cache implementations in Chromium.  Initial thoughts are it *could* be possible to expose `CreateEntry` and `DoomEntry` in some kind of API, it would appear to be a reasonably large chunk of work to do however.\r\n\r\nNumber 3 in your detailed design is something that (AFAIK) will never be implemented in Electron as it fundamentally changes the way caching web assets works.  It could target pre-existing URL's that have \"urlcache\" in their path without intending to actually be cached.  It would be a breaking change not just to Electron things but to the Web in general.  That being said if we expose the Entry API's mentioned above somehow then you could feasibly implement that kind of thing yourself.\r\n\r\nRelevant Chromium Code:  \r\nhttps://cs.chromium.org/chromium/src/net/disk_cache/disk_cache.h?dr  \r\n\r\nGood Reading RE Chromium Cache:  \r\nhttp://dev.chromium.org/developers/design-documents/network-stack/disk-cache"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/280883205",
    "html_url": "https://github.com/electron/electron/issues/8534#issuecomment-280883205",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/8534",
    "id": 280883205,
    "user": {
      "login": "ericbets",
      "id": 49939,
      "avatar_url": "https://avatars2.githubusercontent.com/u/49939?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ericbets",
      "html_url": "https://github.com/ericbets",
      "followers_url": "https://api.github.com/users/ericbets/followers",
      "following_url": "https://api.github.com/users/ericbets/following{/other_user}",
      "gists_url": "https://api.github.com/users/ericbets/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ericbets/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ericbets/subscriptions",
      "organizations_url": "https://api.github.com/users/ericbets/orgs",
      "repos_url": "https://api.github.com/users/ericbets/repos",
      "events_url": "https://api.github.com/users/ericbets/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ericbets/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-18T23:32:12Z",
    "updated_at": "2017-02-25T17:43:50Z",
    "body": "The urlcache string seems low risk, could be hidden behind a build or config flag. I'm all for trying because in my value system, shipping a working impl is more important than doing what everyone else is doing. What's the barrier to exposing those Entry APIs? If there is a quick and dirty way to do it, I'm all for it, as the process of exposing those apis would be iterative and the feedback that resulted would probably lead to a nice api in fairly short order. "
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/282182178",
    "html_url": "https://github.com/electron/electron/issues/8534#issuecomment-282182178",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/8534",
    "id": 282182178,
    "user": {
      "login": "groundwater",
      "id": 538488,
      "avatar_url": "https://avatars3.githubusercontent.com/u/538488?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/groundwater",
      "html_url": "https://github.com/groundwater",
      "followers_url": "https://api.github.com/users/groundwater/followers",
      "following_url": "https://api.github.com/users/groundwater/following{/other_user}",
      "gists_url": "https://api.github.com/users/groundwater/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/groundwater/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/groundwater/subscriptions",
      "organizations_url": "https://api.github.com/users/groundwater/orgs",
      "repos_url": "https://api.github.com/users/groundwater/repos",
      "events_url": "https://api.github.com/users/groundwater/events{/privacy}",
      "received_events_url": "https://api.github.com/users/groundwater/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2017-02-24T02:03:50Z",
    "updated_at": "2017-02-24T02:03:50Z",
    "body": "Hi @ericbets. I put this up for comments to our maintainer community.\r\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/306384604",
    "html_url": "https://github.com/electron/electron/issues/8534#issuecomment-306384604",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/8534",
    "id": 306384604,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2017-06-06T05:18:55Z",
    "updated_at": "2017-06-06T05:18:55Z",
    "body": "It is possible to simply expose the low-level Chromium `disk_cache` APIs, but it is rather hard to use and does not have any security checks. To get something that really works, it would require considerate work to wrap the low-level Chromium APIs with high-level JavaScript ones.\r\n\r\nI don't think we can clearly say whether we should do this or not without a working implementation of a cache API, because things we can do are highly limited to what Chromium provides. Obviously none of the maintainers is interested in implementing this, so I'm just closing this.\r\n\r\nIf anyone is still interested in this, I suggest bringing up a simple implementation of the possible API first, and then starting discussing whether we should do i.t"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/307589442",
    "html_url": "https://github.com/electron/electron/issues/8534#issuecomment-307589442",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/8534",
    "id": 307589442,
    "user": {
      "login": "ericbets",
      "id": 49939,
      "avatar_url": "https://avatars2.githubusercontent.com/u/49939?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ericbets",
      "html_url": "https://github.com/ericbets",
      "followers_url": "https://api.github.com/users/ericbets/followers",
      "following_url": "https://api.github.com/users/ericbets/following{/other_user}",
      "gists_url": "https://api.github.com/users/ericbets/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ericbets/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ericbets/subscriptions",
      "organizations_url": "https://api.github.com/users/ericbets/orgs",
      "repos_url": "https://api.github.com/users/ericbets/repos",
      "events_url": "https://api.github.com/users/ericbets/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ericbets/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-10T20:49:30Z",
    "updated_at": "2017-06-10T20:49:30Z",
    "body": "Thanks for leaving the ticket open so long."
  }
]