[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/243319786",
    "html_url": "https://github.com/electron/electron/issues/7023#issuecomment-243319786",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7023",
    "id": 243319786,
    "user": {
      "login": "enlight",
      "id": 233003,
      "avatar_url": "https://avatars3.githubusercontent.com/u/233003?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/enlight",
      "html_url": "https://github.com/enlight",
      "followers_url": "https://api.github.com/users/enlight/followers",
      "following_url": "https://api.github.com/users/enlight/following{/other_user}",
      "gists_url": "https://api.github.com/users/enlight/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/enlight/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/enlight/subscriptions",
      "organizations_url": "https://api.github.com/users/enlight/orgs",
      "repos_url": "https://api.github.com/users/enlight/repos",
      "events_url": "https://api.github.com/users/enlight/events{/privacy}",
      "received_events_url": "https://api.github.com/users/enlight/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-30T03:01:36Z",
    "updated_at": "2016-08-30T03:01:36Z",
    "body": "What are you doing with the filename that breaks things for you?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/243334633",
    "html_url": "https://github.com/electron/electron/issues/7023#issuecomment-243334633",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7023",
    "id": 243334633,
    "user": {
      "login": "tHBp",
      "id": 16330770,
      "avatar_url": "https://avatars3.githubusercontent.com/u/16330770?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tHBp",
      "html_url": "https://github.com/tHBp",
      "followers_url": "https://api.github.com/users/tHBp/followers",
      "following_url": "https://api.github.com/users/tHBp/following{/other_user}",
      "gists_url": "https://api.github.com/users/tHBp/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tHBp/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tHBp/subscriptions",
      "organizations_url": "https://api.github.com/users/tHBp/orgs",
      "repos_url": "https://api.github.com/users/tHBp/repos",
      "events_url": "https://api.github.com/users/tHBp/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tHBp/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-30T05:09:51Z",
    "updated_at": "2016-08-30T05:09:51Z",
    "body": "@enlight I'm trying to set user preferences on first screen by asking user about app workspace and other stuff where the content of the app will be stored. Kind of like project directory. But a single `\\` works effectively as a escape character. In the example given above, if I try to use `path.join` on the path returned by the `showOpenDialog`, it boils down to `X:path    o\file` because of the `\\t`.  This is one of the many cases where is path returned cannot be properly used again.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/243351527",
    "html_url": "https://github.com/electron/electron/issues/7023#issuecomment-243351527",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7023",
    "id": 243351527,
    "user": {
      "login": "enlight",
      "id": 233003,
      "avatar_url": "https://avatars3.githubusercontent.com/u/233003?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/enlight",
      "html_url": "https://github.com/enlight",
      "followers_url": "https://api.github.com/users/enlight/followers",
      "following_url": "https://api.github.com/users/enlight/following{/other_user}",
      "gists_url": "https://api.github.com/users/enlight/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/enlight/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/enlight/subscriptions",
      "organizations_url": "https://api.github.com/users/enlight/orgs",
      "repos_url": "https://api.github.com/users/enlight/repos",
      "events_url": "https://api.github.com/users/enlight/events{/privacy}",
      "received_events_url": "https://api.github.com/users/enlight/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-30T07:05:35Z",
    "updated_at": "2016-08-30T07:05:35Z",
    "body": "I've just tried using `path.join()` on a filename returned by `showOpenDialog` and it works as expected, can you provide a minimal code sample that shows the issue?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/243375839",
    "html_url": "https://github.com/electron/electron/issues/7023#issuecomment-243375839",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7023",
    "id": 243375839,
    "user": {
      "login": "tHBp",
      "id": 16330770,
      "avatar_url": "https://avatars3.githubusercontent.com/u/16330770?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tHBp",
      "html_url": "https://github.com/tHBp",
      "followers_url": "https://api.github.com/users/tHBp/followers",
      "following_url": "https://api.github.com/users/tHBp/following{/other_user}",
      "gists_url": "https://api.github.com/users/tHBp/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tHBp/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tHBp/subscriptions",
      "organizations_url": "https://api.github.com/users/tHBp/orgs",
      "repos_url": "https://api.github.com/users/tHBp/repos",
      "events_url": "https://api.github.com/users/tHBp/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tHBp/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-30T08:55:29Z",
    "updated_at": "2016-08-30T09:01:43Z",
    "body": "@enlight Yes, sure.\n\n```\nconst {\n    app,\n    BrowserWindow,\n    dialog\n} = require('electron');\nconst fs = require('fs');\n\nvar mainWindow = null;\n\napp.on('ready', function() {\n    mainWindow = new BrowserWindow({\n        height: 600,\n        width: 800,\n        center: true\n    });\n    dialog.showOpenDialog({\n        title: 'Random Title',\n        properties: ['openDirectory']\n    }, function(pathName) {\n        fs.writeFileSync('new.js', pathName, 'utf8');\n    });\n});\n```\n\nThe file `new.js` has path in the form `X:\\some\\path`.\n\nNow this is where the path is saved and I use it in future for using base path to my app.\nAlthough there might be more efficient and better way to do what I'm trying to achieve, but I feel that path should always be returned with proper OS specific path delimiters.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/243383173",
    "html_url": "https://github.com/electron/electron/issues/7023#issuecomment-243383173",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7023",
    "id": 243383173,
    "user": {
      "login": "enlight",
      "id": 233003,
      "avatar_url": "https://avatars3.githubusercontent.com/u/233003?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/enlight",
      "html_url": "https://github.com/enlight",
      "followers_url": "https://api.github.com/users/enlight/followers",
      "following_url": "https://api.github.com/users/enlight/following{/other_user}",
      "gists_url": "https://api.github.com/users/enlight/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/enlight/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/enlight/subscriptions",
      "organizations_url": "https://api.github.com/users/enlight/orgs",
      "repos_url": "https://api.github.com/users/enlight/repos",
      "events_url": "https://api.github.com/users/enlight/events{/privacy}",
      "received_events_url": "https://api.github.com/users/enlight/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-30T09:24:36Z",
    "updated_at": "2016-08-30T09:25:15Z",
    "body": "This is expected behavior. Escaping slashes is usually only necessary in string literals in your code, however, if you're writing a path out to file and then reading it back in again as a string literal you'll need to escape those slashes yourself before writing the path to disk. Incidentally `JSON.stringify()` will escape slashes for you, so if you write out your settings in JSON format you won't have to bother escaping the slashes yourself.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/243401592",
    "html_url": "https://github.com/electron/electron/issues/7023#issuecomment-243401592",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7023",
    "id": 243401592,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2016-08-30T10:43:26Z",
    "updated_at": "2016-08-30T10:43:26Z",
    "body": "I'm closing this since it is expected behavior.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/270482490",
    "html_url": "https://github.com/electron/electron/issues/7023#issuecomment-270482490",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7023",
    "id": 270482490,
    "user": {
      "login": "etiennejcharles",
      "id": 2872476,
      "avatar_url": "https://avatars2.githubusercontent.com/u/2872476?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/etiennejcharles",
      "html_url": "https://github.com/etiennejcharles",
      "followers_url": "https://api.github.com/users/etiennejcharles/followers",
      "following_url": "https://api.github.com/users/etiennejcharles/following{/other_user}",
      "gists_url": "https://api.github.com/users/etiennejcharles/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/etiennejcharles/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/etiennejcharles/subscriptions",
      "organizations_url": "https://api.github.com/users/etiennejcharles/orgs",
      "repos_url": "https://api.github.com/users/etiennejcharles/repos",
      "events_url": "https://api.github.com/users/etiennejcharles/events{/privacy}",
      "received_events_url": "https://api.github.com/users/etiennejcharles/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-04T20:49:13Z",
    "updated_at": "2017-01-04T20:49:36Z",
    "body": "@zcbenz, @enlight : I'm having the same problem, not sure how to resolve it and how it's the expected behavior : Given I have the following path on windows :\r\n\r\n\"X:\\some\\path\"\r\n\r\nWhen I use that value in my browser, it's shown as ~\r\n\r\n\"X:somepath\"\r\n\r\nAre you saying I should use JSON.stringify to add a double \\\\\\ character before sending back the result to my app? i.e JSON.stringify(\"X:\\some\\path\")?\r\n\r\n\r\n\r\n"
  }
]