[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/301922694",
    "html_url": "https://github.com/electron/electron/issues/9498#issuecomment-301922694",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/9498",
    "id": 301922694,
    "user": {
      "login": "kevinsawicki",
      "id": 671378,
      "avatar_url": "https://avatars0.githubusercontent.com/u/671378?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kevinsawicki",
      "html_url": "https://github.com/kevinsawicki",
      "followers_url": "https://api.github.com/users/kevinsawicki/followers",
      "following_url": "https://api.github.com/users/kevinsawicki/following{/other_user}",
      "gists_url": "https://api.github.com/users/kevinsawicki/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kevinsawicki/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kevinsawicki/subscriptions",
      "organizations_url": "https://api.github.com/users/kevinsawicki/orgs",
      "repos_url": "https://api.github.com/users/kevinsawicki/repos",
      "events_url": "https://api.github.com/users/kevinsawicki/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kevinsawicki/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2017-05-16T21:35:04Z",
    "updated_at": "2017-05-16T21:35:04Z",
    "body": "> I have a question, why beta releases are versioned like it were stable?\r\n\r\nWe release new versions to either the `beta` or `latest` channel in NPM, releases start in beta and then get promoted to `latest` if they are deemed to be stable.\r\n\r\nNPM should only pull the from the `latest` field by default so you should only get stable releases if you have something like `^1.6.9` in your `package.json`. \r\n\r\n> As you can see here, in the official Chromiun repository, it's says that we need to explicitly set QuotaSettings from \"embedder\".\r\n\r\nThank you for mentioning this, will investigate further."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/301923662",
    "html_url": "https://github.com/electron/electron/issues/9498#issuecomment-301923662",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/9498",
    "id": 301923662,
    "user": {
      "login": "kevinsawicki",
      "id": 671378,
      "avatar_url": "https://avatars0.githubusercontent.com/u/671378?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kevinsawicki",
      "html_url": "https://github.com/kevinsawicki",
      "followers_url": "https://api.github.com/users/kevinsawicki/followers",
      "following_url": "https://api.github.com/users/kevinsawicki/following{/other_user}",
      "gists_url": "https://api.github.com/users/kevinsawicki/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kevinsawicki/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kevinsawicki/subscriptions",
      "organizations_url": "https://api.github.com/users/kevinsawicki/orgs",
      "repos_url": "https://api.github.com/users/kevinsawicki/repos",
      "events_url": "https://api.github.com/users/kevinsawicki/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kevinsawicki/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2017-05-16T21:39:17Z",
    "updated_at": "2017-05-16T21:39:17Z",
    "body": "> I don't know how or if this is related, but the CPU usage by my app started to increase dramatically.\r\n\r\nAre you able to provide more information about this? When does it happen? Is the memory growing as well? Are you able to reproduce it in a simplified example app you could provide?"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/302142276",
    "html_url": "https://github.com/electron/electron/issues/9498#issuecomment-302142276",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/9498",
    "id": 302142276,
    "user": {
      "login": "deepak1556",
      "id": 964386,
      "avatar_url": "https://avatars2.githubusercontent.com/u/964386?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/deepak1556",
      "html_url": "https://github.com/deepak1556",
      "followers_url": "https://api.github.com/users/deepak1556/followers",
      "following_url": "https://api.github.com/users/deepak1556/following{/other_user}",
      "gists_url": "https://api.github.com/users/deepak1556/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/deepak1556/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/deepak1556/subscriptions",
      "organizations_url": "https://api.github.com/users/deepak1556/orgs",
      "repos_url": "https://api.github.com/users/deepak1556/repos",
      "events_url": "https://api.github.com/users/deepak1556/events{/privacy}",
      "received_events_url": "https://api.github.com/users/deepak1556/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-17T16:17:23Z",
    "updated_at": "2017-05-17T17:22:34Z",
    "body": "I looked into this when we were upgrading to chrome 58, the warning can be ignored. It shouldn't affect us as we provided unlimited and durable storage for all origins. In future it would be better to provide an option to users based on quotasettings as it allows tuning the storage eviction policy based on their use case."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/302245834",
    "html_url": "https://github.com/electron/electron/issues/9498#issuecomment-302245834",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/9498",
    "id": 302245834,
    "user": {
      "login": "danieltrolezi",
      "id": 3670155,
      "avatar_url": "https://avatars0.githubusercontent.com/u/3670155?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danieltrolezi",
      "html_url": "https://github.com/danieltrolezi",
      "followers_url": "https://api.github.com/users/danieltrolezi/followers",
      "following_url": "https://api.github.com/users/danieltrolezi/following{/other_user}",
      "gists_url": "https://api.github.com/users/danieltrolezi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danieltrolezi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danieltrolezi/subscriptions",
      "organizations_url": "https://api.github.com/users/danieltrolezi/orgs",
      "repos_url": "https://api.github.com/users/danieltrolezi/repos",
      "events_url": "https://api.github.com/users/danieltrolezi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danieltrolezi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-17T22:10:31Z",
    "updated_at": "2017-05-17T22:10:31Z",
    "body": "Thanks for the asnwer!\r\n\r\n> NPM should only pull the from the latest field by default so you should only get stable releases if you have something like ^1.6.9 in your package.json.\r\n\r\nThat is exactly what I have in my package.json and even so Electron was updated to 1.7.0 beta... Any thoughts?\r\n\r\n> Are you able to provide more information about this? When does it happen? Is the memory growing as well?\r\n\r\nI forgot to mention that I'm running the application on a Raspberry Pi 3 Model B. Sorry for that.\r\nI don't know if the CPU usage increased on other operational systems, but [I recorded a small benchmark](https://www.dropbox.com/s/cpeb8pi98n0kg9h/Electron%20Benchmark.mp4?dl=0) comparing both 1.6.9 and 1.7.1 versions of Electron running my app. (I recommend to download the file for better visualization)  The memory usage is almost the same (1.6.9 on the left).\r\n\r\nAs you can see, the CPU usage is higher when CSS animation starts. And I know that's almost certain that this isn't related at all, but when I cleared all browser data (IndexedDB, Cache and Filesystem Storage), the warning about the QuotaSettings stoped and the CPU usage was back to normal.\r\n\r\n> Are you able to reproduce it in a simplified example app you could provide?\r\n\r\nI didn't have the time to provide an example yet, but I'll working on it.\r\n\r\n> In future it would be better to provide an option to users based on quotasettings as it allows tuning the storage eviction policy based on their use case.\r\n\r\nThat's a great idea!"
  }
]