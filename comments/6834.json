[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/239610572",
    "html_url": "https://github.com/electron/electron/issues/6834#issuecomment-239610572",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/6834",
    "id": 239610572,
    "user": {
      "login": "TimNZ",
      "id": 1051701,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1051701?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TimNZ",
      "html_url": "https://github.com/TimNZ",
      "followers_url": "https://api.github.com/users/TimNZ/followers",
      "following_url": "https://api.github.com/users/TimNZ/following{/other_user}",
      "gists_url": "https://api.github.com/users/TimNZ/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TimNZ/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TimNZ/subscriptions",
      "organizations_url": "https://api.github.com/users/TimNZ/orgs",
      "repos_url": "https://api.github.com/users/TimNZ/repos",
      "events_url": "https://api.github.com/users/TimNZ/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TimNZ/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-13T08:50:20Z",
    "updated_at": "2016-08-13T08:50:20Z",
    "body": "A ready to run test app that reproduces the error is helpful, but I believe the sendSync serialization will be doing the equivalent of toObject(), where as .remote.getGlobal supports full marshalling of functions.\n\nhttps://github.com/electron/electron/blob/master/docs/api/ipc-renderer.md#ipcrenderersendsyncchannel-arg1-arg2-\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/239611588",
    "html_url": "https://github.com/electron/electron/issues/6834#issuecomment-239611588",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/6834",
    "id": 239611588,
    "user": {
      "login": "wmnnd",
      "id": 7488303,
      "avatar_url": "https://avatars1.githubusercontent.com/u/7488303?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wmnnd",
      "html_url": "https://github.com/wmnnd",
      "followers_url": "https://api.github.com/users/wmnnd/followers",
      "following_url": "https://api.github.com/users/wmnnd/following{/other_user}",
      "gists_url": "https://api.github.com/users/wmnnd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wmnnd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wmnnd/subscriptions",
      "organizations_url": "https://api.github.com/users/wmnnd/orgs",
      "repos_url": "https://api.github.com/users/wmnnd/repos",
      "events_url": "https://api.github.com/users/wmnnd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wmnnd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-13T09:18:13Z",
    "updated_at": "2016-08-13T09:18:13Z",
    "body": "Thank you for your response, @TimNZ. \nI have created a working example here: https://github.com/wmnnd/electron-remote-ipc-scramble\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/239611761",
    "html_url": "https://github.com/electron/electron/issues/6834#issuecomment-239611761",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/6834",
    "id": 239611761,
    "user": {
      "login": "TimNZ",
      "id": 1051701,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1051701?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TimNZ",
      "html_url": "https://github.com/TimNZ",
      "followers_url": "https://api.github.com/users/TimNZ/followers",
      "following_url": "https://api.github.com/users/TimNZ/following{/other_user}",
      "gists_url": "https://api.github.com/users/TimNZ/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TimNZ/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TimNZ/subscriptions",
      "organizations_url": "https://api.github.com/users/TimNZ/orgs",
      "repos_url": "https://api.github.com/users/TimNZ/repos",
      "events_url": "https://api.github.com/users/TimNZ/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TimNZ/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-13T09:23:11Z",
    "updated_at": "2016-08-13T09:23:11Z",
    "body": "I think my comment re sendSync addresses the difference.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/239611952",
    "html_url": "https://github.com/electron/electron/issues/6834#issuecomment-239611952",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/6834",
    "id": 239611952,
    "user": {
      "login": "wmnnd",
      "id": 7488303,
      "avatar_url": "https://avatars1.githubusercontent.com/u/7488303?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wmnnd",
      "html_url": "https://github.com/wmnnd",
      "followers_url": "https://api.github.com/users/wmnnd/followers",
      "following_url": "https://api.github.com/users/wmnnd/following{/other_user}",
      "gists_url": "https://api.github.com/users/wmnnd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wmnnd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wmnnd/subscriptions",
      "organizations_url": "https://api.github.com/users/wmnnd/orgs",
      "repos_url": "https://api.github.com/users/wmnnd/repos",
      "events_url": "https://api.github.com/users/wmnnd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wmnnd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-13T09:28:04Z",
    "updated_at": "2016-08-13T09:28:13Z",
    "body": "I agree the difference is clear, and sendSync works as expected, but don’t you think the behavior with remote is unexpected?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/239612088",
    "html_url": "https://github.com/electron/electron/issues/6834#issuecomment-239612088",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/6834",
    "id": 239612088,
    "user": {
      "login": "TimNZ",
      "id": 1051701,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1051701?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TimNZ",
      "html_url": "https://github.com/TimNZ",
      "followers_url": "https://api.github.com/users/TimNZ/followers",
      "following_url": "https://api.github.com/users/TimNZ/following{/other_user}",
      "gists_url": "https://api.github.com/users/TimNZ/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TimNZ/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TimNZ/subscriptions",
      "organizations_url": "https://api.github.com/users/TimNZ/orgs",
      "repos_url": "https://api.github.com/users/TimNZ/repos",
      "events_url": "https://api.github.com/users/TimNZ/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TimNZ/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-13T09:31:54Z",
    "updated_at": "2016-08-13T09:31:54Z",
    "body": "Nope. For getGlobal, .toJS() is being executed in the browser/main process and the result marshalled back to the calling renderer via internal IPC, where it is then wrapped up, resulting in getters/setters.  \n\nYou only think it's an issue because you are inspecting it via DevTools or console.log perhaps, whereas what is the real world issue - what is it breaking?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/239612201",
    "html_url": "https://github.com/electron/electron/issues/6834#issuecomment-239612201",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/6834",
    "id": 239612201,
    "user": {
      "login": "TimNZ",
      "id": 1051701,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1051701?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TimNZ",
      "html_url": "https://github.com/TimNZ",
      "followers_url": "https://api.github.com/users/TimNZ/followers",
      "following_url": "https://api.github.com/users/TimNZ/following{/other_user}",
      "gists_url": "https://api.github.com/users/TimNZ/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TimNZ/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TimNZ/subscriptions",
      "organizations_url": "https://api.github.com/users/TimNZ/orgs",
      "repos_url": "https://api.github.com/users/TimNZ/repos",
      "events_url": "https://api.github.com/users/TimNZ/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TimNZ/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-13T09:34:20Z",
    "updated_at": "2016-08-13T09:34:20Z",
    "body": "The reason there are getters/setters introduced as they will actually call back into the browser process on access - the source object may have getters/setters that need to be called.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/239612209",
    "html_url": "https://github.com/electron/electron/issues/6834#issuecomment-239612209",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/6834",
    "id": 239612209,
    "user": {
      "login": "MarshallOfSound",
      "id": 6634592,
      "avatar_url": "https://avatars0.githubusercontent.com/u/6634592?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarshallOfSound",
      "html_url": "https://github.com/MarshallOfSound",
      "followers_url": "https://api.github.com/users/MarshallOfSound/followers",
      "following_url": "https://api.github.com/users/MarshallOfSound/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarshallOfSound/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarshallOfSound/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarshallOfSound/subscriptions",
      "organizations_url": "https://api.github.com/users/MarshallOfSound/orgs",
      "repos_url": "https://api.github.com/users/MarshallOfSound/repos",
      "events_url": "https://api.github.com/users/MarshallOfSound/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarshallOfSound/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-13T09:34:41Z",
    "updated_at": "2016-08-13T09:34:41Z",
    "body": "@wmnnd What you are seeing is the automatic marshalling that the `remote` and `IPC` modules perform.\n\nThose getters and setters are actually wrapped function that call IPC methods behind the scenes.  This is because the remote module runs the method in the `main` process and then it is emulated with getter and setter methods on an object in the `renderer` process.\n\nWhereas IPC actually sends a serialized object through IPC which is why it looks correct on the other end in your console.\n\nAs far as I can tell this isn't an issue as the return values are correct, just you might have been confused by the getters and setters.  Is that correct?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/239612251",
    "html_url": "https://github.com/electron/electron/issues/6834#issuecomment-239612251",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/6834",
    "id": 239612251,
    "user": {
      "login": "MarshallOfSound",
      "id": 6634592,
      "avatar_url": "https://avatars0.githubusercontent.com/u/6634592?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarshallOfSound",
      "html_url": "https://github.com/MarshallOfSound",
      "followers_url": "https://api.github.com/users/MarshallOfSound/followers",
      "following_url": "https://api.github.com/users/MarshallOfSound/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarshallOfSound/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarshallOfSound/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarshallOfSound/subscriptions",
      "organizations_url": "https://api.github.com/users/MarshallOfSound/orgs",
      "repos_url": "https://api.github.com/users/MarshallOfSound/repos",
      "events_url": "https://api.github.com/users/MarshallOfSound/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarshallOfSound/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-13T09:36:04Z",
    "updated_at": "2016-08-13T09:36:04Z",
    "body": "Pretty much what @TimNZ said 👍 \n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/239612316",
    "html_url": "https://github.com/electron/electron/issues/6834#issuecomment-239612316",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/6834",
    "id": 239612316,
    "user": {
      "login": "MarshallOfSound",
      "id": 6634592,
      "avatar_url": "https://avatars0.githubusercontent.com/u/6634592?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarshallOfSound",
      "html_url": "https://github.com/MarshallOfSound",
      "followers_url": "https://api.github.com/users/MarshallOfSound/followers",
      "following_url": "https://api.github.com/users/MarshallOfSound/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarshallOfSound/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarshallOfSound/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarshallOfSound/subscriptions",
      "organizations_url": "https://api.github.com/users/MarshallOfSound/orgs",
      "repos_url": "https://api.github.com/users/MarshallOfSound/repos",
      "events_url": "https://api.github.com/users/MarshallOfSound/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarshallOfSound/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-13T09:37:56Z",
    "updated_at": "2016-08-13T09:37:56Z",
    "body": "Team NZ FTW 👍 \n\nClosing this out as a non-issue unless someone can point out what is actually wrong here\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/239612325",
    "html_url": "https://github.com/electron/electron/issues/6834#issuecomment-239612325",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/6834",
    "id": 239612325,
    "user": {
      "login": "wmnnd",
      "id": 7488303,
      "avatar_url": "https://avatars1.githubusercontent.com/u/7488303?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wmnnd",
      "html_url": "https://github.com/wmnnd",
      "followers_url": "https://api.github.com/users/wmnnd/followers",
      "following_url": "https://api.github.com/users/wmnnd/following{/other_user}",
      "gists_url": "https://api.github.com/users/wmnnd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wmnnd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wmnnd/subscriptions",
      "organizations_url": "https://api.github.com/users/wmnnd/orgs",
      "repos_url": "https://api.github.com/users/wmnnd/repos",
      "events_url": "https://api.github.com/users/wmnnd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wmnnd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-13T09:38:07Z",
    "updated_at": "2016-08-13T09:38:07Z",
    "body": "Unfortunately, the marshalling breaks some of the functionality of the Immutable.js object. I have updated my example to show that, while map.get(\"a\") still returns the value for \"a\", as expected, map.map(x => x*x) does not return the expected result but rather a mess of unexpected properties:\nhttps://github.com/wmnnd/electron-remote-ipc-scramble\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/239612453",
    "html_url": "https://github.com/electron/electron/issues/6834#issuecomment-239612453",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/6834",
    "id": 239612453,
    "user": {
      "login": "TimNZ",
      "id": 1051701,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1051701?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TimNZ",
      "html_url": "https://github.com/TimNZ",
      "followers_url": "https://api.github.com/users/TimNZ/followers",
      "following_url": "https://api.github.com/users/TimNZ/following{/other_user}",
      "gists_url": "https://api.github.com/users/TimNZ/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TimNZ/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TimNZ/subscriptions",
      "organizations_url": "https://api.github.com/users/TimNZ/orgs",
      "repos_url": "https://api.github.com/users/TimNZ/repos",
      "events_url": "https://api.github.com/users/TimNZ/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TimNZ/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-13T09:41:33Z",
    "updated_at": "2016-08-13T09:42:02Z",
    "body": "@MarshallOfSound Even spookier is I went to Bucklands Beach intermediate and Pakuranga College.. though many years before you went to Macleans.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/239612826",
    "html_url": "https://github.com/electron/electron/issues/6834#issuecomment-239612826",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/6834",
    "id": 239612826,
    "user": {
      "login": "TimNZ",
      "id": 1051701,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1051701?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TimNZ",
      "html_url": "https://github.com/TimNZ",
      "followers_url": "https://api.github.com/users/TimNZ/followers",
      "following_url": "https://api.github.com/users/TimNZ/following{/other_user}",
      "gists_url": "https://api.github.com/users/TimNZ/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TimNZ/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TimNZ/subscriptions",
      "organizations_url": "https://api.github.com/users/TimNZ/orgs",
      "repos_url": "https://api.github.com/users/TimNZ/repos",
      "events_url": "https://api.github.com/users/TimNZ/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TimNZ/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-13T09:50:36Z",
    "updated_at": "2016-08-13T09:50:36Z",
    "body": "@wmnnd What code is being broken?  Seeing things in console.log()  you are not expecting doesn't mean anything is broken.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/239612860",
    "html_url": "https://github.com/electron/electron/issues/6834#issuecomment-239612860",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/6834",
    "id": 239612860,
    "user": {
      "login": "MarshallOfSound",
      "id": 6634592,
      "avatar_url": "https://avatars0.githubusercontent.com/u/6634592?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarshallOfSound",
      "html_url": "https://github.com/MarshallOfSound",
      "followers_url": "https://api.github.com/users/MarshallOfSound/followers",
      "following_url": "https://api.github.com/users/MarshallOfSound/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarshallOfSound/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarshallOfSound/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarshallOfSound/subscriptions",
      "organizations_url": "https://api.github.com/users/MarshallOfSound/orgs",
      "repos_url": "https://api.github.com/users/MarshallOfSound/repos",
      "events_url": "https://api.github.com/users/MarshallOfSound/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarshallOfSound/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-13T09:51:14Z",
    "updated_at": "2016-08-13T09:51:14Z",
    "body": "@wmnnd I believe this was explained by @zcbenz somewhere (I can't find it now).  So I'll give it a shot.\n\nBasically I don't think the `remote` implementation doesn't allow mutations like that across IPC.  That `.map` call you tried to run could result in hundreds or even thousands of synchronous IPC messages (depending on your object size) passing the arguments through as remote objects each time and passing the return value of your function in the renderer process back to the main process.\n\nI think you are attempting to do something the wrong way, I.e. you are trying to sync an object between two processes using the `remote` module.  Personally in your case I would be using IPC events to send the result `.toJS()` to the renderer process and custom IPC events to perform the `.map` operations.\n\nSomething like this perhaps.\n\n``` js\n// Main process\nconst map = Immutable.Map({\"a\": 1, \"b\": 2})\n\nipcMain.on(\"getMap\"), (event, arg) => {\n    event.sender.send(map.toJS())\n})\n\nipcMain.on(\"mapTheMap\", (event, mapFn) => {\n  map.map(mapFn)\n  event.sender.send(\"theMap\", map.toJS())\n});\n\n// Renderer process\nipcRenderer.on(\"theMap\", (newMap) => {\n  console.log(newMap)\n})\nipcRenderer.send(\"getMap\")\n\nconst mappedRemoteMap = ipcRenderer.send(\"mapTheMap\", (x) => x * x)\n```\n\nYou may notice I switched from `sendSync`.  This is because using `sendSync` is generally a bad plan  **especially** when sending large objects as it blocks the entire thread until it is successful.  Hopefully this code helps you with your implementation\n"
  }
]