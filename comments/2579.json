[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/134625773",
    "html_url": "https://github.com/electron/electron/issues/2579#issuecomment-134625773",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2579",
    "id": 134625773,
    "user": {
      "login": "etiktin",
      "id": 4381579,
      "avatar_url": "https://avatars1.githubusercontent.com/u/4381579?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/etiktin",
      "html_url": "https://github.com/etiktin",
      "followers_url": "https://api.github.com/users/etiktin/followers",
      "following_url": "https://api.github.com/users/etiktin/following{/other_user}",
      "gists_url": "https://api.github.com/users/etiktin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/etiktin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/etiktin/subscriptions",
      "organizations_url": "https://api.github.com/users/etiktin/orgs",
      "repos_url": "https://api.github.com/users/etiktin/repos",
      "events_url": "https://api.github.com/users/etiktin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/etiktin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-25T15:26:03Z",
    "updated_at": "2015-08-25T15:26:03Z",
    "body": "When implementing the default behavior for a non empty string it's important to make sure that the confirm navigation dialog will appear no more than once for a single event propagation (if the parent window returned a string and it was displayed in a dialog, you don't want the child window to display another one - see details at #2361).\n\nI'm not sure about `ev.preventDefault()`. My main problem is that in Electron you can actually cancel the unload by returning false. To me, that fits better with the semantic meaning of preventing the default which according to [MDN](https://developer.mozilla.org/en-US/docs/Web/API/Event/preventDefault) it's to:\n\n> Cancel the event if it is cancelable, without stopping further propagation of the event\n\nThat said it might break code transferred from an existing website, but I doubt many actually use this (most probably prefer to set the string that will be displayed in the dialog).\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/134788543",
    "html_url": "https://github.com/electron/electron/issues/2579#issuecomment-134788543",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2579",
    "id": 134788543,
    "user": {
      "login": "duanyao",
      "id": 1684137,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1684137?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/duanyao",
      "html_url": "https://github.com/duanyao",
      "followers_url": "https://api.github.com/users/duanyao/followers",
      "following_url": "https://api.github.com/users/duanyao/following{/other_user}",
      "gists_url": "https://api.github.com/users/duanyao/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/duanyao/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/duanyao/subscriptions",
      "organizations_url": "https://api.github.com/users/duanyao/orgs",
      "repos_url": "https://api.github.com/users/duanyao/repos",
      "events_url": "https://api.github.com/users/duanyao/events{/privacy}",
      "received_events_url": "https://api.github.com/users/duanyao/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-26T01:50:05Z",
    "updated_at": "2015-08-26T01:50:05Z",
    "body": "@etiktin Firefox doesn't show the string of `BeforeUnloadEvent.returnValue` at all, because they believe it is a security issue (see https://bugzilla.mozilla.org/show_bug.cgi?id=588292#c2). So I suspect there are some real uses of `BeforeUnloadEvent.preventDefault()`.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/134805184",
    "html_url": "https://github.com/electron/electron/issues/2579#issuecomment-134805184",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2579",
    "id": 134805184,
    "user": {
      "login": "duanyao",
      "id": 1684137,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1684137?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/duanyao",
      "html_url": "https://github.com/duanyao",
      "followers_url": "https://api.github.com/users/duanyao/followers",
      "following_url": "https://api.github.com/users/duanyao/following{/other_user}",
      "gists_url": "https://api.github.com/users/duanyao/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/duanyao/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/duanyao/subscriptions",
      "organizations_url": "https://api.github.com/users/duanyao/orgs",
      "repos_url": "https://api.github.com/users/duanyao/repos",
      "events_url": "https://api.github.com/users/duanyao/events{/privacy}",
      "received_events_url": "https://api.github.com/users/duanyao/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-26T03:10:15Z",
    "updated_at": "2015-08-26T03:17:28Z",
    "body": "@etiktin To avoid multiple confirmation when iframes involved, I think Electron may suppress any dialogs that iframes try to create during beforeunload events, if the parent has at least one beforeunload handler. Not sure throwing or pretending canceled is better.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/135127377",
    "html_url": "https://github.com/electron/electron/issues/2579#issuecomment-135127377",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2579",
    "id": 135127377,
    "user": {
      "login": "etiktin",
      "id": 4381579,
      "avatar_url": "https://avatars1.githubusercontent.com/u/4381579?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/etiktin",
      "html_url": "https://github.com/etiktin",
      "followers_url": "https://api.github.com/users/etiktin/followers",
      "following_url": "https://api.github.com/users/etiktin/following{/other_user}",
      "gists_url": "https://api.github.com/users/etiktin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/etiktin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/etiktin/subscriptions",
      "organizations_url": "https://api.github.com/users/etiktin/orgs",
      "repos_url": "https://api.github.com/users/etiktin/repos",
      "events_url": "https://api.github.com/users/etiktin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/etiktin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-26T18:11:30Z",
    "updated_at": "2015-08-26T18:11:30Z",
    "body": "> To avoid multiple confirmation when iframes involved, I think Electron may suppress any dialogs that iframes try to create during beforeunload events, if the parent has at least one beforeunload handler. \n\n@duanyao, that's exactly what I meant. This is how Chrome and CEF do it. CEF even prints the following error when you try to open another confirm navigation dialog in a child window:\n`Blocked attempt to show multiple 'beforeunload' confirmation panels for a single navigation`\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/274309084",
    "html_url": "https://github.com/electron/electron/issues/2579#issuecomment-274309084",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2579",
    "id": 274309084,
    "user": {
      "login": "twolfson",
      "id": 902488,
      "avatar_url": "https://avatars0.githubusercontent.com/u/902488?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/twolfson",
      "html_url": "https://github.com/twolfson",
      "followers_url": "https://api.github.com/users/twolfson/followers",
      "following_url": "https://api.github.com/users/twolfson/following{/other_user}",
      "gists_url": "https://api.github.com/users/twolfson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/twolfson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/twolfson/subscriptions",
      "organizations_url": "https://api.github.com/users/twolfson/orgs",
      "repos_url": "https://api.github.com/users/twolfson/repos",
      "events_url": "https://api.github.com/users/twolfson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/twolfson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-22T05:00:12Z",
    "updated_at": "2017-01-22T05:00:12Z",
    "body": "I have been redirected here from https://github.com/electron/electron/issues/8468 but it's unclear what the conclusion in this thread was. Can someone reiterate what the preferred behavior is?\r\n\r\nFor example:\r\n\r\n- Always show top level dialogue and ignore iframe dialogues\r\n- Show dialogues for all levels\r\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/297879503",
    "html_url": "https://github.com/electron/electron/issues/2579#issuecomment-297879503",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2579",
    "id": 297879503,
    "user": {
      "login": "22222",
      "id": 696438,
      "avatar_url": "https://avatars3.githubusercontent.com/u/696438?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/22222",
      "html_url": "https://github.com/22222",
      "followers_url": "https://api.github.com/users/22222/followers",
      "following_url": "https://api.github.com/users/22222/following{/other_user}",
      "gists_url": "https://api.github.com/users/22222/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/22222/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/22222/subscriptions",
      "organizations_url": "https://api.github.com/users/22222/orgs",
      "repos_url": "https://api.github.com/users/22222/repos",
      "events_url": "https://api.github.com/users/22222/events{/privacy}",
      "received_events_url": "https://api.github.com/users/22222/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-28T01:02:27Z",
    "updated_at": "2017-04-28T01:02:27Z",
    "body": "It looks like things have changed since this ticket was created.  The message returned by the `beforeunload` event handlers is no longer available where the Electron code was checking it as of the [Chrome 51 API Changes](https://github.com/electron/electron/commit/7ba391da7cb8a8edf688a0eee638167787ab80fd#diff-6f9d2ef70d57c96751df514b138df249) from [Chromium issue 587940](https://bugs.chromium.org/p/chromium/issues/detail?id=587940).  That might change what a solution for this issue needs to do.\r\n\r\nUnless I missed something, Electron should already be acting just like Chromium for the actual event handling part (possibly through the code in the [WebKit Document class](https://cs.chromium.org/chromium/src/third_party/WebKit/Source/core/dom/Document.cpp?l=3120&rcl=52939ed422f481e2970edfa57a8bf24ca3dbacb8)).  What's missing is a way of providing a confirmation dialog in [atom_javascript_dialog_manager.cc](https://github.com/electron/electron/blob/c8c11e68c6c519789ba686783c3d653d5f790a51/atom/browser/atom_javascript_dialog_manager.cc#L53).\r\n\r\nThe Chromium browser would display a dialog to the user here to let them decide whether to actually prevent the unload or not.  At the time this issue was created, Electron checked if the message was an empty string or \"false\", but otherwise always prevented the unload (with no user confirmation or other dialog displayed).  Now that the message text is no longer available, Electron is hardcoded to always prevent the unload when things get this far.\r\n\r\nPersonally, I wouldn't want Electron to display a confirmation dialog like Chromium does by default.  The main problem is that the messages in the dialog would have to come from built-in strings, and that means Electron would probably have to have translations for all of those strings (like how Chromium [reads those strings](https://cs.chromium.org/chromium/src/components/app_modal/javascript_dialog_manager.cc?l=223&rcl=e0d2b32a6aacfbc5a84d465f05cc1c953fd7d056) from a [resource text file](https://cs.chromium.org/chromium/src/components/app_modal_strings.grdp?l=22&rcl=fb89a91b264ad2c6bad9acd32aeb42c45b6f1e69)).  And while it makes sense to not have control over the messages in a browser, I'd probably want to be able to decide exactly what I'm displaying to the user in an Electron app.\r\n\r\nSo I'd propose a new event or some kind of other hook to let an app provide their own confirmation dialog (or do whatever kind of checks they want).  My idea would be a `will-prevent-unload` event for `BrowserWindow.webContents`, where you can call `event.preventDefault()` to let the user leave the page even if a `beforeunload` event tried to cancel the page unload.\r\n\r\nWith that event, implementing a confirmation like in Chromium would look like this:\r\n\r\n```javascript\r\nconst {BrowserWindow} = require('electron')\r\nlet win = new BrowserWindow()\r\nwin.webContents.on('will-prevent-unload', (event) => {\r\n  let choice = dialog.showMessageBox(mainWindow, {\r\n    type: 'question',\r\n    buttons: ['Leave', 'Stay'],\r\n    title: 'Do you want to leave this site?',\r\n    message: 'Changes you made may not be saved.',\r\n    defaultId: 0,\r\n    cancelId: 1\r\n  })\r\n  let leave = (choice === 0)\r\n  if (leave) {\r\n    event.preventDefault()\r\n  }\r\n})\r\n```\r\n\r\nAnd another advantage of that kind of change is that it would be backwards compatible.  If you don't add one of these new event handlers, Electron would act just like it does today (silently preventing the unload without any user confirmation).\r\n"
  }
]