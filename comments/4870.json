[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/199300883",
    "html_url": "https://github.com/electron/electron/issues/4870#issuecomment-199300883",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/4870",
    "id": 199300883,
    "user": {
      "login": "kamesh-a",
      "id": 3531949,
      "avatar_url": "https://avatars2.githubusercontent.com/u/3531949?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kamesh-a",
      "html_url": "https://github.com/kamesh-a",
      "followers_url": "https://api.github.com/users/kamesh-a/followers",
      "following_url": "https://api.github.com/users/kamesh-a/following{/other_user}",
      "gists_url": "https://api.github.com/users/kamesh-a/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kamesh-a/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kamesh-a/subscriptions",
      "organizations_url": "https://api.github.com/users/kamesh-a/orgs",
      "repos_url": "https://api.github.com/users/kamesh-a/repos",
      "events_url": "https://api.github.com/users/kamesh-a/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kamesh-a/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-21T14:09:29Z",
    "updated_at": "2016-03-21T14:09:37Z",
    "body": "oops missed onething, After google page loads fully, hit  \"Reproduce crash\" button.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/199522673",
    "html_url": "https://github.com/electron/electron/issues/4870#issuecomment-199522673",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/4870",
    "id": 199522673,
    "user": {
      "login": "kevinsawicki",
      "id": 671378,
      "avatar_url": "https://avatars0.githubusercontent.com/u/671378?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kevinsawicki",
      "html_url": "https://github.com/kevinsawicki",
      "followers_url": "https://api.github.com/users/kevinsawicki/followers",
      "following_url": "https://api.github.com/users/kevinsawicki/following{/other_user}",
      "gists_url": "https://api.github.com/users/kevinsawicki/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kevinsawicki/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kevinsawicki/subscriptions",
      "organizations_url": "https://api.github.com/users/kevinsawicki/orgs",
      "repos_url": "https://api.github.com/users/kevinsawicki/repos",
      "events_url": "https://api.github.com/users/kevinsawicki/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kevinsawicki/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2016-03-21T22:49:04Z",
    "updated_at": "2016-03-21T22:49:04Z",
    "body": "Here is the stack trace I got with that example you linked:\n\n```\nProcess:               Electron Helper [82007]\nPath:                  /Users/USER/*/Electron.app/Contents/Frameworks/Electron Helper.app/Contents/MacOS/Electron Helper\nIdentifier:            com.github.electron.helper\nVersion:               0\nCode Type:             X86-64 (Native)\nParent Process:        Electron [82002]\nResponsible:           Terminal [721]\nUser ID:               501\n\nDate/Time:             2016-03-21 15:39:26.865 -0700\nOS Version:            Mac OS X 10.10.5 (14F1605)\nReport Version:        11\nAnonymous UUID:        9E9CB434-A4C0-CA4D-716E-2DA7D958B49C\n\nSleep/Wake UUID:       EF28841F-E6F2-4AA1-A185-22E3A7CE2CE8\n\nTime Awake Since Boot: 180000 seconds\nTime Since Wake:       3100 seconds\n\nCrashed Thread:        0  CrRendererMain  Dispatch queue: com.apple.main-thread\n\nException Type:        EXC_BAD_INSTRUCTION (SIGILL)\nException Codes:       0x0000000000000001, 0x0000000000000000\n\nThread 0 Crashed:: CrRendererMain  Dispatch queue: com.apple.main-thread\n0   libv8.dylib                     0x000000010daeed72 v8::base::OS::Abort() + 18\n1   libv8.dylib                     0x000000010daed2c1 V8_Fatal + 225\n2   libv8.dylib                     0x000000010d576ce3 v8::internal::ToBooleanStub::Types::UpdateStatus(v8::internal::Handle<v8::internal::Object>) + 419\n3   libv8.dylib                     0x000000010d576afa v8::internal::ToBooleanStub::UpdateStatus(v8::internal::Handle<v8::internal::Object>) + 42\n4   libv8.dylib                     0x000000010d83e1f6 v8::internal::Runtime_ToBooleanIC_Miss(int, v8::internal::Object**, v8::internal::Isolate*) + 246\n5   ???                             0x000006062100c1fb 0 + 6623393268219\n6   ???                             0x000006062101b9f2 0 + 6623393331698\n7   ???                             0x00000606214683c1 0 + 6623397839809\n8   ???                             0x0000060621468078 0 + 6623397838968\n9   ???                             0x0000060621036e64 0 + 6623393443428\n10  ???                             0x0000060621019a62 0 + 6623393323618\n11  libv8.dylib                     0x000000010d79a2b0 v8::internal::Execution::ToObject(v8::internal::Isolate*, v8::internal::Handle<v8::internal::Object>) + 592\n12  libv8.dylib                     0x000000010d799fa8 v8::internal::Execution::Call(v8::internal::Isolate*, v8::internal::Handle<v8::internal::Object>, v8::internal::Handle<v8::internal::Object>, int, v8::internal::Handle<v8::internal::Object>*) + 456\n13  libv8.dylib                     0x000000010d50613c v8::Function::Call(v8::Local<v8::Context>, v8::Local<v8::Value>, int, v8::Local<v8::Value>*) + 300\n14  libwebcore_shared.dylib         0x00000001131abc40 blink::V8ScriptRunner::callFunction(v8::Local<v8::Function>, blink::ExecutionContext*, v8::Local<v8::Value>, int, v8::Local<v8::Value>*, v8::Isolate*) + 864\n15  libwebcore_shared.dylib         0x00000001131763f0 blink::ScriptController::callFunction(v8::Local<v8::Function>, v8::Local<v8::Value>, int, v8::Local<v8::Value>*) + 96\n16  libwebcore_shared.dylib         0x000000011319b499 0x113150000 + 308377\n17  libwebcore_shared.dylib         0x00000001131932d8 blink::V8AbstractEventListener::invokeEventHandler(blink::ScriptState*, blink::Event*, v8::Local<v8::Value>) + 248\n18  libwebcore_shared.dylib         0x0000000113193197 blink::V8AbstractEventListener::handleEvent(blink::ScriptState*, blink::Event*) + 199\n19  libwebcore_shared.dylib         0x00000001131930ab blink::V8AbstractEventListener::handleEvent(blink::ExecutionContext*, blink::Event*) + 171\n20  libwebcore_shared.dylib         0x0000000113a8ab37 blink::EventTarget::fireEventListeners(blink::Event*, blink::EventTargetData*, WTF::Vector<blink::RegisteredEventListener, 1ul, WTF::PartitionAllocator>&) + 1111\n21  libwebcore_shared.dylib         0x0000000113a8a49a blink::EventTarget::fireEventListeners(blink::Event*) + 282\n22  libwebcore_shared.dylib         0x0000000113a8a364 blink::EventTarget::dispatchEventInternal(WTF::PassRefPtr<blink::Event>) + 132\n23  libwebcore_shared.dylib         0x0000000113a8a250 blink::EventTarget::dispatchEventForBindings(WTF::PassRefPtr<blink::Event>, blink::ExceptionState&) + 256\n24  libwebcore_shared.dylib         0x00000001133642d7 0x113150000 + 2179799\n25  libv8.dylib                     0x000000010d51fca3 v8::internal::FunctionCallbackArguments::Call(void (*)(v8::FunctionCallbackInfo<v8::Value> const&)) + 163\n26  libv8.dylib                     0x000000010d556c3e v8::internal::Builtins::InvokeApiFunction(v8::internal::Handle<v8::internal::JSFunction>, v8::internal::Handle<v8::internal::Object>, int, v8::internal::Handle<v8::internal::Object>*) + 1534\n27  libv8.dylib                     0x000000010d5655eb v8::internal::Builtins::~Builtins() + 59243\n28  ???                             0x000006062100c1fb 0 + 6623393268219\n29  ???                             0x0000060621467c2c 0 + 6623397837868\n30  ???                             0x0000060621467890 0 + 6623397836944\n31  ???                             0x000006062117327e 0 + 6623394738814\n32  ???                             0x000006062100f6b7 0 + 6623393281719\n33  ???                             0x0000060621467694 0 + 6623397836436\n34  ???                             0x0000060621036e64 0 + 6623393443428\n35  ???                             0x0000060621019a62 0 + 6623393323618\n36  libv8.dylib                     0x000000010d79a2b0 v8::internal::Execution::ToObject(v8::internal::Isolate*, v8::internal::Handle<v8::internal::Object>) + 592\n37  libv8.dylib                     0x000000010d799fa8 v8::internal::Execution::Call(v8::internal::Isolate*, v8::internal::Handle<v8::internal::Object>, v8::internal::Handle<v8::internal::Object>, int, v8::internal::Handle<v8::internal::Object>*) + 456\n38  libv8.dylib                     0x000000010d50613c v8::Function::Call(v8::Local<v8::Context>, v8::Local<v8::Value>, int, v8::Local<v8::Value>*) + 300\n39  libnode.dylib                   0x000000010cb122f7 node::MakeCallback(node::Environment*, v8::Local<v8::Value>, v8::Local<v8::Function>, int, v8::Local<v8::Value>*) + 1239 (node.cc:1151)\n40  libnode.dylib                   0x000000010cb1274e node::MakeCallback(node::Environment*, v8::Local<v8::Object>, v8::Local<v8::String>, int, v8::Local<v8::Value>*) + 174 (node.cc:1201)\n41  libnode.dylib                   0x000000010cb127c1 node::MakeCallback(node::Environment*, v8::Local<v8::Object>, char const*, int, v8::Local<v8::Value>*) + 97 (node.cc:1211)\n42  libnode.dylib                   0x000000010cb12871 node::MakeCallback(v8::Isolate*, v8::Local<v8::Object>, char const*, int, v8::Local<v8::Value>*) + 161 (node.cc:1225)\n43  com.github.electron.framework   0x000000010bca5ada mate::internal::CallEmitWithArgs(v8::Isolate*, v8::Local<v8::Object>, std::__1::vector<v8::Local<v8::Value>, std::__1::allocator<v8::Local<v8::Value> > >*) + 170 (event_emitter_caller.cc:25)\n44  com.github.electron.framework   0x000000010bd0a5b1 v8::Local<v8::Value> mate::EmitEvent<std::__1::basic_string<unsigned short, base::string16_char_traits, std::__1::allocator<unsigned short> > >(v8::Isolate*, v8::Local<v8::Object>, std::__1::basic_string<unsigned short, base::string16_char_traits, std::__1::allocator<unsigned short> > const&, std::__1::vector<v8::Local<v8::Value>, std::__1::allocator<v8::Local<v8::Value> > > const&) + 1153 (event_emitter_caller.h:34)\n45  com.github.electron.framework   0x000000010bd094ed atom::AtomRenderViewObserver::OnBrowserMessage(std::__1::basic_string<unsigned short, base::string16_char_traits, std::__1::allocator<unsigned short> > const&, base::ListValue const&) + 781 (atom_render_view_observer.cc:147)\n46  com.github.electron.framework   0x000000010bd0c089 void base::DispatchToMethodImpl<atom::AtomRenderViewObserver, void (atom::AtomRenderViewObserver::*)(std::__1::basic_string<unsigned short, base::string16_char_traits, std::__1::allocator<unsigned short> > const&, base::ListValue const&), std::__1::basic_string<unsigned short, base::string16_char_traits, std::__1::allocator<unsigned short> >, base::ListValue, 0ul, 1ul>(atom::AtomRenderViewObserver*, void (atom::AtomRenderViewObserver::*)(std::__1::basic_string<unsigned short, base::string16_char_traits, std::__1::allocator<unsigned short> > const&, base::ListValue const&), base::Tuple<std::__1::basic_string<unsigned short, base::string16_char_traits, std::__1::allocator<unsigned short> >, base::ListValue> const&, base::IndexSequence<0ul, 1ul>) + 185 (tuple.h:253)\n47  com.github.electron.framework   0x000000010bd0bfc5 void base::DispatchToMethod<atom::AtomRenderViewObserver, void (atom::AtomRenderViewObserver::*)(std::__1::basic_string<unsigned short, base::string16_char_traits, std::__1::allocator<unsigned short> > const&, base::ListValue const&), std::__1::basic_string<unsigned short, base::string16_char_traits, std::__1::allocator<unsigned short> >, base::ListValue>(atom::AtomRenderViewObserver*, void (atom::AtomRenderViewObserver::*)(std::__1::basic_string<unsigned short, base::string16_char_traits, std::__1::allocator<unsigned short> > const&, base::ListValue const&), base::Tuple<std::__1::basic_string<unsigned short, base::string16_char_traits, std::__1::allocator<unsigned short> >, base::ListValue> const&) + 69 (tuple.h:260)\n48  com.github.electron.framework   0x000000010bd09a0f bool AtomViewMsg_Message::Dispatch<atom::AtomRenderViewObserver, atom::AtomRenderViewObserver, void, void (atom::AtomRenderViewObserver::*)(std::__1::basic_string<unsigned short, base::string16_char_traits, std::__1::allocator<unsigned short> > const&, base::ListValue const&)>(IPC::Message const*, atom::AtomRenderViewObserver*, atom::AtomRenderViewObserver*, void*, void (atom::AtomRenderViewObserver::*)(std::__1::basic_string<unsigned short, base::string16_char_traits, std::__1::allocator<unsigned short> > const&, base::ListValue const&)) + 143 (api_messages.h:33)\n49  com.github.electron.framework   0x000000010bd091a6 atom::AtomRenderViewObserver::OnMessageReceived(IPC::Message const&) + 214 (atom_render_view_observer.cc:115)\n50  libcontent.dylib                0x000000010fe56165 content::RenderViewImpl::OnMessageReceived(IPC::Message const&) + 693\n51  libcontent.dylib                0x000000010fd8ab4c content::MessageRouter::RouteMessage(IPC::Message const&) + 140\n52  libcontent.dylib                0x000000010fd8aabc content::MessageRouter::OnMessageReceived(IPC::Message const&) + 28\n53  libcontent.dylib                0x000000010fc02a0f content::ChildThreadImpl::OnMessageReceived(IPC::Message const&) + 1055\n54  libipc.dylib                    0x00000001117750b8 IPC::ChannelProxy::Context::OnDispatchMessage(IPC::Message const&) + 120\n55  libbase.dylib                   0x000000010df4d93a base::debug::TaskAnnotator::RunTask(char const*, base::PendingTask const&) + 202\n56  libscheduler.dylib              0x0000000112abf330 scheduler::TaskQueueManager::ProcessTaskFromWorkQueue(scheduler::internal::WorkQueue*, scheduler::internal::TaskQueueImpl::Task*) + 688\n57  libscheduler.dylib              0x0000000112abe15e scheduler::TaskQueueManager::DoWork(base::TimeTicks, bool) + 286\n58  libbase.dylib                   0x000000010df4d93a base::debug::TaskAnnotator::RunTask(char const*, base::PendingTask const&) + 202\n59  libbase.dylib                   0x000000010df771c9 base::MessageLoop::RunTask(base::PendingTask const&) + 489\n60  libbase.dylib                   0x000000010df77818 base::MessageLoop::DoWork() + 632\n61  libbase.dylib                   0x000000010df3ecf1 0x10df3c000 + 11505\n62  libbase.dylib                   0x000000010df6aa5a base::mac::CallWithEHFrame(void () block_pointer) + 10\n63  libbase.dylib                   0x000000010df3e6f4 0x10df3c000 + 9972\n64  com.apple.CoreFoundation        0x00007fff95dc5a01 __CFRUNLOOP_IS_CALLING_OUT_TO_A_SOURCE0_PERFORM_FUNCTION__ + 17\n65  com.apple.CoreFoundation        0x00007fff95db7b8d __CFRunLoopDoSources0 + 269\n66  com.apple.CoreFoundation        0x00007fff95db71bf __CFRunLoopRun + 927\n67  com.apple.CoreFoundation        0x00007fff95db6bd8 CFRunLoopRunSpecific + 296\n68  com.apple.Foundation            0x00007fff9043fb29 -[NSRunLoop(NSRunLoop) runMode:beforeDate:] + 278\n69  libbase.dylib                   0x000000010df3f46e base::MessagePumpNSRunLoop::DoRun(base::MessagePump::Delegate*) + 126\n70  libbase.dylib                   0x000000010df3eb44 0x10df3c000 + 11076\n71  libbase.dylib                   0x000000010df8f1e3 base::RunLoop::Run() + 99\n72  libbase.dylib                   0x000000010df768fd base::MessageLoop::Run() + 29\n73  libcontent.dylib                0x000000010fe75397 0x10f824000 + 6624151\n74  libcontent.dylib                0x000000010f8291dc 0x10f824000 + 20956\n75  libcontent.dylib                0x000000010f8286d6 content::ContentMain(content::ContentMainParams const&) + 54\n76  com.github.electron.framework   0x000000010bac6af8 AtomMain + 104 (atom_library_main.mm:24)\n77  com.github.electron.helper      0x000000010babce08 main + 72\n78  libdyld.dylib                   0x00\n```\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/199588884",
    "html_url": "https://github.com/electron/electron/issues/4870#issuecomment-199588884",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/4870",
    "id": 199588884,
    "user": {
      "login": "deepak1556",
      "id": 964386,
      "avatar_url": "https://avatars2.githubusercontent.com/u/964386?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/deepak1556",
      "html_url": "https://github.com/deepak1556",
      "followers_url": "https://api.github.com/users/deepak1556/followers",
      "following_url": "https://api.github.com/users/deepak1556/following{/other_user}",
      "gists_url": "https://api.github.com/users/deepak1556/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/deepak1556/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/deepak1556/subscriptions",
      "organizations_url": "https://api.github.com/users/deepak1556/orgs",
      "repos_url": "https://api.github.com/users/deepak1556/repos",
      "events_url": "https://api.github.com/users/deepak1556/events{/privacy}",
      "received_events_url": "https://api.github.com/users/deepak1556/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-22T02:22:15Z",
    "updated_at": "2016-03-22T02:22:15Z",
    "body": "Related to https://github.com/atom/electron/issues/4802#issuecomment-199588369\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/205197993",
    "html_url": "https://github.com/electron/electron/issues/4870#issuecomment-205197993",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/4870",
    "id": 205197993,
    "user": {
      "login": "kamesh-a",
      "id": 3531949,
      "avatar_url": "https://avatars2.githubusercontent.com/u/3531949?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kamesh-a",
      "html_url": "https://github.com/kamesh-a",
      "followers_url": "https://api.github.com/users/kamesh-a/followers",
      "following_url": "https://api.github.com/users/kamesh-a/following{/other_user}",
      "gists_url": "https://api.github.com/users/kamesh-a/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kamesh-a/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kamesh-a/subscriptions",
      "organizations_url": "https://api.github.com/users/kamesh-a/orgs",
      "repos_url": "https://api.github.com/users/kamesh-a/repos",
      "events_url": "https://api.github.com/users/kamesh-a/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kamesh-a/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-04T08:44:06Z",
    "updated_at": "2016-04-04T08:44:06Z",
    "body": "@deepak1556 and @zcbenz  thank you for fixing it. we have tested it works fine.\n"
  }
]