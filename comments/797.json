[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/62095954",
    "html_url": "https://github.com/electron/electron/issues/797#issuecomment-62095954",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/797",
    "id": 62095954,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2014-11-07T04:59:53Z",
    "updated_at": "2014-11-07T04:59:53Z",
    "body": "Node integration doesn't work in web workers, and there is no plan to do. Workers in Chromium are implemented by starting a new thread, and Node is not thread safe. Back in past we had tried to add node integration to web workers in Atom, but it crashed too easily so we gave up on it.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/62096054",
    "html_url": "https://github.com/electron/electron/issues/797#issuecomment-62096054",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/797",
    "id": 62096054,
    "user": {
      "login": "mark-hahn",
      "id": 811455,
      "avatar_url": "https://avatars1.githubusercontent.com/u/811455?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mark-hahn",
      "html_url": "https://github.com/mark-hahn",
      "followers_url": "https://api.github.com/users/mark-hahn/followers",
      "following_url": "https://api.github.com/users/mark-hahn/following{/other_user}",
      "gists_url": "https://api.github.com/users/mark-hahn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mark-hahn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mark-hahn/subscriptions",
      "organizations_url": "https://api.github.com/users/mark-hahn/orgs",
      "repos_url": "https://api.github.com/users/mark-hahn/repos",
      "events_url": "https://api.github.com/users/mark-hahn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mark-hahn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-07T05:01:30Z",
    "updated_at": "2014-11-07T05:01:30Z",
    "body": "Thanks.\n\nOn Thu, Nov 6, 2014 at 9:00 PM, Cheng Zhao notifications@github.com wrote:\n\n> Closed #797 https://github.com/atom/atom-shell/issues/797.\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/atom/atom-shell/issues/797#event-189747006.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/62097178",
    "html_url": "https://github.com/electron/electron/issues/797#issuecomment-62097178",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/797",
    "id": 62097178,
    "user": {
      "login": "paulcbetts",
      "id": 1396,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1396?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulcbetts",
      "html_url": "https://github.com/paulcbetts",
      "followers_url": "https://api.github.com/users/paulcbetts/followers",
      "following_url": "https://api.github.com/users/paulcbetts/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulcbetts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulcbetts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulcbetts/subscriptions",
      "organizations_url": "https://api.github.com/users/paulcbetts/orgs",
      "repos_url": "https://api.github.com/users/paulcbetts/repos",
      "events_url": "https://api.github.com/users/paulcbetts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulcbetts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-07T05:23:00Z",
    "updated_at": "2014-11-07T05:23:00Z",
    "body": "Seems like you could fork/exec your own `process.execPath` with `ATOM_SHELL_INTERNAL_RUN_AS_NODE=1`, then talk to it over pipes - you'd have node running in a separate process, just as good as a web worker :)\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/62097466",
    "html_url": "https://github.com/electron/electron/issues/797#issuecomment-62097466",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/797",
    "id": 62097466,
    "user": {
      "login": "mark-hahn",
      "id": 811455,
      "avatar_url": "https://avatars1.githubusercontent.com/u/811455?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mark-hahn",
      "html_url": "https://github.com/mark-hahn",
      "followers_url": "https://api.github.com/users/mark-hahn/followers",
      "following_url": "https://api.github.com/users/mark-hahn/following{/other_user}",
      "gists_url": "https://api.github.com/users/mark-hahn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mark-hahn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mark-hahn/subscriptions",
      "organizations_url": "https://api.github.com/users/mark-hahn/orgs",
      "repos_url": "https://api.github.com/users/mark-hahn/repos",
      "events_url": "https://api.github.com/users/mark-hahn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mark-hahn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-07T05:28:09Z",
    "updated_at": "2014-11-07T05:28:09Z",
    "body": "I can use node's child-process but I really wanted web workers.\n\nThe web workers looked better than processes because of their light weight\nand because they can be easily terminated. I was going to be rapidly firing\nthem up and terminating them.  I'll have to come with a different scheme\nnow.\n\nOn Thu, Nov 6, 2014 at 9:23 PM, Paul Betts notifications@github.com wrote:\n\n> Seems like you could fork/exec your own process.execPath with\n> ATOM_SHELL_INTERNAL_RUN_AS_NODE=1, then talk to it over pipes - you'd\n> have node running in a separate process, just as good as a web worker :)\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/atom/atom-shell/issues/797#issuecomment-62097178.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/125998297",
    "html_url": "https://github.com/electron/electron/issues/797#issuecomment-125998297",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/797",
    "id": 125998297,
    "user": {
      "login": "jprichardson",
      "id": 150063,
      "avatar_url": "https://avatars0.githubusercontent.com/u/150063?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jprichardson",
      "html_url": "https://github.com/jprichardson",
      "followers_url": "https://api.github.com/users/jprichardson/followers",
      "following_url": "https://api.github.com/users/jprichardson/following{/other_user}",
      "gists_url": "https://api.github.com/users/jprichardson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jprichardson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jprichardson/subscriptions",
      "organizations_url": "https://api.github.com/users/jprichardson/orgs",
      "repos_url": "https://api.github.com/users/jprichardson/repos",
      "events_url": "https://api.github.com/users/jprichardson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jprichardson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-29T15:58:25Z",
    "updated_at": "2015-07-29T15:58:34Z",
    "body": "@mark-hahn what solution did you come up with? I'm currently deciding between web workers, process forking, permanent worker webview, etc.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/126005839",
    "html_url": "https://github.com/electron/electron/issues/797#issuecomment-126005839",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/797",
    "id": 126005839,
    "user": {
      "login": "bu2",
      "id": 227457,
      "avatar_url": "https://avatars2.githubusercontent.com/u/227457?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bu2",
      "html_url": "https://github.com/bu2",
      "followers_url": "https://api.github.com/users/bu2/followers",
      "following_url": "https://api.github.com/users/bu2/following{/other_user}",
      "gists_url": "https://api.github.com/users/bu2/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bu2/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bu2/subscriptions",
      "organizations_url": "https://api.github.com/users/bu2/orgs",
      "repos_url": "https://api.github.com/users/bu2/repos",
      "events_url": "https://api.github.com/users/bu2/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bu2/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-29T16:18:26Z",
    "updated_at": "2015-07-29T16:18:26Z",
    "body": "@jprichardson,\n\nI just built a prototype with a BrowserWindow and a background worker which does heavy computations.\n\nI tried hard to use web workers (to comply with standards, and because  Electron benefits from Chrome support of Web Workers) BUT be aware that in Web Workers you don't have node.js APIs and modules anymore ! \n\nSo I read Electron's documentation related to IPC and I came up with this architecture :\n- my BrowserWindow do an IPC call to the main process asking for the launch of a background task\n- the main process receive the IPC message and fork a sub process to launch the big computation\n- the subprocess notify the main process of task progress\n- the main process transmit the notification to the BrowserWindow\n- then the BrowserWindow display something \n\nAnd it seems there a big advantage following this way: my computation is so big, that when I run it directly in a BrowserWindow, the UI freeze, the computation takes about 1 hour to complete but crash because it use all the memory (more than 12Go :-$). When doing the same thing in my background worker, the UI doesn't freeze, the computation takes the same time to finish and use only 1Go of memory. I believe the reason is: in the first case I was running in a Browser-based JavaScript thread optimized for UI (and with memory-hungry settings concerning garbage collection), in the second case I am running in a Node-based JavaScript thread which does a better usage of the garbage collector...\n\nRegards,\n\nBruno.\n\n> On 29 Jul 2015, at 17:58, JP Richardson notifications@github.com wrote:\n> \n> @mark-hahn what solution did you come up with? I'm currently deciding between web workers, process forking, permanent webview, etc.\n> \n> —\n> Reply to this email directly or view it on GitHub.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/126056034",
    "html_url": "https://github.com/electron/electron/issues/797#issuecomment-126056034",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/797",
    "id": 126056034,
    "user": {
      "login": "jprichardson",
      "id": 150063,
      "avatar_url": "https://avatars0.githubusercontent.com/u/150063?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jprichardson",
      "html_url": "https://github.com/jprichardson",
      "followers_url": "https://api.github.com/users/jprichardson/followers",
      "following_url": "https://api.github.com/users/jprichardson/following{/other_user}",
      "gists_url": "https://api.github.com/users/jprichardson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jprichardson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jprichardson/subscriptions",
      "organizations_url": "https://api.github.com/users/jprichardson/orgs",
      "repos_url": "https://api.github.com/users/jprichardson/repos",
      "events_url": "https://api.github.com/users/jprichardson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jprichardson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-29T18:49:32Z",
    "updated_at": "2015-07-29T18:49:32Z",
    "body": "@bru2 thanks for sharing!\n\nMy tasks are relatively light-weight (approx 250 ms), so a web worker may still work better.  I only considered forking the Renderer or actually running the code in the Main.  But I had never considered forking the Main process, that's a good strategy in some scenarios, especially like what you presented. Thanks again for taking the time to share :)\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/126076227",
    "html_url": "https://github.com/electron/electron/issues/797#issuecomment-126076227",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/797",
    "id": 126076227,
    "user": {
      "login": "mark-hahn",
      "id": 811455,
      "avatar_url": "https://avatars1.githubusercontent.com/u/811455?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mark-hahn",
      "html_url": "https://github.com/mark-hahn",
      "followers_url": "https://api.github.com/users/mark-hahn/followers",
      "following_url": "https://api.github.com/users/mark-hahn/following{/other_user}",
      "gists_url": "https://api.github.com/users/mark-hahn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mark-hahn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mark-hahn/subscriptions",
      "organizations_url": "https://api.github.com/users/mark-hahn/orgs",
      "repos_url": "https://api.github.com/users/mark-hahn/repos",
      "events_url": "https://api.github.com/users/mark-hahn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mark-hahn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-29T19:50:10Z",
    "updated_at": "2015-07-29T19:50:10Z",
    "body": "> @mark-hahn what solution did you come up with\n\nI ended up with simple child-processes running from node as @paulcbetts suggested.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/167904667",
    "html_url": "https://github.com/electron/electron/issues/797#issuecomment-167904667",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/797",
    "id": 167904667,
    "user": {
      "login": "bitwombat",
      "id": 3937658,
      "avatar_url": "https://avatars3.githubusercontent.com/u/3937658?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bitwombat",
      "html_url": "https://github.com/bitwombat",
      "followers_url": "https://api.github.com/users/bitwombat/followers",
      "following_url": "https://api.github.com/users/bitwombat/following{/other_user}",
      "gists_url": "https://api.github.com/users/bitwombat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bitwombat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bitwombat/subscriptions",
      "organizations_url": "https://api.github.com/users/bitwombat/orgs",
      "repos_url": "https://api.github.com/users/bitwombat/repos",
      "events_url": "https://api.github.com/users/bitwombat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bitwombat/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-30T00:30:48Z",
    "updated_at": "2015-12-30T00:37:14Z",
    "body": "@bu2 thanks for getting me on the right track!  Let's hear it for archives.  \n\nTurns out there's no reason the main process has to be involved.  JavaScript loaded by the page (ie. running in the renderer process) can `require('child_process')` and `cp.fork` things just fine (I used this for a search feature).  There's still IPC between the originating js and the child process, but it's simpler communication:\n- User action causes an onclick which is caught by js already loaded by that page\n- That js (search) cp.forks a time-consuming process (search-worker).\n- search sends search-worker whatever it needs via .send() calls.\n- search and search-worker communicate results and status via .on() and .send() calls.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/168396599",
    "html_url": "https://github.com/electron/electron/issues/797#issuecomment-168396599",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/797",
    "id": 168396599,
    "user": {
      "login": "marceln",
      "id": 964586,
      "avatar_url": "https://avatars0.githubusercontent.com/u/964586?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/marceln",
      "html_url": "https://github.com/marceln",
      "followers_url": "https://api.github.com/users/marceln/followers",
      "following_url": "https://api.github.com/users/marceln/following{/other_user}",
      "gists_url": "https://api.github.com/users/marceln/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/marceln/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/marceln/subscriptions",
      "organizations_url": "https://api.github.com/users/marceln/orgs",
      "repos_url": "https://api.github.com/users/marceln/repos",
      "events_url": "https://api.github.com/users/marceln/events{/privacy}",
      "received_events_url": "https://api.github.com/users/marceln/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-02T14:41:48Z",
    "updated_at": "2016-01-02T14:41:48Z",
    "body": "@bitwombat thanks, that sounds like a good way. Have you measured the resource usage - mainly CPU and RAM - of doing so? \n\nI need to do something similar and I was toying with the idea of just letting a child run indefinitely, even when there's no work to do - mainly because there's a good chance that there's always something to do. I was thinking I could eliminate the overhead of spawning child processes. \n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/168429763",
    "html_url": "https://github.com/electron/electron/issues/797#issuecomment-168429763",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/797",
    "id": 168429763,
    "user": {
      "login": "bitwombat",
      "id": 3937658,
      "avatar_url": "https://avatars3.githubusercontent.com/u/3937658?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bitwombat",
      "html_url": "https://github.com/bitwombat",
      "followers_url": "https://api.github.com/users/bitwombat/followers",
      "following_url": "https://api.github.com/users/bitwombat/following{/other_user}",
      "gists_url": "https://api.github.com/users/bitwombat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bitwombat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bitwombat/subscriptions",
      "organizations_url": "https://api.github.com/users/bitwombat/orgs",
      "repos_url": "https://api.github.com/users/bitwombat/repos",
      "events_url": "https://api.github.com/users/bitwombat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bitwombat/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-02T21:36:01Z",
    "updated_at": "2016-01-02T21:36:01Z",
    "body": "> Have you measured the resource usage -  mainly CPU and RAM - of doing so? \n\nHave not.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/195050661",
    "html_url": "https://github.com/electron/electron/issues/797#issuecomment-195050661",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/797",
    "id": 195050661,
    "user": {
      "login": "Programming4life",
      "id": 2167740,
      "avatar_url": "https://avatars0.githubusercontent.com/u/2167740?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Programming4life",
      "html_url": "https://github.com/Programming4life",
      "followers_url": "https://api.github.com/users/Programming4life/followers",
      "following_url": "https://api.github.com/users/Programming4life/following{/other_user}",
      "gists_url": "https://api.github.com/users/Programming4life/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Programming4life/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Programming4life/subscriptions",
      "organizations_url": "https://api.github.com/users/Programming4life/orgs",
      "repos_url": "https://api.github.com/users/Programming4life/repos",
      "events_url": "https://api.github.com/users/Programming4life/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Programming4life/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-10T21:10:50Z",
    "updated_at": "2016-03-10T21:10:50Z",
    "body": "@bitwombat You should check out https://github.com/substack/dnode it's rpc communication but for node. It makes everything much easier. \n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/259054580",
    "html_url": "https://github.com/electron/electron/issues/797#issuecomment-259054580",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/797",
    "id": 259054580,
    "user": {
      "login": "jsnar",
      "id": 17347358,
      "avatar_url": "https://avatars2.githubusercontent.com/u/17347358?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jsnar",
      "html_url": "https://github.com/jsnar",
      "followers_url": "https://api.github.com/users/jsnar/followers",
      "following_url": "https://api.github.com/users/jsnar/following{/other_user}",
      "gists_url": "https://api.github.com/users/jsnar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jsnar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jsnar/subscriptions",
      "organizations_url": "https://api.github.com/users/jsnar/orgs",
      "repos_url": "https://api.github.com/users/jsnar/repos",
      "events_url": "https://api.github.com/users/jsnar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jsnar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-08T06:12:23Z",
    "updated_at": "2016-11-08T06:12:23Z",
    "body": "I don't understand why Electron has no plan on this feature, while nw.js just released Node.js support for Web workers: http://nwjs.io/blog/v0.18.4/\n"
  }
]