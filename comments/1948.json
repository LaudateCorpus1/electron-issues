[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/111294722",
    "html_url": "https://github.com/electron/electron/issues/1948#issuecomment-111294722",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1948",
    "id": 111294722,
    "user": {
      "login": "maxkueng",
      "id": 168709,
      "avatar_url": "https://avatars2.githubusercontent.com/u/168709?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maxkueng",
      "html_url": "https://github.com/maxkueng",
      "followers_url": "https://api.github.com/users/maxkueng/followers",
      "following_url": "https://api.github.com/users/maxkueng/following{/other_user}",
      "gists_url": "https://api.github.com/users/maxkueng/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maxkueng/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maxkueng/subscriptions",
      "organizations_url": "https://api.github.com/users/maxkueng/orgs",
      "repos_url": "https://api.github.com/users/maxkueng/repos",
      "events_url": "https://api.github.com/users/maxkueng/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maxkueng/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-11T22:33:26Z",
    "updated_at": "2015-06-11T22:33:26Z",
    "body": "Could you start a TCP server in the browser process and consume it in the renderer process? If I understand you correctly you are trying to stream video / moving images generated in the browser to the renderer.\n\nI haven't tried it out but there's a a thing called [BinaryJS](http://binaryjs.com/) that does binary streams. And there may be other possibilities in node to stream video over TCP.\n\nAnother way to communicate between browser and renderer is through globals. You can store an object in the browser `global.myObject = { whatever: true }` and access it in the renderer `myObject = remote.getGlobal('myObject')`.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/111320778",
    "html_url": "https://github.com/electron/electron/issues/1948#issuecomment-111320778",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1948",
    "id": 111320778,
    "user": {
      "login": "jgeurts",
      "id": 158937,
      "avatar_url": "https://avatars1.githubusercontent.com/u/158937?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jgeurts",
      "html_url": "https://github.com/jgeurts",
      "followers_url": "https://api.github.com/users/jgeurts/followers",
      "following_url": "https://api.github.com/users/jgeurts/following{/other_user}",
      "gists_url": "https://api.github.com/users/jgeurts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jgeurts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jgeurts/subscriptions",
      "organizations_url": "https://api.github.com/users/jgeurts/orgs",
      "repos_url": "https://api.github.com/users/jgeurts/repos",
      "events_url": "https://api.github.com/users/jgeurts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jgeurts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-12T01:31:05Z",
    "updated_at": "2015-06-12T01:31:52Z",
    "body": "I should be able to give BinaryJS a shot - I was hesitating because I was hoping ipc would alleviate the need. Maybe not though?\n\nI'll try the globals options as well - I wasn't aware of that! Do you know if the object would be passed by reference from browser to renderer using the globals approach?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/111392865",
    "html_url": "https://github.com/electron/electron/issues/1948#issuecomment-111392865",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1948",
    "id": 111392865,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2015-06-12T07:32:23Z",
    "updated_at": "2015-06-12T07:32:23Z",
    "body": "The array is serialized as JSON string when sending and deserialized with `JSON.parse`, so I think using `ipc` or `remote` to send a large image is a bad idea.\n\nYou should probably just do everything in renderer.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/111497259",
    "html_url": "https://github.com/electron/electron/issues/1948#issuecomment-111497259",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1948",
    "id": 111497259,
    "user": {
      "login": "jgeurts",
      "id": 158937,
      "avatar_url": "https://avatars1.githubusercontent.com/u/158937?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jgeurts",
      "html_url": "https://github.com/jgeurts",
      "followers_url": "https://api.github.com/users/jgeurts/followers",
      "following_url": "https://api.github.com/users/jgeurts/following{/other_user}",
      "gists_url": "https://api.github.com/users/jgeurts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jgeurts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jgeurts/subscriptions",
      "organizations_url": "https://api.github.com/users/jgeurts/orgs",
      "repos_url": "https://api.github.com/users/jgeurts/repos",
      "events_url": "https://api.github.com/users/jgeurts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jgeurts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-12T13:46:52Z",
    "updated_at": "2015-06-12T13:46:52Z",
    "body": "@zcbenz I can't do everything in renderer... The components I'm using to obtain that large array depend on some additional modules that are not compatible with renderer. Specifically, there was an issue with the process variable and expected properties.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/112825187",
    "html_url": "https://github.com/electron/electron/issues/1948#issuecomment-112825187",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1948",
    "id": 112825187,
    "user": {
      "login": "jgeurts",
      "id": 158937,
      "avatar_url": "https://avatars1.githubusercontent.com/u/158937?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jgeurts",
      "html_url": "https://github.com/jgeurts",
      "followers_url": "https://api.github.com/users/jgeurts/followers",
      "following_url": "https://api.github.com/users/jgeurts/following{/other_user}",
      "gists_url": "https://api.github.com/users/jgeurts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jgeurts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jgeurts/subscriptions",
      "organizations_url": "https://api.github.com/users/jgeurts/orgs",
      "repos_url": "https://api.github.com/users/jgeurts/repos",
      "events_url": "https://api.github.com/users/jgeurts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jgeurts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-17T14:31:58Z",
    "updated_at": "2015-06-17T14:31:58Z",
    "body": "If anyone comes back here, the [BinaryJS](http://binaryjs.com/) suggestion from @maxkueng worked wonderfully. Thanks @maxkueng for the heads up on that!\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/212639881",
    "html_url": "https://github.com/electron/electron/issues/1948#issuecomment-212639881",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1948",
    "id": 212639881,
    "user": {
      "login": "sqwk",
      "id": 1353312,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1353312?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sqwk",
      "html_url": "https://github.com/sqwk",
      "followers_url": "https://api.github.com/users/sqwk/followers",
      "following_url": "https://api.github.com/users/sqwk/following{/other_user}",
      "gists_url": "https://api.github.com/users/sqwk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sqwk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sqwk/subscriptions",
      "organizations_url": "https://api.github.com/users/sqwk/orgs",
      "repos_url": "https://api.github.com/users/sqwk/repos",
      "events_url": "https://api.github.com/users/sqwk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sqwk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-20T22:36:49Z",
    "updated_at": "2016-04-20T22:36:49Z",
    "body": "@jgeurts Could you share your solution using BinaryJS? I am trying to draw a mediastream onto a canvas in another (second) window—your problem sounded similar.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/214858798",
    "html_url": "https://github.com/electron/electron/issues/1948#issuecomment-214858798",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1948",
    "id": 214858798,
    "user": {
      "login": "jgeurts",
      "id": 158937,
      "avatar_url": "https://avatars1.githubusercontent.com/u/158937?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jgeurts",
      "html_url": "https://github.com/jgeurts",
      "followers_url": "https://api.github.com/users/jgeurts/followers",
      "following_url": "https://api.github.com/users/jgeurts/following{/other_user}",
      "gists_url": "https://api.github.com/users/jgeurts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jgeurts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jgeurts/subscriptions",
      "organizations_url": "https://api.github.com/users/jgeurts/orgs",
      "repos_url": "https://api.github.com/users/jgeurts/repos",
      "events_url": "https://api.github.com/users/jgeurts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jgeurts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-26T19:26:21Z",
    "updated_at": "2016-04-26T19:26:21Z",
    "body": "@sqwk I ended up removing the binaryjs code in favor of using [MediaDevices.getUserMedia()](https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia) from the frontend code. That said, the BinaryJS code looked something like:\n\n```\napp.on('ready', function () {\n  ...\n  var binaryServer = BinaryServer({port:9000, chunkSize: 9999999999});\n  var binaryClient;\n  binaryServer.on('connection', function (client) {\n    start = process.hrtime();\n    console.log(\"binaryServer:connection\");\n    binaryClient = client;\n\n    client.on('error', function (error) {\n      console.log(\"binaryServer:error\\n\" + error);\n    });\n    client.on('drain', function () {\n      console.log(\"binaryServer:drain\");\n    });\n    client.on('close', function (code, message) {\n      console.log(\"binaryServer:close\\n\" + code + \"\\n\" + message);\n    });\n  });\n  binaryServer.on('error', function (error) {\n    console.log(\"binaryServer:error\\n\" + error);\n  });\n  binaryServer.on('drain', function () {\n    console.log(\"binaryServer:drain\");\n  });\n  binaryServer.on('close', function (code, message) {\n    console.log(\"binaryServer:close\\n\" + code + \"\\n\" + message);\n  });\n  ...\n  someVideoInput.on('frame', function(data) {\n    if (binaryClient) {\n      try {\n        binaryClient.send(compressedData);\n      } catch (ex) {\n        console.log(ex);\n      }\n    }\n```\n\n---\n\nFE code:\nhtml: `<canvas id=\"image\" height=\"1080\" width=\"1920\" />`\n\njavascript:\n\n```\nvar BinaryClient = window.require('binaryjs').BinaryClient;\nvar binaryClient = new BinaryClient('ws://localhost:9000');\nvar image = document.getElementById('image');\n\nbinaryClient.on('stream', function (stream) {\n  var parts = [];\n  stream.on('data', function (data) {\n    parts.push(data);\n  });\n\n  stream.on('end', function () {\n    var array = new Uint8ClampedArray(parts[0]);\n    var context = image.getContext('2d');\n    // Assume image came through as 1920x1080\n    context.putImageData(new ImageData(array, 1920, 1080), 0, 0);\n  });\n});\n```\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/232564629",
    "html_url": "https://github.com/electron/electron/issues/1948#issuecomment-232564629",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1948",
    "id": 232564629,
    "user": {
      "login": "davidgilbertson",
      "id": 4443482,
      "avatar_url": "https://avatars1.githubusercontent.com/u/4443482?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/davidgilbertson",
      "html_url": "https://github.com/davidgilbertson",
      "followers_url": "https://api.github.com/users/davidgilbertson/followers",
      "following_url": "https://api.github.com/users/davidgilbertson/following{/other_user}",
      "gists_url": "https://api.github.com/users/davidgilbertson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/davidgilbertson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/davidgilbertson/subscriptions",
      "organizations_url": "https://api.github.com/users/davidgilbertson/orgs",
      "repos_url": "https://api.github.com/users/davidgilbertson/repos",
      "events_url": "https://api.github.com/users/davidgilbertson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/davidgilbertson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-14T06:03:07Z",
    "updated_at": "2016-07-14T06:03:07Z",
    "body": "@jgeurts I know it's been a while... but bow did you get MediaDevices.getUserMedia() working? I can get `navigator.webkitGetUserMedia` to work as per [this example](http://electron.atom.io/docs/api/desktop-capturer/) but not `navigator.mediaDevices.getUserMedia`.\n"
  }
]