[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/165874015",
    "html_url": "https://github.com/electron/electron/issues/3861#issuecomment-165874015",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/3861",
    "id": 165874015,
    "user": {
      "login": "deepak1556",
      "id": 964386,
      "avatar_url": "https://avatars2.githubusercontent.com/u/964386?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/deepak1556",
      "html_url": "https://github.com/deepak1556",
      "followers_url": "https://api.github.com/users/deepak1556/followers",
      "following_url": "https://api.github.com/users/deepak1556/following{/other_user}",
      "gists_url": "https://api.github.com/users/deepak1556/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/deepak1556/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/deepak1556/subscriptions",
      "organizations_url": "https://api.github.com/users/deepak1556/orgs",
      "repos_url": "https://api.github.com/users/deepak1556/repos",
      "events_url": "https://api.github.com/users/deepak1556/events{/privacy}",
      "received_events_url": "https://api.github.com/users/deepak1556/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-18T19:13:25Z",
    "updated_at": "2015-12-18T19:13:25Z",
    "body": "Was unable to reproduce the crash with the sample code, could you provide a minimal app example that demonstrates the crash, might be cause by other parts of the app. Thanks!\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/165907615",
    "html_url": "https://github.com/electron/electron/issues/3861#issuecomment-165907615",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/3861",
    "id": 165907615,
    "user": {
      "login": "OlsonDev",
      "id": 308072,
      "avatar_url": "https://avatars2.githubusercontent.com/u/308072?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/OlsonDev",
      "html_url": "https://github.com/OlsonDev",
      "followers_url": "https://api.github.com/users/OlsonDev/followers",
      "following_url": "https://api.github.com/users/OlsonDev/following{/other_user}",
      "gists_url": "https://api.github.com/users/OlsonDev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/OlsonDev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/OlsonDev/subscriptions",
      "organizations_url": "https://api.github.com/users/OlsonDev/orgs",
      "repos_url": "https://api.github.com/users/OlsonDev/repos",
      "events_url": "https://api.github.com/users/OlsonDev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/OlsonDev/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-18T22:04:10Z",
    "updated_at": "2015-12-18T22:04:10Z",
    "body": "I put together a minimal app example. You click a button, it opens another window and tells it to navigate to `http://www.google.com/?1`, then `?2`, etc. It gets instruction to load the next URL via `ipc-message` (preload script). If I comment out the `onHeadersReceived` code, it runs indefinitely. Otherwise, it eventually crashes (~`?13` or so). If I load the next URL via `setInterval` instead of in response to an `ipc-message`, it doesn't crash.\n\nNote: Expects `CrashMe.zip/electron/win32-x64/electron.exe` to be provided by you.\n[CrashMe.zip](https://github.com/atom/electron/files/67229/CrashMe.zip)\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/166216404",
    "html_url": "https://github.com/electron/electron/issues/3861#issuecomment-166216404",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/3861",
    "id": 166216404,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2015-12-21T06:47:42Z",
    "updated_at": "2015-12-21T06:47:42Z",
    "body": "I can reproduce this crash on OS X, crash stack trace:\n\n```\nThread 11 Crashed:: Chrome_IOThread\n0   libnet.dylib                    0x000000010aaf3a14 net::URLRequest::OnCallToDelegateComplete() + 4\n1   libnet.dylib                    0x000000010aafe4dc net::URLRequestHttpJob::SaveCookiesAndNotifyHeadersComplete(int) + 28\n2   com.github.electron.framework   0x0000000104831ed6 base::Callback<void (int)>::Run(int const&) const + 70 (callback.h:396)\n3   com.github.electron.framework   0x0000000104800d2b void atom::(anonymous namespace)::OnListenerResultInIO<scoped_refptr<net::HttpResponseHeaders>*>(base::Callback<void (int)> const&, scoped_refptr<net::HttpResponseHeaders>*, scoped_ptr<base::DictionaryValue, base::DefaultDeleter<base::DictionaryValue> >) + 267 (atom_network_delegate.cc:198)\n4   com.github.electron.framework   0x000000010480a8cf base::internal::RunnableAdapter<void (*)(base::Callback<void (int)> const&, scoped_refptr<net::HttpResponseHeaders>*, scoped_ptr<base::DictionaryValue, base::DefaultDeleter<base::DictionaryValue> >)>::Run(base::Callback<void (int)> const&, scoped_refptr<net::HttpResponseHeaders>* const&, scoped_ptr<base::DictionaryValue, base::DefaultDeleter<base::DictionaryValue> >) + 111 (bind_internal.h:157)\n5   com.github.electron.framework   0x000000010480a841 base::internal::InvokeHelper<false, void, base::internal::RunnableAdapter<void (*)(base::Callback<void (int)> const&, scoped_refptr<net::HttpResponseHeaders>*, scoped_ptr<base::DictionaryValue, base::DefaultDeleter<base::DictionaryValue> >)>, base::internal::TypeList<base::Callback<void (int)> const&, scoped_refptr<net::HttpResponseHeaders>* const&, scoped_ptr<base::DictionaryValue, base::DefaultDeleter<base::DictionaryValue> > > >::MakeItSo(base::internal::RunnableAdapter<void (*)(base::Callback<void (int)> const&, scoped_refptr<net::HttpResponseHeaders>*, scoped_ptr<base::DictionaryValue, base::DefaultDeleter<base::DictionaryValue> >)>, base::Callback<void (int)> const&, scoped_refptr<net::HttpResponseHeaders>* const&, scoped_ptr<base::DictionaryValue, base::DefaultDeleter<base::DictionaryValue> >) + 97 (bind_internal.h:293)\n6   com.github.electron.framework   0x000000010480a7c5 base::internal::Invoker<base::IndexSequence<0ul, 1ul, 2ul>, base::internal::BindState<base::internal::RunnableAdapter<void (*)(base::Callback<void (int)> const&, scoped_refptr<net::HttpResponseHeaders>*, scoped_ptr<base::DictionaryValue, base::DefaultDeleter<base::DictionaryValue> >)>, void (base::Callback<void (int)> const&, scoped_refptr<net::HttpResponseHeaders>*, scoped_ptr<base::DictionaryValue, base::DefaultDeleter<base::DictionaryValue> >), base::internal::TypeList<base::Callback<void (int)>, scoped_refptr<net::HttpResponseHeaders>*, base::internal::PassedWrapper<scoped_ptr<base::DictionaryValue, base::DefaultDeleter<base::DictionaryValue> > > > >, base::internal::TypeList<base::internal::UnwrapTraits<base::Callback<void (int)> >, base::internal::UnwrapTraits<scoped_refptr<net::HttpResponseHeaders>*>, base::internal::UnwrapTraits<base::internal::PassedWrapper<scoped_ptr<base::DictionaryValue, base::DefaultDeleter<base::DictionaryValue> > > > >, base::internal::InvokeHelper<false, void, base::internal::RunnableAdapter<void (*)(base::Callback<void (int)> const&, scoped_refptr<net::HttpResponseHeaders>*, scoped_ptr<base::DictionaryValue, base::DefaultDeleter<base::DictionaryValue> >)>, base::internal::TypeList<base::Callback<void (int)> const&, scoped_refptr<net::HttpResponseHeaders>* const&, scoped_ptr<base::DictionaryValue, base::DefaultDeleter<base::DictionaryValue> > > >, void ()>::Run(base::internal::BindStateBase*) + 149 (bind_internal.h:343)\n7   libbase.dylib                   0x00000001069d61ca base::debug::TaskAnnotator::RunTask(char const*, base::PendingTask const&) + 202\n8   libbase.dylib                   0x00000001069ffe99 base::MessageLoop::RunTask(base::PendingTask const&) + 489\n9   libbase.dylib                   0x0000000106a00436 base::MessageLoop::DoWork() + 438\n10  libbase.dylib                   0x00000001069c7341 base::MessagePumpLibevent::Run(base::MessagePump::Delegate*) + 465\n11  libbase.dylib                   0x0000000106a167f3 base::RunLoop::Run() + 99\n12  libbase.dylib                   0x00000001069ff5cd base::MessageLoop::Run() + 29\n13  libcontent.dylib                0x00000001080ea268 content::BrowserThreadImpl::IOThreadRun(base::MessageLoop*) + 24\n14  libcontent.dylib                0x00000001080ea377 content::BrowserThreadImpl::Run(base::MessageLoop*) + 167\n15  libbase.dylib                   0x0000000106a411c8 base::Thread::ThreadMain() + 248\n16  libbase.dylib                   0x0000000106a3b0ec 0x1069c5000 + 483564\n17  libsystem_pthread.dylib         0x00007fff99dacc13 _pthread_body + 131\n18  libsystem_pthread.dylib         0x00007fff99dacb90 _pthread_start + 168\n19  libsystem_pthread.dylib         0x00007fff99daa375 thread_start + 13\n```\n"
  }
]