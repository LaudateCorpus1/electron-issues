[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/234213365",
    "html_url": "https://github.com/electron/electron/issues/6551#issuecomment-234213365",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/6551",
    "id": 234213365,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2016-07-21T10:14:34Z",
    "updated_at": "2016-07-21T10:14:34Z",
    "body": "This behavior is expected from low-level API's side. For example someone writing a script to automatically download files would not expect the file to be saved other than the specified place. And for some kind of applications the developer may actually want to show a warning dialog, instead of changing the filename implicitly.\n\nSo if you want to have a different behavior, you should implement the logic in your own app.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/234214639",
    "html_url": "https://github.com/electron/electron/issues/6551#issuecomment-234214639",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/6551",
    "id": 234214639,
    "user": {
      "login": "jwheare",
      "id": 49224,
      "avatar_url": "https://avatars0.githubusercontent.com/u/49224?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jwheare",
      "html_url": "https://github.com/jwheare",
      "followers_url": "https://api.github.com/users/jwheare/followers",
      "following_url": "https://api.github.com/users/jwheare/following{/other_user}",
      "gists_url": "https://api.github.com/users/jwheare/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jwheare/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jwheare/subscriptions",
      "organizations_url": "https://api.github.com/users/jwheare/orgs",
      "repos_url": "https://api.github.com/users/jwheare/repos",
      "events_url": "https://api.github.com/users/jwheare/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jwheare/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-21T10:20:45Z",
    "updated_at": "2016-07-21T10:20:45Z",
    "body": "I'm not suggesting the existing behaviour should go away, but I think preventing data loss is a general enough concern that there should at least be an option built into electron that offers protection from it.\n\nBut I respect your decision, especially given the lack of a PR or existing module that implements this independently.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/234215754",
    "html_url": "https://github.com/electron/electron/issues/6551#issuecomment-234215754",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/6551",
    "id": 234215754,
    "user": {
      "login": "sindresorhus",
      "id": 170270,
      "avatar_url": "https://avatars2.githubusercontent.com/u/170270?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sindresorhus",
      "html_url": "https://github.com/sindresorhus",
      "followers_url": "https://api.github.com/users/sindresorhus/followers",
      "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
      "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
      "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
      "repos_url": "https://api.github.com/users/sindresorhus/repos",
      "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-21T10:26:06Z",
    "updated_at": "2016-07-21T10:27:18Z",
    "body": "@zcbenz Defaulting to the unexpected (data loss) is never a good thing... I think Electron should do the right thing by default and instead let the user set an option to overwrite if they know what they're doing. Even I didn't realize it didn't behave like Chrome and actually silently overwrite files. At the very least improve the documentation.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/234216699",
    "html_url": "https://github.com/electron/electron/issues/6551#issuecomment-234216699",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/6551",
    "id": 234216699,
    "user": {
      "login": "MarshallOfSound",
      "id": 6634592,
      "avatar_url": "https://avatars0.githubusercontent.com/u/6634592?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarshallOfSound",
      "html_url": "https://github.com/MarshallOfSound",
      "followers_url": "https://api.github.com/users/MarshallOfSound/followers",
      "following_url": "https://api.github.com/users/MarshallOfSound/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarshallOfSound/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarshallOfSound/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarshallOfSound/subscriptions",
      "organizations_url": "https://api.github.com/users/MarshallOfSound/orgs",
      "repos_url": "https://api.github.com/users/MarshallOfSound/repos",
      "events_url": "https://api.github.com/users/MarshallOfSound/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarshallOfSound/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-21T10:30:54Z",
    "updated_at": "2016-07-21T10:30:54Z",
    "body": "Just voicing the same opinion as @sindresorhus although this should be an option and preferably it should be disabled by default.  The `download-item` API should be modified to add a `getSavePath()` method and the `done` event should be modified to add a `path` parameter to the event object. \n\nDoes that sounds like a fair enough change @zcbenz ?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/234218754",
    "html_url": "https://github.com/electron/electron/issues/6551#issuecomment-234218754",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/6551",
    "id": 234218754,
    "user": {
      "login": "enlight",
      "id": 233003,
      "avatar_url": "https://avatars3.githubusercontent.com/u/233003?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/enlight",
      "html_url": "https://github.com/enlight",
      "followers_url": "https://api.github.com/users/enlight/followers",
      "following_url": "https://api.github.com/users/enlight/following{/other_user}",
      "gists_url": "https://api.github.com/users/enlight/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/enlight/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/enlight/subscriptions",
      "organizations_url": "https://api.github.com/users/enlight/orgs",
      "repos_url": "https://api.github.com/users/enlight/repos",
      "events_url": "https://api.github.com/users/enlight/events{/privacy}",
      "received_events_url": "https://api.github.com/users/enlight/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-21T10:41:56Z",
    "updated_at": "2016-07-21T10:41:56Z",
    "body": "I agree with @zcbenz on this one, Electron is a framework, not a browser, it should provide a minimal API to allow developers to implement the desired behavior in their apps. Bloating the core API with options that can be just as easily handled by a non-core module doesn't seem like a good idea to me. I'm all for improving the docs though.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/234220205",
    "html_url": "https://github.com/electron/electron/issues/6551#issuecomment-234220205",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/6551",
    "id": 234220205,
    "user": {
      "login": "MarshallOfSound",
      "id": 6634592,
      "avatar_url": "https://avatars0.githubusercontent.com/u/6634592?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarshallOfSound",
      "html_url": "https://github.com/MarshallOfSound",
      "followers_url": "https://api.github.com/users/MarshallOfSound/followers",
      "following_url": "https://api.github.com/users/MarshallOfSound/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarshallOfSound/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarshallOfSound/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarshallOfSound/subscriptions",
      "organizations_url": "https://api.github.com/users/MarshallOfSound/orgs",
      "repos_url": "https://api.github.com/users/MarshallOfSound/repos",
      "events_url": "https://api.github.com/users/MarshallOfSound/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarshallOfSound/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-21T10:49:35Z",
    "updated_at": "2016-07-21T10:49:35Z",
    "body": "Ah, I think I misread the original question.  Calling `setPath` as an API I agree should just overwrite the file and the user should use `fs.exists` or similar to provide the user with warnings.\n\nHowever I do think adding a `getPath()` method would assist with this.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/234670267",
    "html_url": "https://github.com/electron/electron/issues/6551#issuecomment-234670267",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/6551",
    "id": 234670267,
    "user": {
      "login": "sindresorhus",
      "id": 170270,
      "avatar_url": "https://avatars2.githubusercontent.com/u/170270?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sindresorhus",
      "html_url": "https://github.com/sindresorhus",
      "followers_url": "https://api.github.com/users/sindresorhus/followers",
      "following_url": "https://api.github.com/users/sindresorhus/following{/other_user}",
      "gists_url": "https://api.github.com/users/sindresorhus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sindresorhus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sindresorhus/subscriptions",
      "organizations_url": "https://api.github.com/users/sindresorhus/orgs",
      "repos_url": "https://api.github.com/users/sindresorhus/repos",
      "events_url": "https://api.github.com/users/sindresorhus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sindresorhus/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-22T22:15:40Z",
    "updated_at": "2016-07-22T22:15:40Z",
    "body": "@enlight I would usually agree, but when it comes to potential data loss I tend to err on the side of helping devs do the right thing. I have a strong feeling, even with docs, devs will miss it and cause data loss for users of their apps...\n\nBut yeah, improved docs are better than nothing.\n\nI fixed it in [`electron-dl`](https://github.com/sindresorhus/electron-dl) with the [`unused-filename`](https://github.com/sindresorhus/unused-filename) module. Maybe worth showing a quick example in the docs to make it easy for the user? Something like:\n\n``` js\nconst filepath = unusedFilename.sync(path.join(app.getPath('downloads'), item.getFilename()));\nitem.setSavePath(filepath);\n```\n"
  }
]