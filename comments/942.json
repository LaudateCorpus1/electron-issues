[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/68012785",
    "html_url": "https://github.com/electron/electron/pull/942#issuecomment-68012785",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/942",
    "id": 68012785,
    "user": {
      "login": "drikin",
      "id": 51972,
      "avatar_url": "https://avatars3.githubusercontent.com/u/51972?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/drikin",
      "html_url": "https://github.com/drikin",
      "followers_url": "https://api.github.com/users/drikin/followers",
      "following_url": "https://api.github.com/users/drikin/following{/other_user}",
      "gists_url": "https://api.github.com/users/drikin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/drikin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/drikin/subscriptions",
      "organizations_url": "https://api.github.com/users/drikin/orgs",
      "repos_url": "https://api.github.com/users/drikin/repos",
      "events_url": "https://api.github.com/users/drikin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/drikin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-24T00:09:52Z",
    "updated_at": "2014-12-24T00:09:52Z",
    "body": "Is it also possible to enable spellcheck inside webview tag content?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/68074516",
    "html_url": "https://github.com/electron/electron/pull/942#issuecomment-68074516",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/942",
    "id": 68074516,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2014-12-24T21:12:55Z",
    "updated_at": "2014-12-24T21:12:55Z",
    "body": "> Is it also possible to enable spellcheck inside webview tag content?\n\nYou can enable it in the [preload](https://github.com/atom/atom-shell/blob/master/docs/api/web-view-tag.md#preload) script of `<webview>`.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/68168737",
    "html_url": "https://github.com/electron/electron/pull/942#issuecomment-68168737",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/942",
    "id": 68168737,
    "user": {
      "login": "drikin",
      "id": 51972,
      "avatar_url": "https://avatars3.githubusercontent.com/u/51972?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/drikin",
      "html_url": "https://github.com/drikin",
      "followers_url": "https://api.github.com/users/drikin/followers",
      "following_url": "https://api.github.com/users/drikin/following{/other_user}",
      "gists_url": "https://api.github.com/users/drikin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/drikin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/drikin/subscriptions",
      "organizations_url": "https://api.github.com/users/drikin/orgs",
      "repos_url": "https://api.github.com/users/drikin/repos",
      "events_url": "https://api.github.com/users/drikin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/drikin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-27T04:45:01Z",
    "updated_at": "2014-12-27T04:45:01Z",
    "body": "Thanks @zcbenz \nIt worked well even if I was still struggling to do spell check itself. :-p\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/117512459",
    "html_url": "https://github.com/electron/electron/pull/942#issuecomment-117512459",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/942",
    "id": 117512459,
    "user": {
      "login": "francoisMinette",
      "id": 9860051,
      "avatar_url": "https://avatars0.githubusercontent.com/u/9860051?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/francoisMinette",
      "html_url": "https://github.com/francoisMinette",
      "followers_url": "https://api.github.com/users/francoisMinette/followers",
      "following_url": "https://api.github.com/users/francoisMinette/following{/other_user}",
      "gists_url": "https://api.github.com/users/francoisMinette/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/francoisMinette/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/francoisMinette/subscriptions",
      "organizations_url": "https://api.github.com/users/francoisMinette/orgs",
      "repos_url": "https://api.github.com/users/francoisMinette/repos",
      "events_url": "https://api.github.com/users/francoisMinette/events{/privacy}",
      "received_events_url": "https://api.github.com/users/francoisMinette/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-01T07:42:06Z",
    "updated_at": "2015-07-02T11:34:43Z",
    "body": "Hi @zcbenz and @drikin \n\nI don't manage to get this spellchecker working, even after reading the documentation about it and trying to understand what is a provider. Maybe one of you can explain with the simple example below. Also, I precise that am new to electron.\n\nFor the example I am simply using https://github.com/atom/electron/blob/master/docs/tutorial/quick-start.md with an input element in index.html file.\nThing is, I don't understand where to insert this code https://github.com/atom/electron/blob/master/docs/api/web-frame.md#webframesetspellcheckproviderlanguage-autocorrectword-provider\n\nIf I add it to main.js then when I try to run this electron app I will have : Error: Cannot find module 'web-frame'\nBut when I try to npm install it, it states that there is no such module.\n\nBeside this, on the renderer, do I have to make a call of this spellCheck function and changed the result accordingly to the returned value ?\n\nAs you can see, I obviously lack of knowledge about electron and web application coding.\nBy any chance, someone could lead me to more documentation about what is a provider / how it is supposed to be used in such case please ?\n\nEDIT : \n\nI was actually using this code well, since if I log the text in the console it output the text as it should. Problem is this line return !(require('spellchecker').isMisspelled(text)); which deals with spellchecker module crashes the total application with this message : \"inspected target disconnected. Once it reloads we will attach to it automatically.\"\n\nI am running it on ubuntu 14.04 and I have hanspell installed.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/136222744",
    "html_url": "https://github.com/electron/electron/pull/942#issuecomment-136222744",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/942",
    "id": 136222744,
    "user": {
      "login": "aggregatejeff",
      "id": 6768600,
      "avatar_url": "https://avatars3.githubusercontent.com/u/6768600?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aggregatejeff",
      "html_url": "https://github.com/aggregatejeff",
      "followers_url": "https://api.github.com/users/aggregatejeff/followers",
      "following_url": "https://api.github.com/users/aggregatejeff/following{/other_user}",
      "gists_url": "https://api.github.com/users/aggregatejeff/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aggregatejeff/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aggregatejeff/subscriptions",
      "organizations_url": "https://api.github.com/users/aggregatejeff/orgs",
      "repos_url": "https://api.github.com/users/aggregatejeff/repos",
      "events_url": "https://api.github.com/users/aggregatejeff/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aggregatejeff/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-31T00:33:52Z",
    "updated_at": "2015-08-31T00:33:52Z",
    "body": "Looking through the code I don't see any way to pass back alternate spellings like so to populate a context menu. Am I missing something, or has that not been enabled?\n\n![screen shot 2015-08-30 at 5 32 51 pm](https://cloud.githubusercontent.com/assets/6768600/9570329/3e7bc742-4f3d-11e5-94b1-4f542837873d.png)\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/136223543",
    "html_url": "https://github.com/electron/electron/pull/942#issuecomment-136223543",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/942",
    "id": 136223543,
    "user": {
      "login": "paulcbetts",
      "id": 1396,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1396?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulcbetts",
      "html_url": "https://github.com/paulcbetts",
      "followers_url": "https://api.github.com/users/paulcbetts/followers",
      "following_url": "https://api.github.com/users/paulcbetts/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulcbetts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulcbetts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulcbetts/subscriptions",
      "organizations_url": "https://api.github.com/users/paulcbetts/orgs",
      "repos_url": "https://api.github.com/users/paulcbetts/repos",
      "events_url": "https://api.github.com/users/paulcbetts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulcbetts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-31T00:49:28Z",
    "updated_at": "2015-08-31T00:49:28Z",
    "body": "@aggregatejeff You have to do it yourself via the Context Menu API :(\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/136225793",
    "html_url": "https://github.com/electron/electron/pull/942#issuecomment-136225793",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/942",
    "id": 136225793,
    "user": {
      "login": "aggregatejeff",
      "id": 6768600,
      "avatar_url": "https://avatars3.githubusercontent.com/u/6768600?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aggregatejeff",
      "html_url": "https://github.com/aggregatejeff",
      "followers_url": "https://api.github.com/users/aggregatejeff/followers",
      "following_url": "https://api.github.com/users/aggregatejeff/following{/other_user}",
      "gists_url": "https://api.github.com/users/aggregatejeff/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aggregatejeff/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aggregatejeff/subscriptions",
      "organizations_url": "https://api.github.com/users/aggregatejeff/orgs",
      "repos_url": "https://api.github.com/users/aggregatejeff/repos",
      "events_url": "https://api.github.com/users/aggregatejeff/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aggregatejeff/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-31T00:58:37Z",
    "updated_at": "2015-08-31T00:58:37Z",
    "body": "Thanks @paulcbetts! At least a) I'll stop banging my head against a wall, and b) a work-around is possible.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/166228460",
    "html_url": "https://github.com/electron/electron/pull/942#issuecomment-166228460",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/942",
    "id": 166228460,
    "user": {
      "login": "nasht00",
      "id": 329834,
      "avatar_url": "https://avatars3.githubusercontent.com/u/329834?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nasht00",
      "html_url": "https://github.com/nasht00",
      "followers_url": "https://api.github.com/users/nasht00/followers",
      "following_url": "https://api.github.com/users/nasht00/following{/other_user}",
      "gists_url": "https://api.github.com/users/nasht00/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nasht00/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nasht00/subscriptions",
      "organizations_url": "https://api.github.com/users/nasht00/orgs",
      "repos_url": "https://api.github.com/users/nasht00/repos",
      "events_url": "https://api.github.com/users/nasht00/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nasht00/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-21T08:05:09Z",
    "updated_at": "2015-12-21T08:05:09Z",
    "body": "@francoisMinette how did you solve the `Error: Cannot find module 'web-frame'`? \n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/166298888",
    "html_url": "https://github.com/electron/electron/pull/942#issuecomment-166298888",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/942",
    "id": 166298888,
    "user": {
      "login": "francoisMinette",
      "id": 9860051,
      "avatar_url": "https://avatars0.githubusercontent.com/u/9860051?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/francoisMinette",
      "html_url": "https://github.com/francoisMinette",
      "followers_url": "https://api.github.com/users/francoisMinette/followers",
      "following_url": "https://api.github.com/users/francoisMinette/following{/other_user}",
      "gists_url": "https://api.github.com/users/francoisMinette/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/francoisMinette/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/francoisMinette/subscriptions",
      "organizations_url": "https://api.github.com/users/francoisMinette/orgs",
      "repos_url": "https://api.github.com/users/francoisMinette/repos",
      "events_url": "https://api.github.com/users/francoisMinette/events{/privacy}",
      "received_events_url": "https://api.github.com/users/francoisMinette/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-21T13:00:52Z",
    "updated_at": "2015-12-21T13:00:52Z",
    "body": "Hi, I did not solve it. I was learning about electron at the time, but I\nhad to change technology for some reason so I did not continue further.\nHope you will solve it.\nLe 21 déc. 2015 10:05 AM, \"Nathan Hazout\" notifications@github.com a\nécrit :\n\n> @francoisMinette https://github.com/francoisMinette how did you solve\n> the Error: Cannot find module 'web-frame'?\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/atom/electron/pull/942#issuecomment-166228460.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/169774604",
    "html_url": "https://github.com/electron/electron/pull/942#issuecomment-169774604",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/942",
    "id": 169774604,
    "user": {
      "login": "aggregatejeff",
      "id": 6768600,
      "avatar_url": "https://avatars3.githubusercontent.com/u/6768600?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aggregatejeff",
      "html_url": "https://github.com/aggregatejeff",
      "followers_url": "https://api.github.com/users/aggregatejeff/followers",
      "following_url": "https://api.github.com/users/aggregatejeff/following{/other_user}",
      "gists_url": "https://api.github.com/users/aggregatejeff/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aggregatejeff/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aggregatejeff/subscriptions",
      "organizations_url": "https://api.github.com/users/aggregatejeff/orgs",
      "repos_url": "https://api.github.com/users/aggregatejeff/repos",
      "events_url": "https://api.github.com/users/aggregatejeff/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aggregatejeff/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-07T19:01:46Z",
    "updated_at": "2016-01-08T08:06:49Z",
    "body": "@paulcbetts I finally got around to working on this, and have made some progress. I can get spellchecker to check a word, return suggestions, and populate the context menu with those suggestions. But I'm stumped on how to pass back to spellchecker the word that was clicked on, and then how to tell the webview what to replace.\n\nThe latter seems like it can be solved through <webview>.replace(text), but getting the word clicked upon doesn't seem very simple. Do you know if there's a way to do this through electron, or do I need to write some custom javascript?\n\nI'm happy to share my results when it works, and any help would be greatly appreciated.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/171445954",
    "html_url": "https://github.com/electron/electron/pull/942#issuecomment-171445954",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/942",
    "id": 171445954,
    "user": {
      "login": "aggregatejeff",
      "id": 6768600,
      "avatar_url": "https://avatars3.githubusercontent.com/u/6768600?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aggregatejeff",
      "html_url": "https://github.com/aggregatejeff",
      "followers_url": "https://api.github.com/users/aggregatejeff/followers",
      "following_url": "https://api.github.com/users/aggregatejeff/following{/other_user}",
      "gists_url": "https://api.github.com/users/aggregatejeff/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aggregatejeff/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aggregatejeff/subscriptions",
      "organizations_url": "https://api.github.com/users/aggregatejeff/orgs",
      "repos_url": "https://api.github.com/users/aggregatejeff/repos",
      "events_url": "https://api.github.com/users/aggregatejeff/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aggregatejeff/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-13T21:45:29Z",
    "updated_at": "2016-01-13T21:46:02Z",
    "body": "So... I build this. It took some digging, but here's what I found:\n1. spellCheck: function(text) is called with context when an item is clicked on, so there's no need to look through the whole dom for the item\n2. it's called a lot, basically whenever anyone does anything with text in rendered window\n\nI combined the scripts for spellchecking and context menu building into one file for ease of use:\n\n```\nchecker = require('spellchecker');\nvar remote = require('remote');\nvar webContents = remote.getCurrentWebContents();\nvar Menu = remote.require('menu');\nvar menu = new Menu();\n\n// set the initial context menu so that a context menu exists even before spellcheck is called\nvar template = [\n  {\n    label: 'Select All',\n    selector: 'selectAll:'\n  }\n];\nmenu = Menu.buildFromTemplate(template);\n\nwebFrame.setSpellCheckProvider(\"en-US\", false, {\n  spellCheck: function(text) {\n  // if spellcheck is being called, we're dealing with text, so add text functions to the context menu template\n    template.unshift(\n          {\n            label: 'Undo',\n            selector: 'undo:'\n          },\n          {\n            label: 'Redo',\n            selector: 'redo:'\n          },\n          {\n            type: 'separator'\n          },\n          {\n            label: 'Cut',\n            selector: 'cut:'\n          },\n          {\n            label: 'Copy',\n            selector: 'copy:'\n          },\n          {\n            label: 'Paste',\n            selector: 'paste:'\n          }\n    );\n\nswitch (text) {\n      //prevent checker from showing contractions as errors\n      case 'ain':\n      case 'couldn':\n      case 'didn':\n      case 'doesn':\n      case 'hadn':\n      case 'hasn':\n      case 'mightn':\n      case 'mustn':\n      case 'needn':\n      case 'oughtn':\n      case 'shan':\n      case 'shouldn':\n      case 'wasn':\n      case 'weren':\n      case 'wouldn':  \n        return checker.isMisspelled(text);\n      default:\n        if (checker.isMisspelled(text)) {          \n          //if this is a misspelling, get suggestions\n          var options = checker.getCorrectionsForMisspelling(text);\n          // get the number of suggestions if any\n          var numSuggestions = options.length ? options.length : 0;\n          // restrict it to 3 suggestions\n          var maxItems = numSuggestions > 3 ? 3 : numSuggestions;\n          var lastSuggestion = null;\n          // if there are suggestions\n          if (maxItems > 0) {\n            for (var i = maxItems-1; i >= 0; i--) {\n              var item = options[i];\n              template.unshift({ label: item, click: function(menuItem, browserWindow) \n                {\n                    webContents.replaceMisspelling(menuItem.label);\n                } \n              });\n            }\n            lastSuggestion = maxItems;\n            template.splice(lastSuggestion,0,{type: 'separator'});\n          } else {\n            // no suggestions found\n            template.unshift({ label: 'no suggestions', click: function() { } })\n            lastSuggestion = maxItems + 1;\n            template.splice(lastSuggestion,0,{type: 'separator'});\n          }\n        }\n        // build the new template for the context menu\n        menu = Menu.buildFromTemplate(template);\n        //reset the template object\n          template = [\n          {\n            label: 'Select All',\n            selector: 'selectAll:'\n          }\n        ];\n\n        return !checker.isMisspelled(text);\n    }\n  }\n});\n\n// on right click.....\nwindow.addEventListener('contextmenu', function(e){\n  // use current menu, probably the one that was built the last time spellcheck ran\n  menu.popup(remote.getCurrentWindow());\n  // build a new one with only select all in it\n  menu = Menu.buildFromTemplate(template);  \n}, false);\n```\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/172990441",
    "html_url": "https://github.com/electron/electron/pull/942#issuecomment-172990441",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/942",
    "id": 172990441,
    "user": {
      "login": "crimsoncor",
      "id": 2049057,
      "avatar_url": "https://avatars1.githubusercontent.com/u/2049057?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/crimsoncor",
      "html_url": "https://github.com/crimsoncor",
      "followers_url": "https://api.github.com/users/crimsoncor/followers",
      "following_url": "https://api.github.com/users/crimsoncor/following{/other_user}",
      "gists_url": "https://api.github.com/users/crimsoncor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/crimsoncor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/crimsoncor/subscriptions",
      "organizations_url": "https://api.github.com/users/crimsoncor/orgs",
      "repos_url": "https://api.github.com/users/crimsoncor/repos",
      "events_url": "https://api.github.com/users/crimsoncor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/crimsoncor/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-19T21:20:46Z",
    "updated_at": "2016-01-19T21:20:46Z",
    "body": "@aggregatejeff So I've got the set-up that you've outlined here working, but I've noticed an issue and I was wondering if you (or someone else) had come up with a workaround.\n\nWhen the spellcheck function runs, it builds out the menu. If you then right-click somewhere in the text area that is whitespace, it still shows the menu with the list of misspelled words, but selecting one won't trigger the replacement (since you did not click on top of the misspelled word). Conversely, if you right-click on a misspelled word twice, the replacement menu will be empty the second time. This all has to do with the mismatch between when the spell-checker runs and when the pop-up menu is shown. I'm not enough of a javascript expert to figure out how to reconcile those two states. Ideally it seems like you would want to query if there is currently a misspelled word under the mouse when creating the pop-up menu and build the context menu if there is.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/188434410",
    "html_url": "https://github.com/electron/electron/pull/942#issuecomment-188434410",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/942",
    "id": 188434410,
    "user": {
      "login": "ccnokes",
      "id": 1610343,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1610343?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ccnokes",
      "html_url": "https://github.com/ccnokes",
      "followers_url": "https://api.github.com/users/ccnokes/followers",
      "following_url": "https://api.github.com/users/ccnokes/following{/other_user}",
      "gists_url": "https://api.github.com/users/ccnokes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ccnokes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ccnokes/subscriptions",
      "organizations_url": "https://api.github.com/users/ccnokes/orgs",
      "repos_url": "https://api.github.com/users/ccnokes/repos",
      "events_url": "https://api.github.com/users/ccnokes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ccnokes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-24T20:06:11Z",
    "updated_at": "2016-02-24T20:06:11Z",
    "body": "For people brought here by google or elsewhere and looking for a simple solution to this, [electron-editor-context-menu](https://github.com/mixmaxhq/electron-editor-context-menu) fixes the bugs pointed out by @crimsoncor and is based on the gist provided by @aggregatejeff . It's been working for me thus far. \n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/190243699",
    "html_url": "https://github.com/electron/electron/pull/942#issuecomment-190243699",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/942",
    "id": 190243699,
    "user": {
      "login": "crimsoncor",
      "id": 2049057,
      "avatar_url": "https://avatars1.githubusercontent.com/u/2049057?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/crimsoncor",
      "html_url": "https://github.com/crimsoncor",
      "followers_url": "https://api.github.com/users/crimsoncor/followers",
      "following_url": "https://api.github.com/users/crimsoncor/following{/other_user}",
      "gists_url": "https://api.github.com/users/crimsoncor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/crimsoncor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/crimsoncor/subscriptions",
      "organizations_url": "https://api.github.com/users/crimsoncor/orgs",
      "repos_url": "https://api.github.com/users/crimsoncor/repos",
      "events_url": "https://api.github.com/users/crimsoncor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/crimsoncor/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-29T14:51:18Z",
    "updated_at": "2016-02-29T14:51:18Z",
    "body": "I fixed this issue by figuring out how to get the currently highlighted word on a right-click event and then generating the spell-check menu directly in the eventListener function. Meant to come back and add a note on that and it just slipped my mind. But it has been working great.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/206616946",
    "html_url": "https://github.com/electron/electron/pull/942#issuecomment-206616946",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/942",
    "id": 206616946,
    "user": {
      "login": "aggregatejeff",
      "id": 6768600,
      "avatar_url": "https://avatars3.githubusercontent.com/u/6768600?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aggregatejeff",
      "html_url": "https://github.com/aggregatejeff",
      "followers_url": "https://api.github.com/users/aggregatejeff/followers",
      "following_url": "https://api.github.com/users/aggregatejeff/following{/other_user}",
      "gists_url": "https://api.github.com/users/aggregatejeff/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aggregatejeff/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aggregatejeff/subscriptions",
      "organizations_url": "https://api.github.com/users/aggregatejeff/orgs",
      "repos_url": "https://api.github.com/users/aggregatejeff/repos",
      "events_url": "https://api.github.com/users/aggregatejeff/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aggregatejeff/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-06T23:20:20Z",
    "updated_at": "2016-04-06T23:20:20Z",
    "body": "And my apologies for not noticing the question, but as suggested, I continued to iterate and improved the above using getSelection(), and a few other tweaks.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/214747068",
    "html_url": "https://github.com/electron/electron/pull/942#issuecomment-214747068",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/942",
    "id": 214747068,
    "user": {
      "login": "adam-lynch",
      "id": 1427241,
      "avatar_url": "https://avatars2.githubusercontent.com/u/1427241?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adam-lynch",
      "html_url": "https://github.com/adam-lynch",
      "followers_url": "https://api.github.com/users/adam-lynch/followers",
      "following_url": "https://api.github.com/users/adam-lynch/following{/other_user}",
      "gists_url": "https://api.github.com/users/adam-lynch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adam-lynch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adam-lynch/subscriptions",
      "organizations_url": "https://api.github.com/users/adam-lynch/orgs",
      "repos_url": "https://api.github.com/users/adam-lynch/repos",
      "events_url": "https://api.github.com/users/adam-lynch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adam-lynch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-26T13:36:40Z",
    "updated_at": "2016-04-26T13:36:40Z",
    "body": "Is there any plans to improve the context menu stuff? Would be nice if we didn't have to implement that ourselves.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/264504727",
    "html_url": "https://github.com/electron/electron/pull/942#issuecomment-264504727",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/942",
    "id": 264504727,
    "user": {
      "login": "noahbenham",
      "id": 6981195,
      "avatar_url": "https://avatars3.githubusercontent.com/u/6981195?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/noahbenham",
      "html_url": "https://github.com/noahbenham",
      "followers_url": "https://api.github.com/users/noahbenham/followers",
      "following_url": "https://api.github.com/users/noahbenham/following{/other_user}",
      "gists_url": "https://api.github.com/users/noahbenham/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/noahbenham/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/noahbenham/subscriptions",
      "organizations_url": "https://api.github.com/users/noahbenham/orgs",
      "repos_url": "https://api.github.com/users/noahbenham/repos",
      "events_url": "https://api.github.com/users/noahbenham/events{/privacy}",
      "received_events_url": "https://api.github.com/users/noahbenham/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-02T17:00:43Z",
    "updated_at": "2016-12-02T17:00:43Z",
    "body": "It's very surprising this hasn't been implemented already. Any updates on native spell checking functionality without manually implementing context menu behavior?"
  }
]