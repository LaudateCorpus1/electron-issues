[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/287021341",
    "html_url": "https://github.com/electron/electron/pull/8923#issuecomment-287021341",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/8923",
    "id": 287021341,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2017-03-16T10:48:58Z",
    "updated_at": "2017-03-16T10:48:58Z",
    "body": ":+1:"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/287026546",
    "html_url": "https://github.com/electron/electron/pull/8923#issuecomment-287026546",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/8923",
    "id": 287026546,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2017-03-16T11:11:52Z",
    "updated_at": "2017-03-16T11:11:52Z",
    "body": "@deepak1556 I saw a crash on the CI machine, seems to be caused by electron/brightray#278: \r\n\r\n```\r\nApplication Specific Information:\r\nPerforming @selector(_close:) from sender _NSThemeCloseWidget 0x7fc7bd4a51f0\r\n\r\nThread 0 Crashed:: CrBrowserMain  Dispatch queue: com.apple.main-thread\r\n0   ???                           \t0x00007fc7bd7332b0 0 + 140495853662896\r\n1   libcontent.dylib              \t0x0000000111fafb03 content::RenderWidgetHostViewGuest::GetNativeView() const + 67\r\n2   libcontent.dylib              \t0x0000000112213a9a 0x111b7b000 + 6916762\r\n3   com.github.electron.framework \t0x000000010cd8fe32 brightray::InspectableWebContentsImpl::CloseDevTools() + 370 (inspectable_web_contents_impl.cc:308)\r\n4   com.github.electron.framework \t0x000000010cd96fd5 brightray::InspectableWebContentsImpl::CloseContents(content::WebContents*) + 37 (inspectable_web_contents_impl.cc:694)\r\n5   com.github.electron.framework \t0x000000010cd8eb15 brightray::InspectableWebContentsImpl::~InspectableWebContentsImpl() + 261 (inspectable_web_contents_impl.cc:239)\r\n6   com.github.electron.framework \t0x000000010cd8f0f5 brightray::InspectableWebContentsImpl::~InspectableWebContentsImpl() + 21 (inspectable_web_contents_impl.cc:241)\r\n7   com.github.electron.framework \t0x000000010cd8f1d9 brightray::InspectableWebContentsImpl::~InspectableWebContentsImpl() + 25 (inspectable_web_contents_impl.cc:237)\r\n8   com.github.electron.framework \t0x000000010cab06cf atom::CommonWebContentsDelegate::~CommonWebContentsDelegate() + 367 (memory:2783)\r\n9   com.github.electron.framework \t0x000000010ca0d78b atom::api::WebContents::~WebContents() + 683 (atom_api_web_contents.cc:420)\r\n10  com.github.electron.framework \t0x000000010ca0d865 atom::api::WebContents::~WebContents() + 21 (atom_api_web_contents.cc:420)\r\n11  com.github.electron.framework \t0x000000010ca0d969 atom::api::WebContents::~WebContents() + 25 (atom_api_web_contents.cc:406)\r\n12  com.github.electron.framework \t0x000000010cd4f917 mate::internal::Destroyable::Destroy(mate::Arguments*) + 71 (function_template.h:25)\r\n13  com.github.electron.framework \t0x000000010cd4fbd5 void base::internal::FunctorTraits<void (*)(mate::Arguments*), void>::Invoke<mate::Arguments*>(void (*)(mate::Arguments*), mate::Arguments*&&) + 37 (bind_internal.h:164)\r\n14  com.github.electron.framework \t0x000000010cd4fba0 void base::internal::InvokeHelper<false, void>::MakeItSo<void (* const&)(mate::Arguments*), mate::Arguments*>(void (* const&&&)(mate::Arguments*), mate::Arguments*&&) + 48 (bind_internal.h:285)\r\n15  com.github.electron.framework \t0x000000010cd4fb61 void base::internal::Invoker<base::internal::BindState<void (*)(mate::Arguments*)>, void (mate::Arguments*)>::RunImpl<void (* const&)(mate::Arguments*), std::__1::tuple<> const&>(void (* const&&&)(mate::Arguments*), std::__1::tuple<> const&&&, base::IndexSequence<>, mate::Arguments*&&) + 49 (bind_internal.h:361)\r\n16  com.github.electron.framework \t0x000000010cd4fae4 base::internal::Invoker<base::internal::BindState<void (*)(mate::Arguments*)>, void (mate::Arguments*)>::Run(base::internal::BindStateBase*, mate::Arguments*&&) + 68 (bind_internal.h:339)\r\n17  com.github.electron.framework \t0x000000010c934771 base::internal::RunMixin<base::Callback<void (mate::Arguments*), (base::internal::CopyMode)1, (base::internal::RepeatMode)1> >::Run(mate::Arguments*) const + 81 (callback.h:64)\r\n18  com.github.electron.framework \t0x000000010c934675 mate::internal::Invoker<mate::internal::IndicesHolder<0ul>, mate::Arguments*>::DispatchToCallback(base::Callback<void (mate::Arguments*), (base::internal::CopyMode)1, (base::internal::RepeatMode)1>) + 69 (function_template.h:202)\r\n19  com.github.electron.framework \t0x000000010c939e3d mate::internal::Dispatcher<void (mate::Arguments*)>::DispatchToCallback(v8::FunctionCallbackInfo<v8::Value> const&) + 157 (function_template.h:236)\r\n20  libv8.dylib                   \t0x000000010e890df5 0x10e88b000 + 24053\r\n21  libv8.dylib                   \t0x000000010e917668 0x10e88b000 + 575080\r\n22  libv8.dylib                   \t0x000000010e916bc1 0x10e88b000 + 572353\r\n23  ???                           \t0x000027adf55843a7 0 + 43628099027879\r\n24  ???                           \t0x000027adf5e4603f 0 + 43628108210239\r\n25  ???                           \t0x000027adf5608afa 0 + 43628099570426\r\n26  ???                           \t0x000027adf55f23f8 0 + 43628099478520\r\n27  ???                           \t0x000027adf5585cd5 0 + 43628099034325\r\n28  ???                           \t0x000027adf5e34613 0 + 43628108138003\r\n29  ???                           \t0x000027adf5585cd5 0 + 43628099034325\r\n30  ???                           \t0x000027adf5d42909 0 + 43628107147529\r\n31  ???                           \t0x000027adf5585cd5 0 + 43628099034325\r\n32  ???                           \t0x000027adf55f1ac3 0 + 43628099476163\r\n33  ???                           \t0x000027adf55b65c1 0 + 43628099233217\r\n34  libv8.dylib                   \t0x000000010ec5c3c5 0x10e88b000 + 4002757\r\n35  libv8.dylib                   \t0x000000010ec5c129 v8::internal::Execution::Call(v8::internal::Isolate*, v8::internal::Handle<v8::internal::Object>, v8::internal::Handle<v8::internal::Object>, int, v8::internal::Handle<v8::internal::Object>*) + 169\r\n36  libv8.dylib                   \t0x000000010e8afdfb v8::Function::Call(v8::Local<v8::Context>, v8::Local<v8::Value>, int, v8::Local<v8::Value>*) + 459\r\n37  libnode.dylib                 \t0x000000010e00d781 node::MakeCallback(node::Environment*, v8::Local<v8::Value>, v8::Local<v8::Function>, int, v8::Local<v8::Value>*) + 1393 (node.cc:1237)\r\n38  libnode.dylib                 \t0x000000010e00e3bb node::MakeCallback(v8::Isolate*, v8::Local<v8::Object>, v8::Local<v8::Function>, int, v8::Local<v8::Value>*) + 171 (node.cc:1360)\r\n39  libnode.dylib                 \t0x000000010e00e2d1 node::MakeCallback(v8::Isolate*, v8::Local<v8::Object>, v8::Local<v8::String>, int, v8::Local<v8::Value>*) + 257 (node.cc:1340)\r\n40  libnode.dylib                 \t0x000000010e00e149 node::MakeCallback(v8::Isolate*, v8::Local<v8::Object>, char const*, int, v8::Local<v8::Value>*) + 105 (node.cc:1326)\r\n41  com.github.electron.framework \t0x000000010cbe9a89 mate::internal::CallMethodWithArgs(v8::Isolate*, v8::Local<v8::Object>, char const*, std::__1::vector<v8::Local<v8::Value>, std::__1::allocator<v8::Local<v8::Value> > >*) + 121 (event_emitter_caller.cc:23)\r\n42  com.github.electron.framework \t0x000000010c931942 v8::Local<v8::Value> mate::EmitEvent<base::BasicStringPiece<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, v8::Local<v8::Object> >(v8::Isolate*, v8::Local<v8::Object>, base::BasicStringPiece<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > const&, v8::Local<v8::Object> const&) + 562 (event_emitter_caller.h:48)\r\n43  com.github.electron.framework \t0x000000010ca2684d bool mate::EventEmitter<atom::api::WebContents>::EmitWithEvent<>(base::BasicStringPiece<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > const&, v8::Local<v8::Object>) + 125 (event_emitter.h:98)\r\n44  com.github.electron.framework \t0x000000010ca267a8 bool mate::EventEmitter<atom::api::WebContents>::EmitWithSender<>(base::BasicStringPiece<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > const&, content::WebContents*, IPC::Message*) + 152 (event_emitter.h:84)\r\n45  com.github.electron.framework \t0x000000010ca0e894 bool mate::EventEmitter<atom::api::WebContents>::Emit<>(base::BasicStringPiece<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > const&) + 36 (event_emitter.h:71)\r\n46  com.github.electron.framework \t0x000000010ca13d22 atom::api::WebContents::WebContentsDestroyed() + 66 (atom_api_web_contents.cc:927)\r\n47  libcontent.dylib              \t0x00000001121f9971 content::WebContentsImpl::~WebContentsImpl() + 2465\r\n48  libcontent.dylib              \t0x00000001121fa22e content::WebContentsImpl::~WebContentsImpl() + 14\r\n49  com.github.electron.framework \t0x000000010cd8ee56 brightray::InspectableWebContentsImpl::~InspectableWebContentsImpl() + 1094 (memory:2783)\r\n50  com.github.electron.framework \t0x000000010cd8f0f5 brightray::InspectableWebContentsImpl::~InspectableWebContentsImpl() + 21 (inspectable_web_contents_impl.cc:241)\r\n51  com.github.electron.framework \t0x000000010cd8f1d9 brightray::InspectableWebContentsImpl::~InspectableWebContentsImpl() + 25 (inspectable_web_contents_impl.cc:237)\r\n52  com.github.electron.framework \t0x000000010cab1010 atom::CommonWebContentsDelegate::DestroyWebContents() + 160 (memory:2783)\r\n53  com.github.electron.framework \t0x000000010ca540ca atom::api::Window::OnWindowClosed() + 42 (atom_api_window.cc:177)\r\n54  com.github.electron.framework \t0x000000010cad2c6c atom::NativeWindow::NotifyWindowClosed() + 172 (native_window.cc:471)\r\n55  com.github.electron.framework \t0x000000010cadb40b -[AtomNSWindowDelegate windowWillClose:] + 43\r\n56  com.apple.CoreFoundation      \t0x00007fff9940ebbc __CFNOTIFICATIONCENTER_IS_CALLING_OUT_TO_AN_OBSERVER__ + 12\r\n57  com.apple.CoreFoundation      \t0x00007fff9940eb4f ___CFXRegistrationPost_block_invoke + 63\r\n58  com.apple.CoreFoundation      \t0x00007fff9940eac7 _CFXRegistrationPost + 407\r\n59  com.apple.CoreFoundation      \t0x00007fff9940e832 ___CFXNotificationPost_block_invoke + 50\r\n60  com.apple.CoreFoundation      \t0x00007fff993cb5e2 -[_CFXNotificationRegistrar find:object:observer:enumerator:] + 1922\r\n61  com.apple.CoreFoundation      \t0x00007fff993ca835 _CFXNotificationPost + 693\r\n62  com.apple.Foundation          \t0x00007fff9562117a -[NSNotificationCenter postNotificationName:object:userInfo:] + 66\r\n63  com.apple.AppKit              \t0x00007fff9cfda213 __18-[NSWindow _close]_block_invoke + 184\r\n64  com.apple.AppKit              \t0x00007fff9cfda115 -[NSWindow _close] + 374\r\n65  com.github.electron.framework \t0x000000010cae126b atom::NativeWindowMac::CloseImmediately() + 43 (native_window_mac.mm:856)\r\n66  com.github.electron.framework \t0x000000010cad5768 atom::NativeWindow::CloseContents(content::WebContents*) + 264 (native_window.cc:443)\r\n67  com.github.electron.framework \t0x000000010ca0e860 atom::api::WebContents::CloseContents(content::WebContents*) + 176 (atom_api_web_contents.cc:517)\r\n68  com.github.electron.framework \t0x000000010cad537c atom::NativeWindow::RequestToClosePage() + 412 (native_window.cc:422)\r\n69  com.github.electron.framework \t0x000000010cadb472 -[AtomNSWindowDelegate windowShouldClose:] + 50 (native_window_mac.mm:302)\r\n70  com.apple.AppKit              \t0x00007fff9d073e64 __19-[NSWindow __close]_block_invoke + 130\r\n71  com.apple.AppKit              \t0x00007fff9d073dd5 -[NSWindow __close] + 312\r\n72  libsystem_trace.dylib         \t0x00007fff9449107a _os_activity_initiate + 75\r\n73  com.apple.AppKit              \t0x00007fff9cf8edbd -[NSApplication sendAction:to:from:] + 460\r\n74  com.apple.AppKit              \t0x00007fff9cfa0f12 -[NSControl sendAction:to:] + 86\r\n75  com.apple.AppKit              \t0x00007fff9cfa0e3c __26-[NSCell _sendActionFrom:]_block_invoke + 131\r\n76  libsystem_trace.dylib         \t0x00007fff9449107a _os_activity_initiate + 75\r\n77  com.apple.AppKit              \t0x00007fff9cfa0d99 -[NSCell _sendActionFrom:] + 144\r\n78  libsystem_trace.dylib         \t0x00007fff9449107a _os_activity_initiate + 75\r\n79  com.apple.AppKit              \t0x00007fff9d00342a -[NSButtonCell performClick:] + 968\r\n80  com.github.electron.framework \t0x000000010cae1213 atom::NativeWindowMac::Close() + 259 (native_window_mac.mm:852)\r\n81  com.github.electron.framework \t0x000000010ca55538 atom::api::Window::Close() + 56 (atom_api_window.cc:322)\r\n82  com.github.electron.framework \t0x000000010ca607a5 void base::internal::FunctorTraits<void (atom::api::Window::*)(), void>::Invoke<atom::api::Window*>(void (atom::api::Window::*)(), atom::api::Window*&&) + 133 (bind_internal.h:214)\r\n83  com.github.electron.framework \t0x000000010ca60714 void base::internal::InvokeHelper<false, void>::MakeItSo<void (atom::api::Window::* const&)(), atom::api::Window*>(void (atom::api::Window::* const&&&)(), atom::api::Window*&&) + 68 (bind_internal.h:285)\r\n84  com.github.electron.framework \t0x000000010ca606c1 void base::internal::Invoker<base::internal::BindState<void (atom::api::Window::*)()>, void (atom::api::Window*)>::RunImpl<void (atom::api::Window::* const&)(), std::__1::tuple<> const&>(void (atom::api::Window::* const&&&)(), std::__1::tuple<> const&&&, base::IndexSequence<>, atom::api::Window*&&) + 49 (bind_internal.h:361)\r\n85  com.github.electron.framework \t0x000000010ca60644 base::internal::Invoker<base::internal::BindState<void (atom::api::Window::*)()>, void (atom::api::Window*)>::Run(base::internal::BindStateBase*, atom::api::Window*&&) + 68 (bind_internal.h:339)\r\n86  com.github.electron.framework \t0x000000010ca60571 base::internal::RunMixin<base::Callback<void (atom::api::Window*), (base::internal::CopyMode)1, (base::internal::RepeatMode)1> >::Run(atom::api::Window*) const + 81 (callback.h:64)\r\n87  com.github.electron.framework \t0x000000010ca5ff95 mate::internal::Invoker<mate::internal::IndicesHolder<0ul>, atom::api::Window*>::DispatchToCallback(base::Callback<void (atom::api::Window*), (base::internal::CopyMode)1, (base::internal::RepeatMode)1>) + 69 (function_template.h:202)\r\n88  com.github.electron.framework \t0x000000010ca5fdbd mate::internal::Dispatcher<void (atom::api::Window*)>::DispatchToCallback(v8::FunctionCallbackInfo<v8::Value> const&) + 157 (function_template.h:236)\r\n89  libv8.dylib                   \t0x000000010e890df5 0x10e88b000 + 24053\r\n90  libv8.dylib                   \t0x000000010e917668 0x10e88b000 + 575080\r\n91  libv8.dylib                   \t0x000000010e916bc1 0x10e88b000 + 572353\r\n92  ???                           \t0x000027adf55843a7 0 + 43628099027879\r\n93  ???                           \t0x000027adf560915a 0 + 43628099572058\r\n94  ???                           \t0x000027adf55f23f8 0 + 43628099478520\r\n95  ???                           \t0x000027adf5608afa 0 + 43628099570426\r\n96  ???                           \t0x000027adf55f23f8 0 + 43628099478520\r\n97  ???                           \t0x000027adf5d421fe 0 + 43628107145726\r\n98  ???                           \t0x000027adf5585cd5 0 + 43628099034325\r\n99  ???                           \t0x000027adf5e0b9c9 0 + 43628107971017\r\n100 ???                           \t0x000027adf5d42617 0 + 43628107146775\r\n101 ???                           \t0x000027adf5585cd5 0 + 43628099034325\r\n102 ???                           \t0x000027adf55f1ac3 0 + 43628099476163\r\n103 ???                           \t0x000027adf55b65c1 0 + 43628099233217\r\n104 libv8.dylib                   \t0x000000010ec5c3c5 0x10e88b000 + 4002757\r\n105 libv8.dylib                   \t0x000000010ec5c129 v8::internal::Execution::Call(v8::internal::Isolate*, v8::internal::Handle<v8::internal::Object>, v8::internal::Handle<v8::internal::Object>, int, v8::internal::Handle<v8::internal::Object>*) + 169\r\n106 libv8.dylib                   \t0x000000010e8afdfb v8::Function::Call(v8::Local<v8::Context>, v8::Local<v8::Value>, int, v8::Local<v8::Value>*) + 459\r\n107 libnode.dylib                 \t0x000000010e00d781 node::MakeCallback(node::Environment*, v8::Local<v8::Value>, v8::Local<v8::Function>, int, v8::Local<v8::Value>*) + 1393 (node.cc:1237)\r\n108 libnode.dylib                 \t0x000000010e00e3bb node::MakeCallback(v8::Isolate*, v8::Local<v8::Object>, v8::Local<v8::Function>, int, v8::Local<v8::Value>*) + 171 (node.cc:1360)\r\n109 libnode.dylib                 \t0x000000010e00e2d1 node::MakeCallback(v8::Isolate*, v8::Local<v8::Object>, v8::Local<v8::String>, int, v8::Local<v8::Value>*) + 257 (node.cc:1340)\r\n110 libnode.dylib                 \t0x000000010e00e149 node::MakeCallback(v8::Isolate*, v8::Local<v8::Object>, char const*, int, v8::Local<v8::Value>*) + 105 (node.cc:1326)\r\n111 com.github.electron.framework \t0x000000010cbe9a89 mate::internal::CallMethodWithArgs(v8::Isolate*, v8::Local<v8::Object>, char const*, std::__1::vector<v8::Local<v8::Value>, std::__1::allocator<v8::Local<v8::Value> > >*) + 121 (event_emitter_caller.cc:23)\r\n112 com.github.electron.framework \t0x000000010ca497d6 v8::Local<v8::Value> mate::EmitEvent<base::BasicStringPiece<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, v8::Local<v8::Object>, base::ListValue>(v8::Isolate*, v8::Local<v8::Object>, base::BasicStringPiece<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > const&, v8::Local<v8::Object> const&, base::ListValue const&) + 598 (event_emitter_caller.h:48)\r\n113 com.github.electron.framework \t0x000000010ca494d1 bool mate::EventEmitter<atom::api::WebContents>::EmitWithEvent<base::ListValue>(base::BasicStringPiece<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > const&, v8::Local<v8::Object>, base::ListValue const&) + 145 (event_emitter.h:98)\r\n114 com.github.electron.framework \t0x000000010ca1e5f0 bool mate::EventEmitter<atom::api::WebContents>::EmitWithSender<base::ListValue>(base::BasicStringPiece<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > const&, content::WebContents*, IPC::Message*, base::ListValue const&) + 160 (event_emitter.h:84)\r\n115 com.github.electron.framework \t0x000000010ca13153 atom::api::WebContents::OnRendererMessageSync(std::__1::basic_string<unsigned short, base::string16_char_traits, std::__1::allocator<unsigned short> > const&, base::ListValue const&, IPC::Message*) + 131 (atom_api_web_contents.cc:1810)\r\n116 com.github.electron.framework \t0x000000010ca2cfe0 void base::DispatchToMethodImpl<atom::api::WebContents*, void (atom::api::WebContents::*)(std::__1::basic_string<unsigned short, base::string16_char_traits, std::__1::allocator<unsigned short> > const&, base::ListValue const&, IPC::Message*), std::__1::tuple<std::__1::basic_string<unsigned short, base::string16_char_traits, std::__1::allocator<unsigned short> >, base::ListValue>&, std::__1::tuple<IPC::Message&>, 0ul, 1ul, 0ul>(atom::api::WebContents* const&, void (atom::api::WebContents::*)(std::__1::basic_string<unsigned short, base::string16_char_traits, std::__1::allocator<unsigned short> > const&, base::ListValue const&, IPC::Message*), std::__1::tuple<std::__1::basic_string<unsigned short, base::string16_char_traits, std::__1::allocator<unsigned short> >, base::ListValue>&&&, std::__1::tuple<IPC::Message&>*, base::IndexSequence<0ul, 1ul>, base::IndexSequence<0ul>) + 224 (tuple.h:186)\r\n117 com.github.electron.framework \t0x000000010ca2cef8 void base::DispatchToMethod<atom::api::WebContents*, void (atom::api::WebContents::*)(std::__1::basic_string<unsigned short, base::string16_char_traits, std::__1::allocator<unsigned short> > const&, base::ListValue const&, IPC::Message*), std::__1::tuple<std::__1::basic_string<unsigned short, base::string16_char_traits, std::__1::allocator<unsigned short> >, base::ListValue>&, std::__1::tuple<IPC::Message&> >(atom::api::WebContents* const&, void (atom::api::WebContents::*)(std::__1::basic_string<unsigned short, base::string16_char_traits, std::__1::allocator<unsigned short> > const&, base::ListValue const&, IPC::Message*), std::__1::tuple<std::__1::basic_string<unsigned short, base::string16_char_traits, std::__1::allocator<unsigned short> >, base::ListValue>&&&, std::__1::tuple<IPC::Message&>*) + 104 (tuple.h:196)\r\n118 com.github.electron.framework \t0x000000010ca13046 bool IPC::MessageT<AtomViewHostMsg_Message_Sync_Meta, std::__1::tuple<std::__1::basic_string<unsigned short, base::string16_char_traits, std::__1::allocator<unsigned short> >, base::ListValue>, std::__1::tuple<std::__1::basic_string<unsigned short, base::string16_char_traits, std::__1::allocator<unsigned short> > > >::DispatchDelayReply<atom::api::WebContents, void, void (atom::api::WebContents::*)(std::__1::basic_string<unsigned short, base::string16_char_traits, std::__1::allocator<unsigned short> > const&, base::ListValue const&, IPC::Message*)>(IPC::Message const*, atom::api::WebContents*, void*, void (atom::api::WebContents::*)(std::__1::basic_string<unsigned short, base::string16_char_traits, std::__1::allocator<unsigned short> > const&, base::ListValue const&, IPC::Message*)) + 982 (ipc_message_templates.h:197)\r\n119 com.github.electron.framework \t0x000000010ca12675 atom::api::WebContents::OnMessageReceived(IPC::Message const&) + 517 (atom_api_web_contents.cc:895)\r\n120 libcontent.dylib              \t0x00000001121fa7a6 content::WebContentsImpl::OnMessageReceived(content::RenderViewHost*, content::RenderFrameHost*, IPC::Message const&) + 614\r\n121 libcontent.dylib              \t0x000000011211090a content::RenderViewHostImpl::OnMessageReceived(IPC::Message const&) + 58\r\n122 libcontent.dylib              \t0x0000000112116b03 content::RenderWidgetHostImpl::OnMessageReceived(IPC::Message const&) + 51\r\n123 libipc.dylib                  \t0x0000000113e2a5eb IPC::ChannelProxy::Context::OnDispatchMessage(IPC::Message const&) + 91\r\n124 libbase.dylib                 \t0x000000010f348591 base::debug::TaskAnnotator::RunTask(char const*, base::PendingTask*) + 225\r\n125 libbase.dylib                 \t0x000000010f3769e6 base::MessageLoop::RunTask(base::PendingTask*) + 390\r\n126 libbase.dylib                 \t0x000000010f376cbc base::MessageLoop::DeferOrRunPendingTask(base::PendingTask) + 44\r\n127 libbase.dylib                 \t0x000000010f377073 base::MessageLoop::DoWork() + 371\r\n128 libbase.dylib                 \t0x000000010f379c9d 0x10f339000 + 265373\r\n129 libbase.dylib                 \t0x000000010f368cea base::mac::CallWithEHFrame(void () block_pointer) + 10\r\n130 libbase.dylib                 \t0x000000010f379714 0x10f339000 + 263956\r\n131 com.apple.CoreFoundation      \t0x00007fff99418881 __CFRUNLOOP_IS_CALLING_OUT_TO_A_SOURCE0_PERFORM_FUNCTION__ + 17\r\n132 com.apple.CoreFoundation      \t0x00007fff993f7fbc __CFRunLoopDoSources0 + 556\r\n133 com.apple.CoreFoundation      \t0x00007fff993f74df __CFRunLoopRun + 927\r\n134 com.apple.CoreFoundation      \t0x00007fff993f6ed8 CFRunLoopRunSpecific + 296\r\n135 com.apple.HIToolbox           \t0x00007fff92f9b935 RunCurrentEventLoopInMode + 235\r\n136 com.apple.HIToolbox           \t0x00007fff92f9b76f ReceiveNextEventCommon + 432\r\n137 com.apple.HIToolbox           \t0x00007fff92f9b5af _BlockUntilNextEventMatchingListInModeWithFilter + 71\r\n138 com.apple.AppKit              \t0x00007fff9cd25df6 _DPSNextEvent + 1067\r\n139 com.apple.AppKit              \t0x00007fff9cd25226 -[NSApplication _nextEventMatchingEventMask:untilDate:inMode:dequeue:] + 454\r\n140 com.apple.AppKit              \t0x00007fff9cd19d80 -[NSApplication run] + 682\r\n141 libbase.dylib                 \t0x000000010f37a52e 0x10f339000 + 267566\r\n142 libbase.dylib                 \t0x000000010f379b5c 0x10f339000 + 265052\r\n143 libbase.dylib                 \t0x000000010f37674e base::MessageLoop::RunHandler() + 94\r\n144 libbase.dylib                 \t0x000000010f39e503 base::RunLoop::Run() + 115\r\n145 libcontent.dylib              \t0x0000000111ea0c0b content::BrowserMainLoop::MainMessageLoopRun() + 155\r\n146 libcontent.dylib              \t0x0000000111ea0a60 content::BrowserMainLoop::RunMainMessageLoopParts() + 64\r\n147 libcontent.dylib              \t0x0000000111ea3212 0x111b7b000 + 3310098\r\n148 libcontent.dylib              \t0x0000000111e9cb3c content::BrowserMain(content::MainFunctionParams const&) + 124\r\n149 libcontent.dylib              \t0x000000011252f70d 0x111b7b000 + 10176269\r\n150 libcontent.dylib              \t0x000000011252e926 content::ContentMain(content::ContentMainParams const&) + 54\r\n151 com.github.electron.framework \t0x000000010c8fdda8 AtomMain + 104 (atom_library_main.mm:24)\r\n152 com.github.electron           \t0x000000010c8f4eff main + 79 (atom_main.cc:142)\r\n153 libdyld.dylib                 \t0x00007fff9d90a5ad start + 1\r\n```"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/287595780",
    "html_url": "https://github.com/electron/electron/pull/8923#issuecomment-287595780",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/8923",
    "id": 287595780,
    "user": {
      "login": "deepak1556",
      "id": 964386,
      "avatar_url": "https://avatars2.githubusercontent.com/u/964386?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/deepak1556",
      "html_url": "https://github.com/deepak1556",
      "followers_url": "https://api.github.com/users/deepak1556/followers",
      "following_url": "https://api.github.com/users/deepak1556/following{/other_user}",
      "gists_url": "https://api.github.com/users/deepak1556/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/deepak1556/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/deepak1556/subscriptions",
      "organizations_url": "https://api.github.com/users/deepak1556/orgs",
      "repos_url": "https://api.github.com/users/deepak1556/repos",
      "events_url": "https://api.github.com/users/deepak1556/events{/privacy}",
      "received_events_url": "https://api.github.com/users/deepak1556/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-19T05:33:19Z",
    "updated_at": "2017-03-19T05:33:19Z",
    "body": "@zcbenz have fixed the crash, thanks!\r\n\r\nDepends on https://github.com/electron/brightray/pull/283"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/289669607",
    "html_url": "https://github.com/electron/electron/pull/8923#issuecomment-289669607",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/8923",
    "id": 289669607,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2017-03-28T05:45:43Z",
    "updated_at": "2017-03-28T05:45:43Z",
    "body": "👍 "
  }
]