[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/121353133",
    "html_url": "https://github.com/electron/electron/pull/2215#issuecomment-121353133",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2215",
    "id": 121353133,
    "user": {
      "login": "alexindigo",
      "id": 127063,
      "avatar_url": "https://avatars0.githubusercontent.com/u/127063?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexindigo",
      "html_url": "https://github.com/alexindigo",
      "followers_url": "https://api.github.com/users/alexindigo/followers",
      "following_url": "https://api.github.com/users/alexindigo/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexindigo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexindigo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexindigo/subscriptions",
      "organizations_url": "https://api.github.com/users/alexindigo/orgs",
      "repos_url": "https://api.github.com/users/alexindigo/repos",
      "events_url": "https://api.github.com/users/alexindigo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexindigo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-14T19:40:59Z",
    "updated_at": "2015-07-14T19:40:59Z",
    "body": "Thanks. :+1: \n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/123506911",
    "html_url": "https://github.com/electron/electron/pull/2215#issuecomment-123506911",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2215",
    "id": 123506911,
    "user": {
      "login": "paulcbetts",
      "id": 1396,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1396?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulcbetts",
      "html_url": "https://github.com/paulcbetts",
      "followers_url": "https://api.github.com/users/paulcbetts/followers",
      "following_url": "https://api.github.com/users/paulcbetts/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulcbetts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulcbetts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulcbetts/subscriptions",
      "organizations_url": "https://api.github.com/users/paulcbetts/orgs",
      "repos_url": "https://api.github.com/users/paulcbetts/repos",
      "events_url": "https://api.github.com/users/paulcbetts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulcbetts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-21T23:27:17Z",
    "updated_at": "2015-07-21T23:27:44Z",
    "body": "We should consider reverting this, this change actually is causing a ton of headaches:\n1. You have a webview with a preload script\n2. The preload script calls `require` to load some other code, which has a reasonable expectation that `global` will be defined\n3. `global` gets yanked because of #2215 \n4. Code gets called from webview => preload script and blows up\n\nIf you've got code that is reused between the browser process and preload script (like for logging, etc), you're kind of hosed because there is no `window` in browser, and no `global` in preload (of course, you can patch one back in, but it's a hack)\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/123511549",
    "html_url": "https://github.com/electron/electron/pull/2215#issuecomment-123511549",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2215",
    "id": 123511549,
    "user": {
      "login": "alexindigo",
      "id": 127063,
      "avatar_url": "https://avatars0.githubusercontent.com/u/127063?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexindigo",
      "html_url": "https://github.com/alexindigo",
      "followers_url": "https://api.github.com/users/alexindigo/followers",
      "following_url": "https://api.github.com/users/alexindigo/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexindigo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexindigo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexindigo/subscriptions",
      "organizations_url": "https://api.github.com/users/alexindigo/orgs",
      "repos_url": "https://api.github.com/users/alexindigo/repos",
      "events_url": "https://api.github.com/users/alexindigo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexindigo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-21T23:55:14Z",
    "updated_at": "2015-07-21T23:55:14Z",
    "body": "Should preload script expect nodejs things to work if node-integration is disabled?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/123522521",
    "html_url": "https://github.com/electron/electron/pull/2215#issuecomment-123522521",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2215",
    "id": 123522521,
    "user": {
      "login": "paulcbetts",
      "id": 1396,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1396?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulcbetts",
      "html_url": "https://github.com/paulcbetts",
      "followers_url": "https://api.github.com/users/paulcbetts/followers",
      "following_url": "https://api.github.com/users/paulcbetts/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulcbetts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulcbetts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulcbetts/subscriptions",
      "organizations_url": "https://api.github.com/users/paulcbetts/orgs",
      "repos_url": "https://api.github.com/users/paulcbetts/repos",
      "events_url": "https://api.github.com/users/paulcbetts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulcbetts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-22T01:07:57Z",
    "updated_at": "2015-07-22T01:08:11Z",
    "body": "> Should preload script expect nodejs things to work if node-integration is disabled?\n\nYes, that is the main reason that we have preload scripts\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/123524201",
    "html_url": "https://github.com/electron/electron/pull/2215#issuecomment-123524201",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2215",
    "id": 123524201,
    "user": {
      "login": "alexindigo",
      "id": 127063,
      "avatar_url": "https://avatars0.githubusercontent.com/u/127063?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexindigo",
      "html_url": "https://github.com/alexindigo",
      "followers_url": "https://api.github.com/users/alexindigo/followers",
      "following_url": "https://api.github.com/users/alexindigo/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexindigo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexindigo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexindigo/subscriptions",
      "organizations_url": "https://api.github.com/users/alexindigo/orgs",
      "repos_url": "https://api.github.com/users/alexindigo/repos",
      "events_url": "https://api.github.com/users/alexindigo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexindigo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-22T01:14:26Z",
    "updated_at": "2015-07-22T01:14:26Z",
    "body": "Ok, and it's executed before things get cleaned up, so they don't get mixed with guest javascript, right?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/123524564",
    "html_url": "https://github.com/electron/electron/pull/2215#issuecomment-123524564",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2215",
    "id": 123524564,
    "user": {
      "login": "paulcbetts",
      "id": 1396,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1396?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulcbetts",
      "html_url": "https://github.com/paulcbetts",
      "followers_url": "https://api.github.com/users/paulcbetts/followers",
      "following_url": "https://api.github.com/users/paulcbetts/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulcbetts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulcbetts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulcbetts/subscriptions",
      "organizations_url": "https://api.github.com/users/paulcbetts/orgs",
      "repos_url": "https://api.github.com/users/paulcbetts/repos",
      "events_url": "https://api.github.com/users/paulcbetts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulcbetts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-22T01:18:37Z",
    "updated_at": "2015-07-22T01:18:37Z",
    "body": "@alexindigo Exactly, so:\n1. Preload script runs, includes everything it needs\n2. node.js constants get removed (require, process, etc)\n3. Page load happens\n\nHowever, you can define objects that will end up in the page's global scope. If that page calls a method that uses `global`, we die. This is true of other node.js constants too (especially `process`), but `global` is one that bites particularly hard because in practice, most node.js libs end up grabbing references to things they need during `require`\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/123526734",
    "html_url": "https://github.com/electron/electron/pull/2215#issuecomment-123526734",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2215",
    "id": 123526734,
    "user": {
      "login": "alexindigo",
      "id": 127063,
      "avatar_url": "https://avatars0.githubusercontent.com/u/127063?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexindigo",
      "html_url": "https://github.com/alexindigo",
      "followers_url": "https://api.github.com/users/alexindigo/followers",
      "following_url": "https://api.github.com/users/alexindigo/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexindigo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexindigo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexindigo/subscriptions",
      "organizations_url": "https://api.github.com/users/alexindigo/orgs",
      "repos_url": "https://api.github.com/users/alexindigo/repos",
      "events_url": "https://api.github.com/users/alexindigo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexindigo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-22T01:40:20Z",
    "updated_at": "2015-07-22T01:40:20Z",
    "body": "Sounds like a leak to my ears. I mean we have webview with disabled node-integrations for a reason – third-party content, we can't trust. Allowing privileged modules to expose themselves like that is dangerous.\n\nAs fast solution I'd see something like a flag `keep-global` along with `node-integration`, or `cleanup-global` (`pretending-browser`).\n\nAlthough it feels right to investigate (brainstorm) other solutions for community benefits.\n\nFor example, `preload.js` populate `exports` object with stuff it wants to expose to the guest content,\nand when guest content is loaded, reset script would copy stuff from `exports` to the `window` object.\n\nPS. When I was hacking around, I found it was somewhat annoying that reset script being executed within same tick as guest javascript. Not sure if it's something easy/hard to fix, but seems like separating those two would allow for better user-land hacks. I mean running things `process.nextTick` and knowing it will be executed before first line of the guest javascript, but after reset script is done (therefore within \"browser\" environment).\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/123608888",
    "html_url": "https://github.com/electron/electron/pull/2215#issuecomment-123608888",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2215",
    "id": 123608888,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2015-07-22T08:04:44Z",
    "updated_at": "2015-07-22T08:04:44Z",
    "body": "Since we are also removing `process`, I think it is impossible to make all node modules happy anyway, so I would rather keep consistency in this situation, e.g. removing both `process` and `global`.\n"
  }
]