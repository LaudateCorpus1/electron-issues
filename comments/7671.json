[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/255017859",
    "html_url": "https://github.com/electron/electron/pull/7671#issuecomment-255017859",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7671",
    "id": 255017859,
    "user": {
      "login": "deepak1556",
      "id": 964386,
      "avatar_url": "https://avatars2.githubusercontent.com/u/964386?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/deepak1556",
      "html_url": "https://github.com/deepak1556",
      "followers_url": "https://api.github.com/users/deepak1556/followers",
      "following_url": "https://api.github.com/users/deepak1556/following{/other_user}",
      "gists_url": "https://api.github.com/users/deepak1556/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/deepak1556/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/deepak1556/subscriptions",
      "organizations_url": "https://api.github.com/users/deepak1556/orgs",
      "repos_url": "https://api.github.com/users/deepak1556/repos",
      "events_url": "https://api.github.com/users/deepak1556/events{/privacy}",
      "received_events_url": "https://api.github.com/users/deepak1556/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-20T06:11:22Z",
    "updated_at": "2016-10-20T06:11:22Z",
    "body": "There is no need for a separate api, standard schemes can be registered as secure by default (should be done on both browser and renderer). We have already disabled storage for non-standard schemes, so there is no use of making them secure.\n\nA bit unrelated to the PR, @zcbenz can we deprecate and remove `protocol.registerServiceWorkerSchemes` ? We can enable service workers for standard schemes by default, again doesn't make sense for non-standard schemes.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/255052523",
    "html_url": "https://github.com/electron/electron/pull/7671#issuecomment-255052523",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7671",
    "id": 255052523,
    "user": {
      "login": "pfrazee",
      "id": 1270099,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1270099?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pfrazee",
      "html_url": "https://github.com/pfrazee",
      "followers_url": "https://api.github.com/users/pfrazee/followers",
      "following_url": "https://api.github.com/users/pfrazee/following{/other_user}",
      "gists_url": "https://api.github.com/users/pfrazee/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pfrazee/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pfrazee/subscriptions",
      "organizations_url": "https://api.github.com/users/pfrazee/orgs",
      "repos_url": "https://api.github.com/users/pfrazee/repos",
      "events_url": "https://api.github.com/users/pfrazee/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pfrazee/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-20T09:14:04Z",
    "updated_at": "2016-10-20T09:14:04Z",
    "body": "Are you sure? Wouldn't a scheme that proxies to http, but https, be standard but not secure?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/255059534",
    "html_url": "https://github.com/electron/electron/pull/7671#issuecomment-255059534",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7671",
    "id": 255059534,
    "user": {
      "login": "deepak1556",
      "id": 964386,
      "avatar_url": "https://avatars2.githubusercontent.com/u/964386?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/deepak1556",
      "html_url": "https://github.com/deepak1556",
      "followers_url": "https://api.github.com/users/deepak1556/followers",
      "following_url": "https://api.github.com/users/deepak1556/following{/other_user}",
      "gists_url": "https://api.github.com/users/deepak1556/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/deepak1556/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/deepak1556/subscriptions",
      "organizations_url": "https://api.github.com/users/deepak1556/orgs",
      "repos_url": "https://api.github.com/users/deepak1556/repos",
      "events_url": "https://api.github.com/users/deepak1556/events{/privacy}",
      "received_events_url": "https://api.github.com/users/deepak1556/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-20T09:44:02Z",
    "updated_at": "2016-10-20T09:44:02Z",
    "body": "It doesn't matter whether the scheme is authenticated or not. `localhost, file` are secure schemes and origins. Custom schemes are declared by users and they consider it trust worthy https://www.w3.org/TR/secure-contexts/#is-origin-trustworthy . Is there a scenario where custom scheme cannot be treated secure ?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/255065924",
    "html_url": "https://github.com/electron/electron/pull/7671#issuecomment-255065924",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7671",
    "id": 255065924,
    "user": {
      "login": "pfrazee",
      "id": 1270099,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1270099?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pfrazee",
      "html_url": "https://github.com/pfrazee",
      "followers_url": "https://api.github.com/users/pfrazee/followers",
      "following_url": "https://api.github.com/users/pfrazee/following{/other_user}",
      "gists_url": "https://api.github.com/users/pfrazee/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pfrazee/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pfrazee/subscriptions",
      "organizations_url": "https://api.github.com/users/pfrazee/orgs",
      "repos_url": "https://api.github.com/users/pfrazee/repos",
      "events_url": "https://api.github.com/users/pfrazee/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pfrazee/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-20T10:12:31Z",
    "updated_at": "2016-10-20T10:12:31Z",
    "body": "If the custom scheme is a proxy for HTTP and not HTTPS then it wouldn't be secure.\n\n> On Oct 20, 2016, at 4:45 AM, Robo notifications@github.com wrote:\n> \n> It doesn't matter whether the scheme is authenticated or not. localhost, file are secure schemes and origins. Custom schemes are declared by users and they consider it trust worthy https://www.w3.org/TR/secure-contexts/#is-origin-trustworthy . Is there a scenario where custom scheme cannot be treated secure ?\n> \n> —\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub, or mute the thread.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/255070933",
    "html_url": "https://github.com/electron/electron/pull/7671#issuecomment-255070933",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7671",
    "id": 255070933,
    "user": {
      "login": "deepak1556",
      "id": 964386,
      "avatar_url": "https://avatars2.githubusercontent.com/u/964386?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/deepak1556",
      "html_url": "https://github.com/deepak1556",
      "followers_url": "https://api.github.com/users/deepak1556/followers",
      "following_url": "https://api.github.com/users/deepak1556/following{/other_user}",
      "gists_url": "https://api.github.com/users/deepak1556/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/deepak1556/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/deepak1556/subscriptions",
      "organizations_url": "https://api.github.com/users/deepak1556/orgs",
      "repos_url": "https://api.github.com/users/deepak1556/repos",
      "events_url": "https://api.github.com/users/deepak1556/events{/privacy}",
      "received_events_url": "https://api.github.com/users/deepak1556/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-20T10:37:14Z",
    "updated_at": "2016-10-20T10:39:42Z",
    "body": "> If the custom scheme is a proxy for HTTP and not HTTPS then it wouldn't be secure.\n\n:+1: \n\nCalling `protocol.registerSecureSchemes` should also register on renderer side, we should not expect users to take care of registering in both places. I propose removal of `secure` and `serviceWorker` options from `webframe.registerURLSchemeAsPrivileged` and instead register those whenever appropriate browser apis are called. Thoughts ?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/255415532",
    "html_url": "https://github.com/electron/electron/pull/7671#issuecomment-255415532",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7671",
    "id": 255415532,
    "user": {
      "login": "pfrazee",
      "id": 1270099,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1270099?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pfrazee",
      "html_url": "https://github.com/pfrazee",
      "followers_url": "https://api.github.com/users/pfrazee/followers",
      "following_url": "https://api.github.com/users/pfrazee/following{/other_user}",
      "gists_url": "https://api.github.com/users/pfrazee/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pfrazee/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pfrazee/subscriptions",
      "organizations_url": "https://api.github.com/users/pfrazee/orgs",
      "repos_url": "https://api.github.com/users/pfrazee/repos",
      "events_url": "https://api.github.com/users/pfrazee/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pfrazee/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-21T15:56:12Z",
    "updated_at": "2016-10-21T15:56:12Z",
    "body": "@deepak1556 I'm cool with that. Are other Electron members on board?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/255664211",
    "html_url": "https://github.com/electron/electron/pull/7671#issuecomment-255664211",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7671",
    "id": 255664211,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2016-10-24T07:10:29Z",
    "updated_at": "2016-10-24T07:10:29Z",
    "body": "> Calling protocol.registerSecureSchemes should also register on renderer side, we should not expect users to take care of registering in both places.\n\n👍 \n\n> I propose removal of secure and serviceWorker options from webframe.registerURLSchemeAsPrivileged and instead register those whenever appropriate browser apis are called.\n\nThis would break apps that use `registerURLSchemeAsPrivileged` to register secure schemes, I prefer to keep it unchanged.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/255730453",
    "html_url": "https://github.com/electron/electron/pull/7671#issuecomment-255730453",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7671",
    "id": 255730453,
    "user": {
      "login": "deepak1556",
      "id": 964386,
      "avatar_url": "https://avatars2.githubusercontent.com/u/964386?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/deepak1556",
      "html_url": "https://github.com/deepak1556",
      "followers_url": "https://api.github.com/users/deepak1556/followers",
      "following_url": "https://api.github.com/users/deepak1556/following{/other_user}",
      "gists_url": "https://api.github.com/users/deepak1556/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/deepak1556/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/deepak1556/subscriptions",
      "organizations_url": "https://api.github.com/users/deepak1556/orgs",
      "repos_url": "https://api.github.com/users/deepak1556/repos",
      "events_url": "https://api.github.com/users/deepak1556/events{/privacy}",
      "received_events_url": "https://api.github.com/users/deepak1556/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-24T12:47:23Z",
    "updated_at": "2016-10-24T12:47:23Z",
    "body": "@zcbenz This patch will still crash for non-standard schemes because accessing cache storage apis check for [uniqueness of origin](https://cs.chromium.org/chromium/src/content/browser/cache_storage/cache_storage_dispatcher_host.cc?l=63) and it will fail. The only way I could find to disable cache storage for non-standard schemes is not let them be registered as secure unlike how we disabled other storage apis. If we are disabling cache storage, we should also disable service workers for non-standard schemes.\n     We can check if origin is standard before registering in `protocol.registerSecureSchemes` and `protocol.registerServiceWorkerSchemes`. This should also be carried out in `webFrame.registerURLSchemeAsPrivileged` but will definitely break existing apps that expect non-standard schemes to be secure, not sure how to fix this problem.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/255930772",
    "html_url": "https://github.com/electron/electron/pull/7671#issuecomment-255930772",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7671",
    "id": 255930772,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2016-10-25T04:05:43Z",
    "updated_at": "2016-10-25T04:05:43Z",
    "body": "How about making `registerStandardSchemes` also register secure schemes by default, and provide an extra options argument for turning that off? Just like what `registerURLSchemeAsPrivileged` does.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/255942948",
    "html_url": "https://github.com/electron/electron/pull/7671#issuecomment-255942948",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7671",
    "id": 255942948,
    "user": {
      "login": "deepak1556",
      "id": 964386,
      "avatar_url": "https://avatars2.githubusercontent.com/u/964386?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/deepak1556",
      "html_url": "https://github.com/deepak1556",
      "followers_url": "https://api.github.com/users/deepak1556/followers",
      "following_url": "https://api.github.com/users/deepak1556/following{/other_user}",
      "gists_url": "https://api.github.com/users/deepak1556/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/deepak1556/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/deepak1556/subscriptions",
      "organizations_url": "https://api.github.com/users/deepak1556/orgs",
      "repos_url": "https://api.github.com/users/deepak1556/repos",
      "events_url": "https://api.github.com/users/deepak1556/events{/privacy}",
      "received_events_url": "https://api.github.com/users/deepak1556/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-25T05:52:04Z",
    "updated_at": "2016-10-25T05:52:04Z",
    "body": "> How about making registerStandardSchemes also register secure schemes by default, and provide an extra options argument for turning that off? Just like what registerURLSchemeAsPrivileged does.\n\nThat should work! Any thoughts on disabling secure option it in `webFrame.registerURLSchemesAsPrivileged` for non-standard schemes ?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/255950013",
    "html_url": "https://github.com/electron/electron/pull/7671#issuecomment-255950013",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7671",
    "id": 255950013,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2016-10-25T06:39:47Z",
    "updated_at": "2016-10-25T06:39:47Z",
    "body": "> That should work! Any thoughts on disabling secure option it in webFrame.registerURLSchemesAsPrivileged for non-standard schemes ?\n\nSounds good to me.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/256048220",
    "html_url": "https://github.com/electron/electron/pull/7671#issuecomment-256048220",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7671",
    "id": 256048220,
    "user": {
      "login": "pfrazee",
      "id": 1270099,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1270099?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pfrazee",
      "html_url": "https://github.com/pfrazee",
      "followers_url": "https://api.github.com/users/pfrazee/followers",
      "following_url": "https://api.github.com/users/pfrazee/following{/other_user}",
      "gists_url": "https://api.github.com/users/pfrazee/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pfrazee/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pfrazee/subscriptions",
      "organizations_url": "https://api.github.com/users/pfrazee/orgs",
      "repos_url": "https://api.github.com/users/pfrazee/repos",
      "events_url": "https://api.github.com/users/pfrazee/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pfrazee/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-25T14:19:27Z",
    "updated_at": "2016-10-25T14:19:27Z",
    "body": "Ok, to summarize the changes:\n- Update `protocol. registerStandardSchemes` to register a scheme as secure on the browser side, and to propagate that registration to renderers.\n- Add a second arg to `registerStandardSchemes`, which is an optional object where you can specify `{ secure: false }` to disable secure registration.\n- Remove secure registration from `registerURLSchemeAsPrivileged`\n- Deprecate `webframe. registerURLSchemeAsSecure`\n- Probably should close this PR, as we wont need `protocol.registerSecureSchemes`.\n\nCorrect?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/257194327",
    "html_url": "https://github.com/electron/electron/pull/7671#issuecomment-257194327",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7671",
    "id": 257194327,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2016-10-31T01:07:22Z",
    "updated_at": "2016-10-31T01:07:22Z",
    "body": "> Correct?\n\n👍 \n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/257871739",
    "html_url": "https://github.com/electron/electron/pull/7671#issuecomment-257871739",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7671",
    "id": 257871739,
    "user": {
      "login": "pfrazee",
      "id": 1270099,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1270099?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pfrazee",
      "html_url": "https://github.com/pfrazee",
      "followers_url": "https://api.github.com/users/pfrazee/followers",
      "following_url": "https://api.github.com/users/pfrazee/following{/other_user}",
      "gists_url": "https://api.github.com/users/pfrazee/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pfrazee/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pfrazee/subscriptions",
      "organizations_url": "https://api.github.com/users/pfrazee/orgs",
      "repos_url": "https://api.github.com/users/pfrazee/repos",
      "events_url": "https://api.github.com/users/pfrazee/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pfrazee/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-02T13:58:11Z",
    "updated_at": "2016-11-02T13:58:11Z",
    "body": "I'll get started on this next week.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/258961969",
    "html_url": "https://github.com/electron/electron/pull/7671#issuecomment-258961969",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7671",
    "id": 258961969,
    "user": {
      "login": "kevinsawicki",
      "id": 671378,
      "avatar_url": "https://avatars0.githubusercontent.com/u/671378?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kevinsawicki",
      "html_url": "https://github.com/kevinsawicki",
      "followers_url": "https://api.github.com/users/kevinsawicki/followers",
      "following_url": "https://api.github.com/users/kevinsawicki/following{/other_user}",
      "gists_url": "https://api.github.com/users/kevinsawicki/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kevinsawicki/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kevinsawicki/subscriptions",
      "organizations_url": "https://api.github.com/users/kevinsawicki/orgs",
      "repos_url": "https://api.github.com/users/kevinsawicki/repos",
      "events_url": "https://api.github.com/users/kevinsawicki/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kevinsawicki/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2016-11-07T21:03:54Z",
    "updated_at": "2016-11-07T21:03:54Z",
    "body": "> Probably should close this PR, as we wont need protocol.registerSecureSchemes.\n\nClosing this out 👍 \n"
  }
]