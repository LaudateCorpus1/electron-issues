[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/171992268",
    "html_url": "https://github.com/electron/electron/issues/4114#issuecomment-171992268",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/4114",
    "id": 171992268,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2016-01-15T15:32:05Z",
    "updated_at": "2016-01-15T15:32:05Z",
    "body": "This is because the default encoding of console is not UTF-8, you need to change console's encoding to show UTF-8 characters correctly:\nhttp://stackoverflow.com/questions/388490/unicode-characters-in-windows-command-line-how/388500\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/172007527",
    "html_url": "https://github.com/electron/electron/issues/4114#issuecomment-172007527",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/4114",
    "id": 172007527,
    "user": {
      "login": "buildcold",
      "id": 4065930,
      "avatar_url": "https://avatars1.githubusercontent.com/u/4065930?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/buildcold",
      "html_url": "https://github.com/buildcold",
      "followers_url": "https://api.github.com/users/buildcold/followers",
      "following_url": "https://api.github.com/users/buildcold/following{/other_user}",
      "gists_url": "https://api.github.com/users/buildcold/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/buildcold/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/buildcold/subscriptions",
      "organizations_url": "https://api.github.com/users/buildcold/orgs",
      "repos_url": "https://api.github.com/users/buildcold/repos",
      "events_url": "https://api.github.com/users/buildcold/events{/privacy}",
      "received_events_url": "https://api.github.com/users/buildcold/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-15T16:29:42Z",
    "updated_at": "2016-01-16T01:43:21Z",
    "body": "@zcbenz \nThank for your responses.\ni have changed the  code page to UTF-8. Also,  use Lucida console fonts.\nbut  its does not work . \n\n`chcp 65001`\n\n![2](https://cloud.githubusercontent.com/assets/4065930/12358439/31df54d2-bbe8-11e5-8899-df873a147319.png)\n![3](https://cloud.githubusercontent.com/assets/4065930/12358438/31dd5178-bbe8-11e5-9e97-90e7206db5a5.png)\n![4](https://cloud.githubusercontent.com/assets/4065930/12358440/31df92ee-bbe8-11e5-96f5-34ac4d44cee2.png)\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/172017463",
    "html_url": "https://github.com/electron/electron/issues/4114#issuecomment-172017463",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/4114",
    "id": 172017463,
    "user": {
      "login": "buildcold",
      "id": 4065930,
      "avatar_url": "https://avatars1.githubusercontent.com/u/4065930?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/buildcold",
      "html_url": "https://github.com/buildcold",
      "followers_url": "https://api.github.com/users/buildcold/followers",
      "following_url": "https://api.github.com/users/buildcold/following{/other_user}",
      "gists_url": "https://api.github.com/users/buildcold/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/buildcold/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/buildcold/subscriptions",
      "organizations_url": "https://api.github.com/users/buildcold/orgs",
      "repos_url": "https://api.github.com/users/buildcold/repos",
      "events_url": "https://api.github.com/users/buildcold/events{/privacy}",
      "received_events_url": "https://api.github.com/users/buildcold/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-15T17:06:23Z",
    "updated_at": "2016-01-15T17:06:23Z",
    "body": "I tried to used `ipcMain` and `ipcRenderer`  handling messages between the render and main processes:\n\n# main processes\n\nmain.js\n\n```\n'use strict';\nconst electron = require('electron');\nconst app = electron.app;  // Module to control application life.\nconst BrowserWindow = electron.BrowserWindow;  // Module to create native browser window.\nconst ipcMain = electron.ipcMain; //IPC\nconst fs = require('fs');\n// Keep a global reference of the window object, if you don't, the window will\n// be closed automatically when the JavaScript object is garbage collected.\nlet mainWindow;\n\n// Quit when all windows are closed.\napp.on('window-all-closed', function() {\n  // On OS X it is common for applications and their menu bar\n  // to stay active until the user quits explicitly with Cmd + Q\n  if (process.platform != 'darwin') {\n    app.quit();\n  }\n});\n\n// This method will be called when Electron has finished\n// initialization and is ready to create browser windows.\napp.on('ready', function() {\n  // Create the browser window.\n    mainWindow = new BrowserWindow({width: 900,fullscreen:true,height: 600,minWidth:900,minHeight:600,alwaysOnTop:false,backgroundColor:\"#FFF\"});\n\n      // and load the index.html of the app.\n    mainWindow.loadURL('file://' + __dirname + '/index.html');\n\n\n      // Open the DevTools.\n    mainWindow.webContents.openDevTools();\n      // mainWindow.setFullScreen(true);\n      // Emitted when the window is closed.\n    mainWindow.on('closed', function() {\n        // Dereference the window object, usually you would store windows\n        // in an array if your app supports multi windows, this is the time\n        // when you should delete the corresponding element.\n        mainWindow = null;\n    });\n});\nvar ffi = require('ffi');\n\nvar libfactorial = ffi.Library('./libfactorial', {\n  'factorial': [ 'uint64', [ 'int' ] ]\n})\n\n\nipcMain.on('asynchronous-message', function(event, arg) {\n  //libfactorial.factorial(arg);\n  console.log(arg);  // this display issue\n});\n```\n\n# renderer process\n\nindex.js\n\n```\nconst ipcRenderer = require('electron').ipcRenderer;\n\nipcRenderer.send('asynchronous-message', '这是个中文消息');\n```\n\n![5](https://cloud.githubusercontent.com/assets/4065930/12359339/d8fcc5c0-bbec-11e5-8cfc-194a5989b3c7.png)\n\n Anybody have an idea?\n"
  }
]