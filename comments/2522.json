[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/132394446",
    "html_url": "https://github.com/electron/electron/issues/2522#issuecomment-132394446",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2522",
    "id": 132394446,
    "user": {
      "login": "duanyao",
      "id": 1684137,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1684137?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/duanyao",
      "html_url": "https://github.com/duanyao",
      "followers_url": "https://api.github.com/users/duanyao/followers",
      "following_url": "https://api.github.com/users/duanyao/following{/other_user}",
      "gists_url": "https://api.github.com/users/duanyao/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/duanyao/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/duanyao/subscriptions",
      "organizations_url": "https://api.github.com/users/duanyao/orgs",
      "repos_url": "https://api.github.com/users/duanyao/repos",
      "events_url": "https://api.github.com/users/duanyao/events{/privacy}",
      "received_events_url": "https://api.github.com/users/duanyao/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-18T23:56:16Z",
    "updated_at": "2015-08-18T23:56:39Z",
    "body": "I think it is even better to be able to intercept dialogs globally, so you don't have to change every site that creates `BrowserWindow`:\n\n``` js\napp.on('dialog-alert', function(ev) {\n  //...\n});\n```\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/132723610",
    "html_url": "https://github.com/electron/electron/issues/2522#issuecomment-132723610",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2522",
    "id": 132723610,
    "user": {
      "login": "etiktin",
      "id": 4381579,
      "avatar_url": "https://avatars1.githubusercontent.com/u/4381579?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/etiktin",
      "html_url": "https://github.com/etiktin",
      "followers_url": "https://api.github.com/users/etiktin/followers",
      "following_url": "https://api.github.com/users/etiktin/following{/other_user}",
      "gists_url": "https://api.github.com/users/etiktin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/etiktin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/etiktin/subscriptions",
      "organizations_url": "https://api.github.com/users/etiktin/orgs",
      "repos_url": "https://api.github.com/users/etiktin/repos",
      "events_url": "https://api.github.com/users/etiktin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/etiktin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-19T18:05:30Z",
    "updated_at": "2015-08-19T18:05:30Z",
    "body": "Some users are running multi-apps through a single app. They basically just open new windows for each app from a single master process (see for example #2415 and #2438). So I think it's better to leave the configuration on the `BrowserWindow` which will give the option to configure the look differently per window (e.g. they can set different dialog title per window). If you want to set the same options for all windows, you could still do that by wrapping the window creation with code to set up the options.\n\nThe more I think about it, I don't see a reason to treat this like setting an event handler. We just want to allow customization of the modal dialog, which means the options used to create it. So maybe something like this will be better:\n\n``` javascript\nmainWindow.alertDialogOptions = {\n    type: 'none',\n    icon: './alert.png',\n    title: 'Foobar',\n    buttons: ['Click me'],\n    noLink: true\n};\n```\n\nWhen an alert is called, the modal dialog creation code, will check if the developer supplied an options object and if so it will customize the dialog according to it and then display it.\nThis approach seems simpler and cleaner to me.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/132830250",
    "html_url": "https://github.com/electron/electron/issues/2522#issuecomment-132830250",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2522",
    "id": 132830250,
    "user": {
      "login": "duanyao",
      "id": 1684137,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1684137?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/duanyao",
      "html_url": "https://github.com/duanyao",
      "followers_url": "https://api.github.com/users/duanyao/followers",
      "following_url": "https://api.github.com/users/duanyao/following{/other_user}",
      "gists_url": "https://api.github.com/users/duanyao/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/duanyao/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/duanyao/subscriptions",
      "organizations_url": "https://api.github.com/users/duanyao/orgs",
      "repos_url": "https://api.github.com/users/duanyao/repos",
      "events_url": "https://api.github.com/users/duanyao/events{/privacy}",
      "received_events_url": "https://api.github.com/users/duanyao/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-20T00:06:10Z",
    "updated_at": "2015-08-20T00:06:10Z",
    "body": "There are requirements other than just changing the look and feel of dialogs, e.g.:\n- Block dialogs from all or some pages, according to user's setting.\n- Fill authentication dialogs with saved usernames/passwords.\n\nAdditionally, one may want to set the title/icon of dialogs according to the title/favicon of the web page that triggered it.\n\nI think the event handler approach provides all the flexibility. We may add properties such as `browserWindow` (maybe `window` too for iframes) to the event object, so that developer can get all context info about the dialog to be shown.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/134469514",
    "html_url": "https://github.com/electron/electron/issues/2522#issuecomment-134469514",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2522",
    "id": 134469514,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2015-08-25T04:16:46Z",
    "updated_at": "2015-08-25T04:16:46Z",
    "body": "For overriding the `alert` box you can simply do it in [preload](https://github.com/atom/electron/blob/master/docs/api/browser-window.md#new-browserwindowoptions) script:\n\n``` js\nwindow.alert = ...;\n```\n\nThat's also how we implemented `alert` in Electron:\nhttps://github.com/atom/electron/blob/master/atom/renderer/lib/override.coffee#L78-L88\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/134470679",
    "html_url": "https://github.com/electron/electron/issues/2522#issuecomment-134470679",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2522",
    "id": 134470679,
    "user": {
      "login": "alexindigo",
      "id": 127063,
      "avatar_url": "https://avatars0.githubusercontent.com/u/127063?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexindigo",
      "html_url": "https://github.com/alexindigo",
      "followers_url": "https://api.github.com/users/alexindigo/followers",
      "following_url": "https://api.github.com/users/alexindigo/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexindigo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexindigo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexindigo/subscriptions",
      "organizations_url": "https://api.github.com/users/alexindigo/orgs",
      "repos_url": "https://api.github.com/users/alexindigo/repos",
      "events_url": "https://api.github.com/users/alexindigo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexindigo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-25T04:30:06Z",
    "updated_at": "2015-08-25T04:30:06Z",
    "body": "There is one difference between native and custom `alert` â€“ custom one is not blocking, although it's better UX in most cases, might be a problem for some.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/134698236",
    "html_url": "https://github.com/electron/electron/issues/2522#issuecomment-134698236",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2522",
    "id": 134698236,
    "user": {
      "login": "etiktin",
      "id": 4381579,
      "avatar_url": "https://avatars1.githubusercontent.com/u/4381579?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/etiktin",
      "html_url": "https://github.com/etiktin",
      "followers_url": "https://api.github.com/users/etiktin/followers",
      "following_url": "https://api.github.com/users/etiktin/following{/other_user}",
      "gists_url": "https://api.github.com/users/etiktin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/etiktin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/etiktin/subscriptions",
      "organizations_url": "https://api.github.com/users/etiktin/orgs",
      "repos_url": "https://api.github.com/users/etiktin/repos",
      "events_url": "https://api.github.com/users/etiktin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/etiktin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-25T18:44:48Z",
    "updated_at": "2015-08-25T18:44:48Z",
    "body": "@alexindigo, what do you mean when you say that custom `alert` doesn't block?\nIf you implement it using `dialog.showMessageBox()`, just don't provide a callback and the call will be synchronous/blocking. For `alert` it doesn't matter that match, but `confirm` must be synchronous because you need to return the result to the caller.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/134720490",
    "html_url": "https://github.com/electron/electron/issues/2522#issuecomment-134720490",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2522",
    "id": 134720490,
    "user": {
      "login": "alexindigo",
      "id": 127063,
      "avatar_url": "https://avatars0.githubusercontent.com/u/127063?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexindigo",
      "html_url": "https://github.com/alexindigo",
      "followers_url": "https://api.github.com/users/alexindigo/followers",
      "following_url": "https://api.github.com/users/alexindigo/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexindigo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexindigo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexindigo/subscriptions",
      "organizations_url": "https://api.github.com/users/alexindigo/orgs",
      "repos_url": "https://api.github.com/users/alexindigo/repos",
      "events_url": "https://api.github.com/users/alexindigo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexindigo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-25T19:57:38Z",
    "updated_at": "2015-08-25T19:57:38Z",
    "body": "@etiktin Hey, sorry for the confusion, I missed that part completely. Thank you for the clarification.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/134783051",
    "html_url": "https://github.com/electron/electron/issues/2522#issuecomment-134783051",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2522",
    "id": 134783051,
    "user": {
      "login": "duanyao",
      "id": 1684137,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1684137?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/duanyao",
      "html_url": "https://github.com/duanyao",
      "followers_url": "https://api.github.com/users/duanyao/followers",
      "following_url": "https://api.github.com/users/duanyao/following{/other_user}",
      "gists_url": "https://api.github.com/users/duanyao/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/duanyao/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/duanyao/subscriptions",
      "organizations_url": "https://api.github.com/users/duanyao/orgs",
      "repos_url": "https://api.github.com/users/duanyao/repos",
      "events_url": "https://api.github.com/users/duanyao/events{/privacy}",
      "received_events_url": "https://api.github.com/users/duanyao/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-26T01:11:25Z",
    "updated_at": "2015-08-26T01:11:25Z",
    "body": "@zcbenz  preload script looks awesome, but how about browsing contexts that are not created by `new BrowserWindow(...)`, e.g. `window.open(), <a target=\"_blank\">, <iframe>`, etc.?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/134799719",
    "html_url": "https://github.com/electron/electron/issues/2522#issuecomment-134799719",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2522",
    "id": 134799719,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2015-08-26T02:47:47Z",
    "updated_at": "2015-08-26T02:47:47Z",
    "body": "@duanyao Good question, I can't find a existing way to solve that. One possible solution is allow setting preload script for the whole session, so ever page created for the session will load the preload script:\n\n``` js\nvar session = xxxx.createSession({preload: '/script.js'});\nvar window = new BrowserWindow({session: session});\n```\n\nHow does it sound?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/134817229",
    "html_url": "https://github.com/electron/electron/issues/2522#issuecomment-134817229",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2522",
    "id": 134817229,
    "user": {
      "login": "duanyao",
      "id": 1684137,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1684137?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/duanyao",
      "html_url": "https://github.com/duanyao",
      "followers_url": "https://api.github.com/users/duanyao/followers",
      "following_url": "https://api.github.com/users/duanyao/following{/other_user}",
      "gists_url": "https://api.github.com/users/duanyao/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/duanyao/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/duanyao/subscriptions",
      "organizations_url": "https://api.github.com/users/duanyao/orgs",
      "repos_url": "https://api.github.com/users/duanyao/repos",
      "events_url": "https://api.github.com/users/duanyao/events{/privacy}",
      "received_events_url": "https://api.github.com/users/duanyao/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-26T03:59:56Z",
    "updated_at": "2015-08-26T04:00:33Z",
    "body": "Session may work.\n\nAnother (more general) solution is \"browsing context life circle events\", so you can inject different scripts to different pages, at different loading states (e.g. before parsing HTML, ondomcontentloaded, or onload). One example is [Geckofx](https://bitbucket.org/geckofx/geckofx-33.0/src/3e2c6436b414984328d4e3cbee6dedf5f09a9e9d/GeckoFxTest/Main.cs?at=default#Main.cs-355), it has `Navigating`, `Navigated`, `DocumentCompleted`, `CreateWindow` events, and you can retrieval the URL and call `EvaluateScript()` to inject scripts in the handlers.\n\nI noticed that Electron class `WebContents` has `did-start-loading`, `did-frame-finish-load`, `new-window` events and `executeJavaScript()`, seems potentially being able to achive this purpose?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/134825572",
    "html_url": "https://github.com/electron/electron/issues/2522#issuecomment-134825572",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2522",
    "id": 134825572,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2015-08-26T04:32:48Z",
    "updated_at": "2015-08-26T04:32:48Z",
    "body": "> I noticed that Electron class WebContents has did-start-loading, did-frame-finish-load, new-window events and executeJavaScript(), seems potentially being able to achive this purpose?\n\nWe still need to add all those events to `Session` though, otherwise we can still not handle pages opened by `window.open`.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/134832109",
    "html_url": "https://github.com/electron/electron/issues/2522#issuecomment-134832109",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2522",
    "id": 134832109,
    "user": {
      "login": "duanyao",
      "id": 1684137,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1684137?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/duanyao",
      "html_url": "https://github.com/duanyao",
      "followers_url": "https://api.github.com/users/duanyao/followers",
      "following_url": "https://api.github.com/users/duanyao/following{/other_user}",
      "gists_url": "https://api.github.com/users/duanyao/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/duanyao/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/duanyao/subscriptions",
      "organizations_url": "https://api.github.com/users/duanyao/orgs",
      "repos_url": "https://api.github.com/users/duanyao/repos",
      "events_url": "https://api.github.com/users/duanyao/events{/privacy}",
      "received_events_url": "https://api.github.com/users/duanyao/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-26T05:00:50Z",
    "updated_at": "2015-08-26T05:00:50Z",
    "body": "> otherwise we can still not handle pages opened by window.open.\n\nDoesn't `new-window` event report windows created by `window.open`?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/135125064",
    "html_url": "https://github.com/electron/electron/issues/2522#issuecomment-135125064",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2522",
    "id": 135125064,
    "user": {
      "login": "etiktin",
      "id": 4381579,
      "avatar_url": "https://avatars1.githubusercontent.com/u/4381579?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/etiktin",
      "html_url": "https://github.com/etiktin",
      "followers_url": "https://api.github.com/users/etiktin/followers",
      "following_url": "https://api.github.com/users/etiktin/following{/other_user}",
      "gists_url": "https://api.github.com/users/etiktin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/etiktin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/etiktin/subscriptions",
      "organizations_url": "https://api.github.com/users/etiktin/orgs",
      "repos_url": "https://api.github.com/users/etiktin/repos",
      "events_url": "https://api.github.com/users/etiktin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/etiktin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-26T18:01:15Z",
    "updated_at": "2015-08-26T18:01:15Z",
    "body": "Currently there's no support for `alert` and `confirm` in iframes. The `preload` script for `Sessions` sounds like a good solution for customizing the dialogs, but I think we also need a default preload (kind of like what override.coffee does for the parent window).\n\nWill this work even when `websecurity` is set to true and the child window(s) belongs to a different origin?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/135243629",
    "html_url": "https://github.com/electron/electron/issues/2522#issuecomment-135243629",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2522",
    "id": 135243629,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2015-08-27T02:07:12Z",
    "updated_at": "2015-08-27T02:07:12Z",
    "body": "> Will this work even when websecurity is set to true and the child window(s) belongs to a different origin?\n\nYeah preload script is loaded regardless of web security, and child windows always have the same session.\n"
  }
]