[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/92231730",
    "html_url": "https://github.com/electron/electron/issues/1398#issuecomment-92231730",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1398",
    "id": 92231730,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2015-04-13T06:39:29Z",
    "updated_at": "2015-04-13T06:39:29Z",
    "body": "From the stack trace I can only know the crash happens when V8 is doing garbage collection, I guess you forgot to keep reference of some native objects and then they got garbage collected (like #822), it is still a bug that it crashes though.\n\nWithout a test case I'm afraid there is nothing I can do on it.\n\nFull stack trace:\n\n```\nOperating system: Windows NT\n                  6.3.9600 \nCPU: x86\n     GenuineIntel family 6 model 60 stepping 3\n     4 CPUs\n\nCrash reason:  EXCEPTION_ACCESS_VIOLATION_READ\nCrash address: 0x2f201aa0\nAssertion: Unknown assertion type 0x00000000\n\nThread 0 (crashed)\n 0  chromiumcontent.dll!v8::internal::IncrementalMarking::Step(int,v8::internal::IncrementalMarking::CompletionAction,v8::internal::IncrementalMarking::ForceMarkingAction,v8::internal::IncrementalMarking::ForceCompletionAction) [incremental-marking.cc : 933 + 0x4a]\n    eip = 0x5c9a77a3   esp = 0x00aaf228   ebp = 0x00aaf26c   ebx = 0x00c55490\n    esi = 0x00c5d3f8   edi = 0x00c596a8   eax = 0x2f200000   ecx = 0x000006a8\n    edx = 0x2bc015f0   efl = 0x00010202\n    Found by: given as instruction pointer in context\n 1  chromiumcontent.dll!v8::internal::Heap::IdleNotification(double) [heap.cc : 4543 + 0x14]\n    eip = 0x5c9be024   esp = 0x00aaf274   ebp = 0x00aaf318\n    Found by: call frame info\n 2  chromiumcontent.dll!v8::internal::Heap::IdleNotification(int) [heap.cc : 4486 + 0x3c]\n    eip = 0x5c9bde15   esp = 0x00aaf320   ebp = 0x00aaf334\n    Found by: call frame info\n 3  chromiumcontent.dll!blink::idleGCTaskInMainThread [v8initializer.cpp : 413 + 0x8]\n    eip = 0x5d2efa99   esp = 0x00aaf33c   ebp = 0x00aaf344\n    Found by: call frame info\n 4  chromiumcontent.dll!WTF::PartBoundFunctionImpl<0,WTF::FunctionWrapper<void (*)(double)>,void (double)>::operator()(double) [functional.h : 153 + 0x12]\n    eip = 0x5d2ef2b5   esp = 0x00aaf34c   ebp = 0x00aaf354\n    Found by: call frame info\n 5  chromiumcontent.dll!blink::IdleTaskRunner::run(double) [scheduler.cpp : 29 + 0x17]\n    eip = 0x5c877e0a   esp = 0x00aaf35c   ebp = 0x00aaf364\n    Found by: call frame info\n 6  chromiumcontent.dll!content::WebSchedulerImpl::runIdleTask(scoped_ptr<blink::WebScheduler::IdleTask,base::DefaultDeleter<blink::WebScheduler::IdleTask> >,base::TimeTicks) [web_scheduler_impl.cc : 28 + 0x2b]\n    eip = 0x5d812282   esp = 0x00aaf36c   ebp = 0x00aaf394\n    Found by: call frame info\n 7  chromiumcontent.dll!base::internal::InvokeHelper<0,void,base::internal::RunnableAdapter<void (*)(scoped_ptr<blink::WebScheduler::IdleTask,base::DefaultDeleter<blink::WebScheduler::IdleTask> >,base::TimeTicks)>,void (scoped_ptr<blink::WebScheduler::IdleTask,base::DefaultDeleter<blink::WebScheduler::IdleTask> >,base::TimeTicks const &)>::MakeItSo(base::internal::RunnableAdapter<void (*)(scoped_ptr<blink::WebScheduler::IdleTask,base::DefaultDeleter<blink::WebScheduler::IdleTask> >,base::TimeTicks)>,scoped_ptr<blink::WebScheduler::IdleTask,base::DefaultDeleter<blink::WebScheduler::IdleTask> >,base::TimeTicks const &) [bind_internal.h : 381 + 0x36]\n    eip = 0x5d8120a9   esp = 0x00aaf39c   ebp = 0x00aaf3bc\n    Found by: call frame info\n 8  chromiumcontent.dll!base::internal::Invoker<1,base::internal::BindState<base::internal::RunnableAdapter<void (*)(scoped_ptr<blink::WebScheduler::IdleTask,base::DefaultDeleter<blink::WebScheduler::IdleTask> >,base::TimeTicks)>,void (scoped_ptr<blink::WebScheduler::IdleTask,base::DefaultDeleter<blink::WebScheduler::IdleTask> >,base::TimeTicks),void (base::internal::PassedWrapper<scoped_ptr<blink::WebScheduler::IdleTask,base::DefaultDeleter<blink::WebScheduler::IdleTask> > >)>,void (scoped_ptr<blink::WebScheduler::IdleTask,base::DefaultDeleter<blink::WebScheduler::IdleTask> >,base::TimeTicks)>::Run(base::internal::BindStateBase *,base::TimeTicks const &) [bind_internal.h : 533 + 0x22]\n    eip = 0x5d812138   esp = 0x00aaf3c4   ebp = 0x00aaf3e4\n    Found by: call frame info\n 9  chromiumcontent.dll!content::SingleThreadIdleTaskRunner::RunTask(base::Callback<void (base::TimeTicks)>) [single_thread_idle_task_runner.cc : 39 + 0xa]\n    eip = 0x5d813a23   esp = 0x00aaf3ec   ebp = 0x00aaf45c\n    Found by: call frame info\n10  chromiumcontent.dll!base::internal::Invoker<2,base::internal::BindState<base::internal::RunnableAdapter<void ( net::CookieMonster::CookieMonsterTask::*)(base::Callback<void (void)>)>,void (net::CookieMonster::CookieMonsterTask *,base::Callback<void (void)>),void (net::CookieMonster::CookieMonsterTask *,base::Callback<void (void)>)>,void (net::CookieMonster::CookieMonsterTask *,base::Callback<void (void)>)>::Run(base::internal::BindStateBase *) [bind_internal.h : 562 + 0x5]\n    eip = 0x5bd62a55   esp = 0x00aaf464   ebp = 0x00aaf478\n    Found by: call frame info\n11  chromiumcontent.dll!base::debug::TaskAnnotator::RunTask(char const *,char const *,base::PendingTask const &) [task_annotator.cc : 63 + 0x8]\n    eip = 0x5b892d3c   esp = 0x00aaf480   ebp = 0x00aaf538\n    Found by: call frame info\n12  chromiumcontent.dll!content::TaskQueueManager::ProcessTaskFromWorkQueue(unsigned int) [task_queue_manager.cc : 369 + 0x16]\n    eip = 0x5d7a427e   esp = 0x00aaf540   ebp = 0x00aaf590\n    Found by: call frame info\n13  chromiumcontent.dll!content::TaskQueueManager::DoWork(bool) [task_queue_manager.cc : 342 + 0xa]\n    eip = 0x5d7a3ed8   esp = 0x00aaf598   ebp = 0x00aaf5a0\n    Found by: call frame info\n14  chromiumcontent.dll!base::internal::Invoker<2,base::internal::BindState<base::internal::RunnableAdapter<void ( content::TaskQueueManager::*)(bool)>,void (content::TaskQueueManager *,bool),void (base::WeakPtr<content::TaskQueueManager>,bool)>,void (content::TaskQueueManager *,bool)>::Run(base::internal::BindStateBase *) [bind_internal.h : 562 + 0x2b]\n    eip = 0x5beed4f4   esp = 0x00aaf5a8   ebp = 0x00aaf5b8\n    Found by: call frame info\n15  chromiumcontent.dll!base::debug::TaskAnnotator::RunTask(char const *,char const *,base::PendingTask const &) [task_annotator.cc : 63 + 0x8]\n    eip = 0x5b892d3c   esp = 0x00aaf5c0   ebp = 0x00aaf678\n    Found by: call frame info\n16  chromiumcontent.dll!base::MessageLoop::RunTask(base::PendingTask const &) [message_loop.cc : 437 + 0x16]\n    eip = 0x5b86c818   esp = 0x00aaf680   ebp = 0x00aaf82c\n    Found by: call frame info\n17  chromiumcontent.dll!base::MessageLoop::DoWork() [message_loop.cc : 554 + 0x2b]\n    eip = 0x5b86beff   esp = 0x00aaf834   ebp = 0x00aaf8cc\n    Found by: call frame info\n18  chromiumcontent.dll!base::MessagePumpDefault::Run(base::MessagePump::Delegate *) [message_pump_default.cc : 32 + 0x9]\n    eip = 0x5b89345b   esp = 0x00aaf8d4   ebp = 0x00aaf904\n    Found by: call frame info\n19  chromiumcontent.dll!base::MessageLoop::RunHandler() [message_loop.cc : 405 + 0x9]\n    eip = 0x5b86c690   esp = 0x00aaf90c   ebp = 0x00aaf944\n    Found by: call frame info\n20  chromiumcontent.dll!base::RunLoop::Run() [run_loop.cc : 55 + 0x7]\n    eip = 0x5b8948a5   esp = 0x00aaf918   ebp = 0x00aaf944\n    Found by: call frame info\n21  chromiumcontent.dll!base::MessageLoop::Run() [message_loop.cc : 298 + 0xf]\n    eip = 0x5b86c63c   esp = 0x00aaf94c   ebp = 0x00aaf978\n    Found by: call frame info\n22  chromiumcontent.dll!content::RendererMain(content::MainFunctionParams const &) [renderer_main.cc : 235 + 0xc]\n    eip = 0x5d7ca85d   esp = 0x00aaf980   ebp = 0x00aafb78\n    Found by: call frame info\n23  chromiumcontent.dll!content::RunNamedProcessTypeMain(std::basic_string<char,std::char_traits<char>,std::allocator<char> > const &,content::MainFunctionParams const &,content::ContentMainDelegate *) [content_main_runner.cc : 423 + 0xd]\n    eip = 0x5b8bc78a   esp = 0x00aafb80   ebp = 0x00aafb98\n    Found by: call frame info\n24  chromiumcontent.dll!content::ContentMainRunnerImpl::Run() [content_main_runner.cc : 800 + 0x5]\n    eip = 0x5b8bc60b   esp = 0x00aafba0   ebp = 0x00aafc08\n    Found by: call frame info\n25  chromiumcontent.dll!content::ContentMain(content::ContentMainParams const &) [content_main.cc : 19 + 0x7]\n    eip = 0x5b8be21d   esp = 0x00aafc10   ebp = 0x00aafc2c\n    Found by: call frame info\n26  atom.exe!wWinMain [atom_main.cc : 159 + 0xa]\n    eip = 0x0020aa97   esp = 0x00aafc34   ebp = 0x00aafcf0\n    Found by: call frame info\n```\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/92243089",
    "html_url": "https://github.com/electron/electron/issues/1398#issuecomment-92243089",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1398",
    "id": 92243089,
    "user": {
      "login": "felicienfrancois",
      "id": 988144,
      "avatar_url": "https://avatars1.githubusercontent.com/u/988144?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/felicienfrancois",
      "html_url": "https://github.com/felicienfrancois",
      "followers_url": "https://api.github.com/users/felicienfrancois/followers",
      "following_url": "https://api.github.com/users/felicienfrancois/following{/other_user}",
      "gists_url": "https://api.github.com/users/felicienfrancois/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/felicienfrancois/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/felicienfrancois/subscriptions",
      "organizations_url": "https://api.github.com/users/felicienfrancois/orgs",
      "repos_url": "https://api.github.com/users/felicienfrancois/repos",
      "events_url": "https://api.github.com/users/felicienfrancois/events{/privacy}",
      "received_events_url": "https://api.github.com/users/felicienfrancois/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-13T07:16:05Z",
    "updated_at": "2015-04-13T07:16:05Z",
    "body": "Ok, thank you for your feedback.\nI'll enquire on my side and get back to you if there is something on the atom-shell side.\n\nClosing this issue for now\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/92383226",
    "html_url": "https://github.com/electron/electron/issues/1398#issuecomment-92383226",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1398",
    "id": 92383226,
    "user": {
      "login": "felicienfrancois",
      "id": 988144,
      "avatar_url": "https://avatars1.githubusercontent.com/u/988144?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/felicienfrancois",
      "html_url": "https://github.com/felicienfrancois",
      "followers_url": "https://api.github.com/users/felicienfrancois/followers",
      "following_url": "https://api.github.com/users/felicienfrancois/following{/other_user}",
      "gists_url": "https://api.github.com/users/felicienfrancois/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/felicienfrancois/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/felicienfrancois/subscriptions",
      "organizations_url": "https://api.github.com/users/felicienfrancois/orgs",
      "repos_url": "https://api.github.com/users/felicienfrancois/repos",
      "events_url": "https://api.github.com/users/felicienfrancois/events{/privacy}",
      "received_events_url": "https://api.github.com/users/felicienfrancois/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-13T14:35:11Z",
    "updated_at": "2015-04-13T14:35:11Z",
    "body": "Well, after enquiry, it seems it may be triggered by keeping references on window menu items on the frontend side.\nBut the behavior is not consistent, it seems there are several conditions to meet to get the crash and I don't catch them all.\nI have isolated a code snippet, it is just below and I attached a zip of the app to reproduce.\n\nHow to reproduce:\n- On windows, launch the app\n- Minimize the window\n- focus another app\n- open previously minimized app => It is crashed with white screen\n\n**index.html**\n\n``` html\n<html>\n<body bgcolor=\"#666666\">\n<!-- emmet dependency from bower is required to reproduce, even if it is not used. May be due to the global variable \"_\" -->\n<script type=\"text/javascript\" src=\"emmet.js\"></script>\n<script>\nvar remote = require(\"remote\");\nvar Menu = remote.require('menu');\nvar MenuItem = remote.require('menu-item');\nvar currentWindow = remote.getCurrentWindow();\n\n\nvar windowMenu;\nvar windowMenuTemplate = [{ label: \"Test\", \"submenu\": [\n    { \"label\": \"Test\", \"type\": \"submenu\", \"submenu\": [\n        { \"label\": \"Test\", \"click\": function () {}, \"type\": \"checkbox\", \"checked\": false },\n        { \"label\": \"Test\", \"click\": function () {}, \"type\": \"checkbox\", \"checked\": false },\n        { \"label\": \"Test\", \"click\": function () {}, \"type\": \"checkbox\", \"checked\": false },\n        { \"label\": \"Test\", \"click\": function () {}, \"type\": \"checkbox\", \"checked\": false },\n        { \"label\": \"Test\", \"click\": function () {}, \"type\": \"checkbox\", \"checked\": false },\n        { \"label\": \"Test\", \"click\": function () {}, \"type\": \"checkbox\", \"checked\": false },\n        { \"label\": \"Test\", \"click\": function () {}, \"type\": \"checkbox\", \"checked\": false },\n        { \"label\": \"Test\", \"click\": function () {}, \"type\": \"checkbox\", \"checked\": false },\n        { \"label\": \"Test\", \"click\": function () {}, \"type\": \"checkbox\", \"checked\": false },\n        { \"label\": \"Test\", \"click\": function () {}, \"type\": \"checkbox\", \"checked\": false },\n        { \"label\": \"Test\", \"click\": function () {}, \"type\": \"checkbox\", \"checked\": false },\n    ] },\n    { \"type\": \"separator\" },\n    { \"label\": \"Test\", \"type\": \"submenu\", \"submenu\": [\n        { \"label\": \"Test\", \"click\": function () {}, \"type\": \"checkbox\", \"checked\": false },\n        { \"label\": \"Test\", \"click\": function () {}, \"type\": \"checkbox\", \"checked\": false },\n        { \"label\": \"Test\", \"click\": function () {}, \"type\": \"checkbox\", \"checked\": false },\n        { \"label\": \"Test\", \"click\": function () {}, \"type\": \"checkbox\", \"checked\": false },\n        { \"label\": \"Test\", \"click\": function () {}, \"type\": \"checkbox\", \"checked\": false },\n        { \"label\": \"Test\", \"click\": function () {}, \"type\": \"checkbox\", \"checked\": false },\n        { \"label\": \"Test\", \"click\": function () {}, \"type\": \"checkbox\", \"checked\": false },\n        { \"label\": \"Test\", \"click\": function () {}, \"type\": \"checkbox\", \"checked\": false },\n        { \"label\": \"Test\", \"click\": function () {}, \"type\": \"checkbox\", \"checked\": false },\n        { \"label\": \"Test\", \"click\": function () {}, \"type\": \"checkbox\", \"checked\": false },\n        { \"label\": \"Test\", \"click\": function () {}, \"type\": \"checkbox\", \"checked\": false },\n        { \"label\": \"Test\", \"click\": function () {}, \"type\": \"checkbox\", \"checked\": false }\n    ] },\n    { \"label\": \"Test\", \"type\": \"submenu\", \"submenu\": [\n        { \"label\": \"Test\", \"click\": function () {}, \"type\": \"checkbox\", \"checked\": false },\n        { \"label\": \"Test\", \"click\": function () {}, \"type\": \"checkbox\", \"checked\": false },\n        { \"label\": \"Test\", \"click\": function () {}, \"type\": \"checkbox\", \"checked\": false },\n        { \"label\": \"Test\", \"click\": function () {}, \"type\": \"checkbox\", \"checked\": false },\n        { \"label\": \"Test\", \"click\": function () {}, \"type\": \"checkbox\", \"checked\": false },\n        { \"label\": \"Test\", \"click\": function () {}, \"type\": \"checkbox\", \"checked\": false },\n        { \"label\": \"Test\", \"click\": function () {}, \"type\": \"checkbox\", \"checked\": false },\n        { \"label\": \"Test\", \"click\": function () {}, \"type\": \"checkbox\", \"checked\": false },\n        { \"label\": \"Test\", \"click\": function () {}, \"type\": \"checkbox\", \"checked\": false },\n        { \"label\": \"Test\", \"click\": function () {}, \"type\": \"checkbox\", \"checked\": false },\n        { \"label\": \"Test\", \"click\": function () {}, \"type\": \"checkbox\", \"checked\": false },\n        { \"label\": \"Test\", \"click\": function () {}, \"type\": \"checkbox\", \"checked\": false },\n        { \"label\": \"Test\", \"click\": function () {}, \"type\": \"checkbox\", \"checked\": false },\n        { \"label\": \"Test\", \"click\": function () {}, \"type\": \"checkbox\", \"checked\": false },\n        { \"label\": \"Test\", \"click\": function () {}, \"type\": \"checkbox\", \"checked\": false },\n        { \"label\": \"Test\", \"click\": function () {}, \"type\": \"checkbox\", \"checked\": false },\n        { \"label\": \"Test\", \"click\": function () {}, \"type\": \"checkbox\", \"checked\": false },\n        { \"label\": \"Test\", \"click\": function () {}, \"type\": \"checkbox\", \"checked\": false },\n        { \"label\": \"Test\", \"click\": function () {}, \"type\": \"checkbox\", \"checked\": false },\n        { \"label\": \"Test\", \"click\": function () {}, \"type\": \"checkbox\", \"checked\": false },\n        { \"label\": \"Test\", \"click\": function () {}, \"type\": \"checkbox\", \"checked\": false },\n        { \"label\": \"Test\", \"click\": function () {}, \"type\": \"checkbox\", \"checked\": false },\n        { \"label\": \"Test\", \"click\": function () {}, \"type\": \"checkbox\", \"checked\": false },\n        { \"label\": \"Test\", \"click\": function () {}, \"type\": \"checkbox\", \"checked\": false },\n        { \"label\": \"Test\", \"click\": function () {}, \"type\": \"checkbox\", \"checked\": false },\n        { \"label\": \"Test\", \"click\": function () {}, \"type\": \"checkbox\", \"checked\": false },\n        { \"label\": \"Test\", \"click\": function () {}, \"type\": \"checkbox\", \"checked\": false },\n        { \"label\": \"Test\", \"click\": function () {}, \"type\": \"checkbox\", \"checked\": false },\n        { \"label\": \"Test\", \"click\": function () {}, \"type\": \"checkbox\", \"checked\": false },\n        { \"label\": \"Test\", \"click\": function () {}, \"type\": \"checkbox\", \"checked\": false },\n        { \"label\": \"Test\", \"click\": function () {}, \"type\": \"checkbox\", \"checked\": false },\n        { \"label\": \"Test\", \"click\": function () {}, \"type\": \"checkbox\", \"checked\": false },\n    ] },\n    { \"label\": \"Test\", \"type\": \"submenu\", \"submenu\": [\n        { \"label\": \"Test\", \"click\": function () {}, \"type\": \"checkbox\", \"checked\": false },\n        { \"label\": \"Test\", \"click\": function () {}, \"type\": \"checkbox\", \"checked\": false },\n        { \"label\": \"Test\", \"click\": function () {}, \"type\": \"checkbox\", \"checked\": false },\n    ] },\n    { \"label\": \"Test\", \"type\": \"submenu\", \"submenu\": [\n        { \"label\": \"Test\", \"click\": function () {}, \"type\": \"checkbox\", \"checked\": false },\n        { \"label\": \"Test\", \"click\": function () {}, \"type\": \"checkbox\", \"checked\": false },\n        { \"label\": \"Test\", \"click\": function () {}, \"type\": \"checkbox\", \"checked\": false },\n    ] },\n    { \"label\": \"Test\", \"type\": \"submenu\", \"submenu\": [\n        { \"label\": \"Test\", \"click\": function () {}, \"type\": \"checkbox\", \"checked\": false },\n        { \"label\": \"Test\", \"click\": function () {}, \"type\": \"checkbox\", \"checked\": false },\n        { \"label\": \"Test\", \"click\": function () {}, \"type\": \"checkbox\", \"checked\": false },\n        { \"label\": \"Test\", \"click\": function () {}, \"type\": \"checkbox\", \"checked\": false },\n        { \"label\": \"Test\", \"click\": function () {}, \"type\": \"checkbox\", \"checked\": false },\n        { \"label\": \"Test\", \"click\": function () {}, \"type\": \"checkbox\", \"checked\": false },\n        { \"label\": \"Test\", \"click\": function () {}, \"type\": \"checkbox\", \"checked\": false }\n    ] }\n]}];\n\nwindowMenu = buildFromTemplate(windowMenuTemplate);\ncurrentWindow.setMenu(windowMenu);\nmapTemplateItemsToWindowMenu(windowMenu, windowMenuTemplate);\n\n/**\n * hack to handle menu with deepness > 3\n */\nfunction buildFromTemplate(template) {\n    var menu = new Menu();\n    template.forEach(function (mi) {\n        menu.append(new MenuItem({\n            click: mi.click,\n            selector: mi.selector,\n            type: mi.type,\n            label: mi.label,\n            sublabel: mi.sublabel,\n            accelerator: mi.accelerator,\n            icon: mi.icon,\n            enabled: mi.enabled,\n            visible: mi.visible,\n            checked: mi.checked,\n            submenu: mi.submenu ? buildFromTemplate(mi.submenu) : mi.submenu\n        }));\n    });\n    return menu;\n}\nfunction mapTemplateItemsToWindowMenu(menu, template) {\n    if (menu.items.length !== template.length) {\n        console.error(\"Failed to map window menu correctly\", template);\n    } else {\n        var items = menu.items;\n        for (var i = 0; i < items.length; i++) {\n            template[i].item = items[i];\n            if (items[i].submenu && template[i].submenu) {\n                mapTemplateItemsToWindowMenu(items[i].submenu, template[i].submenu);\n            }\n        }\n    }\n}\n</script>\n</body>\n</html>\n```\n\n[app.zip](https://cloud.githubusercontent.com/assets/988144/7117707/dc998f64-e1fa-11e4-9cfd-548bfbe7a048.png) (rename file to zip after download)\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/95141680",
    "html_url": "https://github.com/electron/electron/issues/1398#issuecomment-95141680",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1398",
    "id": 95141680,
    "user": {
      "login": "felicienfrancois",
      "id": 988144,
      "avatar_url": "https://avatars1.githubusercontent.com/u/988144?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/felicienfrancois",
      "html_url": "https://github.com/felicienfrancois",
      "followers_url": "https://api.github.com/users/felicienfrancois/followers",
      "following_url": "https://api.github.com/users/felicienfrancois/following{/other_user}",
      "gists_url": "https://api.github.com/users/felicienfrancois/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/felicienfrancois/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/felicienfrancois/subscriptions",
      "organizations_url": "https://api.github.com/users/felicienfrancois/orgs",
      "repos_url": "https://api.github.com/users/felicienfrancois/repos",
      "events_url": "https://api.github.com/users/felicienfrancois/events{/privacy}",
      "received_events_url": "https://api.github.com/users/felicienfrancois/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-22T11:18:45Z",
    "updated_at": "2015-04-22T11:18:45Z",
    "body": "Still crashing in 0.25.0\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/108700193",
    "html_url": "https://github.com/electron/electron/issues/1398#issuecomment-108700193",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1398",
    "id": 108700193,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2015-06-04T03:13:49Z",
    "updated_at": "2015-06-04T03:13:49Z",
    "body": "I looked into similar crashes in Chromium and now I'm sure it is some bug of V8, I'm merging this to #1851.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/109205300",
    "html_url": "https://github.com/electron/electron/issues/1398#issuecomment-109205300",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1398",
    "id": 109205300,
    "user": {
      "login": "Ivshti",
      "id": 1247629,
      "avatar_url": "https://avatars0.githubusercontent.com/u/1247629?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Ivshti",
      "html_url": "https://github.com/Ivshti",
      "followers_url": "https://api.github.com/users/Ivshti/followers",
      "following_url": "https://api.github.com/users/Ivshti/following{/other_user}",
      "gists_url": "https://api.github.com/users/Ivshti/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Ivshti/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Ivshti/subscriptions",
      "organizations_url": "https://api.github.com/users/Ivshti/orgs",
      "repos_url": "https://api.github.com/users/Ivshti/repos",
      "events_url": "https://api.github.com/users/Ivshti/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Ivshti/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-05T08:46:20Z",
    "updated_at": "2015-06-05T08:46:20Z",
    "body": "@felicienfrancois which is the last version which didn't crash for you?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/109212688",
    "html_url": "https://github.com/electron/electron/issues/1398#issuecomment-109212688",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1398",
    "id": 109212688,
    "user": {
      "login": "felicienfrancois",
      "id": 988144,
      "avatar_url": "https://avatars1.githubusercontent.com/u/988144?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/felicienfrancois",
      "html_url": "https://github.com/felicienfrancois",
      "followers_url": "https://api.github.com/users/felicienfrancois/followers",
      "following_url": "https://api.github.com/users/felicienfrancois/following{/other_user}",
      "gists_url": "https://api.github.com/users/felicienfrancois/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/felicienfrancois/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/felicienfrancois/subscriptions",
      "organizations_url": "https://api.github.com/users/felicienfrancois/orgs",
      "repos_url": "https://api.github.com/users/felicienfrancois/repos",
      "events_url": "https://api.github.com/users/felicienfrancois/events{/privacy}",
      "received_events_url": "https://api.github.com/users/felicienfrancois/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-05T09:11:35Z",
    "updated_at": "2015-06-05T09:11:56Z",
    "body": "@Ivshti I don't know, I havn't tried with previous versions.\nAlso I no longer experience such crash since I updated electron, but my code has also changed a lot so I can't tell you if it's fixed or not.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/109215873",
    "html_url": "https://github.com/electron/electron/issues/1398#issuecomment-109215873",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1398",
    "id": 109215873,
    "user": {
      "login": "Ivshti",
      "id": 1247629,
      "avatar_url": "https://avatars0.githubusercontent.com/u/1247629?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Ivshti",
      "html_url": "https://github.com/Ivshti",
      "followers_url": "https://api.github.com/users/Ivshti/followers",
      "following_url": "https://api.github.com/users/Ivshti/following{/other_user}",
      "gists_url": "https://api.github.com/users/Ivshti/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Ivshti/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Ivshti/subscriptions",
      "organizations_url": "https://api.github.com/users/Ivshti/orgs",
      "repos_url": "https://api.github.com/users/Ivshti/repos",
      "events_url": "https://api.github.com/users/Ivshti/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Ivshti/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-05T09:23:15Z",
    "updated_at": "2015-06-05T09:23:15Z",
    "body": "The weird thing is, I have observed it two or three times on 0.27.2 and never in 0.25.0\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/109299505",
    "html_url": "https://github.com/electron/electron/issues/1398#issuecomment-109299505",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1398",
    "id": 109299505,
    "user": {
      "login": "frankhale",
      "id": 190154,
      "avatar_url": "https://avatars2.githubusercontent.com/u/190154?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frankhale",
      "html_url": "https://github.com/frankhale",
      "followers_url": "https://api.github.com/users/frankhale/followers",
      "following_url": "https://api.github.com/users/frankhale/following{/other_user}",
      "gists_url": "https://api.github.com/users/frankhale/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frankhale/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frankhale/subscriptions",
      "organizations_url": "https://api.github.com/users/frankhale/orgs",
      "repos_url": "https://api.github.com/users/frankhale/repos",
      "events_url": "https://api.github.com/users/frankhale/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frankhale/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-05T13:52:19Z",
    "updated_at": "2015-06-05T13:52:19Z",
    "body": "I wonder if these issues are resolved by this pull request: https://github.com/atom/electron/pull/1850 \n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/114074058",
    "html_url": "https://github.com/electron/electron/issues/1398#issuecomment-114074058",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1398",
    "id": 114074058,
    "user": {
      "login": "Ivshti",
      "id": 1247629,
      "avatar_url": "https://avatars0.githubusercontent.com/u/1247629?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Ivshti",
      "html_url": "https://github.com/Ivshti",
      "followers_url": "https://api.github.com/users/Ivshti/followers",
      "following_url": "https://api.github.com/users/Ivshti/following{/other_user}",
      "gists_url": "https://api.github.com/users/Ivshti/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Ivshti/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Ivshti/subscriptions",
      "organizations_url": "https://api.github.com/users/Ivshti/orgs",
      "repos_url": "https://api.github.com/users/Ivshti/repos",
      "events_url": "https://api.github.com/users/Ivshti/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Ivshti/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-22T11:34:33Z",
    "updated_at": "2015-06-22T11:34:33Z",
    "body": "For anyone having this, try referencing all your native objects in a way they can't be GC'd, and try if the crashes occur again. For me, it might have solved the issue - I haven't experienced a crash since I did this.\n"
  }
]