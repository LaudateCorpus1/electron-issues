[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/271331110",
    "html_url": "https://github.com/electron/electron/issues/8368#issuecomment-271331110",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/8368",
    "id": 271331110,
    "user": {
      "login": "enlight",
      "id": 233003,
      "avatar_url": "https://avatars3.githubusercontent.com/u/233003?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/enlight",
      "html_url": "https://github.com/enlight",
      "followers_url": "https://api.github.com/users/enlight/followers",
      "following_url": "https://api.github.com/users/enlight/following{/other_user}",
      "gists_url": "https://api.github.com/users/enlight/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/enlight/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/enlight/subscriptions",
      "organizations_url": "https://api.github.com/users/enlight/orgs",
      "repos_url": "https://api.github.com/users/enlight/repos",
      "events_url": "https://api.github.com/users/enlight/events{/privacy}",
      "received_events_url": "https://api.github.com/users/enlight/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-09T16:25:52Z",
    "updated_at": "2017-01-09T16:25:52Z",
    "body": "No, you can't build a stripped down Electron without Chromium. Sounds like you need a packaging tool for your Node app, something like http://enclosejs.com/"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/271333687",
    "html_url": "https://github.com/electron/electron/issues/8368#issuecomment-271333687",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/8368",
    "id": 271333687,
    "user": {
      "login": "fidian",
      "id": 428348,
      "avatar_url": "https://avatars3.githubusercontent.com/u/428348?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fidian",
      "html_url": "https://github.com/fidian",
      "followers_url": "https://api.github.com/users/fidian/followers",
      "following_url": "https://api.github.com/users/fidian/following{/other_user}",
      "gists_url": "https://api.github.com/users/fidian/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fidian/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fidian/subscriptions",
      "organizations_url": "https://api.github.com/users/fidian/orgs",
      "repos_url": "https://api.github.com/users/fidian/repos",
      "events_url": "https://api.github.com/users/fidian/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fidian/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-09T16:34:46Z",
    "updated_at": "2017-01-09T16:34:46Z",
    "body": "Thanks for pointing out that project.  It was brought up by the team as well, but nobody in the office likes using software that isn't open source.  Also there is [Nexe](https://github.com/jaredallard/nexe) that doesn't support dynamic require statements.  [Disclose](https://github.com/pmq20/disclose) looks like it just bundles arbitrary files together and untars them in some folder before running them. [Nar](https://github.com/h2non/nar) has the terrible argument processing.  [JXCore](https://github.com/jxcore/jxcore/) doesn't look maintained.  [Node2exe](https://github.com/areve/node2exe) looks old and may have problems with native libraries, though it is possible that we could work around those issues.\r\n\r\nI'm also open to other alternatives if people want to recommend them."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/271343050",
    "html_url": "https://github.com/electron/electron/issues/8368#issuecomment-271343050",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/8368",
    "id": 271343050,
    "user": {
      "login": "kevinsawicki",
      "id": 671378,
      "avatar_url": "https://avatars0.githubusercontent.com/u/671378?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kevinsawicki",
      "html_url": "https://github.com/kevinsawicki",
      "followers_url": "https://api.github.com/users/kevinsawicki/followers",
      "following_url": "https://api.github.com/users/kevinsawicki/following{/other_user}",
      "gists_url": "https://api.github.com/users/kevinsawicki/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kevinsawicki/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kevinsawicki/subscriptions",
      "organizations_url": "https://api.github.com/users/kevinsawicki/orgs",
      "repos_url": "https://api.github.com/users/kevinsawicki/repos",
      "events_url": "https://api.github.com/users/kevinsawicki/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kevinsawicki/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2017-01-09T17:08:27Z",
    "updated_at": "2017-01-09T17:08:27Z",
    "body": "> If this sort of thing is not possible, would it be something that the developers would consider adding, either themselves or via pull requests?\r\n\r\nElectron is designed for building desktop apps using HTML, JavaScript, and CSS. Bundling and integrating with Chromium enables that. It isn't an ideal fit for command line applications with no GUIs and probably won't ever be.\r\n\r\nMany applications do ship a command line wrapper for their apps that launches the UI version (like Atom, VSCode, etc.). We are interested and committed to supporting this use-case because it enables apps to have solid terminal integration to launch and manage their GUIs.\r\n\r\nI'd recommend just using Node directly for this and recompile it for the application you are building to include all necessary modules, dependencies, etc."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/271446796",
    "html_url": "https://github.com/electron/electron/issues/8368#issuecomment-271446796",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/8368",
    "id": 271446796,
    "user": {
      "login": "levrik",
      "id": 9491603,
      "avatar_url": "https://avatars0.githubusercontent.com/u/9491603?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/levrik",
      "html_url": "https://github.com/levrik",
      "followers_url": "https://api.github.com/users/levrik/followers",
      "following_url": "https://api.github.com/users/levrik/following{/other_user}",
      "gists_url": "https://api.github.com/users/levrik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/levrik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/levrik/subscriptions",
      "organizations_url": "https://api.github.com/users/levrik/orgs",
      "repos_url": "https://api.github.com/users/levrik/repos",
      "events_url": "https://api.github.com/users/levrik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/levrik/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-10T00:01:48Z",
    "updated_at": "2017-01-10T00:01:48Z",
    "body": "@fidian Did you already tried that? https://github.com/pmq20/node-compiler"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/271580797",
    "html_url": "https://github.com/electron/electron/issues/8368#issuecomment-271580797",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/8368",
    "id": 271580797,
    "user": {
      "login": "fidian",
      "id": 428348,
      "avatar_url": "https://avatars3.githubusercontent.com/u/428348?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fidian",
      "html_url": "https://github.com/fidian",
      "followers_url": "https://api.github.com/users/fidian/followers",
      "following_url": "https://api.github.com/users/fidian/following{/other_user}",
      "gists_url": "https://api.github.com/users/fidian/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fidian/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fidian/subscriptions",
      "organizations_url": "https://api.github.com/users/fidian/orgs",
      "repos_url": "https://api.github.com/users/fidian/repos",
      "events_url": "https://api.github.com/users/fidian/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fidian/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-10T13:54:41Z",
    "updated_at": "2017-01-10T13:54:41Z",
    "body": "I'm asking another developer to evaluate that tool.  I don't have high hopes because the documentation is sketchy, download links are missing, the build is failing, there's a broken image for the latest broken build and finally there's no discussion about how it bundles files nor if it handles native binaries."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/271584616",
    "html_url": "https://github.com/electron/electron/issues/8368#issuecomment-271584616",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/8368",
    "id": 271584616,
    "user": {
      "login": "MarshallOfSound",
      "id": 6634592,
      "avatar_url": "https://avatars0.githubusercontent.com/u/6634592?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarshallOfSound",
      "html_url": "https://github.com/MarshallOfSound",
      "followers_url": "https://api.github.com/users/MarshallOfSound/followers",
      "following_url": "https://api.github.com/users/MarshallOfSound/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarshallOfSound/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarshallOfSound/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarshallOfSound/subscriptions",
      "organizations_url": "https://api.github.com/users/MarshallOfSound/orgs",
      "repos_url": "https://api.github.com/users/MarshallOfSound/repos",
      "events_url": "https://api.github.com/users/MarshallOfSound/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarshallOfSound/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-10T14:11:11Z",
    "updated_at": "2017-01-10T14:11:11Z",
    "body": "> One of the developers is looking into how this program can be offered as a standalone, \"precompiled\" command-line tool.\r\n\r\n@fidian I would suggest you look into how `yarn` does it (they are the best example that comes to mind).\r\n\r\nThey ship through `brew` for macOS, a custom MSI for windows and an install script (that basically downloads the binary) for linux.  If you look into how their builds work you might find an easy answer.  They have a reasonably active discord chat so you might be able to ask for pointers there."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/271591134",
    "html_url": "https://github.com/electron/electron/issues/8368#issuecomment-271591134",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/8368",
    "id": 271591134,
    "user": {
      "login": "fidian",
      "id": 428348,
      "avatar_url": "https://avatars3.githubusercontent.com/u/428348?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fidian",
      "html_url": "https://github.com/fidian",
      "followers_url": "https://api.github.com/users/fidian/followers",
      "following_url": "https://api.github.com/users/fidian/following{/other_user}",
      "gists_url": "https://api.github.com/users/fidian/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fidian/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fidian/subscriptions",
      "organizations_url": "https://api.github.com/users/fidian/orgs",
      "repos_url": "https://api.github.com/users/fidian/repos",
      "events_url": "https://api.github.com/users/fidian/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fidian/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-10T14:36:53Z",
    "updated_at": "2017-01-10T14:36:53Z",
    "body": "@MarshallOfSound As I understand it, I would need to install `yarn`, which is not what I'm hoping to do.  The idea is to use JavaScript to build a command-line tool and then bundle the whole thing as a single, platform-specific executable file.  Similar to compiling it with Go or C.\r\n\r\nIf I were to use another approach, I guess I would have everyone install node and use npm to install packages.  The goal is to not force people to install any software (node included) prior to running the tool."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/271592405",
    "html_url": "https://github.com/electron/electron/issues/8368#issuecomment-271592405",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/8368",
    "id": 271592405,
    "user": {
      "login": "MarshallOfSound",
      "id": 6634592,
      "avatar_url": "https://avatars0.githubusercontent.com/u/6634592?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarshallOfSound",
      "html_url": "https://github.com/MarshallOfSound",
      "followers_url": "https://api.github.com/users/MarshallOfSound/followers",
      "following_url": "https://api.github.com/users/MarshallOfSound/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarshallOfSound/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarshallOfSound/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarshallOfSound/subscriptions",
      "organizations_url": "https://api.github.com/users/MarshallOfSound/orgs",
      "repos_url": "https://api.github.com/users/MarshallOfSound/repos",
      "events_url": "https://api.github.com/users/MarshallOfSound/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarshallOfSound/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-10T14:42:01Z",
    "updated_at": "2017-01-10T14:42:01Z",
    "body": "@fidian No, I'm saying yarn has already solved this problem.  Yarn is fundamentally written in JS, runs on node, but needs to run outside of the NPM ecosystem as a CLI application.\r\n\r\nThey ship their own binaries for each OS.  I was suggesting you look into how they generate their binaries and implement something similar."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/271597489",
    "html_url": "https://github.com/electron/electron/issues/8368#issuecomment-271597489",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/8368",
    "id": 271597489,
    "user": {
      "login": "fidian",
      "id": 428348,
      "avatar_url": "https://avatars3.githubusercontent.com/u/428348?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fidian",
      "html_url": "https://github.com/fidian",
      "followers_url": "https://api.github.com/users/fidian/followers",
      "following_url": "https://api.github.com/users/fidian/following{/other_user}",
      "gists_url": "https://api.github.com/users/fidian/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fidian/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fidian/subscriptions",
      "organizations_url": "https://api.github.com/users/fidian/orgs",
      "repos_url": "https://api.github.com/users/fidian/repos",
      "events_url": "https://api.github.com/users/fidian/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fidian/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-10T15:00:40Z",
    "updated_at": "2017-01-10T15:00:40Z",
    "body": "@MarshallOfSound Please let me reiterate: I do not want an installer.  I can make an installer that installs node and my software, similar to what `yarn` does.  That is not the goal.  Put another way, I want a portable application that doesn't need any additional software in order to run.  Portable meaning it can run off a jump drive and is self-contained, leaving no cruft on the system after it executes."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/271603364",
    "html_url": "https://github.com/electron/electron/issues/8368#issuecomment-271603364",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/8368",
    "id": 271603364,
    "user": {
      "login": "levrik",
      "id": 9491603,
      "avatar_url": "https://avatars0.githubusercontent.com/u/9491603?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/levrik",
      "html_url": "https://github.com/levrik",
      "followers_url": "https://api.github.com/users/levrik/followers",
      "following_url": "https://api.github.com/users/levrik/following{/other_user}",
      "gists_url": "https://api.github.com/users/levrik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/levrik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/levrik/subscriptions",
      "organizations_url": "https://api.github.com/users/levrik/orgs",
      "repos_url": "https://api.github.com/users/levrik/repos",
      "events_url": "https://api.github.com/users/levrik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/levrik/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-10T15:22:10Z",
    "updated_at": "2017-01-10T15:22:10Z",
    "body": "@fidian I think Javascript is not the right technology for that then. Just to name some, I think Go, C, C++ or C# would fit better."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/271607798",
    "html_url": "https://github.com/electron/electron/issues/8368#issuecomment-271607798",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/8368",
    "id": 271607798,
    "user": {
      "login": "fidian",
      "id": 428348,
      "avatar_url": "https://avatars3.githubusercontent.com/u/428348?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fidian",
      "html_url": "https://github.com/fidian",
      "followers_url": "https://api.github.com/users/fidian/followers",
      "following_url": "https://api.github.com/users/fidian/following{/other_user}",
      "gists_url": "https://api.github.com/users/fidian/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fidian/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fidian/subscriptions",
      "organizations_url": "https://api.github.com/users/fidian/orgs",
      "repos_url": "https://api.github.com/users/fidian/repos",
      "events_url": "https://api.github.com/users/fidian/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fidian/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-10T15:36:59Z",
    "updated_at": "2017-01-10T15:36:59Z",
    "body": "@levrik I fail to see your point.  Could you elaborate and explain why JavaScript is the right technology when bundling Chromium as well, but not the right technology for command-line tools?  Wouldn't your statement suggest that Electron is also going about this in the wrong manner?\r\n\r\nMany of my goals align to what Electron provides, from my understanding.  If I am wrong, please correct me.\r\n\r\n* Bundles up a bunch of JavaScript.\r\n* Can be made into a single executable.\r\n* No need to install Node or anything else first.\r\n* Works for native modules.\r\n\r\nThe bit that I don't need is several megabytes of Chromium."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/271629496",
    "html_url": "https://github.com/electron/electron/issues/8368#issuecomment-271629496",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/8368",
    "id": 271629496,
    "user": {
      "login": "kevinsawicki",
      "id": 671378,
      "avatar_url": "https://avatars0.githubusercontent.com/u/671378?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kevinsawicki",
      "html_url": "https://github.com/kevinsawicki",
      "followers_url": "https://api.github.com/users/kevinsawicki/followers",
      "following_url": "https://api.github.com/users/kevinsawicki/following{/other_user}",
      "gists_url": "https://api.github.com/users/kevinsawicki/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kevinsawicki/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kevinsawicki/subscriptions",
      "organizations_url": "https://api.github.com/users/kevinsawicki/orgs",
      "repos_url": "https://api.github.com/users/kevinsawicki/repos",
      "events_url": "https://api.github.com/users/kevinsawicki/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kevinsawicki/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2017-01-10T16:49:43Z",
    "updated_at": "2017-01-10T16:49:43Z",
    "body": "> Can be made into a single executable.\r\n\r\nThis is not true on macOS, Electron builds as a `.app` with several Frameworks inside it. Node on the other hand builds as a single executable on macOS."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/271692753",
    "html_url": "https://github.com/electron/electron/issues/8368#issuecomment-271692753",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/8368",
    "id": 271692753,
    "user": {
      "login": "baconbrad",
      "id": 4763342,
      "avatar_url": "https://avatars1.githubusercontent.com/u/4763342?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/baconbrad",
      "html_url": "https://github.com/baconbrad",
      "followers_url": "https://api.github.com/users/baconbrad/followers",
      "following_url": "https://api.github.com/users/baconbrad/following{/other_user}",
      "gists_url": "https://api.github.com/users/baconbrad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/baconbrad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/baconbrad/subscriptions",
      "organizations_url": "https://api.github.com/users/baconbrad/orgs",
      "repos_url": "https://api.github.com/users/baconbrad/repos",
      "events_url": "https://api.github.com/users/baconbrad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/baconbrad/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-10T20:45:36Z",
    "updated_at": "2017-01-10T20:46:33Z",
    "body": "> Could you elaborate and explain why JavaScript is the right technology when bundling Chromium as well, but not the right technology for command-line tools? Wouldn't your statement suggest that Electron is also going about this in the wrong manner?\r\n\r\nElectron is not going the wrong way and JavaScript is great technology for command-line tools. It is just what you are expecting of JavaScript for your purpose is only possible through projects like EncloseJS which you seem to have rejected. If you are not finding any other workaround then he is not suggesting JavaScript isn't a right technology but he is suggesting it is not the right technology for _your purpose_. Hence he suggested Go, C, C++, etc which allow you to create a self contained command line tool, with minimal file size, and no dependencies. Electron just simply doesn't fit your particular purpose and it's scope will never fit that purpose."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/271717309",
    "html_url": "https://github.com/electron/electron/issues/8368#issuecomment-271717309",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/8368",
    "id": 271717309,
    "user": {
      "login": "levrik",
      "id": 9491603,
      "avatar_url": "https://avatars0.githubusercontent.com/u/9491603?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/levrik",
      "html_url": "https://github.com/levrik",
      "followers_url": "https://api.github.com/users/levrik/followers",
      "following_url": "https://api.github.com/users/levrik/following{/other_user}",
      "gists_url": "https://api.github.com/users/levrik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/levrik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/levrik/subscriptions",
      "organizations_url": "https://api.github.com/users/levrik/orgs",
      "repos_url": "https://api.github.com/users/levrik/repos",
      "events_url": "https://api.github.com/users/levrik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/levrik/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-10T22:23:23Z",
    "updated_at": "2017-01-10T22:25:15Z",
    "body": "Thanks @baconface. That is exactly what I wanted to say."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/271901524",
    "html_url": "https://github.com/electron/electron/issues/8368#issuecomment-271901524",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/8368",
    "id": 271901524,
    "user": {
      "login": "fidian",
      "id": 428348,
      "avatar_url": "https://avatars3.githubusercontent.com/u/428348?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fidian",
      "html_url": "https://github.com/fidian",
      "followers_url": "https://api.github.com/users/fidian/followers",
      "following_url": "https://api.github.com/users/fidian/following{/other_user}",
      "gists_url": "https://api.github.com/users/fidian/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fidian/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fidian/subscriptions",
      "organizations_url": "https://api.github.com/users/fidian/orgs",
      "repos_url": "https://api.github.com/users/fidian/repos",
      "events_url": "https://api.github.com/users/fidian/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fidian/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-11T15:39:16Z",
    "updated_at": "2017-01-11T15:39:16Z",
    "body": "@kevinsawicki Is it inaccurate when I say that Electron builds a single \"thing\" that can be executed directly?  I don't know about `.app` files on MacOS, but I thought they didn't always require installation in order to execute.  If it's treated as a single thing and can run it directly, I don't really care if it extracts into memory and runs or if it is just a single executable.  My goals align with ease of installation and leaving little to nothing behind after being ran.\r\n\r\n@baconface Is the scope of Electron documented somewhere?  I would have expected a statement regarding scope to come from one of the members of the project.  Granted, you are a contributor and have a far better understanding of Electron than I do and your statement carries some weight.  However, I've seen many contributors fall short of the communal knowledge and internal direction that maintainers preferred and would like confirmation, which would probably also mean closing this ticket.\r\n\r\nAnd a bit for everyone:\r\n\r\nI'm very glad that so many people are taking an interest in this discussion.  I thank you for your continually helpful posts to other tools and further questions.  However, I feel that the conversation has diverged from the original intent.  My initial post asked a question that I don't believe was adequately addressed by an authoritative member.  I apologize if I had missed it or if @baconface is truly a member of the organization - I do not mean to speak out of turn.\r\n\r\nThe question was thus:\r\n\r\n> If this sort of thing is not possible, would it be something that the developers would consider adding, either themselves or via pull requests?\r\n\r\nIt's true that several comments related to clarification about what I meant by a single executable and people have suggested techniques where I would not quite meet my goals.  It's also possible that my goals are unreasonable, but that discussion should be outside the scope of this issue.  The point was to see if this type of thing could be accomplished in Electron currently as it stands.  If not, would the project be willing to go in that direction or be willing to accept pull requests that add options to tools that lie in that direction."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/271930150",
    "html_url": "https://github.com/electron/electron/issues/8368#issuecomment-271930150",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/8368",
    "id": 271930150,
    "user": {
      "login": "levrik",
      "id": 9491603,
      "avatar_url": "https://avatars0.githubusercontent.com/u/9491603?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/levrik",
      "html_url": "https://github.com/levrik",
      "followers_url": "https://api.github.com/users/levrik/followers",
      "following_url": "https://api.github.com/users/levrik/following{/other_user}",
      "gists_url": "https://api.github.com/users/levrik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/levrik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/levrik/subscriptions",
      "organizations_url": "https://api.github.com/users/levrik/orgs",
      "repos_url": "https://api.github.com/users/levrik/repos",
      "events_url": "https://api.github.com/users/levrik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/levrik/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-11T17:14:28Z",
    "updated_at": "2017-01-11T23:59:54Z",
    "body": "@fidian That a .app file is a single file on macOS is right. But if you want to go cross platform it is not possible. You cannot build an Electron app to a single file like an EXE on Windows. Besides that if you would strip out Chromium from Electron, the only thing that would left is Node. So. Why not use Node directly and search for some packager like already mentioned many times?"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/272033829",
    "html_url": "https://github.com/electron/electron/issues/8368#issuecomment-272033829",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/8368",
    "id": 272033829,
    "user": {
      "login": "TimNZ",
      "id": 1051701,
      "avatar_url": "https://avatars3.githubusercontent.com/u/1051701?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TimNZ",
      "html_url": "https://github.com/TimNZ",
      "followers_url": "https://api.github.com/users/TimNZ/followers",
      "following_url": "https://api.github.com/users/TimNZ/following{/other_user}",
      "gists_url": "https://api.github.com/users/TimNZ/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TimNZ/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TimNZ/subscriptions",
      "organizations_url": "https://api.github.com/users/TimNZ/orgs",
      "repos_url": "https://api.github.com/users/TimNZ/repos",
      "events_url": "https://api.github.com/users/TimNZ/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TimNZ/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-11T23:54:56Z",
    "updated_at": "2017-01-12T04:11:26Z",
    "body": "Hi @fidian I'll add my blunt 2 cents  - your question has been very extensively answered.\r\n\r\nElectron is not the tool for what you want to do, and I don't even understand why you continue to think it is.   Perhaps you don't have enough technical knowledge to evaluate the clear concise answers you are being given.\r\n\r\nElectron is Node JS + Chromium for web apps on the desktop.\r\n\r\nNode JS and a packager is the combo you should be looking at if you want access to Node stuff.\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/272039870",
    "html_url": "https://github.com/electron/electron/issues/8368#issuecomment-272039870",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/8368",
    "id": 272039870,
    "user": {
      "login": "baconbrad",
      "id": 4763342,
      "avatar_url": "https://avatars1.githubusercontent.com/u/4763342?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/baconbrad",
      "html_url": "https://github.com/baconbrad",
      "followers_url": "https://api.github.com/users/baconbrad/followers",
      "following_url": "https://api.github.com/users/baconbrad/following{/other_user}",
      "gists_url": "https://api.github.com/users/baconbrad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/baconbrad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/baconbrad/subscriptions",
      "organizations_url": "https://api.github.com/users/baconbrad/orgs",
      "repos_url": "https://api.github.com/users/baconbrad/repos",
      "events_url": "https://api.github.com/users/baconbrad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/baconbrad/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-12T00:29:37Z",
    "updated_at": "2017-01-12T00:44:01Z",
    "body": "> Is the scope of Electron documented somewhere? \r\n\r\n@fidian For full disclosure I do not maintain Electron or have any control of it's direction. I simply contribute like anyone else can. But it's scope basically stems from it's description and mission posted just about everywhere stating \"Build cross platform desktop apps with JavaScript, HTML, and CSS\". So the purpose is to build a graphical desktop app using web technologies. As a result Chromium becomes a core component of the project. Basically one of the foundations of how it all works. And at this point removing Chromium basically breaks the project. So to ask that Chromium be removed it can no longer serve it's mission making your request out of this scope.\r\n\r\nI am not trying to be rude. I was just putting in my 2 cents this wouldn't meet your current needs since Chromium was a deal breaker."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/272522752",
    "html_url": "https://github.com/electron/electron/issues/8368#issuecomment-272522752",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/8368",
    "id": 272522752,
    "user": {
      "login": "kevinsawicki",
      "id": 671378,
      "avatar_url": "https://avatars0.githubusercontent.com/u/671378?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kevinsawicki",
      "html_url": "https://github.com/kevinsawicki",
      "followers_url": "https://api.github.com/users/kevinsawicki/followers",
      "following_url": "https://api.github.com/users/kevinsawicki/following{/other_user}",
      "gists_url": "https://api.github.com/users/kevinsawicki/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kevinsawicki/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kevinsawicki/subscriptions",
      "organizations_url": "https://api.github.com/users/kevinsawicki/orgs",
      "repos_url": "https://api.github.com/users/kevinsawicki/repos",
      "events_url": "https://api.github.com/users/kevinsawicki/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kevinsawicki/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2017-01-13T19:16:46Z",
    "updated_at": "2017-01-13T19:16:46Z",
    "body": "> The point was to see if this type of thing could be accomplished in Electron currently as it stands. If not, would the project be willing to go in that direction or be willing to accept pull requests that add options to tools that lie in that direction.\r\n\r\nElectron is designed for UI applications and not for command-line applications.\r\n\r\nShipping a version of Electron without Chromium would essentially mean just shipping Node since almost all of the API Electron provides build on top of APIs that Chromium provides. The APIs listed on http://electron.atom.io/docs/api/ are dependent on Chromium so it isn't feasible to build/ship a version of Electron without Chromium because it wouldn't enable you to build desktop applications using JavaScript, HTML, and CSS which is the core mission of Electron.\r\n\r\nRebuilding/rebranding/redistributing Node is a great way to build a CLI application that supports JavaScript, native extensions, and an event loop on lots of platforms and architectures.\r\n\r\nAs I mentioned previously, we would be interested in pull requests and APIs that better enable people to build/ship command line wrappers around Electron apps since it is a common use case where people want to interact with apps from both the terminal and the dock.\r\n\r\nI'm going to close this out, thanks to everyone who participated."
  }
]