[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/244051478",
    "html_url": "https://github.com/electron/electron/issues/7057#issuecomment-244051478",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7057",
    "id": 244051478,
    "user": {
      "login": "MarshallOfSound",
      "id": 6634592,
      "avatar_url": "https://avatars0.githubusercontent.com/u/6634592?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarshallOfSound",
      "html_url": "https://github.com/MarshallOfSound",
      "followers_url": "https://api.github.com/users/MarshallOfSound/followers",
      "following_url": "https://api.github.com/users/MarshallOfSound/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarshallOfSound/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarshallOfSound/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarshallOfSound/subscriptions",
      "organizations_url": "https://api.github.com/users/MarshallOfSound/orgs",
      "repos_url": "https://api.github.com/users/MarshallOfSound/repos",
      "events_url": "https://api.github.com/users/MarshallOfSound/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarshallOfSound/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-01T11:29:09Z",
    "updated_at": "2016-09-01T11:29:09Z",
    "body": "> So, my question is : Is there any way to access the DOM from a child process ?\n\nNo, IPC can not support DOM objects\n\nSee #6998 for a bit more info\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/244058618",
    "html_url": "https://github.com/electron/electron/issues/7057#issuecomment-244058618",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7057",
    "id": 244058618,
    "user": {
      "login": "ClementNerma",
      "id": 9782521,
      "avatar_url": "https://avatars1.githubusercontent.com/u/9782521?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ClementNerma",
      "html_url": "https://github.com/ClementNerma",
      "followers_url": "https://api.github.com/users/ClementNerma/followers",
      "following_url": "https://api.github.com/users/ClementNerma/following{/other_user}",
      "gists_url": "https://api.github.com/users/ClementNerma/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ClementNerma/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ClementNerma/subscriptions",
      "organizations_url": "https://api.github.com/users/ClementNerma/orgs",
      "repos_url": "https://api.github.com/users/ClementNerma/repos",
      "events_url": "https://api.github.com/users/ClementNerma/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ClementNerma/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-01T12:05:03Z",
    "updated_at": "2016-09-01T12:05:03Z",
    "body": "Thanks for this answer. Is there a way to override the `ELECTRON_RUN_AS_NODE` variable when creating a new child process ?\nOr is there a way to do that by changing the source code of Electron ?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/244062374",
    "html_url": "https://github.com/electron/electron/issues/7057#issuecomment-244062374",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7057",
    "id": 244062374,
    "user": {
      "login": "MarshallOfSound",
      "id": 6634592,
      "avatar_url": "https://avatars0.githubusercontent.com/u/6634592?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarshallOfSound",
      "html_url": "https://github.com/MarshallOfSound",
      "followers_url": "https://api.github.com/users/MarshallOfSound/followers",
      "following_url": "https://api.github.com/users/MarshallOfSound/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarshallOfSound/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarshallOfSound/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarshallOfSound/subscriptions",
      "organizations_url": "https://api.github.com/users/MarshallOfSound/orgs",
      "repos_url": "https://api.github.com/users/MarshallOfSound/repos",
      "events_url": "https://api.github.com/users/MarshallOfSound/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarshallOfSound/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-01T12:23:38Z",
    "updated_at": "2016-09-01T12:23:38Z",
    "body": "@ClementNerma Check out this answer on a similar issue\n\nhttps://github.com/electron/electron/issues/6656#issuecomment-236340999\n\nBasically use `spawn` instead of `fork`\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/244074347",
    "html_url": "https://github.com/electron/electron/issues/7057#issuecomment-244074347",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7057",
    "id": 244074347,
    "user": {
      "login": "ClementNerma",
      "id": 9782521,
      "avatar_url": "https://avatars1.githubusercontent.com/u/9782521?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ClementNerma",
      "html_url": "https://github.com/ClementNerma",
      "followers_url": "https://api.github.com/users/ClementNerma/followers",
      "following_url": "https://api.github.com/users/ClementNerma/following{/other_user}",
      "gists_url": "https://api.github.com/users/ClementNerma/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ClementNerma/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ClementNerma/subscriptions",
      "organizations_url": "https://api.github.com/users/ClementNerma/orgs",
      "repos_url": "https://api.github.com/users/ClementNerma/repos",
      "events_url": "https://api.github.com/users/ClementNerma/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ClementNerma/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-01T13:13:38Z",
    "updated_at": "2016-09-01T13:15:34Z",
    "body": "I've already seen this issue when I was looking for a solution to my problem, but that doesn't solve my problem.\nUsing the `spawn` method doesn't permit me to access the renderer process' DOM tree. The file runned with `child_process.spawn()` is considered as the electron's main process file, so I'm only able to make a new Electron window with it.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/244078058",
    "html_url": "https://github.com/electron/electron/issues/7057#issuecomment-244078058",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7057",
    "id": 244078058,
    "user": {
      "login": "MarshallOfSound",
      "id": 6634592,
      "avatar_url": "https://avatars0.githubusercontent.com/u/6634592?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarshallOfSound",
      "html_url": "https://github.com/MarshallOfSound",
      "followers_url": "https://api.github.com/users/MarshallOfSound/followers",
      "following_url": "https://api.github.com/users/MarshallOfSound/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarshallOfSound/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarshallOfSound/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarshallOfSound/subscriptions",
      "organizations_url": "https://api.github.com/users/MarshallOfSound/orgs",
      "repos_url": "https://api.github.com/users/MarshallOfSound/repos",
      "events_url": "https://api.github.com/users/MarshallOfSound/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarshallOfSound/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-01T13:27:44Z",
    "updated_at": "2016-09-01T13:27:44Z",
    "body": "`child_process.spawn()` can use IPC just the same as `fork()`\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/244078523",
    "html_url": "https://github.com/electron/electron/issues/7057#issuecomment-244078523",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7057",
    "id": 244078523,
    "user": {
      "login": "ClementNerma",
      "id": 9782521,
      "avatar_url": "https://avatars1.githubusercontent.com/u/9782521?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ClementNerma",
      "html_url": "https://github.com/ClementNerma",
      "followers_url": "https://api.github.com/users/ClementNerma/followers",
      "following_url": "https://api.github.com/users/ClementNerma/following{/other_user}",
      "gists_url": "https://api.github.com/users/ClementNerma/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ClementNerma/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ClementNerma/subscriptions",
      "organizations_url": "https://api.github.com/users/ClementNerma/orgs",
      "repos_url": "https://api.github.com/users/ClementNerma/repos",
      "events_url": "https://api.github.com/users/ClementNerma/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ClementNerma/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-01T13:29:27Z",
    "updated_at": "2016-09-01T13:43:54Z",
    "body": "Yes, I've tested this way and maked an IPC communication channel between the renderer and the child proecess, but that doesn't solve my problem, how the `spawn()` method can permit me to access the DOM ?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/244093193",
    "html_url": "https://github.com/electron/electron/issues/7057#issuecomment-244093193",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7057",
    "id": 244093193,
    "user": {
      "login": "MarshallOfSound",
      "id": 6634592,
      "avatar_url": "https://avatars0.githubusercontent.com/u/6634592?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarshallOfSound",
      "html_url": "https://github.com/MarshallOfSound",
      "followers_url": "https://api.github.com/users/MarshallOfSound/followers",
      "following_url": "https://api.github.com/users/MarshallOfSound/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarshallOfSound/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarshallOfSound/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarshallOfSound/subscriptions",
      "organizations_url": "https://api.github.com/users/MarshallOfSound/orgs",
      "repos_url": "https://api.github.com/users/MarshallOfSound/repos",
      "events_url": "https://api.github.com/users/MarshallOfSound/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarshallOfSound/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-01T14:18:29Z",
    "updated_at": "2016-09-01T14:18:29Z",
    "body": "@ClementNerma It doesn't give direct access to DOM.  If you are trying to manipulate the DOM from another process you might need to rethink your apps architecture.\n\nYou can send and receive custom IPC events to create and remove elements though.  Just set up your own listeners and senders.\n\nWhy do you need to access the DOM from a child process?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/244098376",
    "html_url": "https://github.com/electron/electron/issues/7057#issuecomment-244098376",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7057",
    "id": 244098376,
    "user": {
      "login": "ClementNerma",
      "id": 9782521,
      "avatar_url": "https://avatars1.githubusercontent.com/u/9782521?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ClementNerma",
      "html_url": "https://github.com/ClementNerma",
      "followers_url": "https://api.github.com/users/ClementNerma/followers",
      "following_url": "https://api.github.com/users/ClementNerma/following{/other_user}",
      "gists_url": "https://api.github.com/users/ClementNerma/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ClementNerma/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ClementNerma/subscriptions",
      "organizations_url": "https://api.github.com/users/ClementNerma/orgs",
      "repos_url": "https://api.github.com/users/ClementNerma/repos",
      "events_url": "https://api.github.com/users/ClementNerma/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ClementNerma/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-01T14:34:45Z",
    "updated_at": "2016-09-01T15:05:39Z",
    "body": "I'm making an application with runs like a desktop environment for Linux. It is built with Electron.\nThe renderer process manage the system and can also run applications. These applications needs to have a DOM access for displaying things. They are runned into a `vm` to limit their scope and the things they have access to.\nThe system needs to be able to stop the application, but a vm doesn't permit that. So I run it into a child process. Also that permit to have greater performances because the applications which needs the more performance will have a bigger priority than the other when they run into another processes.\n\nIf I run all applications into a single process, the performances will be very bad, so I need to use child processes, and have an access to the DOM from them. IPC communcations are really too slow for doing it, I need to permit at leat ten thousand of operations on the DOM tree per second, else it will be so slow.\n\nAlso, using IPC for DOM operations causes very big problems : if I want to run the following code :\n\n``` JavaScript\nfor(let element of document.body.children)\n    element.innerHTML += \"<br />Edited\";\n```\n\nThe performances will be very bad and I will need to put an asynchronous code because IPC communications are async. I didn't find any way about synchronous IPC communications.\n\nThere is now way to set the `ELECTRON_RUN_AS_NODE` variable for the main process ?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/244109312",
    "html_url": "https://github.com/electron/electron/issues/7057#issuecomment-244109312",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7057",
    "id": 244109312,
    "user": {
      "login": "MarshallOfSound",
      "id": 6634592,
      "avatar_url": "https://avatars0.githubusercontent.com/u/6634592?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarshallOfSound",
      "html_url": "https://github.com/MarshallOfSound",
      "followers_url": "https://api.github.com/users/MarshallOfSound/followers",
      "following_url": "https://api.github.com/users/MarshallOfSound/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarshallOfSound/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarshallOfSound/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarshallOfSound/subscriptions",
      "organizations_url": "https://api.github.com/users/MarshallOfSound/orgs",
      "repos_url": "https://api.github.com/users/MarshallOfSound/repos",
      "events_url": "https://api.github.com/users/MarshallOfSound/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarshallOfSound/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-01T15:08:04Z",
    "updated_at": "2016-09-01T15:08:04Z",
    "body": "It sounds to me like you are trying to do something that Electron's IPC architecture was never designed to support,\n\n> I need to permit at leat ten thousand of operations on the DOM tree per second, else it will be so slow.\n\nThis just straight up isn't possible.  I couldn't do tens of thousands operations on the DOM per second in the same `webContents` let only over some kind of IPC wrapper...\n\n>  I didn't find any way about synchronous IPC communications.\n\nYou can do synchronous IPC communication between `renderer` and `main` processes using `ipcRenderer.sendSync`\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/244113069",
    "html_url": "https://github.com/electron/electron/issues/7057#issuecomment-244113069",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7057",
    "id": 244113069,
    "user": {
      "login": "ClementNerma",
      "id": 9782521,
      "avatar_url": "https://avatars1.githubusercontent.com/u/9782521?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ClementNerma",
      "html_url": "https://github.com/ClementNerma",
      "followers_url": "https://api.github.com/users/ClementNerma/followers",
      "following_url": "https://api.github.com/users/ClementNerma/following{/other_user}",
      "gists_url": "https://api.github.com/users/ClementNerma/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ClementNerma/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ClementNerma/subscriptions",
      "organizations_url": "https://api.github.com/users/ClementNerma/orgs",
      "repos_url": "https://api.github.com/users/ClementNerma/repos",
      "events_url": "https://api.github.com/users/ClementNerma/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ClementNerma/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-01T15:19:19Z",
    "updated_at": "2016-09-01T15:20:27Z",
    "body": "> It sounds to me like you are trying to do something that Electron's IPC architecture was never designed to support\n\nThat's possible, and that's why I created this issue.\n\n> You can do synchronous IPC communication between renderer and main processes using `ipcRenderer.sendSync`\n\nYes, but not between renderer process and child processes.\n\nI have a last question : is it possible to change the `ELECTRON_RUN_AS_NODE` like I said in my previous post or is it impossible ?\n\nThanks for your support !\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/244435830",
    "html_url": "https://github.com/electron/electron/issues/7057#issuecomment-244435830",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/7057",
    "id": 244435830,
    "user": {
      "login": "ClementNerma",
      "id": 9782521,
      "avatar_url": "https://avatars1.githubusercontent.com/u/9782521?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ClementNerma",
      "html_url": "https://github.com/ClementNerma",
      "followers_url": "https://api.github.com/users/ClementNerma/followers",
      "following_url": "https://api.github.com/users/ClementNerma/following{/other_user}",
      "gists_url": "https://api.github.com/users/ClementNerma/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ClementNerma/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ClementNerma/subscriptions",
      "organizations_url": "https://api.github.com/users/ClementNerma/orgs",
      "repos_url": "https://api.github.com/users/ClementNerma/repos",
      "events_url": "https://api.github.com/users/ClementNerma/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ClementNerma/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-02T17:19:38Z",
    "updated_at": "2016-09-02T17:19:38Z",
    "body": "I reply here to post a way I've finally found to solve this problem :\nBy running the untrusted application's code into a `<webview>` tag inside the renderer's DOM tree, it's possible to allow the code to run into another process (`webview` _always_ run into a new process) and access a DOM tree they can manage. The main frame cannot access to the webview's content but that's not a problem here.\nWhen the main frame wants to stop the application, we just have to remove the `webview` element, that will stop all JavaScript code running inside it.\nThe only remaining problem is that the new `webview` will not be able to access any element parent to it. But that solve the biggest problem I had.\n"
  }
]