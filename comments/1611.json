[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/100036999",
    "html_url": "https://github.com/electron/electron/issues/1611#issuecomment-100036999",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1611",
    "id": 100036999,
    "user": {
      "login": "marekhrabe",
      "id": 156676,
      "avatar_url": "https://avatars0.githubusercontent.com/u/156676?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/marekhrabe",
      "html_url": "https://github.com/marekhrabe",
      "followers_url": "https://api.github.com/users/marekhrabe/followers",
      "following_url": "https://api.github.com/users/marekhrabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/marekhrabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/marekhrabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/marekhrabe/subscriptions",
      "organizations_url": "https://api.github.com/users/marekhrabe/orgs",
      "repos_url": "https://api.github.com/users/marekhrabe/repos",
      "events_url": "https://api.github.com/users/marekhrabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/marekhrabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-07T22:21:43Z",
    "updated_at": "2015-05-07T22:21:43Z",
    "body": "best choice might be to avoid using browserify in electron. just load the main script directly without any transforms. you can just do `require('react'), require('ipc'), require('fs')` or anything in the script directly without any browserify shimming, because you are in fact in a node environment\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/100038121",
    "html_url": "https://github.com/electron/electron/issues/1611#issuecomment-100038121",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1611",
    "id": 100038121,
    "user": {
      "login": "mderazon",
      "id": 717076,
      "avatar_url": "https://avatars3.githubusercontent.com/u/717076?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mderazon",
      "html_url": "https://github.com/mderazon",
      "followers_url": "https://api.github.com/users/mderazon/followers",
      "following_url": "https://api.github.com/users/mderazon/following{/other_user}",
      "gists_url": "https://api.github.com/users/mderazon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mderazon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mderazon/subscriptions",
      "organizations_url": "https://api.github.com/users/mderazon/orgs",
      "repos_url": "https://api.github.com/users/mderazon/repos",
      "events_url": "https://api.github.com/users/mderazon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mderazon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-07T22:28:34Z",
    "updated_at": "2015-05-07T22:37:18Z",
    "body": "I would prefer not using browserify but my react code is written in jsx so I still have to transform it...\n\nBut anyway, I don't see a reason why the code should work without brsrfy but not with it. It just bundles all together and spits it into one big file that I just import later to my rendered page.\n\nDo the scripts have to be inlined in the `index.html` page or can they be imported with `<script src=\"...\">` ?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/100043438",
    "html_url": "https://github.com/electron/electron/issues/1611#issuecomment-100043438",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1611",
    "id": 100043438,
    "user": {
      "login": "mderazon",
      "id": 717076,
      "avatar_url": "https://avatars3.githubusercontent.com/u/717076?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mderazon",
      "html_url": "https://github.com/mderazon",
      "followers_url": "https://api.github.com/users/mderazon/followers",
      "following_url": "https://api.github.com/users/mderazon/following{/other_user}",
      "gists_url": "https://api.github.com/users/mderazon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mderazon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mderazon/subscriptions",
      "organizations_url": "https://api.github.com/users/mderazon/orgs",
      "repos_url": "https://api.github.com/users/mderazon/repos",
      "events_url": "https://api.github.com/users/mderazon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mderazon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-07T23:04:12Z",
    "updated_at": "2015-05-07T23:04:22Z",
    "body": "I think I see what you mean now,\n\nI've been able to import jsx successfully using [node-jsx](https://github.com/petehunt/node-jsx):\n\n```\n<!doctype html>\n<html>\n    <head>\n        <meta charset=\"utf-8\">\n        <title>myapp</title>\n        <link rel=\"stylesheet\" href=\"index.css\">\n    </head>\n    <body>\n        <div id=\"container\">\n        </div>\n    </body>\n    <script>\n        require('node-jsx').install({ harmony: true, extension: '.jsx' });\n        require('./app/main.jsx');\n    </script>\n</html>\n```\n\npretty neat :-)\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/100044040",
    "html_url": "https://github.com/electron/electron/issues/1611#issuecomment-100044040",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1611",
    "id": 100044040,
    "user": {
      "login": "marekhrabe",
      "id": 156676,
      "avatar_url": "https://avatars0.githubusercontent.com/u/156676?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/marekhrabe",
      "html_url": "https://github.com/marekhrabe",
      "followers_url": "https://api.github.com/users/marekhrabe/followers",
      "following_url": "https://api.github.com/users/marekhrabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/marekhrabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/marekhrabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/marekhrabe/subscriptions",
      "organizations_url": "https://api.github.com/users/marekhrabe/orgs",
      "repos_url": "https://api.github.com/users/marekhrabe/repos",
      "events_url": "https://api.github.com/users/marekhrabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/marekhrabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-07T23:09:43Z",
    "updated_at": "2015-05-07T23:09:43Z",
    "body": "You actually posted few seconds before my response :smile: I will put it here anyway as an alternative approach â€” a solution to actually run browserified code with electron's features. I wrote this:\n\n> The main thing that makes it not work is that browserify will try to replace all `require` calls with some inlined code, so you can't use for example `require('ipc')` there, because it doesn't know that ipc module natively exists in environment you will be running the script at (Electron in this case). You can work around this by renaming the electron's require to something else like this:\n> \n> ``` html\n> <script>var electronRequire = require;</script>\n> <script src=\"main.browserified.js\"></script>\n> ```\n> \n> And use `electronRequire('ipc')` in your browserified React component. \n\nGoing the most native way (thus without browserify) will probably have most benefits. \n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/100044617",
    "html_url": "https://github.com/electron/electron/issues/1611#issuecomment-100044617",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1611",
    "id": 100044617,
    "user": {
      "login": "mderazon",
      "id": 717076,
      "avatar_url": "https://avatars3.githubusercontent.com/u/717076?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mderazon",
      "html_url": "https://github.com/mderazon",
      "followers_url": "https://api.github.com/users/mderazon/followers",
      "following_url": "https://api.github.com/users/mderazon/following{/other_user}",
      "gists_url": "https://api.github.com/users/mderazon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mderazon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mderazon/subscriptions",
      "organizations_url": "https://api.github.com/users/mderazon/orgs",
      "repos_url": "https://api.github.com/users/mderazon/repos",
      "events_url": "https://api.github.com/users/mderazon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mderazon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-07T23:15:04Z",
    "updated_at": "2015-05-07T23:15:04Z",
    "body": "Thanks !\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/102131647",
    "html_url": "https://github.com/electron/electron/issues/1611#issuecomment-102131647",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1611",
    "id": 102131647,
    "user": {
      "login": "LongLiveCHIEF",
      "id": 3282305,
      "avatar_url": "https://avatars0.githubusercontent.com/u/3282305?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LongLiveCHIEF",
      "html_url": "https://github.com/LongLiveCHIEF",
      "followers_url": "https://api.github.com/users/LongLiveCHIEF/followers",
      "following_url": "https://api.github.com/users/LongLiveCHIEF/following{/other_user}",
      "gists_url": "https://api.github.com/users/LongLiveCHIEF/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LongLiveCHIEF/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LongLiveCHIEF/subscriptions",
      "organizations_url": "https://api.github.com/users/LongLiveCHIEF/orgs",
      "repos_url": "https://api.github.com/users/LongLiveCHIEF/repos",
      "events_url": "https://api.github.com/users/LongLiveCHIEF/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LongLiveCHIEF/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-14T18:40:22Z",
    "updated_at": "2015-05-14T18:40:22Z",
    "body": "A better solution, is to install [babel](https://babeljs.io/docs/using-babel/#babel_register), and then require it in to the global space of your main app file like so:\n\n`require(\"babel/register\")`\n\nIt will then auto-transpile `.es`, `.es6` and even `.jsx` files as they're executed from their required files.\n\nI you're using Atom for developing your project, you can also use the babel pragma at the top of a `.jsx` file:\n\n`\"use babel\";`\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/104808431",
    "html_url": "https://github.com/electron/electron/issues/1611#issuecomment-104808431",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1611",
    "id": 104808431,
    "user": {
      "login": "don-smith",
      "id": 228761,
      "avatar_url": "https://avatars1.githubusercontent.com/u/228761?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/don-smith",
      "html_url": "https://github.com/don-smith",
      "followers_url": "https://api.github.com/users/don-smith/followers",
      "following_url": "https://api.github.com/users/don-smith/following{/other_user}",
      "gists_url": "https://api.github.com/users/don-smith/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/don-smith/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/don-smith/subscriptions",
      "organizations_url": "https://api.github.com/users/don-smith/orgs",
      "repos_url": "https://api.github.com/users/don-smith/repos",
      "events_url": "https://api.github.com/users/don-smith/events{/privacy}",
      "received_events_url": "https://api.github.com/users/don-smith/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-23T00:50:43Z",
    "updated_at": "2015-05-23T01:20:54Z",
    "body": "@LongLiveCHIEF this would be my preference also, but I can't get it to work. I keep getting `Uncaught SyntaxError: Unexpected reserved word` errors. I'm using ES6 with React in an Electron app and it seems Babel isn't auto-transpiling. I'm using `require('babel/register')` in both of Electron's main and renderer processes, but it seems to not work in the renderer process. Can you point me to some documentation or a GitHub repo that uses this approach? \n\nI got @marekhrabe's `electronRequire` approach to work, but that doesn't seem as clean as not bundling the jsx files. Much thanks.\n\n**UPDATE** Disregard :) I seem to have it working now. For anyone struggling to use ES6 and React with Electron without bundling with Browserify, you need to reference the babel polyfill in both the main and renderer processes. I did this with 2 js files that are _not_ ES6 files:\n\n```\n// index.js (renderer process)\nrequire('babel/register')\nrequire('./index.jsx')()\n```\n\nThen you only need to reference `index.js` in your HTML file. This is what my `index.jsx` file looks like:\n\n```\n/* global document */\n'use babel'\n\nimport React from 'react'\nimport MainWindow from './main-window.jsx'\n\nexport default () => {\n  React.render(\n    <MainWindow />,\n    document.getElementById('main-window')\n  )\n}\n```\n\nI'm using this same approach for the main process:\n\n```\n// index.js (main process)\nrequire('babel/register')\nrequire('./main.js')()\n```\n\n`main.js` initialises Electron to create the initial `BrowserWindow` and sets up event handlers. The `index.js` for the main process is the one you reference in your `package.json` file. Hope this helps.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/105644697",
    "html_url": "https://github.com/electron/electron/issues/1611#issuecomment-105644697",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1611",
    "id": 105644697,
    "user": {
      "login": "Granze",
      "id": 1193298,
      "avatar_url": "https://avatars2.githubusercontent.com/u/1193298?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Granze",
      "html_url": "https://github.com/Granze",
      "followers_url": "https://api.github.com/users/Granze/followers",
      "following_url": "https://api.github.com/users/Granze/following{/other_user}",
      "gists_url": "https://api.github.com/users/Granze/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Granze/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Granze/subscriptions",
      "organizations_url": "https://api.github.com/users/Granze/orgs",
      "repos_url": "https://api.github.com/users/Granze/repos",
      "events_url": "https://api.github.com/users/Granze/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Granze/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-26T19:42:52Z",
    "updated_at": "2015-05-26T19:42:52Z",
    "body": "@locksmithdon thank you so much! I was struggling with the same problem and you approach solved it. :)\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/105655568",
    "html_url": "https://github.com/electron/electron/issues/1611#issuecomment-105655568",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1611",
    "id": 105655568,
    "user": {
      "login": "LongLiveCHIEF",
      "id": 3282305,
      "avatar_url": "https://avatars0.githubusercontent.com/u/3282305?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LongLiveCHIEF",
      "html_url": "https://github.com/LongLiveCHIEF",
      "followers_url": "https://api.github.com/users/LongLiveCHIEF/followers",
      "following_url": "https://api.github.com/users/LongLiveCHIEF/following{/other_user}",
      "gists_url": "https://api.github.com/users/LongLiveCHIEF/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LongLiveCHIEF/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LongLiveCHIEF/subscriptions",
      "organizations_url": "https://api.github.com/users/LongLiveCHIEF/orgs",
      "repos_url": "https://api.github.com/users/LongLiveCHIEF/repos",
      "events_url": "https://api.github.com/users/LongLiveCHIEF/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LongLiveCHIEF/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-26T20:27:47Z",
    "updated_at": "2015-05-26T20:27:47Z",
    "body": ":+1: Sorry I didn't reply to this sooner. I \"unwatched\" everything in github because I had spammed the watch button years ago. After going back and re-watching the important ones, I finally saw your note.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/114681527",
    "html_url": "https://github.com/electron/electron/issues/1611#issuecomment-114681527",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1611",
    "id": 114681527,
    "user": {
      "login": "jgod",
      "id": 3506872,
      "avatar_url": "https://avatars1.githubusercontent.com/u/3506872?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jgod",
      "html_url": "https://github.com/jgod",
      "followers_url": "https://api.github.com/users/jgod/followers",
      "following_url": "https://api.github.com/users/jgod/following{/other_user}",
      "gists_url": "https://api.github.com/users/jgod/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jgod/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jgod/subscriptions",
      "organizations_url": "https://api.github.com/users/jgod/orgs",
      "repos_url": "https://api.github.com/users/jgod/repos",
      "events_url": "https://api.github.com/users/jgod/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jgod/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-24T00:23:42Z",
    "updated_at": "2015-06-24T00:23:42Z",
    "body": "Thanks @mderazon, I got stuck on this forever and your solution seems to be the simplest one that works for my project!\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/116360597",
    "html_url": "https://github.com/electron/electron/issues/1611#issuecomment-116360597",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1611",
    "id": 116360597,
    "user": {
      "login": "jgod",
      "id": 3506872,
      "avatar_url": "https://avatars1.githubusercontent.com/u/3506872?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jgod",
      "html_url": "https://github.com/jgod",
      "followers_url": "https://api.github.com/users/jgod/followers",
      "following_url": "https://api.github.com/users/jgod/following{/other_user}",
      "gists_url": "https://api.github.com/users/jgod/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jgod/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jgod/subscriptions",
      "organizations_url": "https://api.github.com/users/jgod/orgs",
      "repos_url": "https://api.github.com/users/jgod/repos",
      "events_url": "https://api.github.com/users/jgod/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jgod/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-28T23:34:43Z",
    "updated_at": "2015-06-28T23:34:43Z",
    "body": "I've also noticed that I have to require electron-specific modules \"dynamically\" (in function scope) so that Flow doesn't detect it as a non-valid module. Hope this helps someone that's using the same React/Flow + Electron stack.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/120737149",
    "html_url": "https://github.com/electron/electron/issues/1611#issuecomment-120737149",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1611",
    "id": 120737149,
    "user": {
      "login": "b52",
      "id": 23704,
      "avatar_url": "https://avatars2.githubusercontent.com/u/23704?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/b52",
      "html_url": "https://github.com/b52",
      "followers_url": "https://api.github.com/users/b52/followers",
      "following_url": "https://api.github.com/users/b52/following{/other_user}",
      "gists_url": "https://api.github.com/users/b52/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/b52/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/b52/subscriptions",
      "organizations_url": "https://api.github.com/users/b52/orgs",
      "repos_url": "https://api.github.com/users/b52/repos",
      "events_url": "https://api.github.com/users/b52/events{/privacy}",
      "received_events_url": "https://api.github.com/users/b52/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-12T16:17:07Z",
    "updated_at": "2015-07-12T16:17:15Z",
    "body": "I compiled the proposed solution into a [minimal boilerplate app](https://github.com/b52/electron-es6-react).\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/123277432",
    "html_url": "https://github.com/electron/electron/issues/1611#issuecomment-123277432",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1611",
    "id": 123277432,
    "user": {
      "login": "martin-brennan",
      "id": 920448,
      "avatar_url": "https://avatars0.githubusercontent.com/u/920448?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martin-brennan",
      "html_url": "https://github.com/martin-brennan",
      "followers_url": "https://api.github.com/users/martin-brennan/followers",
      "following_url": "https://api.github.com/users/martin-brennan/following{/other_user}",
      "gists_url": "https://api.github.com/users/martin-brennan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martin-brennan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martin-brennan/subscriptions",
      "organizations_url": "https://api.github.com/users/martin-brennan/orgs",
      "repos_url": "https://api.github.com/users/martin-brennan/repos",
      "events_url": "https://api.github.com/users/martin-brennan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martin-brennan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-21T11:39:53Z",
    "updated_at": "2015-07-21T11:39:53Z",
    "body": "@marekhrabe thank you so much for that `electronRequire` solution, worked perfectly for me. I'm using jspm with ES6 for the record.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/177448337",
    "html_url": "https://github.com/electron/electron/issues/1611#issuecomment-177448337",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1611",
    "id": 177448337,
    "user": {
      "login": "singhshashi",
      "id": 371601,
      "avatar_url": "https://avatars2.githubusercontent.com/u/371601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/singhshashi",
      "html_url": "https://github.com/singhshashi",
      "followers_url": "https://api.github.com/users/singhshashi/followers",
      "following_url": "https://api.github.com/users/singhshashi/following{/other_user}",
      "gists_url": "https://api.github.com/users/singhshashi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/singhshashi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/singhshashi/subscriptions",
      "organizations_url": "https://api.github.com/users/singhshashi/orgs",
      "repos_url": "https://api.github.com/users/singhshashi/repos",
      "events_url": "https://api.github.com/users/singhshashi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/singhshashi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-31T09:43:38Z",
    "updated_at": "2016-01-31T09:43:38Z",
    "body": "Thanks @b52  for the boilerplate. It served as a reference and helped me fix my issue. In your main.js you have a window.onload which calls the ReactDOM.render. I was previously trying as @locksmithdon has shown in his example, but that was not displaying the output and neither throwing any errors. By Adding window.onload I now get the output. \n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/218643994",
    "html_url": "https://github.com/electron/electron/issues/1611#issuecomment-218643994",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1611",
    "id": 218643994,
    "user": {
      "login": "HansFenix127",
      "id": 7936995,
      "avatar_url": "https://avatars0.githubusercontent.com/u/7936995?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/HansFenix127",
      "html_url": "https://github.com/HansFenix127",
      "followers_url": "https://api.github.com/users/HansFenix127/followers",
      "following_url": "https://api.github.com/users/HansFenix127/following{/other_user}",
      "gists_url": "https://api.github.com/users/HansFenix127/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/HansFenix127/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/HansFenix127/subscriptions",
      "organizations_url": "https://api.github.com/users/HansFenix127/orgs",
      "repos_url": "https://api.github.com/users/HansFenix127/repos",
      "events_url": "https://api.github.com/users/HansFenix127/events{/privacy}",
      "received_events_url": "https://api.github.com/users/HansFenix127/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-12T02:31:56Z",
    "updated_at": "2016-05-12T02:31:56Z",
    "body": "I recommend something like this:\n\n``` html\n<script>\n(function() {\n const script = document.createElement('script');\n window.electronRequire = require; // => To Global Context\n script.src = (process.env.NODE_ENV !== 'production') ? 'http://localhost:8080/build/bundle.js' : '../build/bundle.js';\n   document.write(script.outerHTML);\n }());\n</script>\n```\n\nI'm using webpack and webpack-dev-server. This is an simple [example](https://github.com/jpetitcolas/webpack-react) of an single stack.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/222659253",
    "html_url": "https://github.com/electron/electron/issues/1611#issuecomment-222659253",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1611",
    "id": 222659253,
    "user": {
      "login": "ctsbala4587",
      "id": 18309886,
      "avatar_url": "https://avatars3.githubusercontent.com/u/18309886?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ctsbala4587",
      "html_url": "https://github.com/ctsbala4587",
      "followers_url": "https://api.github.com/users/ctsbala4587/followers",
      "following_url": "https://api.github.com/users/ctsbala4587/following{/other_user}",
      "gists_url": "https://api.github.com/users/ctsbala4587/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ctsbala4587/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ctsbala4587/subscriptions",
      "organizations_url": "https://api.github.com/users/ctsbala4587/orgs",
      "repos_url": "https://api.github.com/users/ctsbala4587/repos",
      "events_url": "https://api.github.com/users/ctsbala4587/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ctsbala4587/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-31T11:13:42Z",
    "updated_at": "2016-05-31T11:13:42Z",
    "body": "@marekhrabe thank you so much for that electronRequire solution, worked perfectly for me. \n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/277412909",
    "html_url": "https://github.com/electron/electron/issues/1611#issuecomment-277412909",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1611",
    "id": 277412909,
    "user": {
      "login": "fwextensions",
      "id": 61631,
      "avatar_url": "https://avatars1.githubusercontent.com/u/61631?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fwextensions",
      "html_url": "https://github.com/fwextensions",
      "followers_url": "https://api.github.com/users/fwextensions/followers",
      "following_url": "https://api.github.com/users/fwextensions/following{/other_user}",
      "gists_url": "https://api.github.com/users/fwextensions/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fwextensions/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fwextensions/subscriptions",
      "organizations_url": "https://api.github.com/users/fwextensions/orgs",
      "repos_url": "https://api.github.com/users/fwextensions/repos",
      "events_url": "https://api.github.com/users/fwextensions/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fwextensions/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-04T02:45:46Z",
    "updated_at": "2017-02-04T02:45:46Z",
    "body": "For anyone who might be trying to use the handy boilerplate from @b52 as model for updating an existing app and is getting `Unexpected token` errors when requiring a .jsx file (indicating that Babel isn't transpiling the JSX), don't forget to copy the `.babelrc` from the boilerplate repo to the root of your app directory.  I'd ignored it initially, but it's apparently crucial for getting Babel to work correctly.  "
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/291952259",
    "html_url": "https://github.com/electron/electron/issues/1611#issuecomment-291952259",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1611",
    "id": 291952259,
    "user": {
      "login": "vernondegoede",
      "id": 2484832,
      "avatar_url": "https://avatars0.githubusercontent.com/u/2484832?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vernondegoede",
      "html_url": "https://github.com/vernondegoede",
      "followers_url": "https://api.github.com/users/vernondegoede/followers",
      "following_url": "https://api.github.com/users/vernondegoede/following{/other_user}",
      "gists_url": "https://api.github.com/users/vernondegoede/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vernondegoede/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vernondegoede/subscriptions",
      "organizations_url": "https://api.github.com/users/vernondegoede/orgs",
      "repos_url": "https://api.github.com/users/vernondegoede/repos",
      "events_url": "https://api.github.com/users/vernondegoede/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vernondegoede/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-05T18:26:14Z",
    "updated_at": "2017-04-05T18:26:14Z",
    "body": "@fwextensions Or include your Babel settings in your `package.json` file :)"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/295554758",
    "html_url": "https://github.com/electron/electron/issues/1611#issuecomment-295554758",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1611",
    "id": 295554758,
    "user": {
      "login": "fwextensions",
      "id": 61631,
      "avatar_url": "https://avatars1.githubusercontent.com/u/61631?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fwextensions",
      "html_url": "https://github.com/fwextensions",
      "followers_url": "https://api.github.com/users/fwextensions/followers",
      "following_url": "https://api.github.com/users/fwextensions/following{/other_user}",
      "gists_url": "https://api.github.com/users/fwextensions/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fwextensions/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fwextensions/subscriptions",
      "organizations_url": "https://api.github.com/users/fwextensions/orgs",
      "repos_url": "https://api.github.com/users/fwextensions/repos",
      "events_url": "https://api.github.com/users/fwextensions/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fwextensions/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-20T02:34:50Z",
    "updated_at": "2017-04-20T02:34:50Z",
    "body": "@vernondegoede Interesting, didn't know about that: https://babeljs.io/docs/usage/babelrc/#use-via-package-json"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/299614966",
    "html_url": "https://github.com/electron/electron/issues/1611#issuecomment-299614966",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/1611",
    "id": 299614966,
    "user": {
      "login": "tybro0103",
      "id": 118297,
      "avatar_url": "https://avatars1.githubusercontent.com/u/118297?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tybro0103",
      "html_url": "https://github.com/tybro0103",
      "followers_url": "https://api.github.com/users/tybro0103/followers",
      "following_url": "https://api.github.com/users/tybro0103/following{/other_user}",
      "gists_url": "https://api.github.com/users/tybro0103/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tybro0103/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tybro0103/subscriptions",
      "organizations_url": "https://api.github.com/users/tybro0103/orgs",
      "repos_url": "https://api.github.com/users/tybro0103/repos",
      "events_url": "https://api.github.com/users/tybro0103/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tybro0103/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-06T04:30:01Z",
    "updated_at": "2017-05-06T04:30:01Z",
    "body": "Let's not forget https://github.com/electron/electron-compile"
  }
]