[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/272708703",
    "html_url": "https://github.com/electron/electron/issues/8414#issuecomment-272708703",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/8414",
    "id": 272708703,
    "user": {
      "login": "KagamiChan",
      "id": 3816900,
      "avatar_url": "https://avatars2.githubusercontent.com/u/3816900?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/KagamiChan",
      "html_url": "https://github.com/KagamiChan",
      "followers_url": "https://api.github.com/users/KagamiChan/followers",
      "following_url": "https://api.github.com/users/KagamiChan/following{/other_user}",
      "gists_url": "https://api.github.com/users/KagamiChan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/KagamiChan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KagamiChan/subscriptions",
      "organizations_url": "https://api.github.com/users/KagamiChan/orgs",
      "repos_url": "https://api.github.com/users/KagamiChan/repos",
      "events_url": "https://api.github.com/users/KagamiChan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/KagamiChan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-15T17:10:28Z",
    "updated_at": "2017-01-15T17:13:22Z",
    "body": "By keyword seraching in embed code I find some lines which seem to me checking `file:` protocol:\r\n```\r\n                    d = \"file:\" == b.location.protocol ? \"*\" : b.location.protocol + \"//\" + b.location.host,\r\n                    a = w(function(a) {\r\n                        if ((\"*\" == d || a.origin == d) && a.data == c) this.port1.onmessage()\r\n                    }, this);\r\n```\r\n\r\nA [related topic](https://groups.google.com/forum/?fromgroups#!topic/recaptcha/6O4MTigYVPw) was answered by reCaptcha support saying that they would implement custom protocol support. So using a different protocol may help, if custom protocol is already supported."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/273300772",
    "html_url": "https://github.com/electron/electron/issues/8414#issuecomment-273300772",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/8414",
    "id": 273300772,
    "user": {
      "login": "kevinsawicki",
      "id": 671378,
      "avatar_url": "https://avatars0.githubusercontent.com/u/671378?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kevinsawicki",
      "html_url": "https://github.com/kevinsawicki",
      "followers_url": "https://api.github.com/users/kevinsawicki/followers",
      "following_url": "https://api.github.com/users/kevinsawicki/following{/other_user}",
      "gists_url": "https://api.github.com/users/kevinsawicki/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kevinsawicki/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kevinsawicki/subscriptions",
      "organizations_url": "https://api.github.com/users/kevinsawicki/orgs",
      "repos_url": "https://api.github.com/users/kevinsawicki/repos",
      "events_url": "https://api.github.com/users/kevinsawicki/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kevinsawicki/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2017-01-17T21:11:37Z",
    "updated_at": "2017-01-17T21:11:37Z",
    "body": "> By keyword seraching in embed code I find some lines which seem to me checking file: protocol:\r\n\r\nThanks for looking into this and finding that topic thread 👍 \r\n\r\n>  So using a different protocol may help, if custom protocol is already supported.\r\n\r\nYou can use a custom protocol using the `protocol` module in Electron to workaround the `file:` check.\r\n\r\nSee http://electron.atom.io/docs/api/protocol for more details.\r\n\r\nClosing this out."
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/273322993",
    "html_url": "https://github.com/electron/electron/issues/8414#issuecomment-273322993",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/8414",
    "id": 273322993,
    "user": {
      "login": "KagamiChan",
      "id": 3816900,
      "avatar_url": "https://avatars2.githubusercontent.com/u/3816900?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/KagamiChan",
      "html_url": "https://github.com/KagamiChan",
      "followers_url": "https://api.github.com/users/KagamiChan/followers",
      "following_url": "https://api.github.com/users/KagamiChan/following{/other_user}",
      "gists_url": "https://api.github.com/users/KagamiChan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/KagamiChan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KagamiChan/subscriptions",
      "organizations_url": "https://api.github.com/users/KagamiChan/orgs",
      "repos_url": "https://api.github.com/users/KagamiChan/repos",
      "events_url": "https://api.github.com/users/KagamiChan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/KagamiChan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-17T22:36:40Z",
    "updated_at": "2017-01-17T22:36:40Z",
    "body": "To clarify, I don't know if custom protocol has been supported by reCaptcha as the support team said, because the code is uglified and I'm not developing with it. Anyone who made it work may leave a positive comment :)"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/273325048",
    "html_url": "https://github.com/electron/electron/issues/8414#issuecomment-273325048",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/8414",
    "id": 273325048,
    "user": {
      "login": "kevinsawicki",
      "id": 671378,
      "avatar_url": "https://avatars0.githubusercontent.com/u/671378?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kevinsawicki",
      "html_url": "https://github.com/kevinsawicki",
      "followers_url": "https://api.github.com/users/kevinsawicki/followers",
      "following_url": "https://api.github.com/users/kevinsawicki/following{/other_user}",
      "gists_url": "https://api.github.com/users/kevinsawicki/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kevinsawicki/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kevinsawicki/subscriptions",
      "organizations_url": "https://api.github.com/users/kevinsawicki/orgs",
      "repos_url": "https://api.github.com/users/kevinsawicki/repos",
      "events_url": "https://api.github.com/users/kevinsawicki/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kevinsawicki/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2017-01-17T22:45:33Z",
    "updated_at": "2017-01-17T22:45:33Z",
    "body": "@KagamiChan it appears it does support it, I was able to load it using this app:\r\n\r\n```js\r\nconst {app, BrowserWindow, ipcMain, protocol} = require('electron')\r\nconst fs = require('fs')\r\nconst path = require('path')\r\n\r\nlet window\r\n\r\nprotocol.registerStandardSchemes(['test'])\r\n\r\napp.once('ready', () => {\r\n  window = new BrowserWindow({\r\n    webPreferences: {\r\n      nodeIntegration: false\r\n    }\r\n  })\r\n  protocol.registerBufferProtocol('test', (request, callback) => {\r\n    callback({mimeType: 'text/html', data: fs.readFileSync(path.join(__dirname, 'index.html'))})\r\n  }, (error) => {\r\n    if (error) console.error('Failed to register protocol')\r\n  })\r\n\r\n  window.loadURL(`test://index.html`)\r\n})\r\n```\r\n\r\n![screen shot 2017-01-17 at 2 45 22 pm](https://cloud.githubusercontent.com/assets/671378/22043236/97f4cc6e-dcc3-11e6-95e3-dec29d66bc17.png)\r\n"
  }
]