[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/61740151",
    "html_url": "https://github.com/electron/electron/issues/780#issuecomment-61740151",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/780",
    "id": 61740151,
    "user": {
      "login": "alice0meta",
      "id": 4326906,
      "avatar_url": "https://avatars3.githubusercontent.com/u/4326906?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alice0meta",
      "html_url": "https://github.com/alice0meta",
      "followers_url": "https://api.github.com/users/alice0meta/followers",
      "following_url": "https://api.github.com/users/alice0meta/following{/other_user}",
      "gists_url": "https://api.github.com/users/alice0meta/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alice0meta/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alice0meta/subscriptions",
      "organizations_url": "https://api.github.com/users/alice0meta/orgs",
      "repos_url": "https://api.github.com/users/alice0meta/repos",
      "events_url": "https://api.github.com/users/alice0meta/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alice0meta/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-05T00:23:49Z",
    "updated_at": "2014-11-05T00:23:49Z",
    "body": "This would be a super useful feature for my app.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/61741284",
    "html_url": "https://github.com/electron/electron/issues/780#issuecomment-61741284",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/780",
    "id": 61741284,
    "user": {
      "login": "paulcbetts",
      "id": 1396,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1396?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulcbetts",
      "html_url": "https://github.com/paulcbetts",
      "followers_url": "https://api.github.com/users/paulcbetts/followers",
      "following_url": "https://api.github.com/users/paulcbetts/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulcbetts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulcbetts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulcbetts/subscriptions",
      "organizations_url": "https://api.github.com/users/paulcbetts/orgs",
      "repos_url": "https://api.github.com/users/paulcbetts/repos",
      "events_url": "https://api.github.com/users/paulcbetts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulcbetts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-05T00:36:04Z",
    "updated_at": "2014-11-05T00:36:04Z",
    "body": "How would you choose which screen to display on? It seems like a better API would be to give `BrowserWindow` a simple way to persist and restore window geometry, something like:\n\n``` js\nmyWindow.persist('mainWindow');\n\n// On next startup\nmyWindow = new BrowserWindow({ restoreIdentifier: 'mainWindow'});\n```\n\nIf the persisted window geometry was bogus (i.e. because the user unplugged a monitor), you could revert to dropping the window centered on the primary monitor\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/61774576",
    "html_url": "https://github.com/electron/electron/issues/780#issuecomment-61774576",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/780",
    "id": 61774576,
    "user": {
      "login": "alexandernst",
      "id": 89727,
      "avatar_url": "https://avatars3.githubusercontent.com/u/89727?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexandernst",
      "html_url": "https://github.com/alexandernst",
      "followers_url": "https://api.github.com/users/alexandernst/followers",
      "following_url": "https://api.github.com/users/alexandernst/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexandernst/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexandernst/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexandernst/subscriptions",
      "organizations_url": "https://api.github.com/users/alexandernst/orgs",
      "repos_url": "https://api.github.com/users/alexandernst/repos",
      "events_url": "https://api.github.com/users/alexandernst/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexandernst/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-05T08:32:12Z",
    "updated_at": "2014-11-05T08:32:12Z",
    "body": "Qt does a really good job at this. It let's you detect the total number of displays, the geometry, the primary display, etc... Have a look at http://qt-project.org/doc/qt-5/qdesktopwidget.html\n\nOn the other hand, what @paulcbetts suggests would be useful too, but it is <b>not</b> a replacement for what I'm asking. My feature request is useful for windows that can't be moved/resized by the user, but instead should always show, for example, at the upper right corner of the second screen.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/69508832",
    "html_url": "https://github.com/electron/electron/issues/780#issuecomment-69508832",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/780",
    "id": 69508832,
    "user": {
      "login": "iamdriz",
      "id": 801252,
      "avatar_url": "https://avatars0.githubusercontent.com/u/801252?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/iamdriz",
      "html_url": "https://github.com/iamdriz",
      "followers_url": "https://api.github.com/users/iamdriz/followers",
      "following_url": "https://api.github.com/users/iamdriz/following{/other_user}",
      "gists_url": "https://api.github.com/users/iamdriz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/iamdriz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iamdriz/subscriptions",
      "organizations_url": "https://api.github.com/users/iamdriz/orgs",
      "repos_url": "https://api.github.com/users/iamdriz/repos",
      "events_url": "https://api.github.com/users/iamdriz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/iamdriz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-11T20:03:20Z",
    "updated_at": "2015-01-11T20:03:20Z",
    "body": "@zcbenz @paulcbetts Has there been any progress on this feature? I really need to be able to detect multiple screens for an app I am developing. We were using Adobe AIR before which has excellent support for this feature. Perhaps take ideas from there?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/69567075",
    "html_url": "https://github.com/electron/electron/issues/780#issuecomment-69567075",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/780",
    "id": 69567075,
    "user": {
      "login": "iamdriz",
      "id": 801252,
      "avatar_url": "https://avatars0.githubusercontent.com/u/801252?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/iamdriz",
      "html_url": "https://github.com/iamdriz",
      "followers_url": "https://api.github.com/users/iamdriz/followers",
      "following_url": "https://api.github.com/users/iamdriz/following{/other_user}",
      "gists_url": "https://api.github.com/users/iamdriz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/iamdriz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iamdriz/subscriptions",
      "organizations_url": "https://api.github.com/users/iamdriz/orgs",
      "repos_url": "https://api.github.com/users/iamdriz/repos",
      "events_url": "https://api.github.com/users/iamdriz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/iamdriz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-12T13:09:42Z",
    "updated_at": "2015-01-12T13:11:37Z",
    "body": "@zcbenz @paulcbetts What about something like this:\n\n```\nvar Screen = require('screen');\nvar BrowserWindow = require('browser-window');\n\nvar currentScreen = null, largestScreen = null, mainWindow = null;\n\nif(Screen.screens.length > 1) {\n\n    for( index = 0; index < Screen.screens.length; ++index) {\n        currentScreen = Screen.screens[index];\n        if( largestScreen == null ){\n            largestScreen = currentScreen;  \n        }\n        else {\n            var currentScreenSize = currentScreen.workAreaSize;\n            var largestScreenSize = largestScreen.workAreaSize;\n            var currentArea = currentScreenSize.width * currentScreenSize.height;\n            var largestArea = largestScreenSize.width * largestScreenSize.height;\n            if(currentArea > largestArea) {\n                largestScreen = currentScreen;\n            }\n        }\n    }\n\n} else {\n\n    alert('You need more than one screen to run this application.');\n\n}\n\n// Set screen on initial load\nmainWindow = new BrowserWindow({ screen: largestScreen });\n\n// Set screen using method\nmainWindow.setScreen(largestScreen);\n```\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/69732017",
    "html_url": "https://github.com/electron/electron/issues/780#issuecomment-69732017",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/780",
    "id": 69732017,
    "user": {
      "login": "iamdriz",
      "id": 801252,
      "avatar_url": "https://avatars0.githubusercontent.com/u/801252?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/iamdriz",
      "html_url": "https://github.com/iamdriz",
      "followers_url": "https://api.github.com/users/iamdriz/followers",
      "following_url": "https://api.github.com/users/iamdriz/following{/other_user}",
      "gists_url": "https://api.github.com/users/iamdriz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/iamdriz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iamdriz/subscriptions",
      "organizations_url": "https://api.github.com/users/iamdriz/orgs",
      "repos_url": "https://api.github.com/users/iamdriz/repos",
      "events_url": "https://api.github.com/users/iamdriz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/iamdriz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-13T11:37:35Z",
    "updated_at": "2015-01-13T11:37:35Z",
    "body": "@zcbenz @paulcbetts  In fact Node WebKit has this: https://github.com/rogerwang/node-webkit/wiki/Screen\n\nHow feasible is it for you to port this code over?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/69780014",
    "html_url": "https://github.com/electron/electron/issues/780#issuecomment-69780014",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/780",
    "id": 69780014,
    "user": {
      "login": "paulcbetts",
      "id": 1396,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1396?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulcbetts",
      "html_url": "https://github.com/paulcbetts",
      "followers_url": "https://api.github.com/users/paulcbetts/followers",
      "following_url": "https://api.github.com/users/paulcbetts/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulcbetts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulcbetts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulcbetts/subscriptions",
      "organizations_url": "https://api.github.com/users/paulcbetts/orgs",
      "repos_url": "https://api.github.com/users/paulcbetts/repos",
      "events_url": "https://api.github.com/users/paulcbetts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulcbetts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-13T17:09:06Z",
    "updated_at": "2015-01-13T17:09:06Z",
    "body": "The code probably isn't useful to port over, but it'd be great to have the same API too for this and other new things going forward, if what they've got is reasonable\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/69796402",
    "html_url": "https://github.com/electron/electron/issues/780#issuecomment-69796402",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/780",
    "id": 69796402,
    "user": {
      "login": "iamdriz",
      "id": 801252,
      "avatar_url": "https://avatars0.githubusercontent.com/u/801252?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/iamdriz",
      "html_url": "https://github.com/iamdriz",
      "followers_url": "https://api.github.com/users/iamdriz/followers",
      "following_url": "https://api.github.com/users/iamdriz/following{/other_user}",
      "gists_url": "https://api.github.com/users/iamdriz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/iamdriz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iamdriz/subscriptions",
      "organizations_url": "https://api.github.com/users/iamdriz/orgs",
      "repos_url": "https://api.github.com/users/iamdriz/repos",
      "events_url": "https://api.github.com/users/iamdriz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/iamdriz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-13T18:47:12Z",
    "updated_at": "2015-01-13T18:47:12Z",
    "body": "Is this something that we could see being implemented anytime soon?\n\nSent from my iPhone\n\n> On 13 Jan 2015, at 17:09, Paul Betts notifications@github.com wrote:\n> \n> The code probably isn't useful to port over, but it'd be great to have the same API too for this and other new things going forward, if what they've got is reasonable\n> \n> —\n> Reply to this email directly or view it on GitHub.\n"
  }
]