[
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/134394387",
    "html_url": "https://github.com/electron/electron/issues/2575#issuecomment-134394387",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2575",
    "id": 134394387,
    "user": {
      "login": "OlsonDev",
      "id": 308072,
      "avatar_url": "https://avatars2.githubusercontent.com/u/308072?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/OlsonDev",
      "html_url": "https://github.com/OlsonDev",
      "followers_url": "https://api.github.com/users/OlsonDev/followers",
      "following_url": "https://api.github.com/users/OlsonDev/following{/other_user}",
      "gists_url": "https://api.github.com/users/OlsonDev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/OlsonDev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/OlsonDev/subscriptions",
      "organizations_url": "https://api.github.com/users/OlsonDev/orgs",
      "repos_url": "https://api.github.com/users/OlsonDev/repos",
      "events_url": "https://api.github.com/users/OlsonDev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/OlsonDev/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-24T22:06:58Z",
    "updated_at": "2015-08-24T22:06:58Z",
    "body": "Just curious, does it still leak if you move the `var screen = require('screen')` before the `setInterval` call?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/134397295",
    "html_url": "https://github.com/electron/electron/issues/2575#issuecomment-134397295",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2575",
    "id": 134397295,
    "user": {
      "login": "tommoor",
      "id": 380914,
      "avatar_url": "https://avatars1.githubusercontent.com/u/380914?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tommoor",
      "html_url": "https://github.com/tommoor",
      "followers_url": "https://api.github.com/users/tommoor/followers",
      "following_url": "https://api.github.com/users/tommoor/following{/other_user}",
      "gists_url": "https://api.github.com/users/tommoor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tommoor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tommoor/subscriptions",
      "organizations_url": "https://api.github.com/users/tommoor/orgs",
      "repos_url": "https://api.github.com/users/tommoor/repos",
      "events_url": "https://api.github.com/users/tommoor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tommoor/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-24T22:14:50Z",
    "updated_at": "2015-08-24T22:18:51Z",
    "body": "@OlsonDev yes, same pattern of upwards memory usage. However for some reason if you require screen immediately then the getCursorScreenPoint method doesn't exist (separate issue?!) so you'd need to change it to something like:\n\n``` javascript\nsetTimeout(function(){\n  var screen = require('screen');\n\n  setInterval(function(){\n    var point = screen.getCursorScreenPoint();\n    console.log(point.x, point.y);\n  }, 10);\n}, 1000);\n```\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/134408258",
    "html_url": "https://github.com/electron/electron/issues/2575#issuecomment-134408258",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2575",
    "id": 134408258,
    "user": {
      "login": "paulcbetts",
      "id": 1396,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1396?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulcbetts",
      "html_url": "https://github.com/paulcbetts",
      "followers_url": "https://api.github.com/users/paulcbetts/followers",
      "following_url": "https://api.github.com/users/paulcbetts/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulcbetts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulcbetts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulcbetts/subscriptions",
      "organizations_url": "https://api.github.com/users/paulcbetts/orgs",
      "repos_url": "https://api.github.com/users/paulcbetts/repos",
      "events_url": "https://api.github.com/users/paulcbetts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulcbetts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-24T23:13:49Z",
    "updated_at": "2015-08-24T23:14:01Z",
    "body": "@tommoor You're getting trolled by `window.screen` which is unsettable, try calling it `atomScreen`\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/134414056",
    "html_url": "https://github.com/electron/electron/issues/2575#issuecomment-134414056",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2575",
    "id": 134414056,
    "user": {
      "login": "OlsonDev",
      "id": 308072,
      "avatar_url": "https://avatars2.githubusercontent.com/u/308072?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/OlsonDev",
      "html_url": "https://github.com/OlsonDev",
      "followers_url": "https://api.github.com/users/OlsonDev/followers",
      "following_url": "https://api.github.com/users/OlsonDev/following{/other_user}",
      "gists_url": "https://api.github.com/users/OlsonDev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/OlsonDev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/OlsonDev/subscriptions",
      "organizations_url": "https://api.github.com/users/OlsonDev/orgs",
      "repos_url": "https://api.github.com/users/OlsonDev/repos",
      "events_url": "https://api.github.com/users/OlsonDev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/OlsonDev/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-24T23:33:08Z",
    "updated_at": "2015-08-24T23:33:08Z",
    "body": "AFAICT, he's not getting trolled by `window.screen`. Inside the function passed to `setTimeout`, he's creating a local called `screen` that doesn't bleed to `window`.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/134414420",
    "html_url": "https://github.com/electron/electron/issues/2575#issuecomment-134414420",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2575",
    "id": 134414420,
    "user": {
      "login": "odensc",
      "id": 1520776,
      "avatar_url": "https://avatars0.githubusercontent.com/u/1520776?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/odensc",
      "html_url": "https://github.com/odensc",
      "followers_url": "https://api.github.com/users/odensc/followers",
      "following_url": "https://api.github.com/users/odensc/following{/other_user}",
      "gists_url": "https://api.github.com/users/odensc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/odensc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/odensc/subscriptions",
      "organizations_url": "https://api.github.com/users/odensc/orgs",
      "repos_url": "https://api.github.com/users/odensc/repos",
      "events_url": "https://api.github.com/users/odensc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/odensc/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-24T23:35:51Z",
    "updated_at": "2015-08-24T23:35:51Z",
    "body": "@OlsonDev I believe @paulcbetts is talking about this part:\n\n> However for some reason if you require screen immediately then the getCursorScreenPoint method doesn't exist\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/134414872",
    "html_url": "https://github.com/electron/electron/issues/2575#issuecomment-134414872",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2575",
    "id": 134414872,
    "user": {
      "login": "OlsonDev",
      "id": 308072,
      "avatar_url": "https://avatars2.githubusercontent.com/u/308072?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/OlsonDev",
      "html_url": "https://github.com/OlsonDev",
      "followers_url": "https://api.github.com/users/OlsonDev/followers",
      "following_url": "https://api.github.com/users/OlsonDev/following{/other_user}",
      "gists_url": "https://api.github.com/users/OlsonDev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/OlsonDev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/OlsonDev/subscriptions",
      "organizations_url": "https://api.github.com/users/OlsonDev/orgs",
      "repos_url": "https://api.github.com/users/OlsonDev/repos",
      "events_url": "https://api.github.com/users/OlsonDev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/OlsonDev/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-24T23:39:06Z",
    "updated_at": "2015-08-24T23:39:06Z",
    "body": "Sure, I guess I assumed @tommoor was even still within some sort of closure considering he was doing `this.interval =` ... rarely do I see people use `this` when they mean `window` or `global`.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/134419845",
    "html_url": "https://github.com/electron/electron/issues/2575#issuecomment-134419845",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2575",
    "id": 134419845,
    "user": {
      "login": "odensc",
      "id": 1520776,
      "avatar_url": "https://avatars0.githubusercontent.com/u/1520776?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/odensc",
      "html_url": "https://github.com/odensc",
      "followers_url": "https://api.github.com/users/odensc/followers",
      "following_url": "https://api.github.com/users/odensc/following{/other_user}",
      "gists_url": "https://api.github.com/users/odensc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/odensc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/odensc/subscriptions",
      "organizations_url": "https://api.github.com/users/odensc/orgs",
      "repos_url": "https://api.github.com/users/odensc/repos",
      "events_url": "https://api.github.com/users/odensc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/odensc/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-25T00:00:35Z",
    "updated_at": "2015-08-25T00:02:49Z",
    "body": "Can confirm on Arch Linux, Electron v0.31.0 with the original post's code or the following code:\n\n``` js\nvar atomScreen = require(\"screen\");\nsetInterval(function()\n{\n    var point = atomScreen.getCursorScreenPoint();\n    console.log(point.x, point.y);\n}, 10);\n```\n\nRan both for ~5 minutes, each increased by about 1-2MB every second. Perhaps it has something to do with calling the method inside of an interval?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/134439317",
    "html_url": "https://github.com/electron/electron/issues/2575#issuecomment-134439317",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2575",
    "id": 134439317,
    "user": {
      "login": "tommoor",
      "id": 380914,
      "avatar_url": "https://avatars1.githubusercontent.com/u/380914?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tommoor",
      "html_url": "https://github.com/tommoor",
      "followers_url": "https://api.github.com/users/tommoor/followers",
      "following_url": "https://api.github.com/users/tommoor/following{/other_user}",
      "gists_url": "https://api.github.com/users/tommoor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tommoor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tommoor/subscriptions",
      "organizations_url": "https://api.github.com/users/tommoor/orgs",
      "repos_url": "https://api.github.com/users/tommoor/repos",
      "events_url": "https://api.github.com/users/tommoor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tommoor/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-25T01:34:33Z",
    "updated_at": "2015-08-25T01:41:11Z",
    "body": "@thesbros personally - I think it's holding onto a reference of the closure everytime that the remote method is called. In one of my memory heaps I saw many references to handleApiCall but not sure if that's a clue or red-herring though...\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/134443262",
    "html_url": "https://github.com/electron/electron/issues/2575#issuecomment-134443262",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2575",
    "id": 134443262,
    "user": {
      "login": "tommoor",
      "id": 380914,
      "avatar_url": "https://avatars1.githubusercontent.com/u/380914?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tommoor",
      "html_url": "https://github.com/tommoor",
      "followers_url": "https://api.github.com/users/tommoor/followers",
      "following_url": "https://api.github.com/users/tommoor/following{/other_user}",
      "gists_url": "https://api.github.com/users/tommoor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tommoor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tommoor/subscriptions",
      "organizations_url": "https://api.github.com/users/tommoor/orgs",
      "repos_url": "https://api.github.com/users/tommoor/repos",
      "events_url": "https://api.github.com/users/tommoor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tommoor/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-25T01:48:31Z",
    "updated_at": "2015-08-25T01:49:05Z",
    "body": "One last note, the same code running in the main process in an interval does not continuously raise memory usage in the same way so there is most likely something in the RPC methods that is leaky. Although I haven't tested all of the different API's it could affect many / them all.\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/134811599",
    "html_url": "https://github.com/electron/electron/issues/2575#issuecomment-134811599",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2575",
    "id": 134811599,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2015-08-26T03:45:31Z",
    "updated_at": "2015-08-26T03:45:31Z",
    "body": "`require('screen')` in renderer process is equivalent to `require('remote').require('screen')`, so a faster way to reproduce this is:\n\n``` js\nvar w = require(\"remote\").getCurrentWindow();\nfor (var i = 0; i < 50000; ++i)\n  w.getBounds();\n```\n\nI can confirm JS heap is increasing, but by snapshotting the JS heap everything looks normal, it says there is nothing taking so much memory. So I tracked the destructors of the C++ objects, since every object tracked by `remote` has a corresponding C++ object tracking its lifetime, I can easily track whether those objects have been destroyed. And the results showed that every object returned by `remote` has been successfully garbaged collected.\n\nSo I'm wondering whether the way we track remote objects has prevented V8 from collecting memory from heap, because when `remote` module returns normal data that its lifetime is not tracked, the memory usage is quite normal:\n\n``` js\nvar w = require(\"remote\").getCurrentWindow();\nfor (var i = 0; i < 50000; ++i)\n  w.getSize();\n```\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/135457484",
    "html_url": "https://github.com/electron/electron/issues/2575#issuecomment-135457484",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2575",
    "id": 135457484,
    "user": {
      "login": "tommoor",
      "id": 380914,
      "avatar_url": "https://avatars1.githubusercontent.com/u/380914?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tommoor",
      "html_url": "https://github.com/tommoor",
      "followers_url": "https://api.github.com/users/tommoor/followers",
      "following_url": "https://api.github.com/users/tommoor/following{/other_user}",
      "gists_url": "https://api.github.com/users/tommoor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tommoor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tommoor/subscriptions",
      "organizations_url": "https://api.github.com/users/tommoor/orgs",
      "repos_url": "https://api.github.com/users/tommoor/repos",
      "events_url": "https://api.github.com/users/tommoor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tommoor/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-27T14:49:25Z",
    "updated_at": "2015-08-27T14:49:25Z",
    "body": "Thanks @zcbenz :smile: - any chance of a 0.30.7?\n"
  },
  {
    "url": "https://api.github.com/repos/electron/electron/issues/comments/135603005",
    "html_url": "https://github.com/electron/electron/issues/2575#issuecomment-135603005",
    "issue_url": "https://api.github.com/repos/electron/electron/issues/2575",
    "id": 135603005,
    "user": {
      "login": "zcbenz",
      "id": 639601,
      "avatar_url": "https://avatars3.githubusercontent.com/u/639601?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zcbenz",
      "html_url": "https://github.com/zcbenz",
      "followers_url": "https://api.github.com/users/zcbenz/followers",
      "following_url": "https://api.github.com/users/zcbenz/following{/other_user}",
      "gists_url": "https://api.github.com/users/zcbenz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zcbenz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zcbenz/subscriptions",
      "organizations_url": "https://api.github.com/users/zcbenz/orgs",
      "repos_url": "https://api.github.com/users/zcbenz/repos",
      "events_url": "https://api.github.com/users/zcbenz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zcbenz/received_events",
      "type": "User",
      "site_admin": true
    },
    "created_at": "2015-08-28T01:56:13Z",
    "updated_at": "2015-08-28T01:56:13Z",
    "body": "> any chance of a 0.30.7?\n\nUnlikely, the patch is too big, backporting is not very easy.\n"
  }
]